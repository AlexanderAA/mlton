CommandLine.argc = _symbol : C.Int.t
CommandLine.argv = _symbol : C.StringArray.t
CommandLine.commandName = _symbol : C.String.t
Date.Tm.getHour = _import : unit -> C.Int.t
Date.Tm.getIsDst = _import : unit -> C.Int.t
Date.Tm.getMDay = _import : unit -> C.Int.t
Date.Tm.getMin = _import : unit -> C.Int.t
Date.Tm.getMon = _import : unit -> C.Int.t
Date.Tm.getSec = _import : unit -> C.Int.t
Date.Tm.getWDay = _import : unit -> C.Int.t
Date.Tm.getYDay = _import : unit -> C.Int.t
Date.Tm.getYear = _import : unit -> C.Int.t
Date.Tm.setHour = _import : C.Int.t -> unit
Date.Tm.setIsDst = _import : C.Int.t -> unit
Date.Tm.setMDay = _import : C.Int.t -> unit
Date.Tm.setMin = _import : C.Int.t -> unit
Date.Tm.setMon = _import : C.Int.t -> unit
Date.Tm.setSec = _import : C.Int.t -> unit
Date.Tm.setWDay = _import : C.Int.t -> unit
Date.Tm.setYDay = _import : C.Int.t -> unit
Date.Tm.setYear = _import : C.Int.t -> unit
Date.gmTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.localOffset = _import : unit -> C.Double.t
Date.localTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.mkTime = _import : unit -> C.Time.t C.Errno.t
Date.strfTime = _import : Char8.t array * C.Size.t * NullString8.t -> C.Size.t
IEEEReal.RoundingMode.FE_DOWNWARD = _const : C.Int.t
IEEEReal.RoundingMode.FE_NOSUPPORT = _const : C.Int.t
IEEEReal.RoundingMode.FE_TONEAREST = _const : C.Int.t
IEEEReal.RoundingMode.FE_TOWARDZERO = _const : C.Int.t
IEEEReal.RoundingMode.FE_UPWARD = _const : C.Int.t
IEEEReal.getRoundingMode = _import : unit -> C.Int.t
IEEEReal.setRoundingMode = _import : C.Int.t -> unit
MLton.bug = _import : NullString8.t -> unit
MLton.Itimer.PROF = _const : C.Int.t
MLton.Itimer.REAL = _const : C.Int.t
MLton.Itimer.VIRTUAL = _const : C.Int.t
MLton.Itimer.set = _import : C.Int.t * C.Time.t * C.SUSeconds.t * C.Time.t * C.SUSeconds.t -> C.Int.t C.Errno.t
MLton.Process.cwait = _import : C.PId.t * C.Status.t ref -> C.PId.t C.Errno.t
MLton.Process.spawne = _import : NullString8.t * NullString8Array.t * NullString8Array.t -> C.Int.t C.Errno.t
MLton.Process.spawnp = _import : NullString8.t * NullString8Array.t -> C.Int.t C.Errno.t
MLton.Rlimit.AS = _const : C.Int.t
MLton.Rlimit.CORE = _const : C.Int.t
MLton.Rlimit.CPU = _const : C.Int.t
MLton.Rlimit.DATA = _const : C.Int.t
MLton.Rlimit.FSIZE = _const : C.Int.t
MLton.Rlimit.INFINITY = _const : C.RLim.t
MLton.Rlimit.NOFILE = _const : C.Int.t
MLton.Rlimit.STACK = _const : C.Int.t
MLton.Rlimit.get = _import : C.Int.t -> C.Int.t C.Errno.t
MLton.Rlimit.getHard = _import : unit -> C.RLim.t
MLton.Rlimit.getSoft = _import : unit -> C.RLim.t
MLton.Rlimit.set = _import : C.Int.t * C.RLim.t * C.RLim.t -> C.Int.t C.Errno.t
MLton.Rusage.children_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.children_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.getrusage = _import : unit -> unit
MLton.Rusage.self_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.self_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Syslog.Facility.LOG_AUTH = _const : C.Int.t
MLton.Syslog.Facility.LOG_CRON = _const : C.Int.t
MLton.Syslog.Facility.LOG_DAEMON = _const : C.Int.t
MLton.Syslog.Facility.LOG_KERN = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL0 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL1 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL2 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL3 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL4 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL5 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL6 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LOCAL7 = _const : C.Int.t
MLton.Syslog.Facility.LOG_LPR = _const : C.Int.t
MLton.Syslog.Facility.LOG_MAIL = _const : C.Int.t
MLton.Syslog.Facility.LOG_NEWS = _const : C.Int.t
MLton.Syslog.Facility.LOG_USER = _const : C.Int.t
MLton.Syslog.Facility.LOG_UUCP = _const : C.Int.t
MLton.Syslog.Logopt.LOG_CONS = _const : C.Int.t
MLton.Syslog.Logopt.LOG_NDELAY = _const : C.Int.t
MLton.Syslog.Logopt.LOG_NOWAIT = _const : C.Int.t
MLton.Syslog.Logopt.LOG_ODELAY = _const : C.Int.t
MLton.Syslog.Logopt.LOG_PID = _const : C.Int.t
MLton.Syslog.Severity.LOG_ALERT = _const : C.Int.t
MLton.Syslog.Severity.LOG_CRIT = _const : C.Int.t
MLton.Syslog.Severity.LOG_DEBUG = _const : C.Int.t
MLton.Syslog.Severity.LOG_EMERG = _const : C.Int.t
MLton.Syslog.Severity.LOG_ERR = _const : C.Int.t
MLton.Syslog.Severity.LOG_INFO = _const : C.Int.t
MLton.Syslog.Severity.LOG_NOTICE = _const : C.Int.t
MLton.Syslog.Severity.LOG_WARNING = _const : C.Int.t
MLton.Syslog.closelog = _import : unit -> unit
MLton.Syslog.openlog = _import : NullString8.t * C.Int.t * C.Int.t -> unit
MLton.Syslog.syslog = _import : C.Int.t * NullString8.t -> unit
Net.htonl = _import : Word32.t -> Word32.t
Net.htons = _import : Word16.t -> Word16.t
Net.ntohl = _import : Word32.t -> Word32.t
Net.ntohs = _import : Word16.t -> Word16.t
NetHostDB.INADDR_ANY = _const : C.Int.t
NetHostDB.getByAddress = _import : Word8.t vector * C.Socklen.t -> Bool.t
NetHostDB.getByName = _import : NullString8.t -> Bool.t
NetHostDB.getEntryAddrType = _import : unit -> C.Int.t
NetHostDB.getEntryAddrsN = _import : C.Int.t * Word8.t array -> unit
NetHostDB.getEntryAddrsNum = _import : unit -> C.Int.t
NetHostDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetHostDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetHostDB.getEntryLength = _import : unit -> C.Int.t
NetHostDB.getEntryName = _import : unit -> C.String.t
NetHostDB.getHostName = _import : Char8.t array * C.Size.t -> C.Int.t C.Errno.t
NetHostDB.inAddrSize = _const : C.Size.t
NetProtDB.getByName = _import : NullString8.t -> Bool.t
NetProtDB.getByNumber = _import : C.Int.t -> Bool.t
NetProtDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetProtDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetProtDB.getEntryName = _import : unit -> C.String.t
NetProtDB.getEntryProto = _import : unit -> C.Int.t
NetServDB.getByName = _import : NullString8.t * NullString8.t -> Bool.t
NetServDB.getByNameNull = _import : NullString8.t -> Bool.t
NetServDB.getByPort = _import : C.Int.t * NullString8.t -> Bool.t
NetServDB.getByPortNull = _import : C.Int.t -> Bool.t
NetServDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetServDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetServDB.getEntryName = _import : unit -> C.String.t
NetServDB.getEntryPort = _import : unit -> C.Int.t
NetServDB.getEntryProto = _import : unit -> C.String.t
OS.IO.POLLIN = _const : C.Short.t
OS.IO.POLLOUT = _const : C.Short.t
OS.IO.POLLPRI = _const : C.Short.t
OS.IO.poll = _import : C.Fd.t vector * C.Short.t vector * C.NFds.t * C.Int.t * C.Short.t array -> C.Int.t C.Errno.t
Posix.Error.E2BIG = _const : C.Int.t
Posix.Error.EACCES = _const : C.Int.t
Posix.Error.EADDRINUSE = _const : C.Int.t
Posix.Error.EADDRNOTAVAIL = _const : C.Int.t
Posix.Error.EAFNOSUPPORT = _const : C.Int.t
Posix.Error.EAGAIN = _const : C.Int.t
Posix.Error.EALREADY = _const : C.Int.t
Posix.Error.EBADF = _const : C.Int.t
Posix.Error.EBADMSG = _const : C.Int.t
Posix.Error.EBUSY = _const : C.Int.t
Posix.Error.ECANCELED = _const : C.Int.t
Posix.Error.ECHILD = _const : C.Int.t
Posix.Error.ECONNABORTED = _const : C.Int.t
Posix.Error.ECONNREFUSED = _const : C.Int.t
Posix.Error.ECONNRESET = _const : C.Int.t
Posix.Error.EDEADLK = _const : C.Int.t
Posix.Error.EDESTADDRREQ = _const : C.Int.t
Posix.Error.EDOM = _const : C.Int.t
Posix.Error.EDQUOT = _const : C.Int.t
Posix.Error.EEXIST = _const : C.Int.t
Posix.Error.EFAULT = _const : C.Int.t
Posix.Error.EFBIG = _const : C.Int.t
Posix.Error.EHOSTUNREACH = _const : C.Int.t
Posix.Error.EIDRM = _const : C.Int.t
Posix.Error.EILSEQ = _const : C.Int.t
Posix.Error.EINPROGRESS = _const : C.Int.t
Posix.Error.EINTR = _const : C.Int.t
Posix.Error.EINVAL = _const : C.Int.t
Posix.Error.EIO = _const : C.Int.t
Posix.Error.EISCONN = _const : C.Int.t
Posix.Error.EISDIR = _const : C.Int.t
Posix.Error.ELOOP = _const : C.Int.t
Posix.Error.EMFILE = _const : C.Int.t
Posix.Error.EMLINK = _const : C.Int.t
Posix.Error.EMSGSIZE = _const : C.Int.t
Posix.Error.EMULTIHOP = _const : C.Int.t
Posix.Error.ENAMETOOLONG = _const : C.Int.t
Posix.Error.ENETDOWN = _const : C.Int.t
Posix.Error.ENETRESET = _const : C.Int.t
Posix.Error.ENETUNREACH = _const : C.Int.t
Posix.Error.ENFILE = _const : C.Int.t
Posix.Error.ENOBUFS = _const : C.Int.t
Posix.Error.ENODATA = _const : C.Int.t
Posix.Error.ENODEV = _const : C.Int.t
Posix.Error.ENOENT = _const : C.Int.t
Posix.Error.ENOEXEC = _const : C.Int.t
Posix.Error.ENOLCK = _const : C.Int.t
Posix.Error.ENOLINK = _const : C.Int.t
Posix.Error.ENOMEM = _const : C.Int.t
Posix.Error.ENOMSG = _const : C.Int.t
Posix.Error.ENOPROTOOPT = _const : C.Int.t
Posix.Error.ENOSPC = _const : C.Int.t
Posix.Error.ENOSR = _const : C.Int.t
Posix.Error.ENOSTR = _const : C.Int.t
Posix.Error.ENOSYS = _const : C.Int.t
Posix.Error.ENOTCONN = _const : C.Int.t
Posix.Error.ENOTDIR = _const : C.Int.t
Posix.Error.ENOTEMPTY = _const : C.Int.t
Posix.Error.ENOTSOCK = _const : C.Int.t
Posix.Error.ENOTSUP = _const : C.Int.t
Posix.Error.ENOTTY = _const : C.Int.t
Posix.Error.ENXIO = _const : C.Int.t
Posix.Error.EOPNOTSUPP = _const : C.Int.t
Posix.Error.EOVERFLOW = _const : C.Int.t
Posix.Error.EPERM = _const : C.Int.t
Posix.Error.EPIPE = _const : C.Int.t
Posix.Error.EPROTO = _const : C.Int.t
Posix.Error.EPROTONOSUPPORT = _const : C.Int.t
Posix.Error.EPROTOTYPE = _const : C.Int.t
Posix.Error.ERANGE = _const : C.Int.t
Posix.Error.EROFS = _const : C.Int.t
Posix.Error.ESPIPE = _const : C.Int.t
Posix.Error.ESRCH = _const : C.Int.t
Posix.Error.ESTALE = _const : C.Int.t
Posix.Error.ETIME = _const : C.Int.t
Posix.Error.ETIMEDOUT = _const : C.Int.t
Posix.Error.ETXTBSY = _const : C.Int.t
Posix.Error.EWOULDBLOCK = _const : C.Int.t
Posix.Error.EXDEV = _const : C.Int.t
Posix.Error.clearErrno = _import : unit -> unit
Posix.Error.getErrno = _import : unit -> C.Int.t
Posix.Error.strError = _import : C.Int.t -> C.String.t
Posix.FileSys.A.F_OK = _const : C.Int.t
Posix.FileSys.A.R_OK = _const : C.Int.t
Posix.FileSys.A.W_OK = _const : C.Int.t
Posix.FileSys.A.X_OK = _const : C.Int.t
Posix.FileSys.Dirstream.closeDir = _import : C.DirP.t -> C.Int.t C.Errno.t
Posix.FileSys.Dirstream.openDir = _import : NullString8.t -> C.DirP.t C.Errno.t
Posix.FileSys.Dirstream.readDir = _import : C.DirP.t -> C.String.t C.Errno.t
Posix.FileSys.Dirstream.rewindDir = _import : C.DirP.t -> unit
Posix.FileSys.O.APPEND = _const : C.Int.t
Posix.FileSys.O.BINARY = _const : C.Int.t
Posix.FileSys.O.CREAT = _const : C.Int.t
Posix.FileSys.O.DSYNC = _const : C.Int.t
Posix.FileSys.O.EXCL = _const : C.Int.t
Posix.FileSys.O.NOCTTY = _const : C.Int.t
Posix.FileSys.O.NONBLOCK = _const : C.Int.t
Posix.FileSys.O.RDONLY = _const : C.Int.t
Posix.FileSys.O.RDWR = _const : C.Int.t
Posix.FileSys.O.RSYNC = _const : C.Int.t
Posix.FileSys.O.SYNC = _const : C.Int.t
Posix.FileSys.O.TEXT = _const : C.Int.t
Posix.FileSys.O.TRUNC = _const : C.Int.t
Posix.FileSys.O.WRONLY = _const : C.Int.t
# Posix.FileSys.PC.2_SYMLINKS = _const : C.Int.t
Posix.FileSys.PC.ALLOC_SIZE_MIN = _const : C.Int.t
Posix.FileSys.PC.ASYNC_IO = _const : C.Int.t
Posix.FileSys.PC.CHOWN_RESTRICTED = _const : C.Int.t
Posix.FileSys.PC.FILESIZEBITS = _const : C.Int.t
Posix.FileSys.PC.LINK_MAX = _const : C.Int.t
Posix.FileSys.PC.MAX_CANON = _const : C.Int.t
Posix.FileSys.PC.MAX_INPUT = _const : C.Int.t
Posix.FileSys.PC.NAME_MAX = _const : C.Int.t
Posix.FileSys.PC.NO_TRUNC = _const : C.Int.t
Posix.FileSys.PC.PATH_MAX = _const : C.Int.t
Posix.FileSys.PC.PIPE_BUF = _const : C.Int.t
Posix.FileSys.PC.PRIO_IO = _const : C.Int.t
Posix.FileSys.PC.REC_INCR_XFER_SIZE = _const : C.Int.t
Posix.FileSys.PC.REC_MAX_XFER_SIZE = _const : C.Int.t
Posix.FileSys.PC.REC_MIN_XFER_SIZE = _const : C.Int.t
Posix.FileSys.PC.REC_XFER_ALIGN = _const : C.Int.t
Posix.FileSys.PC.SYMLINK_MAX = _const : C.Int.t
Posix.FileSys.PC.SYNC_IO = _const : C.Int.t
Posix.FileSys.PC.VDISABLE = _const : C.Int.t
Posix.FileSys.S.IFBLK = _const : C.Mode.t
Posix.FileSys.S.IFCHR = _const : C.Mode.t
Posix.FileSys.S.IFDIR = _const : C.Mode.t
Posix.FileSys.S.IFIFO = _const : C.Mode.t
Posix.FileSys.S.IFLNK = _const : C.Mode.t
Posix.FileSys.S.IFMT = _const : C.Mode.t
Posix.FileSys.S.IFREG = _const : C.Mode.t
Posix.FileSys.S.IFSOCK = _const : C.Mode.t
Posix.FileSys.S.IRGRP = _const : C.Mode.t
Posix.FileSys.S.IROTH = _const : C.Mode.t
Posix.FileSys.S.IRUSR = _const : C.Mode.t
Posix.FileSys.S.IRWXG = _const : C.Mode.t
Posix.FileSys.S.IRWXO = _const : C.Mode.t
Posix.FileSys.S.IRWXU = _const : C.Mode.t
Posix.FileSys.S.ISGID = _const : C.Mode.t
Posix.FileSys.S.ISUID = _const : C.Mode.t
Posix.FileSys.S.ISVTX = _const : C.Mode.t
Posix.FileSys.S.IWGRP = _const : C.Mode.t
Posix.FileSys.S.IWOTH = _const : C.Mode.t
Posix.FileSys.S.IWUSR = _const : C.Mode.t
Posix.FileSys.S.IXGRP = _const : C.Mode.t
Posix.FileSys.S.IXOTH = _const : C.Mode.t
Posix.FileSys.S.IXUSR = _const : C.Mode.t
Posix.FileSys.ST.isBlk = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isChr = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isDir = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isFIFO = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isLink = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isReg = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isSock = _import : C.Mode.t -> Bool.t
Posix.FileSys.Stat.fstat = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.FileSys.Stat.getATime = _import : unit -> C.Time.t
# Posix.FileSys.Stat.getBlkCnt = _import : unit -> C.BlkCnt.t
# Posix.FileSys.Stat.getBlkSize = _import : unit -> C.BlkSize.t
Posix.FileSys.Stat.getCTime = _import : unit -> C.Time.t
Posix.FileSys.Stat.getDev = _import : unit -> C.Dev.t
Posix.FileSys.Stat.getGId = _import : unit -> C.GId.t
Posix.FileSys.Stat.getINo = _import : unit -> C.INo.t
Posix.FileSys.Stat.getMTime = _import : unit -> C.Time.t
Posix.FileSys.Stat.getMode = _import : unit -> C.Mode.t
Posix.FileSys.Stat.getNLink = _import : unit -> C.NLink.t
Posix.FileSys.Stat.getRDev = _import : unit -> C.Dev.t
Posix.FileSys.Stat.getSize = _import : unit -> C.Off.t
Posix.FileSys.Stat.getUId = _import : unit -> C.UId.t
Posix.FileSys.Stat.lstat = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.Stat.stat = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.Utimbuf.setAcTime = _import : C.Time.t -> unit
Posix.FileSys.Utimbuf.setModTime = _import : C.Time.t -> unit
Posix.FileSys.Utimbuf.utime = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.access = _import : NullString8.t * C.Int.t -> C.Int.t C.Errno.t
Posix.FileSys.chdir = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.chmod = _import : NullString8.t * C.Mode.t -> C.Int.t C.Errno.t
Posix.FileSys.chown = _import : NullString8.t * C.UId.t * C.GId.t -> C.Int.t C.Errno.t
Posix.FileSys.fchdir = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.FileSys.fchmod = _import : C.Fd.t * C.Mode.t -> C.Int.t C.Errno.t
Posix.FileSys.fchown = _import : C.Fd.t * C.UId.t * C.GId.t -> C.Int.t C.Errno.t
Posix.FileSys.fpathconf = _import : C.Fd.t * C.Int.t -> C.Long.t C.Errno.t
Posix.FileSys.ftruncate = _import : C.Fd.t * C.Off.t -> C.Int.t C.Errno.t
Posix.FileSys.getcwd = _import : Char8.t array * C.Size.t -> C.String.t C.Errno.t
Posix.FileSys.link = _import : NullString8.t * NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.mkdir = _import : NullString8.t * C.Mode.t -> C.Int.t C.Errno.t
Posix.FileSys.mkfifo = _import : NullString8.t * C.Mode.t -> C.Int.t C.Errno.t
Posix.FileSys.open2 = _import : NullString8.t * C.Int.t -> C.Fd.t C.Errno.t
Posix.FileSys.open3 = _import : NullString8.t * C.Int.t * C.Mode.t -> C.Fd.t C.Errno.t
Posix.FileSys.pathconf = _import : NullString8.t * C.Int.t -> C.Long.t C.Errno.t
Posix.FileSys.readlink = _import : NullString8.t * Char8.t array * C.Size.t -> C.SSize.t C.Errno.t
Posix.FileSys.rename = _import : NullString8.t * NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.rmdir = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.symlink = _import : NullString8.t * NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.truncate = _import : NullString8.t * C.Off.t -> C.Int.t C.Errno.t
Posix.FileSys.umask = _import : C.Mode.t -> C.Mode.t
Posix.FileSys.unlink = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.IO.FD.CLOEXEC = _const : C.Fd.t
Posix.IO.FLock.F_GETLK = _const : C.Int.t
Posix.IO.FLock.F_SETLK = _const : C.Int.t
Posix.IO.FLock.F_SETLKW = _const : C.Int.t
Posix.IO.FLock.F_RDLCK = _const : C.Short.t 
Posix.IO.FLock.F_UNLCK = _const : C.Short.t 
Posix.IO.FLock.F_WRLCK = _const : C.Short.t 
Posix.IO.FLock.SEEK_CUR = _const : C.Short.t
Posix.IO.FLock.SEEK_END= _const : C.Short.t
Posix.IO.FLock.SEEK_SET = _const : C.Short.t
Posix.IO.FLock.fcntl = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.IO.FLock.getLen = _import : unit -> C.Off.t
Posix.IO.FLock.getPId = _import : unit -> C.PId.t
Posix.IO.FLock.getStart = _import : unit -> C.Off.t
Posix.IO.FLock.getType = _import : unit -> C.Short.t
Posix.IO.FLock.getWhence = _import : unit -> C.Short.t
Posix.IO.FLock.setLen = _import : C.Off.t -> unit
Posix.IO.FLock.setPId = _import : C.PId.t -> unit
Posix.IO.FLock.setStart = _import : C.Off.t -> unit
Posix.IO.FLock.setType = _import : C.Short.t -> unit
Posix.IO.FLock.setWhence = _import : C.Short.t -> unit
Posix.IO.F_DUPFD = _const : C.Int.t
Posix.IO.F_GETFD = _const : C.Int.t
Posix.IO.F_GETFL = _const : C.Int.t
Posix.IO.F_GETOWN = _const : C.Int.t
Posix.IO.F_SETFD = _const : C.Int.t
Posix.IO.F_SETFL = _const : C.Int.t
Posix.IO.F_SETOWN = _const : C.Int.t
Posix.IO.O_ACCMODE = _const : C.Int.t
Posix.IO.SEEK_CUR = _const : C.Int.t
Posix.IO.SEEK_END= _const : C.Int.t
Posix.IO.SEEK_SET = _const : C.Int.t
Posix.IO.close = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.IO.dup = _import : C.Fd.t -> C.Fd.t C.Errno.t
Posix.IO.dup2 = _import : C.Fd.t * C.Fd.t -> C.Fd.t C.Errno.t
Posix.IO.fcntl2 = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.IO.fcntl3 = _import : C.Fd.t * C.Int.t * C.Int.t -> C.Int.t C.Errno.t
Posix.IO.fsync = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.IO.lseek = _import : C.Fd.t * C.Off.t * C.Int.t -> C.Off.t C.Errno.t
Posix.IO.pipe = _import : C.Fd.t array -> C.Int.t C.Errno.t
Posix.IO.readChar8 = _import : C.Fd.t * Char8.t array * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.IO.readWord8 = _import : C.Fd.t * Word8.t array * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.IO.setbin = _import : C.Fd.t -> unit
Posix.IO.settext = _import : C.Fd.t -> unit
Posix.IO.writeChar8Arr = _import : C.Fd.t * Char8.t array * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.IO.writeChar8Vec = _import : C.Fd.t * Char8.t vector * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.IO.writeWord8Arr = _import : C.Fd.t * Word8.t array * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.IO.writeWord8Vec = _import : C.Fd.t * Word8.t vector * C.Int.t * C.Size.t -> C.SSize.t C.Errno.t
Posix.ProcEnv.SC_2_CHAR_TERM = _const : C.Int.t
Posix.ProcEnv.SC_2_C_BIND = _const : C.Int.t
Posix.ProcEnv.SC_2_C_DEV = _const : C.Int.t
Posix.ProcEnv.SC_2_FORT_DEV = _const : C.Int.t
Posix.ProcEnv.SC_2_FORT_RUN = _const : C.Int.t
Posix.ProcEnv.SC_2_LOCALEDEF = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS_ACCOUNTING = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS_CHECKPOINT = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS_LOCATE = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS_MESSAGE = _const : C.Int.t
Posix.ProcEnv.SC_2_PBS_TRACK = _const : C.Int.t
Posix.ProcEnv.SC_2_SW_DEV = _const : C.Int.t
Posix.ProcEnv.SC_2_UPE = _const : C.Int.t
Posix.ProcEnv.SC_2_VERSION = _const : C.Int.t
Posix.ProcEnv.SC_ADVISORY_INFO = _const : C.Int.t
Posix.ProcEnv.SC_AIO_LISTIO_MAX = _const : C.Int.t
Posix.ProcEnv.SC_AIO_MAX = _const : C.Int.t
Posix.ProcEnv.SC_AIO_PRIO_DELTA_MAX = _const : C.Int.t
Posix.ProcEnv.SC_ARG_MAX = _const : C.Int.t
Posix.ProcEnv.SC_ASYNCHRONOUS_IO = _const : C.Int.t
Posix.ProcEnv.SC_ATEXIT_MAX = _const : C.Int.t
Posix.ProcEnv.SC_BARRIERS = _const : C.Int.t
Posix.ProcEnv.SC_BC_BASE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_BC_DIM_MAX = _const : C.Int.t
Posix.ProcEnv.SC_BC_SCALE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_BC_STRING_MAX = _const : C.Int.t
Posix.ProcEnv.SC_CHILD_MAX = _const : C.Int.t
Posix.ProcEnv.SC_CLK_TCK = _const : C.Int.t
Posix.ProcEnv.SC_CLOCK_SELECTION = _const : C.Int.t
Posix.ProcEnv.SC_COLL_WEIGHTS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_CPUTIME = _const : C.Int.t
Posix.ProcEnv.SC_DELAYTIMER_MAX = _const : C.Int.t
Posix.ProcEnv.SC_EXPR_NEST_MAX = _const : C.Int.t
Posix.ProcEnv.SC_FSYNC = _const : C.Int.t
Posix.ProcEnv.SC_GETGR_R_SIZE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_GETPW_R_SIZE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_HOST_NAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_IOV_MAX = _const : C.Int.t
Posix.ProcEnv.SC_IPV6 = _const : C.Int.t
Posix.ProcEnv.SC_JOB_CONTROL = _const : C.Int.t
Posix.ProcEnv.SC_LINE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_LOGIN_NAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_MAPPED_FILES = _const : C.Int.t
Posix.ProcEnv.SC_MEMLOCK = _const : C.Int.t
Posix.ProcEnv.SC_MEMLOCK_RANGE = _const : C.Int.t
Posix.ProcEnv.SC_MEMORY_PROTECTION = _const : C.Int.t
Posix.ProcEnv.SC_MESSAGE_PASSING = _const : C.Int.t
Posix.ProcEnv.SC_MONOTONIC_CLOCK = _const : C.Int.t
Posix.ProcEnv.SC_MQ_OPEN_MAX = _const : C.Int.t
Posix.ProcEnv.SC_MQ_PRIO_MAX = _const : C.Int.t
Posix.ProcEnv.SC_NGROUPS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_OPEN_MAX = _const : C.Int.t
Posix.ProcEnv.SC_PAGESIZE = _const : C.Int.t
Posix.ProcEnv.SC_PAGE_SIZE = _const : C.Int.t
Posix.ProcEnv.SC_PRIORITIZED_IO = _const : C.Int.t
Posix.ProcEnv.SC_PRIORITY_SCHEDULING = _const : C.Int.t
Posix.ProcEnv.SC_RAW_SOCKETS = _const : C.Int.t
Posix.ProcEnv.SC_READER_WRITER_LOCKS = _const : C.Int.t
Posix.ProcEnv.SC_REALTIME_SIGNALS = _const : C.Int.t
Posix.ProcEnv.SC_REGEXP = _const : C.Int.t
Posix.ProcEnv.SC_RE_DUP_MAX = _const : C.Int.t
Posix.ProcEnv.SC_RTSIG_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SAVED_IDS = _const : C.Int.t
Posix.ProcEnv.SC_SEMAPHORES = _const : C.Int.t
Posix.ProcEnv.SC_SEM_NSEMS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SEM_VALUE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SHARED_MEMORY_OBJECTS = _const : C.Int.t
Posix.ProcEnv.SC_SHELL = _const : C.Int.t
Posix.ProcEnv.SC_SIGQUEUE_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SPAWN = _const : C.Int.t
Posix.ProcEnv.SC_SPIN_LOCKS = _const : C.Int.t
Posix.ProcEnv.SC_SPORADIC_SERVER = _const : C.Int.t
Posix.ProcEnv.SC_SS_REPL_MAX = _const : C.Int.t
Posix.ProcEnv.SC_STREAM_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SYMLOOP_MAX = _const : C.Int.t
Posix.ProcEnv.SC_SYNCHRONIZED_IO = _const : C.Int.t
Posix.ProcEnv.SC_THREADS = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_ATTR_STACKADDR = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_ATTR_STACKSIZE = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_CPUTIME = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_DESTRUCTOR_ITERATIONS = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_KEYS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_PRIORITY_SCHEDULING = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_PRIO_INHERIT = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_PRIO_PROTECT = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_PROCESS_SHARED = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_SAFE_FUNCTIONS = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_SPORADIC_SERVER = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_STACK_MIN = _const : C.Int.t
Posix.ProcEnv.SC_THREAD_THREADS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TIMEOUTS = _const : C.Int.t
Posix.ProcEnv.SC_TIMERS = _const : C.Int.t
Posix.ProcEnv.SC_TIMER_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TRACE = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_EVENT_FILTER = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_EVENT_NAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_INHERIT = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_LOG = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_NAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_SYS_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TRACE_USER_EVENT_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TTY_NAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_TYPED_MEMORY_OBJECTS = _const : C.Int.t
Posix.ProcEnv.SC_TZNAME_MAX = _const : C.Int.t
Posix.ProcEnv.SC_V6_ILP32_OFF32 = _const : C.Int.t
Posix.ProcEnv.SC_V6_ILP32_OFFBIG = _const : C.Int.t
Posix.ProcEnv.SC_V6_LP64_OFF64 = _const : C.Int.t
Posix.ProcEnv.SC_V6_LPBIG_OFFBIG = _const : C.Int.t
Posix.ProcEnv.SC_VERSION = _const : C.Int.t
Posix.ProcEnv.SC_XBS5_ILP32_OFF32 = _const : C.Int.t
Posix.ProcEnv.SC_XBS5_ILP32_OFFBIG = _const : C.Int.t
Posix.ProcEnv.SC_XBS5_LP64_OFF64 = _const : C.Int.t
Posix.ProcEnv.SC_XBS5_LPBIG_OFFBIG = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_CRYPT = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_ENH_I18N = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_LEGACY = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_REALTIME = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_REALTIME_THREADS = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_SHM = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_STREAMS = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_UNIX = _const : C.Int.t
Posix.ProcEnv.SC_XOPEN_VERSION = _const : C.Int.t
Posix.ProcEnv.Times.getCSTime = _import : unit -> C.Clock.t
Posix.ProcEnv.Times.getCUTime = _import : unit -> C.Clock.t
Posix.ProcEnv.Times.getSTime = _import : unit -> C.Clock.t
Posix.ProcEnv.Times.getUTime = _import : unit -> C.Clock.t
Posix.ProcEnv.Uname.getMachine = _import : unit -> C.String.t
Posix.ProcEnv.Uname.getNodeName = _import : unit -> C.String.t
Posix.ProcEnv.Uname.getRelease = _import : unit -> C.String.t
Posix.ProcEnv.Uname.getSysName = _import : unit -> C.String.t
Posix.ProcEnv.Uname.getVersion = _import : unit -> C.String.t
Posix.ProcEnv.ctermid = _import : unit -> C.String.t
Posix.ProcEnv.environ = _symbol : C.StringArray.t
Posix.ProcEnv.getegid = _import : unit -> C.GId.t
Posix.ProcEnv.getenv = _import : NullString8.t -> C.String.t
Posix.ProcEnv.geteuid = _import : unit -> C.UId.t
Posix.ProcEnv.getgid = _import : unit -> C.GId.t
Posix.ProcEnv.getgroups = _import : C.Int.t * C.GId.t array -> C.Int.t C.Errno.t
Posix.ProcEnv.getgroupsN = _import : unit -> C.Int.t
Posix.ProcEnv.getlogin = _import : unit -> C.String.t C.Errno.t
Posix.ProcEnv.getpgrp = _import : unit -> C.PId.t
Posix.ProcEnv.getpid = _import : unit -> C.PId.t
Posix.ProcEnv.getppid = _import : unit -> C.PId.t
Posix.ProcEnv.getuid = _import : unit -> C.UId.t
Posix.ProcEnv.isatty = _import : C.Fd.t -> Bool.t
Posix.ProcEnv.setenv = _import : NullString8.t * NullString8.t -> C.Int.t C.Errno.t
Posix.ProcEnv.setgid = _import : C.GId.t -> C.Int.t C.Errno.t
Posix.ProcEnv.setgroups = _import : C.Int.t * C.GId.t vector -> C.Int.t C.Errno.t
Posix.ProcEnv.setpgid = _import : C.PId.t * C.PId.t -> C.Int.t C.Errno.t
Posix.ProcEnv.setsid = _import : unit -> C.PId.t C.Errno.t
Posix.ProcEnv.setuid = _import : C.UId.t -> C.Int.t C.Errno.t
Posix.ProcEnv.sysconf = _import : C.Int.t -> C.Long.t C.Errno.t
Posix.ProcEnv.times = _import : unit -> C.Clock.t C.Errno.t
Posix.ProcEnv.ttyname = _import : C.Fd.t -> C.String.t C.Errno.t
Posix.ProcEnv.uname = _import : unit -> C.Int.t C.Errno.t
Posix.Process.W.CONTINUED = _const : C.Int.t
Posix.Process.W.NOHANG = _const : C.Int.t
Posix.Process.W.UNTRACED = _const : C.Int.t
Posix.Process.alarm = _import : C.UInt.t -> C.UInt.t
Posix.Process.exece = _import : NullString8.t * NullString8Array.t * NullString8Array.t -> C.Int.t C.Errno.t
Posix.Process.execp = _import : NullString8.t * NullString8Array.t -> C.Int.t C.Errno.t
Posix.Process.exit = _import : C.Status.t -> unit
Posix.Process.exitStatus = _import : C.Status.t -> C.Int.t
Posix.Process.fork = _import : unit -> C.PId.t C.Errno.t
Posix.Process.ifExited = _import : C.Status.t -> Bool.t
Posix.Process.ifSignaled = _import : C.Status.t -> Bool.t
Posix.Process.ifStopped = _import : C.Status.t -> Bool.t
Posix.Process.kill = _import : C.PId.t * C.Signal.t -> C.Int.t C.Errno.t
Posix.Process.nanosleep = _import : C.Time.t ref * C.Long.t ref -> C.Int.t C.Errno.t
Posix.Process.pause = _import : unit -> C.Int.t C.Errno.t
Posix.Process.sleep = _import : C.UInt.t -> C.UInt.t
Posix.Process.stopSig = _import : C.Status.t -> C.Signal.t
Posix.Process.system = _import : NullString8.t -> C.Status.t C.Errno.t
Posix.Process.termSig = _import : C.Status.t -> C.Signal.t
Posix.Process.waitpid = _import : C.PId.t * C.Int.t ref * C.Int.t -> C.PId.t C.Errno.t
Posix.Signal.NSIG = _const : C.Int.t
Posix.Signal.SIGABRT = _const : C.Signal.t
Posix.Signal.SIGALRM = _const : C.Signal.t
Posix.Signal.SIGBUS = _const : C.Signal.t
Posix.Signal.SIGCHLD = _const : C.Signal.t
Posix.Signal.SIGCONT = _const : C.Signal.t
Posix.Signal.SIGFPE = _const : C.Signal.t
Posix.Signal.SIGHUP = _const : C.Signal.t
Posix.Signal.SIGILL = _const : C.Signal.t
Posix.Signal.SIGINT = _const : C.Signal.t
Posix.Signal.SIGKILL = _const : C.Signal.t
Posix.Signal.SIGPIPE = _const : C.Signal.t
Posix.Signal.SIGPOLL = _const : C.Signal.t
Posix.Signal.SIGPROF = _const : C.Signal.t
Posix.Signal.SIGQUIT = _const : C.Signal.t
Posix.Signal.SIGSEGV = _const : C.Signal.t
Posix.Signal.SIGSTOP = _const : C.Signal.t
Posix.Signal.SIGSYS = _const : C.Signal.t
Posix.Signal.SIGTERM = _const : C.Signal.t
Posix.Signal.SIGTRAP = _const : C.Signal.t
Posix.Signal.SIGTSTP = _const : C.Signal.t
Posix.Signal.SIGTTIN = _const : C.Signal.t
Posix.Signal.SIGTTOU = _const : C.Signal.t
Posix.Signal.SIGURG = _const : C.Signal.t
Posix.Signal.SIGUSR1 = _const : C.Signal.t
Posix.Signal.SIGUSR2 = _const : C.Signal.t
Posix.Signal.SIGVTALRM = _const : C.Signal.t
Posix.Signal.SIGXCPU = _const : C.Signal.t
Posix.Signal.SIGXFSZ = _const : C.Signal.t
Posix.Signal.SIG_BLOCK = _const : C.Int.t
Posix.Signal.SIG_SETMASK = _const : C.Int.t
Posix.Signal.SIG_UNBLOCK = _const : C.Int.t
Posix.Signal.default = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.handleGC = _import : unit -> unit
Posix.Signal.handlee = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.ignore = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.isDefault = _import : C.Signal.t * Bool.t ref -> C.Int.t C.Errno.t
Posix.Signal.isIgnore = _import : C.Signal.t * Bool.t ref -> C.Int.t C.Errno.t
Posix.Signal.isPending = _import : C.Signal.t -> Bool.t
Posix.Signal.isPendingGC = _import : unit -> Bool.t
Posix.Signal.resetPending = _import :unit -> unit
Posix.Signal.sigaddset = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.sigdelset = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.sigemptyset = _import : unit -> C.Int.t C.Errno.t
Posix.Signal.sigfillset = _import : unit -> C.Int.t C.Errno.t
Posix.Signal.sigismember = _import : C.Signal.t -> C.Int.t C.Errno.t
Posix.Signal.sigprocmask = _import : C.Int.t -> C.Int.t C.Errno.t
Posix.Signal.sigsuspend = _import : unit -> unit
Posix.SysDB.Group.getGId = _import : unit -> C.GId.t
Posix.SysDB.Group.getMem = _import : unit -> C.StringArray.t
Posix.SysDB.Group.getName = _import : unit -> C.String.t
Posix.SysDB.Passwd.getDir = _import : unit -> C.String.t
Posix.SysDB.Passwd.getGId = _import : unit -> C.GId.t
Posix.SysDB.Passwd.getName = _import : unit -> C.String.t
Posix.SysDB.Passwd.getShell = _import : unit -> C.String.t
Posix.SysDB.Passwd.getUId = _import : unit -> C.UId.t
Posix.SysDB.getgrgid = _import : C.GId.t -> Bool.t
Posix.SysDB.getgrnam = _import : NullString8.t -> Bool.t
Posix.SysDB.getpwnam = _import : NullString8.t -> Bool.t
Posix.SysDB.getpwuid = _import : C.GId.t -> Bool.t
Posix.TTY.B0 = _const : C.Speed.t
Posix.TTY.B110 = _const : C.Speed.t
Posix.TTY.B1200 = _const : C.Speed.t
Posix.TTY.B134 = _const : C.Speed.t
Posix.TTY.B150 = _const : C.Speed.t
Posix.TTY.B1800 = _const : C.Speed.t
Posix.TTY.B19200 = _const : C.Speed.t
Posix.TTY.B200 = _const : C.Speed.t
Posix.TTY.B2400 = _const : C.Speed.t
Posix.TTY.B300 = _const : C.Speed.t
Posix.TTY.B38400 = _const : C.Speed.t
Posix.TTY.B4800 = _const : C.Speed.t
Posix.TTY.B50 = _const : C.Speed.t
Posix.TTY.B600 = _const : C.Speed.t
Posix.TTY.B75 = _const : C.Speed.t
Posix.TTY.B9600 = _const : C.Speed.t
Posix.TTY.CFlags.CLOCAL = _const : C.TCFlag.t
Posix.TTY.CFlags.CREAD = _const : C.TCFlag.t
Posix.TTY.CFlags.CS5 = _const : C.TCFlag.t
Posix.TTY.CFlags.CS6 = _const : C.TCFlag.t
Posix.TTY.CFlags.CS7 = _const : C.TCFlag.t
Posix.TTY.CFlags.CS8 = _const : C.TCFlag.t
Posix.TTY.CFlags.CSIZE = _const : C.TCFlag.t
Posix.TTY.CFlags.CSTOPB = _const : C.TCFlag.t
Posix.TTY.CFlags.HUPCL = _const : C.TCFlag.t
Posix.TTY.CFlags.PARENB = _const : C.TCFlag.t
Posix.TTY.CFlags.PARODD = _const : C.TCFlag.t
Posix.TTY.IFlags.BRKINT = _const : C.TCFlag.t
Posix.TTY.IFlags.ICRNL = _const : C.TCFlag.t
Posix.TTY.IFlags.IGNBRK = _const : C.TCFlag.t
Posix.TTY.IFlags.IGNCR = _const : C.TCFlag.t
Posix.TTY.IFlags.IGNPAR = _const : C.TCFlag.t
Posix.TTY.IFlags.INLCR = _const : C.TCFlag.t
Posix.TTY.IFlags.INPCK = _const : C.TCFlag.t
Posix.TTY.IFlags.ISTRIP = _const : C.TCFlag.t
Posix.TTY.IFlags.IXANY = _const : C.TCFlag.t
Posix.TTY.IFlags.IXOFF = _const : C.TCFlag.t
Posix.TTY.IFlags.IXON = _const : C.TCFlag.t
Posix.TTY.IFlags.PARMRK = _const : C.TCFlag.t
Posix.TTY.LFlags.ECHO = _const : C.TCFlag.t
Posix.TTY.LFlags.ECHOE = _const : C.TCFlag.t
Posix.TTY.LFlags.ECHOK = _const : C.TCFlag.t
Posix.TTY.LFlags.ECHONL = _const : C.TCFlag.t
Posix.TTY.LFlags.ICANON = _const : C.TCFlag.t
Posix.TTY.LFlags.IEXTEN = _const : C.TCFlag.t
Posix.TTY.LFlags.ISIG = _const : C.TCFlag.t
Posix.TTY.LFlags.NOFLSH = _const : C.TCFlag.t
Posix.TTY.LFlags.TOSTOP = _const : C.TCFlag.t
Posix.TTY.OFlags.BS0 = _const : C.TCFlag.t
Posix.TTY.OFlags.BS1 = _const : C.TCFlag.t
Posix.TTY.OFlags.BSDLY = _const : C.TCFlag.t
Posix.TTY.OFlags.CR0 = _const : C.TCFlag.t
Posix.TTY.OFlags.CR1 = _const : C.TCFlag.t
Posix.TTY.OFlags.CR2 = _const : C.TCFlag.t
Posix.TTY.OFlags.CR3 = _const : C.TCFlag.t
Posix.TTY.OFlags.CRDLY = _const : C.TCFlag.t
Posix.TTY.OFlags.FF0 = _const : C.TCFlag.t
Posix.TTY.OFlags.FF1 = _const : C.TCFlag.t
Posix.TTY.OFlags.FFDLY = _const : C.TCFlag.t
Posix.TTY.OFlags.NL0 = _const : C.TCFlag.t
Posix.TTY.OFlags.NL1 = _const : C.TCFlag.t
Posix.TTY.OFlags.NLDLY = _const : C.TCFlag.t
Posix.TTY.OFlags.OCRNL = _const : C.TCFlag.t
Posix.TTY.OFlags.OFILL = _const : C.TCFlag.t
Posix.TTY.OFlags.ONLCR = _const : C.TCFlag.t
Posix.TTY.OFlags.ONLRET = _const : C.TCFlag.t
Posix.TTY.OFlags.ONOCR = _const : C.TCFlag.t
Posix.TTY.OFlags.OPOST = _const : C.TCFlag.t
Posix.TTY.OFlags.TAB0 = _const : C.TCFlag.t
Posix.TTY.OFlags.TAB1 = _const : C.TCFlag.t
Posix.TTY.OFlags.TAB2 = _const : C.TCFlag.t
Posix.TTY.OFlags.TAB3 = _const : C.TCFlag.t
Posix.TTY.OFlags.TABDLY = _const : C.TCFlag.t
Posix.TTY.OFlags.VT0 = _const : C.TCFlag.t
Posix.TTY.OFlags.VT1 = _const : C.TCFlag.t
Posix.TTY.OFlags.VTDLY = _const : C.TCFlag.t
Posix.TTY.TC.TCIFLUSH = _const : C.Int.t
Posix.TTY.TC.TCIOFF = _const : C.Int.t
Posix.TTY.TC.TCIOFLUSH = _const : C.Int.t
Posix.TTY.TC.TCION = _const : C.Int.t
Posix.TTY.TC.TCOFLUSH = _const : C.Int.t
Posix.TTY.TC.TCOOFF = _const : C.Int.t
Posix.TTY.TC.TCOON = _const : C.Int.t
Posix.TTY.TC.TCSADRAIN = _const : C.Int.t
Posix.TTY.TC.TCSAFLUSH = _const : C.Int.t
Posix.TTY.TC.TCSANOW = _const : C.Int.t
Posix.TTY.TC.drain = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.TTY.TC.flow = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.flush = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.getattr = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.TTY.TC.getpgrp = _import : C.Fd.t -> C.PId.t C.Errno.t
Posix.TTY.TC.sendbreak = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.setattr = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.setpgrp = _import : C.Fd.t * C.PId.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.cfGetISpeed = _import : unit -> C.Speed.t
Posix.TTY.Termios.cfGetOSpeed = _import : unit -> C.Speed.t
Posix.TTY.Termios.cfSetISpeed = _import : C.Speed.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.cfSetOSpeed = _import : C.Speed.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.getCC = _import : C.CC.t array -> unit
Posix.TTY.Termios.getCFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getIFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getLFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getOFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.setCC = _import : C.CC.t array -> unit
Posix.TTY.Termios.setCFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setIFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setLFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setOFlag = _import : C.TCFlag.t -> unit
Posix.TTY.V.NCCS = _const : C.Int.t
Posix.TTY.V.VEOF = _const : C.Int.t
Posix.TTY.V.VEOL = _const : C.Int.t
Posix.TTY.V.VERASE = _const : C.Int.t
Posix.TTY.V.VINTR = _const : C.Int.t
Posix.TTY.V.VKILL = _const : C.Int.t
Posix.TTY.V.VMIN = _const : C.Int.t
Posix.TTY.V.VQUIT = _const : C.Int.t
Posix.TTY.V.VSTART = _const : C.Int.t
Posix.TTY.V.VSTOP = _const : C.Int.t
Posix.TTY.V.VSUSP = _const : C.Int.t
Posix.TTY.V.VTIME = _const : C.Int.t
Socket.AF.INET = _const : C.Int.t
Socket.AF.INET6 = _const : C.Int.t
Socket.AF.UNIX = _const : C.Int.t
Socket.AF.UNSPEC = _const : C.Int.t
Socket.Ctl.FIONBIO = _const : C.Int.t
Socket.Ctl.FIONREAD = _const : C.Int.t
Socket.Ctl.SIOCATMARK = _const : C.Int.t
Socket.Ctl.SOL_SOCKET = _const : C.Int.t
Socket.Ctl.SO_ACCEPTCONN = _const : C.Int.t
Socket.Ctl.SO_BROADCAST = _const : C.Int.t
Socket.Ctl.SO_DEBUG = _const : C.Int.t
Socket.Ctl.SO_DONTROUTE = _const : C.Int.t
Socket.Ctl.SO_ERROR = _const : C.Int.t
Socket.Ctl.SO_KEEPALIVE = _const : C.Int.t
Socket.Ctl.SO_LINGER = _const : C.Int.t
Socket.Ctl.SO_OOBINLINE = _const : C.Int.t
Socket.Ctl.SO_RCVBUF = _const : C.Int.t
Socket.Ctl.SO_RCVLOWAT = _const : C.Int.t
Socket.Ctl.SO_RCVTIMEO = _const : C.Int.t
Socket.Ctl.SO_REUSEADDR = _const : C.Int.t
Socket.Ctl.SO_SNDBUF = _const : C.Int.t
Socket.Ctl.SO_SNDLOWAT = _const : C.Int.t
Socket.Ctl.SO_SNDTIMEO = _const : C.Int.t
Socket.Ctl.SO_TYPE = _const : C.Int.t
Socket.Ctl.getIOCtl = _import : C.Sock.t * C.Int.t * Word8.t array -> C.Int.t C.Errno.t
Socket.Ctl.getPeerName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.setIOCtl = _import : C.Sock.t * C.Int.t * Word8.t vector -> C.Int.t C.Errno.t
Socket.Ctl.setSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.GenericSock.socket = _import : C.Int.t * C.Int.t * C.Int.t -> C.Int.t C.Errno.t
Socket.GenericSock.socketPair = _import : C.Int.t * C.Int.t * C.Int.t * C.Int.t array -> C.Int.t C.Errno.t
Socket.INetSock.Ctl.IPPROTO_TCP = _const : C.Int.t
Socket.INetSock.Ctl.TCP_NODELAY = _const : C.Int.t
Socket.INetSock.fromAddr = _import : Word8.t vector -> unit
Socket.INetSock.getInAddr = _import : Word8.t array -> unit
Socket.INetSock.getPort = _import : unit -> C.Int.t
Socket.INetSock.toAddr = _import : Word8.t vector * C.Int.t * Word8.t array * C.Socklen.t ref -> unit
Socket.MSG_CTRUNC = _const : C.Int.t
Socket.MSG_DONTROUTE = _const : C.Int.t
Socket.MSG_DONTWAIT = _const : C.Int.t
Socket.MSG_EOR = _const : C.Int.t
Socket.MSG_OOB = _const : C.Int.t
Socket.MSG_PEEK = _const : C.Int.t
Socket.MSG_TRUNC = _const : C.Int.t
Socket.MSG_WAITALL = _const : C.Int.t
Socket.SHUT_RD = _const : C.Int.t
Socket.SHUT_RDWR = _const : C.Int.t
Socket.SHUT_WR = _const : C.Int.t
Socket.SOCK.DGRAM = _const : C.Int.t
Socket.SOCK.RAW = _const : C.Int.t
Socket.SOCK.SEQPACKET = _const : C.Int.t
Socket.SOCK.STREAM = _const : C.Int.t
Socket.UnixSock.fromAddr = _import : Word8.t vector * Char8.t array * C.Size.t -> unit
Socket.UnixSock.pathLen = _import : Word8.t vector -> C.Size.t
Socket.UnixSock.toAddr = _import : NullString8.t * C.Size.t * Word8.t array * C.Socklen.t ref -> unit
Socket.accept = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.bind = _import : C.Sock.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.close = _import : C.Sock.t -> C.Int.t C.Errno.t
Socket.connect = _import : C.Sock.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.familyOfAddr = _import : Word8.t vector -> C.Int.t
Socket.listen = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.recv = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.recvFrom = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.SSize.t C.Errno.t
Socket.sendArr = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.sendArrTo = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.SSize.t C.Errno.t
Socket.sendVec = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.sendVecTo = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.SSize.t C.Errno.t
Socket.shutdown = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.sockAddrStorageLen = _const : C.Size.t
Stdio.print = _import : String8.t -> unit
Time.getTimeOfDay = _import : unit -> C.Int.t
Time.sec = _import : unit -> C.Time.t
Time.usec = _import : unit -> C.SUSeconds.t
Windows.Process.create = _import : NullString8.t * NullString8.t * NullString8.t * C.Fd.t * C.Fd.t * C.Fd.t -> C.PId.t C.Errno.t
Windows.Process.terminate = _import : C.PId.t * C.Signal.t -> C.Int.t C.Errno.t
