CommandLine.argc = _symbol : C.Int.t
CommandLine.argv = _symbol : C.StringArray.t
CommandLine.commandName = _symbol : C.String.t
Date.Tm.getHour = _import : unit -> C.Int.t
Date.Tm.getIsDst = _import : unit -> C.Int.t
Date.Tm.getMDay = _import : unit -> C.Int.t
Date.Tm.getMin = _import : unit -> C.Int.t
Date.Tm.getMon = _import : unit -> C.Int.t
Date.Tm.getSec = _import : unit -> C.Int.t
Date.Tm.getWDay = _import : unit -> C.Int.t
Date.Tm.getYDay = _import : unit -> C.Int.t
Date.Tm.getYear = _import : unit -> C.Int.t
Date.Tm.setHour = _import : C.Int.t -> unit
Date.Tm.setIsDst = _import : C.Int.t -> unit
Date.Tm.setMDay = _import : C.Int.t -> unit
Date.Tm.setMin = _import : C.Int.t -> unit
Date.Tm.setMon = _import : C.Int.t -> unit
Date.Tm.setSec = _import : C.Int.t -> unit
Date.Tm.setWDay = _import : C.Int.t -> unit
Date.Tm.setYDay = _import : C.Int.t -> unit
Date.Tm.setYear = _import : C.Int.t -> unit
Date.gmTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.localOffset = _import : unit -> C.Double.t
Date.localTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.mkTime = _import : unit -> C.Time.t C.Errno.t
Date.strfTime = _import : String8.t * C.Size.t * NullString8.t -> C.Size.t
MLton.Itimer.PROF = _const : int
MLton.Itimer.REAL = _const : int
MLton.Itimer.VIRTUAL = _const : int
MLton.Itimer.set = _import : C.Int.t * C.Time.t * C.SUSeconds.t * C.Time.t * C.SUSeconds.t -> C.Int.t C.Errno.t
MLton.Rlimit.AS = _const : C.Int.t
MLton.Rlimit.CORE = _const : C.Int.t
MLton.Rlimit.CPU = _const : C.Int.t
MLton.Rlimit.DATA = _const : C.Int.t
MLton.Rlimit.FSIZE = _const : C.Int.t
MLton.Rlimit.INFINITY = _const : C.RLim.t
MLton.Rlimit.NOFILE = _const : C.Int.t
MLton.Rlimit.STACK = _const : C.Int.t
MLton.Rlimit.get = _import : C.Int.t -> C.Int.t C.Errno.t
MLton.Rlimit.getHard = _import : unit -> C.RLim.t
MLton.Rlimit.getSoft = _import : unit -> C.RLim.t
MLton.Rlimit.set = _import : C.Int.t * C.RLim.t * C.RLim.t -> C.Int.t C.Errno.t
MLton.Rusage.children_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.children_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.getrusage = _import : GCState.t -> unit
MLton.Rusage.self_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.self_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_utime_usec = _import : unit -> C.SUSeconds.t
Net.htonl = _import : Word32.t -> Word32.t
Net.htons = _import : Word16.t -> Word16.t
Net.ntohl = _import : Word32.t -> Word32.t
Net.ntohs = _import : Word16.t -> Word16.t
NetHostDB.INADDR_ANY = _const : C.Int.t
NetHostDB.getByAddress = _import : Word8.t vector * C.Socklen.t -> Bool.t
NetHostDB.getByName = _import : NullString8.t -> C.Int.t C.HErrno.t
NetHostDB.getEntryAddrType = _import : unit -> C.Int.t
NetHostDB.getEntryAddrsN = _import : C.Int.t * Word8.t array -> unit
NetHostDB.getEntryAddrsNum = _import : unit -> C.Int.t
NetHostDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetHostDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetHostDB.getEntryLength = _import : unit -> C.Int.t
NetHostDB.getEntryName = _import : unit -> C.String.t
NetHostDB.getHostName = _import : Char8.t array * C.Size.t -> Bool.t
NetHostDB.inAddrLen = _const : C.Size.t
NetProtDB.getByName = _import : NullString8.t -> Bool.t
NetProtDB.getByNumber = _import : C.Int.t -> Bool.t
NetProtDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetProtDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetProtDB.getEntryName = _import : unit -> C.String.t
NetProtDB.getEntryProto = _import : unit -> C.Int.t
NetServDB.getByName = _import : NullString8.t * NullString8.t -> Bool.t
NetServDB.getByNameNull = _import : NullString8.t -> Bool.t
NetServDB.getByPort = _import : C.Int.t * NullString8.t -> Bool.t
NetServDB.getByPortNull = _import : C.Int.t -> Bool.t
NetServDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetServDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetServDB.getEntryName = _import : unit -> C.String.t
NetServDB.getEntryPort = _import : unit -> C.Int.t
NetServDB.getEntryProto = _import : unit -> C.String.t
OS.IO.POLLIN = _const : C.Short.t
OS.IO.POLLOUT = _const : C.Short.t
OS.IO.POLLPRI = _const : C.Short.t
OS.IO.poll = _import : C.Fd.t vector * C.Short.t vector * C.NFds.t * C.Int.t * C.Short.t array -> C.Int.t C.Errno.t
Socket.AF.INET = _const : C.Int.t
Socket.AF.INET6 = _const : C.Int.t
Socket.AF.UNIX = _const : C.Int.t
Socket.AF.UNSPEC = _const : C.Int.t
Socket.Clt.FIONBIO = _const : C.Int.t
Socket.Clt.FIONREAD = _const : C.Int.t
Socket.Clt.SIOCATMARK = _const : C.Int.t
Socket.Ctl.SOL_SOCKET = _const : C.Int.t
Socket.Ctl.SO_ACCEPTCONN = _const : C.Int.t
Socket.Ctl.SO_BROADCAST = _const : C.Int.t
Socket.Ctl.SO_DEBUG = _const : C.Int.t
Socket.Ctl.SO_DONTROUTE = _const : C.Int.t
Socket.Ctl.SO_ERROR = _const : C.Int.t
Socket.Ctl.SO_KEEPALIVE = _const : C.Int.t
Socket.Ctl.SO_LINGER = _const : C.Int.t
Socket.Ctl.SO_OOBINLINE = _const : C.Int.t
Socket.Ctl.SO_RCVBUF = _const : C.Int.t
Socket.Ctl.SO_RCVLOWAT = _const : C.Int.t
Socket.Ctl.SO_RCVTIMEO = _const : C.Int.t
Socket.Ctl.SO_REUSEADDR = _const : C.Int.t
Socket.Ctl.SO_SNDBUF = _const : C.Int.t
Socket.Ctl.SO_SNDLOWAT = _const : C.Int.t
Socket.Ctl.SO_SNDTIMEO = _const : C.Int.t
Socket.Ctl.SO_TYPE = _const : C.Int.t
Socket.Ctl.getIOCtl = _import : C.Sock.t * C.Int.t * Word8.t array -> C.Int.t C.Errno.t
Socket.Ctl.getPeerName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.setIOCtl = _import : C.Sock.t * C.Int.t * Word8.t vector -> C.Int.t C.Errno.t
Socket.Ctl.setSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.GenericSock.socket = _import : C.Int.t * C.Int.t * C.Int.t -> C.Int.t C.Errno.t
Socket.GenericSock.socketPair = _import : C.Int.t * C.Int.t * C.Int.t * C.Int.t array -> C.Int.t C.Errno.t
Socket.INetSock.Ctl.IPPROTO_TCP = _const : C.Int.t
Socket.INetSock.Ctl.TCP_NODELAY = _const : C.Int.t
Socket.INetSock.fromAddr = _import : Word8.t vector -> unit
Socket.INetSock.getInAddr = _import : Word8.t array -> unit
Socket.INetSock.getPort = _import : unit -> C.Int.t
Socket.INetSock.toAddr = _import : Word8.t vector * C.Int.t * Word8.t array * C.Socklen.t ref -> unit
Socket.SOCK.DGRAM = _const : C.Int.t
Socket.SOCK.RAW = _const : C.Int.t
Socket.SOCK.SEQPACKET = _const : C.Int.t
Socket.SOCK.STREAM = _const : C.Int.t
Socket.UnixSock.fromAddr = _import : Word8.t array * Char8.t array * C.Size.t -> unit
Socket.UnixSock.pathLen = _import : Word8.t array -> C.Size.t
Socket.UnixSock.toAddr = _import : NullString8.t * C.Size.t * Word8.t array * C.Socklen.t ref -> unit
Socket.accept = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.bind = _import : C.Sock.t * Word8.t array * C.Socklen.t -> C.Int.t C.Errno.t
Socket.close = _import : C.Sock.t -> C.Int.t C.Errno.t
Socket.connect = _import : C.Sock.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.familyOfAddr = _import : Word8.t vector -> C.Int.t
Socket.listen = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.recv = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.recvFrom = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.SSize.t C.Errno.t
Socket.send = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.sendTo = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.SSize.t C.Errno.t
Socket.shutdown = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.sockAddrStorageLen = _const : C.Size.t
Stdio.print = _import : String8.t -> unit
Time.getTimeOfDay = _import : unit -> C.Int.t
Time.sec = _import : unit -> C.Time.t
Time.usec = _import : unit -> C.SUSeconds.t
