CommandLine.argc = _symbol : C.Int.t
CommandLine.argv = _symbol : C.StringArray.t
CommandLine.commandName = _symbol : C.String.t
Date.Tm.getHour = _import : unit -> C.Int.t
Date.Tm.getIsDst = _import : unit -> C.Int.t
Date.Tm.getMDay = _import : unit -> C.Int.t
Date.Tm.getMin = _import : unit -> C.Int.t
Date.Tm.getMon = _import : unit -> C.Int.t
Date.Tm.getSec = _import : unit -> C.Int.t
Date.Tm.getWDay = _import : unit -> C.Int.t
Date.Tm.getYDay = _import : unit -> C.Int.t
Date.Tm.getYear = _import : unit -> C.Int.t
Date.Tm.setHour = _import : C.Int.t -> unit
Date.Tm.setIsDst = _import : C.Int.t -> unit
Date.Tm.setMDay = _import : C.Int.t -> unit
Date.Tm.setMin = _import : C.Int.t -> unit
Date.Tm.setMon = _import : C.Int.t -> unit
Date.Tm.setSec = _import : C.Int.t -> unit
Date.Tm.setWDay = _import : C.Int.t -> unit
Date.Tm.setYDay = _import : C.Int.t -> unit
Date.Tm.setYear = _import : C.Int.t -> unit
Date.gmTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.localOffset = _import : unit -> C.Double.t
Date.localTime = _import : C.Time.t ref -> C.Int.t C.Errno.t
Date.mkTime = _import : unit -> C.Time.t C.Errno.t
Date.strfTime = _import : Char8.t array * C.Size.t * NullString8.t -> C.Size.t
IEEEReal.RoundingMode.FE_DOWNWARD = _const : C.Int.t
IEEEReal.RoundingMode.FE_NOSUPPORT = _const : C.Int.t
IEEEReal.RoundingMode.FE_TONEAREST = _const : C.Int.t
IEEEReal.RoundingMode.FE_TOWARDZERO = _const : C.Int.t
IEEEReal.RoundingMode.FE_UPWARD = _const : C.Int.t
IEEEReal.getRoundingMode = _import : unit -> C.Int.t
IEEEReal.setRoundingMode = _import : C.Int.t -> unit
MLton.Itimer.PROF = _const : C.Int.t
MLton.Itimer.REAL = _const : C.Int.t
MLton.Itimer.VIRTUAL = _const : C.Int.t
MLton.Itimer.set = _import : C.Int.t * C.Time.t * C.SUSeconds.t * C.Time.t * C.SUSeconds.t -> C.Int.t C.Errno.t
MLton.Rlimit.AS = _const : C.Int.t
MLton.Rlimit.CORE = _const : C.Int.t
MLton.Rlimit.CPU = _const : C.Int.t
MLton.Rlimit.DATA = _const : C.Int.t
MLton.Rlimit.FSIZE = _const : C.Int.t
MLton.Rlimit.INFINITY = _const : C.RLim.t
MLton.Rlimit.NOFILE = _const : C.Int.t
MLton.Rlimit.STACK = _const : C.Int.t
MLton.Rlimit.get = _import : C.Int.t -> C.Int.t C.Errno.t
MLton.Rlimit.getHard = _import : unit -> C.RLim.t
MLton.Rlimit.getSoft = _import : unit -> C.RLim.t
MLton.Rlimit.set = _import : C.Int.t * C.RLim.t * C.RLim.t -> C.Int.t C.Errno.t
MLton.Rusage.children_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.children_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.children_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.gc_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.gc_utime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.getrusage = _import : GCState.t -> unit
MLton.Rusage.self_stime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_stime_usec = _import : unit -> C.SUSeconds.t
MLton.Rusage.self_utime_sec = _import : unit -> C.Time.t
MLton.Rusage.self_utime_usec = _import : unit -> C.SUSeconds.t
Net.htonl = _import : Word32.t -> Word32.t
Net.htons = _import : Word16.t -> Word16.t
Net.ntohl = _import : Word32.t -> Word32.t
Net.ntohs = _import : Word16.t -> Word16.t
NetHostDB.INADDR_ANY = _const : C.Int.t
NetHostDB.getByAddress = _import : Word8.t vector * C.Socklen.t -> Bool.t
NetHostDB.getByName = _import : NullString8.t -> C.Int.t C.HErrno.t
NetHostDB.getEntryAddrType = _import : unit -> C.Int.t
NetHostDB.getEntryAddrsN = _import : C.Int.t * Word8.t array -> unit
NetHostDB.getEntryAddrsNum = _import : unit -> C.Int.t
NetHostDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetHostDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetHostDB.getEntryLength = _import : unit -> C.Int.t
NetHostDB.getEntryName = _import : unit -> C.String.t
NetHostDB.getHostName = _import : Char8.t array * C.Size.t -> Bool.t
NetHostDB.inAddrLen = _const : C.Size.t
NetProtDB.getByName = _import : NullString8.t -> Bool.t
NetProtDB.getByNumber = _import : C.Int.t -> Bool.t
NetProtDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetProtDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetProtDB.getEntryName = _import : unit -> C.String.t
NetProtDB.getEntryProto = _import : unit -> C.Int.t
NetServDB.getByName = _import : NullString8.t * NullString8.t -> Bool.t
NetServDB.getByNameNull = _import : NullString8.t -> Bool.t
NetServDB.getByPort = _import : C.Int.t * NullString8.t -> Bool.t
NetServDB.getByPortNull = _import : C.Int.t -> Bool.t
NetServDB.getEntryAliasesN = _import : C.Int.t -> C.String.t
NetServDB.getEntryAliasesNum = _import : unit -> C.Int.t
NetServDB.getEntryName = _import : unit -> C.String.t
NetServDB.getEntryPort = _import : unit -> C.Int.t
NetServDB.getEntryProto = _import : unit -> C.String.t
OS.IO.POLLIN = _const : C.Short.t
OS.IO.POLLOUT = _const : C.Short.t
OS.IO.POLLPRI = _const : C.Short.t
OS.IO.poll = _import : C.Fd.t vector * C.Short.t vector * C.NFds.t * C.Int.t * C.Short.t array -> C.Int.t C.Errno.t
Posix.Error.E2BIG = _const : C.Int.t
Posix.Error.EACCES = _const : C.Int.t
Posix.Error.EADDRINUSE = _const : C.Int.t
Posix.Error.EADDRNOTAVAIL = _const : C.Int.t
Posix.Error.EAFNOSUPPORT = _const : C.Int.t
Posix.Error.EAGAIN = _const : C.Int.t
Posix.Error.EALREADY = _const : C.Int.t
Posix.Error.EBADF = _const : C.Int.t
Posix.Error.EBADMSG = _const : C.Int.t
Posix.Error.EBUSY = _const : C.Int.t
Posix.Error.ECANCELED = _const : C.Int.t
Posix.Error.ECHILD = _const : C.Int.t
Posix.Error.ECONNABORTED = _const : C.Int.t
Posix.Error.ECONNREFUSED = _const : C.Int.t
Posix.Error.ECONNRESET = _const : C.Int.t
Posix.Error.EDEADLK = _const : C.Int.t
Posix.Error.EDESTADDRREQ = _const : C.Int.t
Posix.Error.EDOM = _const : C.Int.t
Posix.Error.EDQUOT = _const : C.Int.t
Posix.Error.EEXIST = _const : C.Int.t
Posix.Error.EFAULT = _const : C.Int.t
Posix.Error.EFBIG = _const : C.Int.t
Posix.Error.EHOSTUNREACH = _const : C.Int.t
Posix.Error.EIDRM = _const : C.Int.t
Posix.Error.EILSEQ = _const : C.Int.t
Posix.Error.EINPROGRESS = _const : C.Int.t
Posix.Error.EINTR = _const : C.Int.t
Posix.Error.EINVAL = _const : C.Int.t
Posix.Error.EIO = _const : C.Int.t
Posix.Error.EISCONN = _const : C.Int.t
Posix.Error.EISDIR = _const : C.Int.t
Posix.Error.ELOOP = _const : C.Int.t
Posix.Error.EMFILE = _const : C.Int.t
Posix.Error.EMLINK = _const : C.Int.t
Posix.Error.EMSGSIZE = _const : C.Int.t
Posix.Error.EMULTIHOP = _const : C.Int.t
Posix.Error.ENAMETOOLONG = _const : C.Int.t
Posix.Error.ENETDOWN = _const : C.Int.t
Posix.Error.ENETRESET = _const : C.Int.t
Posix.Error.ENETUNREACH = _const : C.Int.t
Posix.Error.ENFILE = _const : C.Int.t
Posix.Error.ENOBUFS = _const : C.Int.t
Posix.Error.ENODATA = _const : C.Int.t
Posix.Error.ENODEV = _const : C.Int.t
Posix.Error.ENOENT = _const : C.Int.t
Posix.Error.ENOEXEC = _const : C.Int.t
Posix.Error.ENOLCK = _const : C.Int.t
Posix.Error.ENOLINK = _const : C.Int.t
Posix.Error.ENOMEM = _const : C.Int.t
Posix.Error.ENOMSG = _const : C.Int.t
Posix.Error.ENOPROTOOPT = _const : C.Int.t
Posix.Error.ENOSPC = _const : C.Int.t
Posix.Error.ENOSR = _const : C.Int.t
Posix.Error.ENOSTR = _const : C.Int.t
Posix.Error.ENOSYS = _const : C.Int.t
Posix.Error.ENOTCONN = _const : C.Int.t
Posix.Error.ENOTDIR = _const : C.Int.t
Posix.Error.ENOTEMPTY = _const : C.Int.t
Posix.Error.ENOTSOCK = _const : C.Int.t
Posix.Error.ENOTSUP = _const : C.Int.t
Posix.Error.ENOTTY = _const : C.Int.t
Posix.Error.ENXIO = _const : C.Int.t
Posix.Error.EOPNOTSUPP = _const : C.Int.t
Posix.Error.EOVERFLOW = _const : C.Int.t
Posix.Error.EPERM = _const : C.Int.t
Posix.Error.EPIPE = _const : C.Int.t
Posix.Error.EPROTO = _const : C.Int.t
Posix.Error.EPROTONOSUPPORT = _const : C.Int.t
Posix.Error.EPROTOTYPE = _const : C.Int.t
Posix.Error.ERANGE = _const : C.Int.t
Posix.Error.EROFS = _const : C.Int.t
Posix.Error.ESPIPE = _const : C.Int.t
Posix.Error.ESRCH = _const : C.Int.t
Posix.Error.ESTALE = _const : C.Int.t
Posix.Error.ETIME = _const : C.Int.t
Posix.Error.ETIMEDOUT = _const : C.Int.t
Posix.Error.ETXTBSY = _const : C.Int.t
Posix.Error.EWOULDBLOCK = _const : C.Int.t
Posix.Error.EXDEV = _const : C.Int.t
Posix.Error.clearErrno = _import : unit -> unit
Posix.Error.getErrno = _import : unit -> C.Int.t
Posix.Error.strError = _import : C.Int.t -> C.String.t
Posix.TTY.B0 = _const : C.Speed.t
Posix.TTY.B110 = _const : C.Speed.t
Posix.TTY.B1200 = _const : C.Speed.t
Posix.TTY.B134 = _const : C.Speed.t
Posix.TTY.B150 = _const : C.Speed.t
Posix.TTY.B1800 = _const : C.Speed.t
Posix.TTY.B19200 = _const : C.Speed.t
Posix.TTY.B200 = _const : C.Speed.t
Posix.TTY.B2400 = _const : C.Speed.t
Posix.TTY.B300 = _const : C.Speed.t
Posix.TTY.B38400 = _const : C.Speed.t
Posix.TTY.B4800 = _const : C.Speed.t
Posix.TTY.B50 = _const : C.Speed.t
Posix.TTY.B600 = _const : C.Speed.t
Posix.TTY.B75 = _const : C.Speed.t
Posix.TTY.B9600 = _const : C.Speed.t
Posix.TTY.C.CLOCAL = _const : C.TCFlag.t
Posix.TTY.C.CREAD = _const : C.TCFlag.t
Posix.TTY.C.CS5 = _const : C.TCFlag.t
Posix.TTY.C.CS6 = _const : C.TCFlag.t
Posix.TTY.C.CS7 = _const : C.TCFlag.t
Posix.TTY.C.CS8 = _const : C.TCFlag.t
Posix.TTY.C.CSIZE = _const : C.TCFlag.t
Posix.TTY.C.CSTOPB = _const : C.TCFlag.t
Posix.TTY.C.HUPCL = _const : C.TCFlag.t
Posix.TTY.C.PARENB = _const : C.TCFlag.t
Posix.TTY.C.PARODD = _const : C.TCFlag.t
Posix.TTY.I.BRKINT = _const : C.TCFlag.t
Posix.TTY.I.ICRNL = _const : C.TCFlag.t
Posix.TTY.I.IGNBRK = _const : C.TCFlag.t
Posix.TTY.I.IGNCR = _const : C.TCFlag.t
Posix.TTY.I.IGNPAR = _const : C.TCFlag.t
Posix.TTY.I.INLCR = _const : C.TCFlag.t
Posix.TTY.I.INPCK = _const : C.TCFlag.t
Posix.TTY.I.ISTRIP = _const : C.TCFlag.t
Posix.TTY.I.IXANY = _const : C.TCFlag.t
Posix.TTY.I.IXOFF = _const : C.TCFlag.t
Posix.TTY.I.IXON = _const : C.TCFlag.t
Posix.TTY.I.PARMRK = _const : C.TCFlag.t
Posix.TTY.L.ECHO = _const : C.TCFlag.t
Posix.TTY.L.ECHOE = _const : C.TCFlag.t
Posix.TTY.L.ECHOK = _const : C.TCFlag.t
Posix.TTY.L.ECHONL = _const : C.TCFlag.t
Posix.TTY.L.ICANON = _const : C.TCFlag.t
Posix.TTY.L.IEXTEN = _const : C.TCFlag.t
Posix.TTY.L.ISIG = _const : C.TCFlag.t
Posix.TTY.L.NOFLSH = _const : C.TCFlag.t
Posix.TTY.L.TOSTOP = _const : C.TCFlag.t
Posix.TTY.O.BS0 = _const : C.TCFlag.t
Posix.TTY.O.BS1 = _const : C.TCFlag.t
Posix.TTY.O.BSDLY = _const : C.TCFlag.t
Posix.TTY.O.CR0 = _const : C.TCFlag.t
Posix.TTY.O.CR1 = _const : C.TCFlag.t
Posix.TTY.O.CR2 = _const : C.TCFlag.t
Posix.TTY.O.CR3 = _const : C.TCFlag.t
Posix.TTY.O.CRDLY = _const : C.TCFlag.t
Posix.TTY.O.FF0 = _const : C.TCFlag.t
Posix.TTY.O.FF1 = _const : C.TCFlag.t
Posix.TTY.O.FFDLY = _const : C.TCFlag.t
Posix.TTY.O.NL0 = _const : C.TCFlag.t
Posix.TTY.O.NL1 = _const : C.TCFlag.t
Posix.TTY.O.NLDLY = _const : C.TCFlag.t
Posix.TTY.O.OCRNL = _const : C.TCFlag.t
Posix.TTY.O.OFILL = _const : C.TCFlag.t
Posix.TTY.O.ONLCR = _const : C.TCFlag.t
Posix.TTY.O.ONLRET = _const : C.TCFlag.t
Posix.TTY.O.ONOCR = _const : C.TCFlag.t
Posix.TTY.O.OPOST = _const : C.TCFlag.t
Posix.TTY.O.TAB0 = _const : C.TCFlag.t
Posix.TTY.O.TAB1 = _const : C.TCFlag.t
Posix.TTY.O.TAB2 = _const : C.TCFlag.t
Posix.TTY.O.TAB3 = _const : C.TCFlag.t
Posix.TTY.O.TABDLY = _const : C.TCFlag.t
Posix.TTY.O.VT0 = _const : C.TCFlag.t
Posix.TTY.O.VT1 = _const : C.TCFlag.t
Posix.TTY.O.VTDLY = _const : C.TCFlag.t
Posix.TTY.TC.TCIFLUSH = _const : C.Int.t
Posix.TTY.TC.TCIOFF = _const : C.Int.t
Posix.TTY.TC.TCIOFLUSH = _const : C.Int.t
Posix.TTY.TC.TCION = _const : C.Int.t
Posix.TTY.TC.TCOFLUSH = _const : C.Int.t
Posix.TTY.TC.TCOOFF = _const : C.Int.t
Posix.TTY.TC.TCOON = _const : C.Int.t
Posix.TTY.TC.TCSADRAIN = _const : C.Int.t
Posix.TTY.TC.TCSAFLUSH = _const : C.Int.t
Posix.TTY.TC.TCSANOW = _const : C.Int.t
Posix.TTY.TC.drain = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.TTY.TC.flow = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.flush = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.getattr = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.TTY.TC.getpgrp = _import : C.Fd.t -> C.PId.t C.Errno.t
Posix.TTY.TC.sendbreak = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.setattr = _import : C.Fd.t * C.Int.t -> C.Int.t C.Errno.t
Posix.TTY.TC.setpgrp = _import : C.Fd.t * C.PId.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.cfGetISpeed = _import : unit -> C.Speed.t
Posix.TTY.Termios.cfGetOSpeed = _import : unit -> C.Speed.t
Posix.TTY.Termios.cfSetISpeed = _import : C.Speed.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.cfSetOSpeed = _import : C.Speed.t -> C.Int.t C.Errno.t
Posix.TTY.Termios.getCCN = _import : C.Int.t -> C.CC.t
Posix.TTY.Termios.getCFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getIFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getLFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.getOFlag = _import : unit -> C.TCFlag.t
Posix.TTY.Termios.setCCN = _import : C.Int.t * C.CC.t -> unit
Posix.TTY.Termios.setCFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setIFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setLFlag = _import : C.TCFlag.t -> unit
Posix.TTY.Termios.setOFlag = _import : C.TCFlag.t -> unit
Posix.TTY.V.NCCS = _const : C.Int.t
Posix.TTY.V.VEOF = _const : C.Int.t
Posix.TTY.V.VEOL = _const : C.Int.t
Posix.TTY.V.VERASE = _const : C.Int.t
Posix.TTY.V.VINTR = _const : C.Int.t
Posix.TTY.V.VKILL = _const : C.Int.t
Posix.TTY.V.VMIN = _const : C.Int.t
Posix.TTY.V.VQUIT = _const : C.Int.t
Posix.TTY.V.VSTART = _const : C.Int.t
Posix.TTY.V.VSTOP = _const : C.Int.t
Posix.TTY.V.VSUSP = _const : C.Int.t
Posix.TTY.V.VTIME = _const : C.Int.t
Socket.AF.INET = _const : C.Int.t
Socket.AF.INET6 = _const : C.Int.t
Socket.AF.UNIX = _const : C.Int.t
Socket.AF.UNSPEC = _const : C.Int.t
Socket.Clt.FIONBIO = _const : C.Int.t
Socket.Clt.FIONREAD = _const : C.Int.t
Socket.Clt.SIOCATMARK = _const : C.Int.t
Socket.Ctl.SOL_SOCKET = _const : C.Int.t
Socket.Ctl.SO_ACCEPTCONN = _const : C.Int.t
Socket.Ctl.SO_BROADCAST = _const : C.Int.t
Socket.Ctl.SO_DEBUG = _const : C.Int.t
Socket.Ctl.SO_DONTROUTE = _const : C.Int.t
Socket.Ctl.SO_ERROR = _const : C.Int.t
Socket.Ctl.SO_KEEPALIVE = _const : C.Int.t
Socket.Ctl.SO_LINGER = _const : C.Int.t
Socket.Ctl.SO_OOBINLINE = _const : C.Int.t
Socket.Ctl.SO_RCVBUF = _const : C.Int.t
Socket.Ctl.SO_RCVLOWAT = _const : C.Int.t
Socket.Ctl.SO_RCVTIMEO = _const : C.Int.t
Socket.Ctl.SO_REUSEADDR = _const : C.Int.t
Socket.Ctl.SO_SNDBUF = _const : C.Int.t
Socket.Ctl.SO_SNDLOWAT = _const : C.Int.t
Socket.Ctl.SO_SNDTIMEO = _const : C.Int.t
Socket.Ctl.SO_TYPE = _const : C.Int.t
Socket.Ctl.getIOCtl = _import : C.Sock.t * C.Int.t * Word8.t array -> C.Int.t C.Errno.t
Socket.Ctl.getPeerName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockName = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.getSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.Ctl.setIOCtl = _import : C.Sock.t * C.Int.t * Word8.t vector -> C.Int.t C.Errno.t
Socket.Ctl.setSockOpt = _import : C.Sock.t * C.Int.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.GenericSock.socket = _import : C.Int.t * C.Int.t * C.Int.t -> C.Int.t C.Errno.t
Socket.GenericSock.socketPair = _import : C.Int.t * C.Int.t * C.Int.t * C.Int.t array -> C.Int.t C.Errno.t
Socket.INetSock.Ctl.IPPROTO_TCP = _const : C.Int.t
Socket.INetSock.Ctl.TCP_NODELAY = _const : C.Int.t
Socket.INetSock.fromAddr = _import : Word8.t vector -> unit
Socket.INetSock.getInAddr = _import : Word8.t array -> unit
Socket.INetSock.getPort = _import : unit -> C.Int.t
Socket.INetSock.toAddr = _import : Word8.t vector * C.Int.t * Word8.t array * C.Socklen.t ref -> unit
Socket.SOCK.DGRAM = _const : C.Int.t
Socket.SOCK.RAW = _const : C.Int.t
Socket.SOCK.SEQPACKET = _const : C.Int.t
Socket.SOCK.STREAM = _const : C.Int.t
Socket.UnixSock.fromAddr = _import : Word8.t array * Char8.t array * C.Size.t -> unit
Socket.UnixSock.pathLen = _import : Word8.t array -> C.Size.t
Socket.UnixSock.toAddr = _import : NullString8.t * C.Size.t * Word8.t array * C.Socklen.t ref -> unit
Socket.accept = _import : C.Sock.t * Word8.t array * C.Socklen.t ref -> C.Int.t C.Errno.t
Socket.bind = _import : C.Sock.t * Word8.t array * C.Socklen.t -> C.Int.t C.Errno.t
Socket.close = _import : C.Sock.t -> C.Int.t C.Errno.t
Socket.connect = _import : C.Sock.t * Word8.t vector * C.Socklen.t -> C.Int.t C.Errno.t
Socket.familyOfAddr = _import : Word8.t vector -> C.Int.t
Socket.listen = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.recv = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.recvFrom = _import : C.Sock.t * Word8.t array * C.Int.t * C.Size.t * C.Int.t * Word8.t array * C.Socklen.t ref -> C.SSize.t C.Errno.t
Socket.send = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t -> C.SSize.t C.Errno.t
Socket.sendTo = _import : C.Sock.t * Word8.t vector * C.Int.t * C.Size.t * C.Int.t * Word8.t vector * C.Socklen.t -> C.SSize.t C.Errno.t
Socket.shutdown = _import : C.Sock.t * C.Int.t -> C.Int.t C.Errno.t
Socket.sockAddrStorageLen = _const : C.Size.t
Stdio.print = _import : String8.t -> unit
Time.getTimeOfDay = _import : unit -> C.Int.t
Time.sec = _import : unit -> C.Time.t
Time.usec = _import : unit -> C.SUSeconds.t
Posix.FileSys.Dirstream.closeDir = _import : C.DirP.t -> C.Int.t C.Errno.t
Posix.FileSys.Dirstream.openDir = _import : NullString8.t -> C.DirP.t C.Errno.t
Posix.FileSys.Dirstream.readDir = _import : C.DirP.t -> C.String.t C.Errno.t
Posix.FileSys.Dirstream.rewindDir = _import : C.DirP.t -> unit
Posix.FileSys.ST.isDir = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isChr = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isBlk = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isReg = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isFIFO = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isLink = _import : C.Mode.t -> Bool.t
Posix.FileSys.ST.isSock = _import : C.Mode.t -> Bool.t
Posix.FileSys.Stat.getDev = _import : unit -> C.Dev.t
Posix.FileSys.Stat.getINo = _import : unit -> C.INo.t
Posix.FileSys.Stat.getMode = _import : unit -> C.Mode.t
Posix.FileSys.Stat.getNLink = _import : unit -> C.NLink.t
Posix.FileSys.Stat.getUId = _import : unit -> C.UId.t
Posix.FileSys.Stat.getGId = _import : unit -> C.GId.t
Posix.FileSys.Stat.getRDev = _import : unit -> C.Dev.t
Posix.FileSys.Stat.getSize = _import : unit -> C.Off.t
Posix.FileSys.Stat.getATime = _import : unit -> C.Time.t
Posix.FileSys.Stat.getCTime = _import : unit -> C.Time.t
Posix.FileSys.Stat.getMTime = _import : unit -> C.Time.t
Posix.FileSys.Stat.fstat = _import : C.Fd.t -> C.Int.t C.Errno.t
Posix.FileSys.Stat.lstat = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.Stat.stat = _import : NullString8.t -> C.Int.t C.Errno.t
Posix.FileSys.Stat.getBlkSize = _import : unit -> C.BlkSize.t
Posix.FileSys.Stat.getBlkCnt = _import : unit -> C.BlkCnt.t
