<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta name="robots" content="index,nofollow">



<title>MLBasisSyntaxAndSemantics - MLton Standard ML Compiler (SML Compiler)</title>
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="all" href="common.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="screen" href="screen.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="print" href="print.css">


<link rel="Start" href="Home">


</head>

<body lang="en" dir="ltr">

<table bgcolor = lightblue cellspacing = 0 style = "border: 0px;" width = 100%>
  <tr>
    <td style = "
		border: 0px;
		color: darkblue; 
		font-size: 150%;
		text-align: left;">
      <a class = mltona href="Home">MLton 20051115</a>
    <td style = "
		border: 0px;
		font-size: 150%;
		text-align: center;
		width: 50%;">
      MLBasisSyntaxAndSemantics
    <td style = "
		border: 0px;
		text-align: right;">
      <table cellspacing = 0 style = "border: 0px">
        <tr style = "vertical-align: middle;">
      </table>
  <tr style = "background-color: white;">
    <td colspan = 3
	style = "
		border: 0px;
		font-size:70%;
		text-align: right;">
      <a href = "Home">Home</a>
      &nbsp;<a href = "Index">Index</a>
      &nbsp;
</table>
<div id="content" lang="en" dir="ltr">
An <a href="MLBasis">ML Basis</a> (MLB) file describes a library or program.  An MLB file should have the <tt>.mlb</tt> suffix and should contain a basis declaration, which must be one of the following forms. 
    <ul>

    <li>
<p>
 <tt>basis&nbsp;</tt><em>basid<tt>&nbsp;=&nbsp;</tt>basexp</em>  (<tt>and&nbsp;</tt><em>basid</em><tt>&nbsp;=&nbsp;</tt><em>basexp</em>)* 
</p>
</li>
    <li>
<p>
 <tt>open&nbsp;</tt><em>basid<sub>1</sub></em> ... <em>basid<sub>n</sub></em> 
</p>
</li>
    <li>
<p>
 <tt>local&nbsp;</tt><em>basdec</em><tt>&nbsp;in&nbsp;</tt><em>basdec</em><tt>&nbsp;end</tt> 
</p>
</li>
    <li>
<p>
 <em>basdec</em> [<tt>;</tt>] <em>basdec</em> 
</p>
</li>
    <li>
<p>
 <tt>structure&nbsp;</tt><em>strid</em> [<tt>=&nbsp;</tt><em>strid</em>]  (<tt>and&nbsp;</tt><em>strid</em>[<tt>=&nbsp;</tt><em>strid</em>])* 
</p>
</li>
    <li>
<p>
 <tt>signature&nbsp;</tt><em>sigid</em> [<tt>=&nbsp;</tt><em>sigid</em>]  (<tt>and&nbsp;</tt><em>sigid</em> [<tt>=&nbsp;</tt><em>sigid</em>])* 
</p>
</li>
    <li>
<p>
 <tt>functor&nbsp;</tt><em>funid</em> [<tt>=&nbsp;</tt><em>funid</em>]  (<tt>and&nbsp;</tt><em>funid</em> [<tt>=&nbsp;</tt><em>funid</em>])* 
</p>
</li>
    <li>
<p>
 <em>path</em><tt>.sml</tt> 
</p>
</li>
    <li>
<p>
 <em>path</em><tt>.mlb</tt> 
</p>
</li>
    <li>
<p>
 <tt>ann&nbsp;</tt><tt>"</tt><em>ann</em><tt>"</tt><tt>&nbsp;in&nbsp;</tt><em>basdec</em><tt>&nbsp;end</tt> 
</p>
</li>

    </ul>


<p>
Files of the form <em>path</em><tt>.sml</tt> and <em>path</em><tt>.mlb</tt> can  be quoted to include non-alphanumeric characters -- see below. 
</p>
<p>
A basis expression <em>basexp</em> must be of one the following forms. 
</p>

    <ul>

    <li>
<p>
 <tt>bas&nbsp;</tt><em>basdec</em><tt>&nbsp;end</tt> 
</p>
</li>
    <li>
<p>
 <em>basid</em> 
</p>
</li>
    <li>
<p>
 <tt>let&nbsp;</tt><em>basdec</em><tt>&nbsp;in&nbsp;</tt><em>basexp</em><tt>&nbsp;end</tt> 
</p>
</li>

    </ul>


<p>
Nested SML-style comments (enclosed with <tt>(*</tt> and <tt>*)</tt>) are ignored (but <a href="LineDirective">LineDirective</a>s are recognized). 
</p>
<p>
Conceptually, a basis file is elaborated starting in an empty basis, and each basis declaration produces a basis as a result.  Basis expressions and basis identifiers allow binding a basis to a name; this, in turn, allows fine-grained specification of dependencies, without the need for additional MLB files.  Local declarations provide name hiding.  Sequencing of basis declarations merges the bases. Structure, signature, and functor declarations bind a module in the current basis. 
</p>
<p>
References to SML source files cause the file to be elaborated in the "current" basis.  References to other ML basis files cause the basis denoted by that ML basis file to be imported.  Recall that an ML basis file is elaborated in an empty basis; hence, no bindings from the "current" basis are available to the imported basis file.  Since MLB files are elaborated in the empty basis, they need only be elaborated (and evaluated) once.  The semantics of MLB files are such that the results of elaborating (and evaluating) an MLB file are cached.  Thus, any observable effects due to evaluation are not duplicated if the MLB file is referred to multiple times. 
</p>
<p>
Paths can be relative or absolute.  Relative paths are relative to the directory containing the MLB file.  Paths may include path variables and are expanded according to a <a href="MLBasisPathMap">path map</a>.  Unquoted paths may include alpha-numeric characters and the symbols "<tt>-</tt>" and "<tt>_</tt>", along with the arc separator "<tt>/</tt>" and extension separator "<tt>.</tt>".  More complicated paths, including paths with spaces, may be included by quoting the path with <tt>"</tt>.  A quoted path is lexed as a SML string constant. 
</p>
<p>
Finally, <a href="MLBasisAnnotations">annotations</a> allow a library author to control options that affect the elaboration of SML source files. 
</p>
</div>



<p>
<hr>
Last edited on 2005-05-01 08:42:17 by <span title="adsl-64-170-112-95.dsl.snfc21.pacbell.net"><a href="StephenWeeks">StephenWeeks</a></span>.
</body></html>
