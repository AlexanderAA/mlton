.TH mlton 1 "November 9, 2004"
.SH NAME
\fBmlton\fP \- whole-program compiler for the Standard ML (SML) programming
language
.SH SYNOPSIS
\fBmlton\fP \fI[option ...] file\fB.\fP{\fBc\fP|\fBcm\fP|\fBmlb\fP|\fBo\fP|\fBsml\fP} 
[file\fB.\fP{\fBc\fP|\fBS\fP|\fBo\fP} ...]\fR
.SH DESCRIPTION
.PP
\fBMLton\fP is run from the command line with a collection of options
followed by a file name and a list of files to compile, assemble, and
link.  The simplest case is to run \fBmlton foo.sml\fP, which
will produce an executable \fBfoo\fP.  Since \fBMLton\fP does not
support separate compilation, the program must be the entire program
you wish to compile.  However, the program may refer to signatures and
structures defined in the SML Basis Library.

Larger programs, spanning many files, may be compiled with the ML
Basis system (MLBs).  In this case, \fBmlton foo.mlb\fP will compile
the complete SML program described by the basis \fBfoo.mlb\fP, which
may specify both SML files and additional bases.  See the \fBMLton
User Guide\fP for details.

\fBMLton\fP also supports a limited subset of SML/NJ Compilation
Manager (CM) files.  For example, \fBmlton foo.cm\fP will compile the
complete SML program consisting of the concatenation of all the SML
files referred to (either directly or indirectly) by \fBfoo.cm\fP.

\fBMLton\fP's options allow you to control the name of the output
file, the verbosity of compile-time messages, and whether or not
certain optimizations are performed.  They also allow you to specify
which intermediate files are saved and to stop the compilation process
early, at some intermediate pass, in which case compilation can be
resumed by passing the resulting files to \fBMLton\fP.  \fBMLton\fP
uses the input file suffix to determine the type of input program.
The possibilities are \fB.c\fP, \fB.cm\fR, \fB.o\fR, and \fB.sml\fR.

With no arguments, \fBMLton\fP prints the version number and exits.
For a usage message, run \fBMLton\fP with an invalid switch, e.g.,
\fBmlton -\fP.  In the explanation below and in the usage message,
for flags that take a boolean argument
(\fI{\fBtrue\fI|\fBfalse\fI}\fR), the first value listed is the
default. 

.SH Compile-time options
.TP
\fB-align \fI{\fB4\fP|\fB8\fP}\fP
Aligns object sizes and doubles in memory by the specified alignment.
On x86, the default is \fB4\fP and on Sparc the default is
\fB8\fP.

.TP
\fB-as-opt \fIopt\fR
Pass the option to \fBgcc\fP when assembling.

.TP
\fB-cc-opt \fIoption\fP\fP
Pass the option to \fBgcc\fP when compiling C code.

.TP
\fB-codegen \fI{\fBnative\fI|\fBbytecode|\fBc\fI}\fR
Generate native code, byte code, or C code.  With \fB-codegen
native\fP, \fBMLton\fP typically compiles more quickly and generates
better code.

.TP
\fB-const '\fIname value\fP'\fR
Set the value of a compile-time constant.  Here is a list of available
constants, their default values, and what they control.

\fBExn.keepHistory \fI{\fBfalse\fP|\fBtrue\fP}\fR
.in +.5i
Enable \fBExn.history\fP.  There is a performance cost to setting this
to \fBtrue\fP, both in memory usage of exceptions and in run time,
because of additional work that must be performed at each exception
construction, raise, and handle.
.in -.5i

.TP
\fB-default-ann \fIann\fR
Specify the default annotation values for \fBmlb\fP files.  For
example, \fB-default-ann 'warnUnused true'\fP 
causes unused variable warnings to be enabled by default.
Defaults may be overridden by an annotation in an \fBmlb\fP file.

.TP
\fB-disable-ann \fIann\fR
Ignore the specified annotation in every \fBmlb\fP file.  For example,
to see \fIall\fP match and unused warnings, use \fB-disable-ann
'warnMatch' -disable-ann 'warnUnused' -disable-ann 'forceUsed'
-default-ann 'warnUnused true'\fP.

.TP
\fB-export-header \fIfile\fR
Write to \fIfile\fP C prototypes for all of the functions exported
from SML to C.  This flag is useful for programs that use
\fB_export\fP expressions.

.TP
\fB-ieee-fp \fI{\fBfalse\fP|\fBtrue\fP}\fR
Cause the code generator to be pedantic about following the IEEE
floating point standard.  By default, it is not, because of the
performance cost.  This has no effect with \fB-codegen c\fP.

.TP
\fB-inline \fIn\fR
Set the inlining threshold used in the optimizer.  The threshold is an
approximate measure of code size of a procedure.  The default is 320.

.TP
\fB-keep \fI{\fBg\fP|\fBo\fP|\fBsml\fP}\fR
Save intermediate files.  If no \fB-keep\fP argument is given, then
only the output file is saved.
.in +.5i
\fBg\fP    generated \fB.S\fP and \fB.c\fP files passed to gcc
.br
\fBo\fP    object (\fB.o\fR) files
.br
\fBsml\fP  SML file
.in -.5i

.TP
\fB-link-opt \fIopt\fR
Pass the option to \fBgcc\fP when linking.  You can use this to
specify library search paths, e.g. \fB-link-opt -Lpath\fP, and
libraries to link with, e.g. \fB-link-opt -lfoo\fP, or even both at
the same time, e.g. \fB-link-opt '-Lpath -lfoo'\fP.  If you wish to
pass an option to the linker, you must use \fBgcc\fP's \fB-Wl,\fP
syntax, e.g., \fB-link-opt '-Wl,--export-dynamic'\fP.

.TP
\fB-output \fIfile\fR
Specify the name of the final output file.
The default name is the input file name with its suffix removed and an
appropriate, possibly empty, suffix added.

.TP
\fB-profile \fI{\fBno\fP|\fBalloc\fP|\fBcount\fP|\fBtime\fP}\fR
Produce an executable that will gather profiling information.  When
such an executable is run, it will produce an \fBmlmon.out\fP file.
The man page on \fBmlprof\fP describes how to extract information from
this file.

.TP
\fB-profile-branch \fI{\fBfalse\fP|\fBtrue\fP}\fR
If true, the profiler will separately count the time spent (or bytes
allocated) in each branch of a function definition, \fBcase\fP
expression, and \fBif\fP expression.

.TP
\fB-profile-stack \fI{\fBfalse\fP|\fBtrue\fP}\fR
If true, the profiler will count the time spent (or bytes allocated)
while a function is on the stack.

.TP
\fB-runtime \fIarg\fP\fP
Pass argument to the runtime system via \fB@MLton\fP.  The argument
will be processed before other \fB@MLton\fP command line switches.
Multiple uses of \fB-runtime\fP are allowed, and will pass all the
arguments in order.  If the same runtime switch occurs more than once,
then the last setting will dominate, except for \fBno-load-world\fP.

.TP
\fB-show-basis \fIfile\fR
Pretty print to \fIfile\fP the basis defined by the input program.

.TP
\fB-show-def-use \fIfile\fR
Output def-use information to \fIfile\fP.  Each identifier that is
defined appears on a line, follwed on subequent lines by the position
of each use.

.TP
\fB-stop \fI{\fBf\fP|\fBg\fP|\fBo\fP|\fBsml\fP|\fBtc\fP}\fR
Specify pass to stop at.
.in +.5i
\fBf\fP    list of files on stdout (only makes sense when input is \fBfoo.cm\fP or \fBfoo.mlb\fP)
.br
\fBg\fP    generated \fB.S\fP and \fB.c\fP files
.br
\fBo\fP    object file (\fI*\fB.o\fR).
.br
\fBsml\fP  SML file (only makes sense when input is \fBfoo.cm\fP or \fBfoo.mlb\fP)
.br
\fBtc\fP   after type checking
.in -.5i
If you compile \fB-stop g\fP or \fB-stop o\fP, you can resume
compilation by running \fBMLton\fP on the generated \fB.c\fP and \fB.S\fP
or \fB.o\fP files.

.TP
\fB-target \fI{\fBself\fP|\fI...}\fR
Generate an executable that runs on the specified platform.  The
default is \fBself\fP, which means to compile for the machine that
\fBMLton\fP is running on.  To use any other target, you must first
install a cross compiler.  See the \fBMLton User Guide\fP for
details.

.TP
\fB-target-as-opt \fItarget\fP \fIopt\fR
Like \fB-as-opt\fP, this passes \fIopt\fP to \fBgcc\fP when assembling,
except it only passes \fIopt\fP when the target architecture or
operating system is \fItarget\fP.
Valid values for \fItarget\fP are as for \fB-target-cc-opt\fP.

.TP
\fB-target-cc-opt \fItarget\fP \fIopt\fR
Like \fB-cc-opt\fP, this passes \fIopt\fP to \fBgcc\fP when compiling
C code, except it only passes \fIopt\fP when the target architecture
or operating system is \fItarget\fP.
Valid values for \fItarget\fP are:
\fBpowerpc\fP,
\fBsparc\fP,
\fBx86\fP,
\fBcygwin\fP,
\fBdarwin\fP,
\fBfreebsd\fP,
\fBlinux\fP,
\fBmingw\fP,
\fBnetbsd\fP,
\fBopenbsd\fP,
and \fBsolaris\fP.

.TP
\fB-target-link-opt \fItarget\fP \fIopt\fR
Like \fB-link-opt\fP, this passes \fIopt\fP to \fBgcc\fP when linking,
except it only passes \fIopt\fP when the target architecture or
operating system is \fItarget\fP.
Valid values for \fItarget\fP are as for \fB-target-cc-opt\fP.

.TP
\fB-verbose\fP \fI{\fB0\fP|\fB1\fP|\fB2\fP|\fB3\fP}\fP
Be verbose about what passes are running.  The default is 0.
.in +.5i
\fB0\fP  silent
.br
\fB1\fP  calls to compiler, assembler, and linker
.br
\fB2\fP  1 + intermediate compiler passes
.br
\fB3\fP  2 + some data structure sizes
.in -.5i

.TP
\fB-warn-match \fI{\fBtrue\fP|\fBfalse\fP}\fR
Report nonexhaustive and redundant matches.

.TP
\fB-warn-unused \fI{\fBfalse\fP|\fBtrue\fP}\fR
Report unused identifiers.

.SH Runtime system options
To control the runtime system, executables produced by \fBMLton\fP take
several optional command line arguments before their usual arguments.
To use these options, the first argument to the executable must be
\fB@MLton\fP.  The optional arguments then follow, must be terminated
by \fB--\fP, and are followed by any arguments to the program.
The optional arguments are \fInot\fP made available to the SML
program via \fBCommandLine.arguments\fP.
.TP
\fBfixed-heap \fIx{\fBk\fP|\fBm\fP|\fBg\fP}\fR
Use a fixed size heap of size \fIx\fP, where \fIx\fP is a real number
and the trailing letter indicates its units.
.in +.5i
\fBk\fP or \fBK\fP    1024
.br
\fPm\fP or \fBM\fP    1,048,576
.br
\fBg\fP or \fBG\fP    1,073,741,824
.in -.5i
Upper case \fBK\fP, \fBM\fP, or \fBG\fP can also be used.
A value of \fB0\fP means to use almost all the RAM present on the machine.
.TP
\fBgc-messages\fP
Print a message at the start and end of every garbage collection.
.TP
\fBgc-summary\fP
Print a summary of garbage collection statistics upon program
termination.
.TP
\fBload-world \fIworld\fR
Restart the computation with the file \fIworld\fP, which must have
been created by a call to \fBMLton.World.save\fP by the same
executable.
.TP
\fBmax-heap \fIx{\fBk\fP|\fBm\fP|\fBg\fP}\fR
Run the computation with an automatically resized heap that is never
larger than \fIx\fP, where \fIx\fP is a real number and the trailing
letter indicates the units as with \fBfixed-heap\fP.

option.
.TP
\fB-no-load-world\fP
Disable \fBload-world\fP.  This can be used as an argument to the
compiler via \fB-runtime no-load-world\fP to create executables that
will not load a world.  This may be useful to ensure that set-uid
executables do not load some strange world.
.TP
\fBram-slop \fIx\fR
Multiply \fBx\fP by the amount of RAM on the machine to obtain what
the runtime views as the amount of RAM it can use.  Typically \fBx\fP
is less than 1, and is used to account for space used by other
programs running on the same machine.
.TP
\fBstop\fP
Causes the runtime to stop processing \fB@MLton\fP arguments once the
next \fB--\fP is reached.  This can be used as an argument to the
compiler via \fB-runtime stop\fP to create executables that don't
process any \fB@MLton\fP arguments.

.SH DIAGNOSTICS
MLton's type error messages are not in a form suitable for processing
by Emacs.  For details on how to fix this, see
http://mlton.org/Emacs.

.SH "SEE ALSO"
.BR mlprof (1)
and the \fBMLton User Guide\fP.
