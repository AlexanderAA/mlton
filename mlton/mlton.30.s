/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:40 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_59
.hidden get_59
get_59:
L_94745:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_94746
L_94800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_94801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94801
.p2align 0x4
.long 0x460
L_94801:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_94746:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_412907
L_94748:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_412906
L_94749:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_94751:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_412905
L_94792:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD1F,%r10
	jne L_412904
L_94793:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_412901
L_94752:
	incl %ecx
	jo L_412900
L_94754:
	cmpq $0x1,%r14
	je L_412898
L_94755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_94751
.p2align 0x4
L_412898:
L_94756:
L_94757:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412899
L_94759:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_310
L_94791:
	movl %ecx,0x0(%r15)
x_310:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_412899:
L_94758:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412900:
L_94753:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412901:
L_94795:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94758
L_94796:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412902
L_94798:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412902:
L_94797:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412904:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94752
.p2align 0x4
L_412905:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94752
.p2align 0x4
L_412906:
L_94799:
	xorl %ecx,%ecx
	jmp L_94757
.p2align 0x4
L_412907:
L_94747:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_94761:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_94762:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_94763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_94763:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1C0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_94764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_94764:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_94765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_94765:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94766
L_94789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_94790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94790
.p2align 0x4
.long 0x4AF
L_94790:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_94766:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_94767:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_94753
L_94768:
	cmpq $0x1,%r14
	je L_412909
L_94769:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_94767
.p2align 0x4
L_412909:
L_94770:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94771
L_94787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_94788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94788
.p2align 0x4
.long 0x4E7
L_94788:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_94771:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_412910
L_94772:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_181:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_412910:
L_94786:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_181
.p2align 0x4
.long 0x1
rev_179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_412916
L_94773:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_94774:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_412915
.p2align 0x4,,0x7
L_94775:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_412914
L_94776:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_94774
.p2align 0x4
L_412914:
L_94778:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_412915:
L_94783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_94784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94784
.p2align 0x4
.long 0x45C
L_94784:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_94775
.p2align 0x4
L_412916:
L_94785:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_94778
.p2align 0x4
.long 0x1
L_94779:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94780
L_94781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_94782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94782
.p2align 0x4
.long 0x452
L_94782:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_94780:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_89
.hidden get_89
get_89:
L_94802:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_94803
L_94857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_94858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94858
.p2align 0x4
.long 0x460
L_94858:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_94803:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_412927
L_94805:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_412926
L_94806:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_94808:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_412925
L_94849:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD1E,%r10
	jne L_412924
L_94850:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_412921
L_94809:
	incl %ecx
	jo L_412920
L_94811:
	cmpq $0x1,%r14
	je L_412918
L_94812:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_94808
.p2align 0x4
L_412918:
L_94813:
L_94814:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412919
L_94816:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_311
L_94848:
	movl %ecx,0x0(%r15)
x_311:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_412919:
L_94815:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412920:
L_94810:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412921:
L_94852:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94815
L_94853:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412922
L_94855:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412922:
L_94854:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412924:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94809
.p2align 0x4
L_412925:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94809
.p2align 0x4
L_412926:
L_94856:
	xorl %ecx,%ecx
	jmp L_94814
.p2align 0x4
L_412927:
L_94804:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_94818:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_94819:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_94820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_94820:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1C0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_94821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_94821:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_94822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_94822:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94823
L_94846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_94847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94847
.p2align 0x4
.long 0x4AF
L_94847:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_94823:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_94824:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_94810
L_94825:
	cmpq $0x1,%r14
	je L_412929
L_94826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_94824
.p2align 0x4
L_412929:
L_94827:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94828
L_94844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_94845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94845
.p2align 0x4
.long 0x4E7
L_94845:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_94828:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_412930
L_94829:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_182:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_412930:
L_94843:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_182
.p2align 0x4
.long 0x1
rev_180:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_412936
L_94830:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_94831:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_412935
.p2align 0x4,,0x7
L_94832:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_412934
L_94833:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_94831
.p2align 0x4
L_412934:
L_94835:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_412935:
L_94840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_94841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94841
.p2align 0x4
.long 0x45C
L_94841:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_94832
.p2align 0x4
L_412936:
L_94842:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_94835
.p2align 0x4
.long 0x1
L_94836:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94837
L_94838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_94839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94839
.p2align 0x4
.long 0x452
L_94839:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_94837:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_85
.hidden get_85
get_85:
L_94859:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_94860
L_94914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_94915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94915
.p2align 0x4
.long 0x460
L_94915:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_94860:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_412947
L_94862:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_412946
L_94863:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_94865:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_412945
L_94906:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD09,%r10
	jne L_412944
L_94907:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_412941
L_94866:
	incl %ecx
	jo L_412940
L_94868:
	cmpq $0x1,%r14
	je L_412938
L_94869:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_94865
.p2align 0x4
L_412938:
L_94870:
L_94871:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412939
L_94873:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_312
L_94905:
	movl %ecx,0x0(%r15)
x_312:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_412939:
L_94872:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412940:
L_94867:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412941:
L_94909:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94872
L_94910:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412942
L_94912:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412942:
L_94911:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412944:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94866
.p2align 0x4
L_412945:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_94866
.p2align 0x4
L_412946:
L_94913:
	xorl %ecx,%ecx
	jmp L_94871
.p2align 0x4
L_412947:
L_94861:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_94875:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_94876:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_94877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_94877:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1C8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_94878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_94878:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_94879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_94879:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94880
L_94903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_94904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94904
.p2align 0x4
.long 0x4AF
L_94904:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_94880:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_94881:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_94867
L_94882:
	cmpq $0x1,%r14
	je L_412949
L_94883:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_94881
.p2align 0x4
L_412949:
L_94884:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94885
L_94901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_94902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94902
.p2align 0x4
.long 0x4E7
L_94902:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_94885:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_412950
L_94886:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_183:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_412950:
L_94900:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_183
.p2align 0x4
.long 0x1
rev_181:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_412956
L_94887:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_94888:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_412955
.p2align 0x4,,0x7
L_94889:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_412954
L_94890:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_94888
.p2align 0x4
L_412954:
L_94892:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_94893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_412955:
L_94897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_94898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94898
.p2align 0x4
.long 0x45C
L_94898:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_94889
.p2align 0x4
L_412956:
L_94899:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_94892
.p2align 0x4
.long 0x1
L_94893:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94894
L_94895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_94896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94896
.p2align 0x4
.long 0x452
L_94896:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_94894:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_87
.hidden get_87
get_87:
L_94916:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_94946
L_94917:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_412970
L_94918:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_412969
L_94920:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_412968
L_94921:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_94923:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_94924
L_94938:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD01,%r13
	jne L_94924
L_94939:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_412963
L_94924:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_412962
L_94926:
	cmpq $0x1,%r15
	je L_412958
L_94927:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_94923
.p2align 0x4
L_412958:
L_94928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94929
L_94936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_94937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94937
.p2align 0x4
.long 0x49C
L_94937:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_94929:
	movl 0x18(%rbp),%ecx
L_94930:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412960
L_94932:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_94934
L_94935:
	movl %ecx,0x0(%r15)
L_94934:
	movq $0x108D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xD15,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x1,0x0(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xD15,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x1,0x0(%r10)
	movq $0x13D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x2,0x0(%r13)
	movq $0x19D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0x53,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x13D3,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x9E3,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x10,%r12
	movq $0x1,0x0(%rsi)
	movq $0x13D5,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rsp,0x0(%rdi)
	movq %r14,0x8(%rdi)
	movq %r9,0x10(%rdi)
	movq %r15,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsi,0x28(%rdi)
	movq %r11,0x30(%rdi)
	movq %r10,0x38(%rdi)
	movq %r13,0x40(%rdi)
	addq $0x50,%r12
	movq $0x1A03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	movq %rdi,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412960:
L_94931:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412962:
L_94925:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412963:
L_94941:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94931
L_94942:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412964
L_94944:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412964:
L_94943:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412968:
L_94945:
	xorl %ecx,%ecx
	jmp L_94930
.p2align 0x4
L_412969:
L_94919:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412970:
L_94946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_94947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94947
.p2align 0x4
.long 0x460
L_94947:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_94918
.text
.p2align 0x4
.globl getFuncNode_0
.hidden getFuncNode_0
getFuncNode_0:
L_94948:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_94949
L_94983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_94984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94984
.p2align 0x4
.long 0x460
L_94984:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_94949:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_94950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_87
.p2align 0x4
.long 0x4DD
L_94950:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94951
L_94981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_94982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94982
.p2align 0x4
.long 0x4AF
L_94982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_94951:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_412973
L_94952:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412973:
L_94953:
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x28(%rbp)
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x10(%rbp),%r9
	movq 0x0(%r9),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r10,0x0(%r14)
	movq %r9,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r9)
	movq $0x27BF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x30(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_412985
L_94955:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_412984
L_94956:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_94958:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_412983
L_94973:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCFF,%r11
	jne L_412982
L_94974:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_412979
L_94959:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_412978
L_94961:
	cmpq $0x1,%r15
	je L_412974
L_94962:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_94958
.p2align 0x4
L_412974:
L_94963:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_94964
L_94971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_94972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_94972
.p2align 0x4
.long 0x98A
L_94972:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_94964:
	movl 0x10(%rbp),%ecx
L_94965:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412976
L_94967:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_94969
L_94970:
	movl %ecx,0x0(%r15)
L_94969:
	movq $0x19FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412976:
L_94966:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412978:
L_94960:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412979:
L_94976:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94966
L_94977:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412980
L_94979:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412980:
L_94978:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412982:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_94959
.p2align 0x4
L_412983:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_94959
.p2align 0x4
L_412984:
L_94980:
	xorl %ecx,%ecx
	jmp L_94965
.p2align 0x4
L_412985:
L_94954:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1381
.hidden x_1381
x_1381:
L_94985:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_94986
L_95039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95040
.p2align 0x4
.long 0x460
L_95040:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_94986:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_412996
L_94988:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_412995
L_94989:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_94991:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_412994
L_95031:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCF5,%r10
	jne L_412993
L_95032:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_412990
L_94992:
	incl %ecx
	jo L_412989
L_94994:
	cmpq $0x1,%r15
	je L_412987
L_94995:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_94991
.p2align 0x4
L_412987:
L_94996:
L_94997:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_412988
L_94999:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_313
L_95030:
	movl %ecx,0x0(%r15)
x_313:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_412988:
L_94998:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412989:
L_94993:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412990:
L_95034:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_94998
L_95035:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_412991
L_95037:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412991:
L_95036:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_412993:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_94992
.p2align 0x4
L_412994:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_94992
.p2align 0x4
L_412995:
L_95038:
	xorl %ecx,%ecx
	jmp L_94997
.p2align 0x4
L_412996:
L_94987:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95001:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95002:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95003:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1D0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95004:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95005:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95006
L_95028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95029
.p2align 0x4
.long 0x4AF
L_95029:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95006:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95007:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_94993
L_95008:
	cmpq $0x1,%r14
	je L_412998
L_95009:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95007
.p2align 0x4
L_412998:
L_95010:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95011
L_95026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95027
.p2align 0x4
.long 0x4E7
L_95027:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95011:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_412999
L_95012:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_184:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_412999:
L_95025:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_184
.p2align 0x4
.long 0x1
rev_182:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413005
L_95013:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95014:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413004
.p2align 0x4,,0x7
L_95015:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413003
L_95016:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95014
.p2align 0x4
L_413003:
L_95018:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413004:
L_95022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95023
.p2align 0x4
.long 0x45C
L_95023:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95015
.p2align 0x4
L_413005:
L_95024:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95018
.p2align 0x4
.long 0x1
bug_256:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95019
L_95020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95021
.p2align 0x4
.long 0x452
L_95021:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95019:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_88
.hidden get_88
get_88:
L_95041:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95042
L_95079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95080
.p2align 0x4
.long 0x460
L_95080:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95042:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_95043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x1008
L_95043:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95044
L_95077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95078
.p2align 0x4
.long 0x658
L_95078:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_95044:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413008
L_95045:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413008:
L_95046:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (label_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9FB
label_3:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95047
L_95075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_95076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95076
.p2align 0x4
.long 0x100A
L_95076:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_95047:
	movq $0x10AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2773,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2767,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2769,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x2,0x0(%r11)
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_413021
L_95049:
	movq %r15,0x0(%r11)
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_413020
L_95050:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95052:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_413019
L_95067:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC0,%r11
	jne L_413018
L_95068:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x20)(%rip)
	je L_413015
L_95053:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_413014
L_95055:
	cmpq $0x1,%r15
	je L_413010
L_95056:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x20)(%rip),%r14
	jmp L_95052
.p2align 0x4
L_413010:
L_95057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95058
L_95065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_95066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95066
.p2align 0x4
.long 0x1009
L_95066:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_95058:
	movl 0x10(%rbp),%ecx
L_95059:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413012
L_95061:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95063
L_95064:
	movl %ecx,0x0(%r15)
L_95063:
	movq $0x1981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r11)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413012:
L_95060:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413014:
L_95054:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413015:
L_95070:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95060
L_95071:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413016
L_95073:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413016:
L_95072:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413018:
	movq %r14,(localObjptr+0x20)(%rip)
	jmp L_95053
.p2align 0x4
L_413019:
	movq %r14,(localObjptr+0x20)(%rip)
	jmp L_95053
.p2align 0x4
L_413020:
L_95074:
	xorl %ecx,%ecx
	jmp L_95059
.p2align 0x4
L_413021:
L_95048:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl edge_1
.hidden edge_1
edge_1:
L_95081:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95082
L_95117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95118
.p2align 0x4
.long 0x4E8
L_95118:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95082:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x1007
L_95083:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95084
L_95115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95116
.p2align 0x4
.long 0xE40
L_95116:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95084:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_413036
L_95085:
L_95086:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x114D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x20,%r12
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,0x0(%r14)
	movzbq 0x0(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x276D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x10AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2773,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x276B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x276D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_413035
L_95088:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_413034
L_95089:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_95091:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_413033
L_95106:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBD,%r11
	jne L_413032
L_95107:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x48)(%rip)
	je L_413029
L_95092:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_413028
L_95094:
	cmpq $0x1,%r15
	je L_413024
L_95095:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x48)(%rip),%r14
	jmp L_95091
.p2align 0x4
L_413024:
L_95096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95097
L_95104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95105
.p2align 0x4
.long 0x65E
L_95105:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95097:
	movl 0x20(%rbp),%ecx
L_95098:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413026
L_95100:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95102
L_95103:
	movl %ecx,0x0(%r15)
L_95102:
	movq $0x197B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413026:
L_95099:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413028:
L_95093:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413029:
L_95109:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95099
L_95110:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413030
L_95112:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413030:
L_95111:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413032:
	movq %r14,(localObjptr+0x48)(%rip)
	jmp L_95092
.p2align 0x4
L_413033:
	movq %r14,(localObjptr+0x48)(%rip)
	jmp L_95092
.p2align 0x4
L_413034:
L_95113:
	xorl %ecx,%ecx
	jmp L_95098
.p2align 0x4
L_413035:
L_95087:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413036:
L_95114:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r14)
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq %r10,0x0(%r8)
	movq %r14,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r8,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r10,%r15
	jmp L_95086
.text
.p2align 0x4
.globl get_74
.hidden get_74
get_74:
L_95119:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95149
L_95120:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413050
L_95121:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_413049
L_95123:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_413048
L_95124:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_95126:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_95127
L_95141:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFB,%r13
	jne L_95127
L_95142:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_413043
L_95127:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_413042
L_95129:
	cmpq $0x1,%r15
	je L_413038
L_95130:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_95126
.p2align 0x4
L_413038:
L_95131:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95132
L_95139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95140
.p2align 0x4
.long 0x49C
L_95140:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95132:
	movl 0x18(%rbp),%ecx
L_95133:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413040
L_95135:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95137
L_95138:
	movl %ecx,0x0(%r15)
L_95137:
	movq $0x735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x27CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x731,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x72F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x27D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x72D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x737,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq $0x19F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413040:
L_95134:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413042:
L_95128:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413043:
L_95144:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95134
L_95145:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413044
L_95147:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413044:
L_95146:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413048:
L_95148:
	xorl %ecx,%ecx
	jmp L_95133
.p2align 0x4
L_413049:
L_95122:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413050:
L_95149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95150
.p2align 0x4
.long 0x460
L_95150:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_95121
.text
.p2align 0x4
.globl getContData_0
.hidden getContData_0
getContData_0:
L_95151:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95213
L_95152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413076
L_95153:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_413075
L_95155:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_413074
L_95156:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x8(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_95158:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_95159
L_95202:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD00,%r13
	jne L_95159
L_95203:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x10(%rbp)
	je L_413068
L_95159:
	movl 0x8(%rbp),%r13d
	incl %r13d
	movl %r13d,0xC(%rbp)
	jo L_413067
L_95161:
	cmpq $0x1,%r15
	je L_413052
L_95162:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x8(%rbp)
	jmp L_95158
.p2align 0x4
L_413052:
L_95163:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95164
L_95200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95201
.p2align 0x4
.long 0x799
L_95201:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95164:
	movl 0xC(%rbp),%ecx
L_95165:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413065
L_95167:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95169
L_95199:
	movl %ecx,0x0(%r15)
L_95169:
	movq $0x13D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A01,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_95170:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_95179
L_95171:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_95172:
	movq 0x8(%r14),%r13
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_413061
	cmpq $0x2,%r11
	je L_413057
L_95174:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_95175
L_95182:
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	je L_413055
L_95175:
	cmpq $0x1,%r15
	je L_413053
L_95176:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_95172
.p2align 0x4
L_413053:
L_95177:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95179
L_95180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95181
.p2align 0x4
.long 0x460
L_95181:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95179:
	movq $0x108D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x108F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1091,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r11,0x0(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27BD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413055:
L_95185:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413057:
L_95189:
	cmpq $0x2,%r13
	je L_95185
L_95190:
L_95191:
	cmpq $0x1,%r15
	je L_413058
L_95192:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_95172
.p2align 0x4
L_413058:
L_95193:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95179
L_95195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95196
.p2align 0x4
.long 0x460
L_95196:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_95179
.p2align 0x4
L_413061:
L_95186:
	cmpq $0x1,%r13
	je L_95185
L_95187:
	jmp L_95175
.p2align 0x4
L_413065:
L_95166:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413067:
L_95160:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413068:
L_95205:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95206
L_95210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95211
.p2align 0x4
.long 0xB2A
L_95211:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95206:
	movl 0x8(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_95166
L_95207:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_413069
L_95208:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_95170
.p2align 0x4
L_413069:
L_95209:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_95170
.p2align 0x4
L_413074:
L_95212:
	xorl %ecx,%ecx
	jmp L_95165
.p2align 0x4
L_413075:
L_95154:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413076:
L_95213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95214
.p2align 0x4
.long 0x45C
L_95214:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95153
.text
.p2align 0x4
.globl unifys_1
.hidden unifys_1
unifys_1:
L_95215:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95216
L_95294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95295
.p2align 0x4
.long 0x460
L_95295:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95216:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_95218
L_95219:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_413081
L_95221:
	cmpl %r13d,%ecx
	jne L_95223
L_95224:
	cmpl $0x0,%r13d
	jl L_413079
L_95225:
	xorl %ecx,%ecx
loop_1069:
	cmpl 0x10(%rbp),%ecx
	jnl L_413078
L_95227:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x14(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413078:
L_95226:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413079:
L_95223:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413081:
L_95218:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_95228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x526
L_95229:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	cmpq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	je L_413084
L_95230:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413084:
L_95292:
	movl 0x14(%rbp),%ecx
	jmp loop_1069
.p2align 0x4
.long 0x557
L_95231:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_413085
L_95233:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413085:
L_95232:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_95234:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_95232
L_95235:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x527
L_95236:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_95237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x580
L_95237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95238
L_95290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95291
.p2align 0x4
.long 0x564
L_95291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_95238:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq %r14,%r15
	je L_95245
L_95239:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1444,%r11
	jne L_95240
L_95241:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1444,%r10
	jne L_95240
L_95242:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_413097
L_95243:
	movq $0x288B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r10d,%r11d
	jne L_413095
L_95279:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1444,%r10
	jne L_413094
L_95280:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_413093
L_95282:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_413092
L_95283:
	movq 0x8(%r15),%r13
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413090
L_95284:
	movq %r15,0x20(%rbp)
L_95247:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_413089
L_95248:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_413088
L_95249:
L_95250:
	cmpq $0x1,%r14
	je L_413087
L_95251:
L_95252:
	movq $0x272B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_95253:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413087:
	movq %r13,%r15
	jmp L_95253
.p2align 0x4
L_413088:
L_95262:
	movq %r14,%r15
	jmp L_95253
.p2align 0x4
L_413089:
L_95263:
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413090:
L_95271:
	cmpq $0x1,0x30(%rbp)
	je L_413091
L_95272:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_413091:
L_95278:
	movl 0x14(%rbp),%ecx
	jmp loop_1069
.p2align 0x4
L_413092:
L_95256:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413093:
L_95281:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413094:
L_95240:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413095:
L_95245:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_95271
L_95246:
	movq %r15,0x20(%rbp)
	jmp L_95247
.p2align 0x4
L_413097:
L_95286:
	movq $0x288B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_95271
L_95287:
	movq %r15,0x20(%rbp)
	jmp L_95247
.p2align 0x4
.long 0x457
L_95254:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95255
L_95259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95260
.p2align 0x4
.long 0x562
L_95260:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95255:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_95256
L_95257:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_95258:
	movl 0x14(%rbp),%ecx
	jmp loop_1069
.p2align 0x4
.long 0x561
L_95264:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95265
L_95268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95269
.p2align 0x4
.long 0x563
L_95269:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95265:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_95256
L_95266:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xD,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_95267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x56F
L_95273:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95274
L_95276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95277
.p2align 0x4
.long 0x570
L_95277:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95274:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_95256
L_95275:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xD,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_95267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x524
L_95267:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95258
.text
.p2align 0x4
.globl get_86
.hidden get_86
get_86:
L_95296:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95297
L_95351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95352
.p2align 0x4
.long 0x460
L_95352:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95297:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413118
L_95299:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413117
L_95300:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95302:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413116
L_95343:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD06,%r10
	jne L_413115
L_95344:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413112
L_95303:
	incl %ecx
	jo L_413111
L_95305:
	cmpq $0x1,%r14
	je L_413109
L_95306:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_95302
.p2align 0x4
L_413109:
L_95307:
L_95308:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413110
L_95310:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_314
L_95342:
	movl %ecx,0x0(%r15)
x_314:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413110:
L_95309:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413111:
L_95304:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413112:
L_95346:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95309
L_95347:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413113
L_95349:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413113:
L_95348:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413115:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95303
.p2align 0x4
L_413116:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95303
.p2align 0x4
L_413117:
L_95350:
	xorl %ecx,%ecx
	jmp L_95308
.p2align 0x4
L_413118:
L_95298:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95312:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95313:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95314:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1C8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95315:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95316:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95317
L_95340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95341
.p2align 0x4
.long 0x4AF
L_95341:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95317:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95318:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95304
L_95319:
	cmpq $0x1,%r14
	je L_413120
L_95320:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95318
.p2align 0x4
L_413120:
L_95321:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95322
L_95338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95339
.p2align 0x4
.long 0x4E7
L_95339:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95322:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413121
L_95323:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_185:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413121:
L_95337:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_185
.p2align 0x4
.long 0x1
rev_183:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413127
L_95324:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95325:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413126
.p2align 0x4,,0x7
L_95326:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413125
L_95327:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95325
.p2align 0x4
L_413125:
L_95329:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413126:
L_95334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95335
.p2align 0x4
.long 0x45C
L_95335:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95326
.p2align 0x4
L_413127:
L_95336:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95329
.p2align 0x4
.long 0x1
L_95330:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95331
L_95332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95333
.p2align 0x4
.long 0x452
L_95333:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95331:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_73
.hidden get_73
get_73:
L_95353:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95383
L_95354:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413141
L_95355:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_413140
L_95357:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_413139
L_95358:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_95360:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_95361
L_95375:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD11,%r13
	jne L_95361
L_95376:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_413134
L_95361:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_413133
L_95363:
	cmpq $0x1,%r15
	je L_413129
L_95364:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_95360
.p2align 0x4
L_413129:
L_95365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95366
L_95373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95374
.p2align 0x4
.long 0x49C
L_95374:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95366:
	movl 0x18(%rbp),%ecx
L_95367:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413131
L_95369:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95371
L_95372:
	movl %ecx,0x0(%r15)
L_95371:
	movq $0x741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x27A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x73D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x73B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x27A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x739,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x743,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq $0x1A23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413131:
L_95368:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413133:
L_95362:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413134:
L_95378:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95368
L_95379:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413135
L_95381:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413135:
L_95380:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413139:
L_95382:
	xorl %ecx,%ecx
	jmp L_95367
.p2align 0x4
L_413140:
L_95356:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413141:
L_95383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95384
.p2align 0x4
.long 0x460
L_95384:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_95355
.text
.p2align 0x4
.globl x_1502
.hidden x_1502
x_1502:
L_95385:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95479
L_95386:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413165
L_95387:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_413143
L_95388:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413143:
L_95389:
	cmpl $0x0,0x18(%rbp)
	jl L_413164
L_95390:
	movq $0x1,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1070:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413163
.p2align 0x4,,0x7
L_95391:
	movl 0x1C(%rbp),%r13d
	cmpl 0x18(%rbp),%r13d
	jnl L_413157
L_95445:
	movslq %r13d,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_413156
L_95447:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_413155
L_95448:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_95450:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_95451
L_95465:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD1D,%r13
	jne L_95451
L_95466:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_413149
L_95451:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_413148
L_95452:
	cmpq $0x1,%r15
	je L_413144
L_95453:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x38(%rbp)
	jmp L_95450
.p2align 0x4
L_413144:
L_95454:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413147
.p2align 0x4,,0x7
L_95455:
	movl 0x3C(%rbp),%ecx
L_95456:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413146
L_95458:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_95460
L_95462:
	movl %ecx,0x0(%r15)
L_95460:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0xC71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x2799,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x1A3B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq 0x10(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x0(%r15),%r9
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r15)
	movq %r13,%r15
	movq %r11,%r13
L_95461:
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1B59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	incl %r14d
	movl %r14d,0x1C(%rbp)
	jmp loop_1070
.p2align 0x4
L_413146:
L_95457:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413147:
L_95463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95464
.p2align 0x4
.long 0x11C2
L_95464:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_95455
.p2align 0x4
L_413148:
L_95411:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413149:
L_95468:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413152
.p2align 0x4,,0x7
L_95469:
	movl 0x38(%rbp),%r11d
	movslq %r11d,%r15
	movq (globalObjptr+0x1070)(%rip),%r10
	addq 0x0(%r10),%r15
	jo L_95457
L_95470:
	movq %r15,0x0(%r10)
	movq (globalObjptr+0x1078)(%rip),%r10
	cmpl %r11d,0x0(%r10)
	jl L_413150
L_95471:
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_95461
.p2align 0x4
L_413150:
L_95472:
	movq (globalObjptr+0x1078)(%rip),%r11
	movl 0x38(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_95461
.p2align 0x4
L_413152:
L_95473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_95474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95474
.p2align 0x4
.long 0x1257
L_95474:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_95469
.p2align 0x4
L_413155:
L_95475:
	xorl %ecx,%ecx
	jmp L_95456
.p2align 0x4
L_413156:
L_95446:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413157:
L_95392:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413158
L_95393:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_95394:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x3D9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_413158:
L_95399:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_413162
L_95400:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_95401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413161
.p2align 0x4,,0x7
L_95402:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1E2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_413159
L_95403:
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_95401
.p2align 0x4
L_413159:
L_95404:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x0,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r14,%r15
L_95405:
	cmpq $0x1,%r15
	je L_413160
L_95406:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%ecx
	movl $0x0,0x1C(%rbp)
	movq $0x1,0x30(%rbp)
L_95407:
	movl %ecx,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_95408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_413160:
L_95438:
	movq $0x1,%r15
L_95419:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_95420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_413161:
L_95439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95440
.p2align 0x4
.long 0x4EA
L_95440:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_95402
.p2align 0x4
L_413162:
L_95441:
	movq $0x1,%r14
	xchgq %r14,%r15
L_95429:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
L_413163:
L_95476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95477
.p2align 0x4
.long 0x100C
L_95477:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_95391
.p2align 0x4
L_413164:
L_95478:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413165:
L_95479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95480
.p2align 0x4
.long 0x460
L_95480:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_95387
.p2align 0x4
.long 0x4E4
L_95395:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95396
L_95442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95443
.p2align 0x4
.long 0x4F1
L_95443:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95396:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_95399
L_95397:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_95394
.p2align 0x4
.long 0xBC4
L_95408:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x518
L_95420:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95421
L_95432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95433
.p2align 0x4
.long 0x519
L_95433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95421:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x18(%rbp),%r14d
	incl %r14d
	jo L_95411
L_95422:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_413169
L_95423:
	movl %r14d,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_95405
.p2align 0x4
L_413169:
L_95424:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95425:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413171
.p2align 0x4,,0x7
L_95426:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_95429
L_95427:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95425
.p2align 0x4
L_413171:
L_95430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95431
.p2align 0x4
.long 0x45C
L_95431:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95426
.p2align 0x4
.long 0xBC4
L_95409:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95410
L_95436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95437
.p2align 0x4
.long 0xDD0
L_95437:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_95410:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x1C(%rbp),%r14d
	incl %r14d
	jo L_95411
L_95412:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_413174
L_95413:
	movl %r14d,0x1C(%rbp)
	movq %r15,0x30(%rbp)
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_95407
.p2align 0x4
L_413174:
L_95414:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_95415:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413176
.p2align 0x4,,0x7
L_95416:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_95419
L_95417:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_95415
.p2align 0x4
L_413176:
L_95434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95435
.p2align 0x4
.long 0xDD0
L_95435:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_95416
.text
.p2align 0x4
.globl x_1342
.hidden x_1342
x_1342:
L_95481:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95709
L_95482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413179
L_95483:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x3253,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_95484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
L_413179:
L_95709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_95710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95710
.p2align 0x4
.long 0x678
L_95710:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_95483
.p2align 0x4
.long 0xC5F
L_95484:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95485
L_95707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_95708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95708
.p2align 0x4
.long 0xC75
L_95708:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_95485:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_413195
L_95486:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_413192
	cmpq $0xEBF,%r14
	je L_413189
	cmpq $0xEC0,%r14
	je L_413188
	cmpq $0xEC1,%r14
	je L_413187
	cmpq $0xEC2,%r14
	je L_413182
	cmpq $0xEC3,%r14
	je L_413181
L_95487:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x3529,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_413181:
L_95696:
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3529,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_95697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_413182:
L_95576:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r14
	je L_413186
	cmpq $0x2,%r14
	je L_413185
L_95577:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	cmpq $0x1,%r15
	je L_413184
	cmpq $0x2,%r15
	je L_413183
L_95578:
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,%r15
L_95579:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_95580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_90
.p2align 0x4
L_413183:
L_95693:
	movq %r11,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	movq %r13,%r15
	jmp L_95579
.p2align 0x4
L_413184:
L_95692:
	movq %r11,0x58(%rbp)
	movq $0x2,0x50(%rbp)
	movq %r13,%r15
	jmp L_95579
.p2align 0x4
L_413185:
L_95695:
	movq $0x2,0x50(%rbp)
	movq $0x2,0x58(%rbp)
	movq %r13,%r15
	jmp L_95579
.p2align 0x4
L_413186:
L_95694:
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r13,%r15
	jmp L_95579
.p2align 0x4
L_413187:
L_95511:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_95512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_413188:
L_95506:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_413189:
L_95499:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413190
L_95500:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x5,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413190:
L_95502:
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	cmpq $0x1,%r14
	je L_413191
L_95503:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_1
.p2align 0x4
L_413191:
L_95497:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413192:
L_95491:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413193
L_95492:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x10,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413193:
L_95494:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_95497
L_95495:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_1
.p2align 0x4
L_413195:
L_95706:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_95488:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
.long 0x5F1
L_95697:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (x_319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
.long 0x76C
L_95580:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_95581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVars_1
.p2align 0x4
.long 0x12EC
L_95512:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95513
L_95574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_95575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95575
.p2align 0x4
.long 0x12F2
L_95575:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_95513:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413197
L_95514:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movb $0x6,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_95515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413197:
L_95517:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_413201
L_95524:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x48(%rbp)
	movl %r15d,%r13d
	movl %r13d,0x70(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_413200
L_95527:
	testl %r13d,%r13d
	jz L_413198
L_95528:
	movq $0x3663,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x88(%rbp)
	movb $0x6,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_95529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_413198:
L_95566:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413199
L_95567:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_413199:
L_95570:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413200:
L_95526:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413201:
L_95518:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3613,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x8,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x869
L_95507:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_95508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVars_1
.p2align 0x4
.long 0x513
L_95501:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_95502
.p2align 0x4
.long 0x513
L_95493:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_95494
.p2align 0x4
.long 0x1
x_315:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413203
L_95489:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413203:
L_95490:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
x_319:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413204
L_95698:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movb $0x6,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_95699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413204:
L_95700:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
.long 0xC68
L_95581:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95582
L_95690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95691
.p2align 0x4
.long 0xC74
L_95691:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95582:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_413217
	cmpq $0x2,%r15
	je L_413205
L_95583:
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_413205:
L_95650:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_413208
	cmpq $0x2,%r15
	je L_413206
L_95651:
L_95595:
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_413206:
L_95606:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413207
L_95607:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413207:
L_95608:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413208:
L_95620:
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r13
L_95621:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_95622
L_95638:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_413209
L_95639:
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVarInfoTys_0
.p2align 0x4
L_413209:
L_95622:
	movq 0x60(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r13
	cmpq %r14,%r13
	je L_95606
L_95623:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r15
	je L_413212
L_95624:
	cmpq $0x1,%r14
	je L_95606
L_95625:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413210
L_95626:
L_95627:
	movq $0x41E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	xchgq %r13,%r15
L_95628:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	jmp L_95606
.p2align 0x4
L_413210:
L_95629:
	movq $0x41E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_95628
.p2align 0x4
L_413212:
L_95631:
	cmpq $0x1,%r14
	je L_95606
L_95632:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_95606
L_95633:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x5,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413217:
L_95662:
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x60(%rbp),%r14
	movq 0x10(%r14),%r11
L_95663:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_95664
L_95683:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_413218
L_95684:
	movq %r11,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVarInfoTys_0
.p2align 0x4
L_413218:
L_95664:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x40(%rbp),%r15
	movq 0x30(%r15),%r13
	cmpq %r14,%r13
	je L_95650
L_95665:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r15
	je L_413223
L_95666:
	cmpq $0x1,%r14
	je L_95650
L_95667:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413221
L_95668:
L_95669:
	movq $0x41C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	xchgq %r13,%r15
L_95670:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_95620
	cmpq $0x2,%r15
	je L_95606
L_95671:
	jmp L_95595
.p2align 0x4
L_413221:
L_95674:
	movq $0x41C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_95670
.p2align 0x4
L_413223:
L_95676:
	cmpq $0x1,%r14
	je L_95650
L_95677:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_95650
L_95678:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x10,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x12EC
L_95515:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95517
L_95571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_95572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95572
.p2align 0x4
.long 0xC67
L_95572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_95517
.p2align 0x4
.long 0x12ED
L_95529:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_95530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
.long 0x1
x_318:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413230
L_95568:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413230:
L_95569:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71F
L_95519:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413231
L_95520:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_413231:
L_95523:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_95508:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413232
L_95509:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413232:
L_95510:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_95699:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_95700
.p2align 0x4
.long 0x5EE
x_320:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413233
L_95701:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x6,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_95702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413233:
L_95703:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0xC69
L_95584:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95585
L_95660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95661
.p2align 0x4
.long 0xC71
L_95661:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95585:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_413234
L_95586:
	movq %r14,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVarInfoTys_0
.p2align 0x4
L_413234:
L_95589:
	movq 0x60(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_413238
L_95590:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413237
L_95591:
L_95592:
	movq $0x41E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_95593:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_95620
	cmpq $0x2,%r15
	je L_95606
L_95594:
	jmp L_95595
.p2align 0x4
L_413237:
L_95645:
	movq $0x41E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_95593
.p2align 0x4
L_413238:
L_95646:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_95650
L_95647:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x6,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x79B
L_95596:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95597
L_95617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_95618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95618
.p2align 0x4
.long 0xC6C
L_95618:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_95597:
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	cmpq $0x1,%r14
	je L_413241
L_95598:
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_95599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVarInfoTys_0
.p2align 0x4
L_413241:
L_95601:
	movq 0x60(%rbp),%r14
	movq 0x38(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_413243
L_95602:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413242
L_95603:
L_95604:
	movq $0x41E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_95605:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_95606
.p2align 0x4
L_413242:
L_95609:
	movq $0x41E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_95605
.p2align 0x4
L_413243:
L_95610:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_95606
L_95611:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x6,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x12F4
L_95640:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95622
L_95642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95643
.p2align 0x4
.long 0x839
L_95643:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95622
.p2align 0x4
.long 0x79B
L_95612:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95606
.p2align 0x4
.long 0xC69
L_95685:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95664
L_95687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95688
.p2align 0x4
.long 0xC6E
L_95688:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95664
.p2align 0x4
.long 0xC69
L_95648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95650
L_95654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95655
.p2align 0x4
.long 0xC6E
L_95655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95650
.p2align 0x4
.long 0x12EE
L_95530:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_95531:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_95532
L_95533:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	jne L_413249
L_95534:
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_95535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_36
.p2align 0x4
L_413249:
L_95532:
	movq (globalObjptr+0x20C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_316:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413251
L_95521:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413251:
L_95522:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EE
L_95702:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_95703
.p2align 0x4
.long 0x12F3
L_95587:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95589
L_95657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95658
.p2align 0x4
.long 0xC71
L_95658:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95589
.p2align 0x4
.long 0xC97
L_95599:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95601
L_95614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_95615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95615
.p2align 0x4
.long 0xC6C
L_95615:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_95601
.p2align 0x4
.long 0x12EF
L_95535:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_413261
L_95536:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_95526
L_95538:
	cmpl $0x0,%r13d
	jl L_413259
L_95539:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_1071:
	movl 0x34(%rbp),%r14d
	cmpl 0x30(%rbp),%r14d
	jnl L_413258
L_95541:
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1072:
	cmpl %ecx,0x70(%rbp)
	je L_413257
L_95542:
	movslq %ecx,%r14
	cmpq 0x48(%rbp),%r14
	jnb L_413256
L_95544:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r10)
	je L_413255
L_95545:
	incl %ecx
	jo L_413254
L_95547:
	jmp loop_1072
.p2align 0x4
L_413254:
L_95546:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413255:
.p2align 0x4,,0x7
L_95549:
	incl 0x34(%rbp)
	jmp loop_1071
.p2align 0x4
L_413256:
L_95543:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413257:
L_95550:
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_95551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_18
.p2align 0x4
L_413258:
L_95540:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413259:
L_95564:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413261:
L_95565:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x12F0
L_95551:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95552
L_95562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_95563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95563
.p2align 0x4
.long 0x12F1
L_95563:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_95552:
	movq 0x60(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_413263
L_95553:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413262
L_95554:
L_95555:
	movq $0x41C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_95556:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_95549
.p2align 0x4
L_413262:
L_95557:
	movq $0x41C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_95556
.p2align 0x4
L_413263:
L_95558:
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (x_317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
.long 0x12F0
x_317:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_95549
L_95559:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movb $0x6,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_95560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x12F0
L_95560:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_95549
.text
.p2align 0x4
.globl get_90
.hidden get_90
get_90:
L_95711:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95712
L_95766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95767
.p2align 0x4
.long 0x460
L_95767:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95712:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413275
L_95714:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413274
L_95715:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95717:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413273
L_95758:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD2A,%r10
	jne L_413272
L_95759:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413269
L_95718:
	incl %ecx
	jo L_413268
L_95720:
	cmpq $0x1,%r14
	je L_413266
L_95721:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_95717
.p2align 0x4
L_413266:
L_95722:
L_95723:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413267
L_95725:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_321
L_95757:
	movl %ecx,0x0(%r15)
x_321:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413267:
L_95724:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413268:
L_95719:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413269:
L_95761:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95724
L_95762:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413270
L_95764:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413270:
L_95763:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413272:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95718
.p2align 0x4
L_413273:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95718
.p2align 0x4
L_413274:
L_95765:
	xorl %ecx,%ecx
	jmp L_95723
.p2align 0x4
L_413275:
L_95713:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95727:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95728:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95729:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95730:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95731:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95732
L_95755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95756
.p2align 0x4
.long 0x4AF
L_95756:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95732:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95733:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95719
L_95734:
	cmpq $0x1,%r14
	je L_413277
L_95735:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95733
.p2align 0x4
L_413277:
L_95736:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95737
L_95753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95754
.p2align 0x4
.long 0x4E7
L_95754:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95737:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413278
L_95738:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_186:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413278:
L_95752:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_186
.p2align 0x4
.long 0x1
rev_184:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413284
L_95739:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413283
.p2align 0x4,,0x7
L_95741:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413282
L_95742:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95740
.p2align 0x4
L_413282:
L_95744:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413283:
L_95749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95750
.p2align 0x4
.long 0x45C
L_95750:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95741
.p2align 0x4
L_413284:
L_95751:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95744
.p2align 0x4
.long 0x1
L_95745:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95746
L_95747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95748
.p2align 0x4
.long 0x452
L_95748:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95746:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl flowVarInfoTysVarInfoTys_0
.hidden flowVarInfoTysVarInfoTys_0
flowVarInfoTysVarInfoTys_0:
L_95768:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95769
L_95801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95802
.p2align 0x4
.long 0x460
L_95802:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95769:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_95771
L_95772:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_413296
L_95774:
	cmpl %r11d,%r13d
	jne L_95776
L_95777:
	cmpl $0x0,%r13d
	jl L_413294
L_95778:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1073:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413293
.p2align 0x4,,0x7
L_95779:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_413292
L_95781:
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0x18(%rbp)
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x8(%rbp),%r11
	movq 0x8(%r11,%r15,1),%r10
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r11
	movq 0x0(%r11),%r10
	cmpq %r13,%r10
	je L_95788
L_95782:
	movq 0x8(%r13),%r15
	movq 0x8(%r10),%r14
	cmpq $0x1,%r15
	je L_413288
L_95783:
	cmpq $0x1,%r14
	je L_95788
L_95784:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413286
L_95785:
L_95786:
	movq $0x41E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	movq %r11,%r15
L_95787:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
.p2align 0x4,,0x7
L_95788:
	movl 0x18(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	jmp loop_1073
.p2align 0x4
L_413286:
L_95789:
	movq $0x41E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_95787
.p2align 0x4
L_413288:
L_95791:
	cmpq $0x1,%r14
	je L_95788
L_95792:
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_95788
L_95793:
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r10)
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x6,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_95794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413292:
L_95780:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413293:
L_95798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95799
.p2align 0x4
.long 0x45E
L_95799:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95779
.p2align 0x4
L_413294:
L_95776:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413296:
L_95771:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F9
L_95794:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_95788
.text
.p2align 0x4
.globl get_84
.hidden get_84
get_84:
L_95803:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95804
L_95858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95859
.p2align 0x4
.long 0x460
L_95859:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95804:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413308
L_95806:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413307
L_95807:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95809:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413306
L_95850:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD33,%r10
	jne L_413305
L_95851:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413302
L_95810:
	incl %ecx
	jo L_413301
L_95812:
	cmpq $0x1,%r14
	je L_413299
L_95813:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_95809
.p2align 0x4
L_413299:
L_95814:
L_95815:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413300
L_95817:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_322
L_95849:
	movl %ecx,0x0(%r15)
x_322:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413300:
L_95816:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413301:
L_95811:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413302:
L_95853:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95816
L_95854:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413303
L_95856:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413303:
L_95855:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413305:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95810
.p2align 0x4
L_413306:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95810
.p2align 0x4
L_413307:
L_95857:
	xorl %ecx,%ecx
	jmp L_95815
.p2align 0x4
L_413308:
L_95805:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95819:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95820:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95821:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF010)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95822:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95823:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95824
L_95847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95848
.p2align 0x4
.long 0x4AF
L_95848:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95824:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95825:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95811
L_95826:
	cmpq $0x1,%r14
	je L_413310
L_95827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95825
.p2align 0x4
L_413310:
L_95828:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95829
L_95845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95846
.p2align 0x4
.long 0x4E7
L_95846:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95829:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413311
L_95830:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_187:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413311:
L_95844:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_187
.p2align 0x4
.long 0x1
rev_185:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413317
L_95831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413316
.p2align 0x4,,0x7
L_95833:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413315
L_95834:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95832
.p2align 0x4
L_413315:
L_95836:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413316:
L_95841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95842
.p2align 0x4
.long 0x45C
L_95842:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95833
.p2align 0x4
L_413317:
L_95843:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95836
.p2align 0x4
.long 0x1
L_95837:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95838
L_95839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95840
.p2align 0x4
.long 0x452
L_95840:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95838:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1385
.hidden x_1385
x_1385:
L_95860:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95861
L_95916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95917
.p2align 0x4
.long 0x460
L_95917:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95861:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413328
L_95863:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413327
L_95864:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95866:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413326
L_95907:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD34,%r10
	jne L_413325
L_95908:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413322
L_95867:
	incl %ecx
	jo L_413321
L_95869:
	cmpq $0x1,%r14
	je L_413319
L_95870:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_95866
.p2align 0x4
L_413319:
L_95871:
L_95872:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413320
L_95874:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_323
L_95906:
	movl %ecx,0x0(%r15)
x_323:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413320:
L_95873:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413321:
L_95868:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413322:
L_95910:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95873
L_95911:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413323
L_95914:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_95913:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413323:
L_95912:
	movq %r10,%r15
	jmp L_95913
.p2align 0x4
L_413325:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95867
.p2align 0x4
L_413326:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95867
.p2align 0x4
L_413327:
L_95915:
	xorl %ecx,%ecx
	jmp L_95872
.p2align 0x4
L_413328:
L_95862:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95876:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95877:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95878:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95879:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95880:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95881
L_95904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95905
.p2align 0x4
.long 0x4AF
L_95905:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95881:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95882:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95868
L_95883:
	cmpq $0x1,%r14
	je L_413330
L_95884:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95882
.p2align 0x4
L_413330:
L_95885:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95886
L_95902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95903
.p2align 0x4
.long 0x4E7
L_95903:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95886:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413331
L_95887:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_188:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413331:
L_95901:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_188
.p2align 0x4
.long 0x1
rev_186:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413337
L_95888:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95889:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413336
.p2align 0x4,,0x7
L_95890:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413335
L_95891:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95889
.p2align 0x4
L_413335:
L_95893:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413336:
L_95898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95899
.p2align 0x4
.long 0x45C
L_95899:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95890
.p2align 0x4
L_413337:
L_95900:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95893
.p2align 0x4
.long 0x1
L_95894:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95895
L_95896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95897
.p2align 0x4
.long 0x452
L_95897:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95895:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_77
.hidden get_77
get_77:
L_95918:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95919
L_95973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95974
.p2align 0x4
.long 0x460
L_95974:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95919:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413348
L_95921:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413347
L_95922:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_95924:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413346
L_95965:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCF8,%r10
	jne L_413345
L_95966:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413342
L_95925:
	incl %ecx
	jo L_413341
L_95927:
	cmpq $0x1,%r14
	je L_413339
L_95928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_95924
.p2align 0x4
L_413339:
L_95929:
L_95930:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413340
L_95932:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_324
L_95964:
	movl %ecx,0x0(%r15)
x_324:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413340:
L_95931:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413341:
L_95926:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413342:
L_95968:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95931
L_95969:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413343
L_95971:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413343:
L_95970:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413345:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95925
.p2align 0x4
L_413346:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_95925
.p2align 0x4
L_413347:
L_95972:
	xorl %ecx,%ecx
	jmp L_95930
.p2align 0x4
L_413348:
L_95920:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95934:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_95935:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_95936:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_95937:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_95938:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95939
L_95962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95963
.p2align 0x4
.long 0x4AF
L_95963:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95939:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95940:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95926
L_95941:
	cmpq $0x1,%r14
	je L_413350
L_95942:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95940
.p2align 0x4
L_413350:
L_95943:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95944
L_95960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95961
.p2align 0x4
.long 0x4E7
L_95961:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95944:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413351
L_95945:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_189:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413351:
L_95959:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_189
.p2align 0x4
.long 0x1
rev_187:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413357
L_95946:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95947:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413356
.p2align 0x4,,0x7
L_95948:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413355
L_95949:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95947
.p2align 0x4
L_413355:
L_95951:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413356:
L_95956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95957
.p2align 0x4
.long 0x45C
L_95957:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95948
.p2align 0x4
L_413357:
L_95958:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95951
.p2align 0x4
.long 0x1
L_95952:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95953
L_95954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95955
.p2align 0x4
.long 0x452
L_95955:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95953:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1442
.hidden x_1442
x_1442:
L_95975:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95976
L_96021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96022
.p2align 0x4
.long 0x63D
L_96022:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95976:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_95977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_95977:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95978
L_96019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96020
.p2align 0x4
.long 0x9E4
L_96020:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95978:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413360
L_95979:
L_95980:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413360:
L_96018:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_95980
.p2align 0x4
.long 0xDEA
L_95981:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_95982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
.long 0xBBE
L_95982:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413362
L_95983:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_95984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
L_413362:
L_96017:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_95984:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95985
L_96015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96016
.p2align 0x4
.long 0x10FB
L_96016:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95985:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413365
L_95986:
	cmpq $0x1,%r15
	je L_413363
L_95987:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413363:
L_95990:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413364
L_95991:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413364:
L_95994:
	movq $0x34BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_95995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413365:
L_96001:
	movq $0x36CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x21,0x0(%rbp)
	movq $0x1F,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_95988:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95990
L_96011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96012
.p2align 0x4
.long 0x10FB
L_96012:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95990
.p2align 0x4
.long 0x10F4
L_95992:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95994
L_96008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96009
.p2align 0x4
.long 0x10FA
L_96009:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_95994
.p2align 0x4
.long 0x10F6
L_95995:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95996
L_96006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96007
.p2align 0x4
.long 0xDE8
L_96007:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95996:
	movq $0x3289,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_95997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_95997:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95998
L_96004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96005
.p2align 0x4
.long 0x10F9
L_96005:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_95998:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_95999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_95999:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96001
L_96002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96003
.p2align 0x4
.long 0x10F8
L_96003:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96001
.text
.p2align 0x4
.globl x_1441
.hidden x_1441
x_1441:
L_96023:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96024
L_96069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96070
.p2align 0x4
.long 0x63D
L_96070:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96024:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96025:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96026
L_96067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96068
.p2align 0x4
.long 0x9E4
L_96068:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96026:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413373
L_96027:
L_96028:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413373:
L_96066:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96028
.p2align 0x4
.long 0xDEA
L_96029:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
.long 0xBBE
L_96030:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413375
L_96031:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
L_413375:
L_96065:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96032:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96033
L_96063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96064
.p2align 0x4
.long 0x10FB
L_96064:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96033:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413378
L_96034:
	cmpq $0x1,%r15
	je L_413376
L_96035:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413376:
L_96038:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413377
L_96039:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413377:
L_96042:
	movq $0x34BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413378:
L_96049:
	movq $0x36CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x22,0x0(%rbp)
	movq $0x21,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96036:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96038
L_96059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96060
.p2align 0x4
.long 0x10FB
L_96060:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96038
.p2align 0x4
.long 0x10F4
L_96040:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96042
L_96056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96057
.p2align 0x4
.long 0x10FA
L_96057:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96042
.p2align 0x4
.long 0x10F6
L_96043:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96044
L_96054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96055
.p2align 0x4
.long 0xDE8
L_96055:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96044:
	movq $0x3289,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96045:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96046
L_96052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96053
.p2align 0x4
.long 0x10F9
L_96053:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96046:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96049
L_96050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96051
.p2align 0x4
.long 0x10F8
L_96051:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96049
.text
.p2align 0x4
.globl x_1440
.hidden x_1440
x_1440:
L_96071:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96072
L_96117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96118
.p2align 0x4
.long 0x63D
L_96118:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96072:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96073:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96074
L_96115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96116
.p2align 0x4
.long 0x9E4
L_96116:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96074:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413386
L_96075:
L_96076:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413386:
L_96114:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96076
.p2align 0x4
.long 0xDEA
L_96077:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
.long 0xBBE
L_96078:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413388
L_96079:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
L_413388:
L_96113:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96080:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96081
L_96111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96112
.p2align 0x4
.long 0x10FB
L_96112:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96081:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413391
L_96082:
	cmpq $0x1,%r15
	je L_413389
L_96083:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413389:
L_96086:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413390
L_96087:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413390:
L_96090:
	movq $0x34BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413391:
L_96097:
	movq $0x36B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0xE,0x0(%rbp)
	movq $0xE,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96084:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96086
L_96107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96108
.p2align 0x4
.long 0x10FB
L_96108:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96086
.p2align 0x4
.long 0x10F4
L_96088:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96090
L_96104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96105
.p2align 0x4
.long 0x10FA
L_96105:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96090
.p2align 0x4
.long 0x10F6
L_96091:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96092
L_96102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96103
.p2align 0x4
.long 0xDE8
L_96103:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96092:
	movq $0x3289,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96093:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96094
L_96100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96101
.p2align 0x4
.long 0x10F9
L_96101:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96094:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96095:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96097
L_96098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96099
.p2align 0x4
.long 0x10F8
L_96099:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96097
.text
.p2align 0x4
.globl x_1439
.hidden x_1439
x_1439:
L_96119:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96120
L_96165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96166
.p2align 0x4
.long 0x63D
L_96166:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96120:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96121:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96122
L_96163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96164
.p2align 0x4
.long 0x9E4
L_96164:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96122:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413399
L_96123:
L_96124:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413399:
L_96162:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96124
.p2align 0x4
.long 0xDEA
L_96125:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
.long 0xBBE
L_96126:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413401
L_96127:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
L_413401:
L_96161:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96128:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96129
L_96159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96160
.p2align 0x4
.long 0x10FB
L_96160:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96129:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413404
L_96130:
	cmpq $0x1,%r15
	je L_413402
L_96131:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413402:
L_96134:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413403
L_96135:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413403:
L_96138:
	movq $0x34BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413404:
L_96145:
	movq $0x36CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x22,0x0(%rbp)
	movq $0x21,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96132:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96134
L_96155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96156
.p2align 0x4
.long 0x10FB
L_96156:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96134
.p2align 0x4
.long 0x10F4
L_96136:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96138
L_96152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96153
.p2align 0x4
.long 0x10FA
L_96153:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96138
.p2align 0x4
.long 0x10F6
L_96139:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96140
L_96150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96151
.p2align 0x4
.long 0xDE8
L_96151:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96140:
	movq $0x3289,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96141:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96142
L_96148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96149
.p2align 0x4
.long 0x10F9
L_96149:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96142:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96143:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96145
L_96146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96147
.p2align 0x4
.long 0x10F8
L_96147:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96145
.text
.p2align 0x4
.globl x_1438
.hidden x_1438
x_1438:
L_96167:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96168
L_96213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96214
.p2align 0x4
.long 0x63D
L_96214:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96168:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96169:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96170
L_96211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96212
.p2align 0x4
.long 0x9E4
L_96212:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96170:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413412
L_96171:
L_96172:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413412:
L_96210:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96172
.p2align 0x4
.long 0xDEA
L_96173:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBE
L_96174:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413414
L_96175:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_413414:
L_96209:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96176:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96177
L_96207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96208
.p2align 0x4
.long 0x10FB
L_96208:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96177:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413417
L_96178:
	cmpq $0x1,%r15
	je L_413415
L_96179:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413415:
L_96182:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413416
L_96183:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413416:
L_96186:
	movq $0x34B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413417:
L_96193:
	movq $0x36D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x29,0x0(%rbp)
	movq $0x25,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96180:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96182
L_96203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96204
.p2align 0x4
.long 0x10FB
L_96204:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96182
.p2align 0x4
.long 0x10F4
L_96184:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96186
L_96200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96201
.p2align 0x4
.long 0x10FA
L_96201:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96186
.p2align 0x4
.long 0x10F6
L_96187:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96188
L_96198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96199
.p2align 0x4
.long 0xDE8
L_96199:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96188:
	movq $0x325F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96189:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96190
L_96196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96197
.p2align 0x4
.long 0x10F9
L_96197:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96190:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96191:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96193
L_96194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96195
.p2align 0x4
.long 0x10F8
L_96195:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96193
.text
.p2align 0x4
.globl x_1437
.hidden x_1437
x_1437:
L_96215:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96216
L_96261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96262
.p2align 0x4
.long 0x63D
L_96262:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96216:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96217:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96218
L_96259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96260
.p2align 0x4
.long 0x9E4
L_96260:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96218:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413425
L_96219:
L_96220:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413425:
L_96258:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96220
.p2align 0x4
.long 0xDEA
L_96221:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBE
L_96222:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413427
L_96223:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_413427:
L_96257:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96224:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96225
L_96255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96256
.p2align 0x4
.long 0x10FB
L_96256:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96225:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413430
L_96226:
	cmpq $0x1,%r15
	je L_413428
L_96227:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413428:
L_96230:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413429
L_96231:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413429:
L_96234:
	movq $0x34B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413430:
L_96241:
	movq $0x36D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x2A,0x0(%rbp)
	movq $0x26,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96228:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96230
L_96251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96252
.p2align 0x4
.long 0x10FB
L_96252:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96230
.p2align 0x4
.long 0x10F4
L_96232:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96234
L_96248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96249
.p2align 0x4
.long 0x10FA
L_96249:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96234
.p2align 0x4
.long 0x10F6
L_96235:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96236
L_96246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96247
.p2align 0x4
.long 0xDE8
L_96247:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96236:
	movq $0x325F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96237:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96238
L_96244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96245
.p2align 0x4
.long 0x10F9
L_96245:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96238:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96239:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96241
L_96242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96243
.p2align 0x4
.long 0x10F8
L_96243:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96241
.text
.p2align 0x4
.globl x_1436
.hidden x_1436
x_1436:
L_96263:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96264
L_96309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96310
.p2align 0x4
.long 0x63D
L_96310:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96264:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96265:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96266
L_96307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96308
.p2align 0x4
.long 0x9E4
L_96308:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96266:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413438
L_96267:
L_96268:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413438:
L_96306:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96268
.p2align 0x4
.long 0xDEA
L_96269:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBE
L_96270:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413440
L_96271:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_413440:
L_96305:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96272:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96273
L_96303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96304
.p2align 0x4
.long 0x10FB
L_96304:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96273:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413443
L_96274:
	cmpq $0x1,%r15
	je L_413441
L_96275:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413441:
L_96278:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413442
L_96279:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413442:
L_96282:
	movq $0x34B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413443:
L_96289:
	movq $0x36AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x9,0x0(%rbp)
	movq $0x9,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96276:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96278
L_96299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96300
.p2align 0x4
.long 0x10FB
L_96300:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96278
.p2align 0x4
.long 0x10F4
L_96280:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96282
L_96296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96297
.p2align 0x4
.long 0x10FA
L_96297:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96282
.p2align 0x4
.long 0x10F6
L_96283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96284
L_96294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96295
.p2align 0x4
.long 0xDE8
L_96295:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96284:
	movq $0x325F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96285:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96286
L_96292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96293
.p2align 0x4
.long 0x10F9
L_96293:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96286:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96287:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96289
L_96290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96291
.p2align 0x4
.long 0x10F8
L_96291:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96289
.text
.p2align 0x4
.globl x_1435
.hidden x_1435
x_1435:
L_96311:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96312
L_96357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96358
.p2align 0x4
.long 0x63D
L_96358:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96312:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_96313:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96314
L_96355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96356
.p2align 0x4
.long 0x9E4
L_96356:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96314:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413451
L_96315:
L_96316:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_413451:
L_96354:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96316
.p2align 0x4
.long 0xDEA
L_96317:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_96318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBE
L_96318:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_413453
L_96319:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_413453:
L_96353:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_96320:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96321
L_96351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96352
.p2align 0x4
.long 0x10FB
L_96352:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96321:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413456
L_96322:
	cmpq $0x1,%r15
	je L_413454
L_96323:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413454:
L_96326:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_413455
L_96327:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413455:
L_96330:
	movq $0x34B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_413456:
L_96337:
	movq $0x36D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x29,0x0(%rbp)
	movq $0x25,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_96324:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96326
L_96347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96348
.p2align 0x4
.long 0x10FB
L_96348:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96326
.p2align 0x4
.long 0x10F4
L_96328:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96330
L_96344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96345
.p2align 0x4
.long 0x10FA
L_96345:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96330
.p2align 0x4
.long 0x10F6
L_96331:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96332
L_96342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96343
.p2align 0x4
.long 0xDE8
L_96343:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96332:
	movq $0x325F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_96333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_96333:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96334
L_96340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96341
.p2align 0x4
.long 0x10F9
L_96341:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96334:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_96335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_96335:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96337
L_96338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96339
.p2align 0x4
.long 0x10F8
L_96339:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_96337
.text
.p2align 0x4
.globl visit_8
.hidden visit_8
visit_8:
L_96359:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96360
L_96648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96649
.p2align 0x4
.long 0x4DF
L_96649:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96360:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413474
L_96362:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413473
L_96363:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_96365:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413472
L_96406:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD34,%r10
	jne L_413471
L_96407:
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413466
L_96366:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_413465
L_96368:
	cmpq $0x1,%r14
	je L_413463
L_96369:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_96365
.p2align 0x4
L_413463:
	movl %r10d,%ecx
L_96371:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413464
L_96373:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_325
L_96405:
	movl %ecx,0x0(%r15)
x_325:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413464:
L_96372:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413465:
L_96367:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413466:
L_96409:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96410
L_96645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_96646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96646
.p2align 0x4
.long 0xA2C
L_96646:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_96410:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96372
L_96411:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413468
L_96412:
	movq 0x38(%rbp),%r15
L_96413:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_413467
L_96414:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x3277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_96415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
L_413467:
L_96643:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413468:
L_96644:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_96413
.p2align 0x4
L_413471:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96366
.p2align 0x4
L_413472:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96366
.p2align 0x4
L_413473:
L_96647:
	xorl %ecx,%ecx
	jmp L_96371
.p2align 0x4
L_413474:
L_96361:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96375:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4ED
L_96415:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96416
L_96641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_96642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96642
.p2align 0x4
.long 0x4F1
L_96642:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_96416:
	movq 0x8(%rbp),%r10
	movq 0x70(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x68(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x60(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x58(%r10),%r9
	movq 0x50(%r10),%r15
	movq 0x48(%r10),%r11
	movq 0x40(%r10),%r8
	movq 0x38(%r10),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x18(%r10),%rsp
	movq %rsp,0x58(%rbp)
	movq 0x8(%r10),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_413500
L_96417:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_413497
	cmpq $0xEBF,%r14
	je L_413494
	cmpq $0xEC0,%r14
	je L_413492
	cmpq $0xEC1,%r14
	je L_413491
	cmpq $0xEC2,%r14
	je L_413490
	cmpq $0xEC3,%r14
	je L_413489
L_96418:
	movq 0x10(%r10),%r9
	movq 0x8(%r10),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%r10
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%rsp
	movq 0x0(%rsp),%r14
	incq %r14
	jo L_96361
L_96419:
	movq %r14,0x0(%rsp)
	movq 0x0(%r15),%rsp
	cmpq $0x1,%rsp
	je L_413487
L_96420:
	movq 0x0(%rsp),%r14
	movq 0x8(%rsp),%rsp
	xorl %ecx,%ecx
	movq %rsp,%r15
	movq %r9,%r13
	movq %r8,%r9
.p2align 0x4,,0x7
L_96422:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_413486
L_96461:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xD34,%r8
	jne L_413485
L_96462:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_413479
	movq %r11,(localObjptr+0x10)(%rip)
L_96423:
	incl %ecx
	jo L_96367
L_96424:
	cmpq $0x1,%r15
	je L_413476
L_96425:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_96422
.p2align 0x4
L_413476:
L_96426:
L_96427:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96372
L_96428:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_326
L_96460:
	movl %ecx,0x0(%r15)
x_326:
	movq %r13,0x8(%rbp)
	movq %r10,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_96430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413479:
L_96464:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96372
L_96465:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413483
L_96489:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
L_96467:
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_413482
L_96470:
	testl %r13d,%r13d
	jz L_413481
L_96471:
	cmpq $0x0,%r15
	jna L_413480
L_96474:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
L_96475:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_413480:
L_96473:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413481:
L_96488:
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_96475
.p2align 0x4
L_413482:
L_96469:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413483:
L_96466:
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_96467
.p2align 0x4
L_413485:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_96423
.p2align 0x4
L_413486:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_96423
.p2align 0x4
L_413487:
L_96490:
	xorl %ecx,%ecx
	movq %r9,%r13
	jmp L_96427
.p2align 0x4
L_413489:
L_96625:
	movq 0x20(%r10),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r10),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_96626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_413490:
L_96562:
	movq %r9,0x68(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x50(%rbp)
	addq $0x60,%rbp
	leaq (L_96563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_84
.p2align 0x4
L_413491:
L_96512:
	movq %r8,0x80(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	addq $0x78,%rbp
	leaq (L_96513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1312
.p2align 0x4
L_413492:
L_96507:
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96469
L_96509:
	movl %r13d,0x60(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_96510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_413494:
L_96501:
	movq 0x0(%r10),%r15
	cmpq $0x1,0x10(%rbp)
	je L_413496
L_96502:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96469
L_96504:
	movl %r13d,0x48(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_96505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_413496:
L_96506:
	movq (globalObjptr+0x1E88)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413497:
L_96491:
	movq 0x0(%r10),%r15
	cmpq $0x1,0x18(%rbp)
	je L_413499
L_96492:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96469
L_96494:
	movl %r13d,0x48(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_96495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_413499:
L_96500:
	movq (globalObjptr+0x1E90)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413500:
L_96483:
	movq $0x36DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0x2F,0x0(%rbp)
	movq $0x2D,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x1
L_96376:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_96430:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8EF
L_96476:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96477
L_96486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96487
.p2align 0x4
.long 0x9E4
L_96487:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96477:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96469
L_96479:
	movl %r13d,0x70(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_96480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x12FC
L_96626:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_96627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
.long 0x8A7
L_96563:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96564
L_96623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96624
.p2align 0x4
.long 0x9E4
L_96624:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96564:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96469
L_96566:
	movl %r13d,0x88(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_96567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0xC0B
L_96513:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96514
L_96560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_96561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96561
.p2align 0x4
.long 0xC18
L_96561:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_96514:
	movq $0xD03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413506
L_96559:
	movq 0x0(%r15),%r13
	movq $0x367F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x70(%rbp)
	movq %r14,0x10(%r15)
	movq %r15,0x68(%rbp)
	movb $0x14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_96532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_413506:
L_96515:
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x12F6
L_96510:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
.long 0x4ED
L_96505:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xEF08)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x4ED
L_96495:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x4B0
L_96377:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_96431:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x12F5
L_96480:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_96481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1457
.p2align 0x4
.long 0x12FD
L_96627:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xF048)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_96628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x12FB
L_96567:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF018)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_96568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x84D
L_96532:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96533
L_96550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96551
.p2align 0x4
.long 0xBD6
L_96551:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96533:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_96483
L_96534:
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (length_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
.long 0x12F7
L_96516:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_413511
L_96518:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_413510
L_96520:
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_413510:
L_96519:
	movq (globalObjptr+0x2188)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413511:
L_96517:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67D
L_96511:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x4ED
L_96496:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96483
L_96498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_96499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96499
.p2align 0x4
.long 0x4F1
L_96499:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_96483
.p2align 0x4
.long 0x5B0
L_96378:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_96432:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4ED
L_96481:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96483
L_96484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_96485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96485
.p2align 0x4
.long 0x4F1
L_96485:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_96483
.p2align 0x4
.long 0x12FE
L_96628:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_96629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x103D
L_96568:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96569
L_96621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96622
.p2align 0x4
.long 0x1041
L_96622:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96569:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_413523
	cmpq $0x2,%r15
	je L_413521
L_96570:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x60(%rbp)
	je L_413514
L_96571:
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
L_413514:
L_96575:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_413519
	cmpq $0x2,%r15
	je L_413516
L_96576:
	cmpq $0x1,0x68(%rbp)
	je L_96483
L_96577:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
L_413516:
L_96583:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_96483
L_96584:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_413517
L_96585:
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF030)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
L_413517:
L_96587:
	movq (globalObjptr+0x1E78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413519:
L_96580:
	cmpq $0x1,0x68(%rbp)
	je L_96483
L_96581:
	movq (globalObjptr+0x1E98)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413521:
L_96616:
	cmpq $0x1,0x60(%rbp)
	jne bug_258
L_96618:
	cmpq $0x1,0x68(%rbp)
	je L_96483
bug_258:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0xF110)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413523:
L_96594:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_413525
L_96595:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_96587
L_96596:
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0xF030)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_96597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
L_413525:
L_96611:
	cmpq $0x1,0x10(%rbp)
	je L_413528
L_96612:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_96483
L_96613:
	xchgq %r13,%r15
L_96601:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_413526
L_96602:
	movq %r15,0x48(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xF038)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
L_413526:
L_96603:
	movq (globalObjptr+0x1EA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413528:
L_96599:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_96483
L_96600:
	jmp L_96601
.p2align 0x4
.long 0x103B
length_21:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96535
L_96547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96548
.p2align 0x4
.long 0xBD6
L_96548:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96535:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96469
L_96537:
	testl %r13d,%r13d
	jz L_96483
L_96538:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_96539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x12F8
L_96521:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96522
L_96557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_96558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96558
.p2align 0x4
.long 0x804
L_96558:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_96522:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1454,%r15
	jne L_96517
L_96523:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_413534
L_96524:
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_413534:
L_96531:
	movq $0x3629,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x68(%rbp)
	movb $0x13,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_96532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x51F
L_96379:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96380
L_96403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96404
.p2align 0x4
.long 0x4AF
L_96404:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96380:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96381:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96367
L_96382:
	cmpq $0x1,%r14
	je L_413537
L_96383:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96381
.p2align 0x4
L_413537:
L_96384:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96385
L_96401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96402
.p2align 0x4
.long 0x4E7
L_96402:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96385:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413538
L_96386:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_190:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413538:
L_96400:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_190
.p2align 0x4
.long 0x5B0
L_96433:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x12FE
L_96629:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96630
L_96638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_96639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96639
.p2align 0x4
.long 0x11D4
L_96639:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_96630:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96469
L_96632:
	movl %r13d,0x78(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x103E
L_96572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF020)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_96573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x103F
L_96578:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xF028)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_6
.p2align 0x4
.long 0x1039
L_96597:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96599
L_96608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96609
.p2align 0x4
.long 0x1040
L_96609:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96599
.p2align 0x4
.long 0x1
L_96539:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96540
L_96544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96545
.p2align 0x4
.long 0x452
L_96545:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96540:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1E80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x12F9
L_96525:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96526
L_96554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_96555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96555
.p2align 0x4
.long 0x804
L_96555:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_96526:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1454,%r13
	jne L_413546
L_96528:
	movl 0x0(%r14),%r13d
	movq $0x28A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movb $0x3,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_96529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_413546:
L_96527:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_188:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413550
L_96387:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96388:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413549
.p2align 0x4,,0x7
L_96389:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413548
L_96390:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96388
.p2align 0x4
L_413548:
L_96392:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413549:
L_96397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96398
.p2align 0x4
.long 0x45C
L_96398:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96389
.p2align 0x4
L_413550:
L_96399:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96392
.p2align 0x4
.long 0x51F
L_96434:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96435
L_96458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96459
.p2align 0x4
.long 0x4AF
L_96459:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96435:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96436:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96367
L_96437:
	cmpq $0x1,%r14
	je L_413551
L_96438:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96436
.p2align 0x4
L_413551:
L_96439:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96440
L_96456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96457
.p2align 0x4
.long 0x4E7
L_96457:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96440:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413552
L_96441:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_191:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413552:
L_96455:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_191
.p2align 0x4
.long 0x12FF
L_96633:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_96634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1457
.p2align 0x4
.long 0x66D
L_96573:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96575
L_96591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96592
.p2align 0x4
.long 0x66C
L_96592:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_96575
.p2align 0x4
.long 0x1
bug_257:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96541
L_96542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96543
.p2align 0x4
.long 0x452
L_96543:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96541:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x12F7
L_96529:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96531
L_96552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_96553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96553
.p2align 0x4
.long 0x12FA
L_96553:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_96531
.p2align 0x4
.long 0x1
L_96393:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96394
L_96395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96396
.p2align 0x4
.long 0x452
L_96396:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96394:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_189:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413562
L_96442:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413561
.p2align 0x4,,0x7
L_96444:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413560
L_96445:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96443
.p2align 0x4
L_413560:
L_96447:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413561:
L_96452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96453
.p2align 0x4
.long 0x45C
L_96453:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96444
.p2align 0x4
L_413562:
L_96454:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96447
.p2align 0x4
.long 0x1044
L_96634:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_96635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
.long 0x1
L_96448:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96449
L_96450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96451
.p2align 0x4
.long 0x452
L_96451:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96449:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67D
L_96635:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_96473
L_96637:
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_96496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.text
.p2align 0x4
.globl coerces_6
.hidden coerces_6
coerces_6:
L_96650:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_96668
L_96651:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413570
L_96652:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96654
L_96655:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_413568
L_96657:
	cmpl %r11d,%r13d
	je L_413565
L_96658:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413565:
L_96662:
	cmpl $0x0,0x18(%rbp)
	jl L_413567
L_96663:
	xorl %ecx,%ecx
loop_1074:
	cmpl 0x18(%rbp),%ecx
	jnl L_413566
L_96665:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x10(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_96666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_413566:
L_96664:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413567:
L_96667:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413568:
L_96654:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413570:
L_96668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96669
.p2align 0x4
.long 0x45C
L_96669:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96652
.p2align 0x4
.long 0x1
bug_259:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96659
L_96660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96661
.p2align 0x4
.long 0x452
L_96661:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96659:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F9
L_96666:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x10(%rbp),%ecx
	jmp loop_1074
.text
.p2align 0x4
.globl x_1434
.hidden x_1434
x_1434:
L_96670:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_96776
L_96671:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413625
L_96672:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_413573
	jmp *jumpTable_193(,%rax,8)
.data
.p2align 0x4
jumpTable_193:
.quad L_413624,L_413623,L_413622,L_96673,L_413620,L_413619,L_413618,L_96673,L_413617,L_413616
.text
.p2align 0x4
L_413573:
L_96673:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_413574
	jmp *jumpTable_194(,%rax,8)
.data
.p2align 0x4
jumpTable_194:
.quad L_413615,L_413614,L_413613,L_413612,L_413611,L_413610,L_413609,L_413608,L_413607,L_413606,L_413595,L_413594,L_413593,L_413592,L_413591,L_413590,L_413589,L_413588,L_413587,L_413586,L_413585,L_413584,L_413583,L_413582,L_413581,L_413580,L_413579,L_413578,L_413577,L_413576
.text
.p2align 0x4
L_413574:
L_96674:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_413575
L_96676:
	movl %r15d,0x0(%r13)
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (x_327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_413575:
L_96675:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413576:
L_96767:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_8
.p2align 0x4
L_413577:
L_96763:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_413578:
L_96762:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1435
.p2align 0x4
L_413579:
L_96761:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1436
.p2align 0x4
L_413580:
L_96760:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1437
.p2align 0x4
L_413581:
L_96759:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1438
.p2align 0x4
L_413582:
L_96758:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1439
.p2align 0x4
L_413583:
L_96757:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1440
.p2align 0x4
L_413584:
L_96756:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1441
.p2align 0x4
L_413585:
L_96755:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1442
.p2align 0x4
L_413586:
L_96752:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_413587:
L_96742:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_96743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_413588:
L_96741:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp goto_2
.p2align 0x4
L_413589:
L_96740:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_9
.p2align 0x4
L_413590:
L_96739:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_10
.p2align 0x4
L_413591:
L_96731:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_96732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_413592:
L_96730:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1443
.p2align 0x4
L_413593:
L_96729:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_11
.p2align 0x4
L_413594:
L_96725:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_413595:
L_96700:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_413605
L_96702:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1075:
	cmpl %ecx,%ebx
	je L_413599
L_96703:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_413598
L_96706:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	je L_413597
L_96707:
	incl %ebx
	jo L_96675
L_96708:
	jmp loop_1075
.p2align 0x4
L_413597:
L_96709:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413598:
L_96705:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413599:
L_96710:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96711
L_96723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96724
.p2align 0x4
.long 0x65B
L_96724:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_96711:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_96718
L_96712:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_96713:
	movq 0x0(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_413602
L_96714:
	cmpq $0x1,%r15
	je L_413600
L_96715:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_96713
.p2align 0x4
L_413600:
L_96716:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96718
L_96719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96720
.p2align 0x4
.long 0x65B
L_96720:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_96718:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413602:
L_96721:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413605:
L_96701:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413606:
L_96699:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1444
.p2align 0x4
L_413607:
L_96698:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1445
.p2align 0x4
L_413608:
L_96697:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1446
.p2align 0x4
L_413609:
L_96696:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1447
.p2align 0x4
L_413610:
L_96685:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_413611:
L_96684:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1448
.p2align 0x4
L_413612:
L_96683:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1449
.p2align 0x4
L_413613:
L_96682:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1450
.p2align 0x4
L_413614:
L_96681:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1451
.p2align 0x4
L_413615:
L_96678:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_413616:
L_96775:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413617:
L_96774:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413618:
L_96773:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413619:
L_96772:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413620:
L_96771:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413622:
L_96770:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413623:
L_96769:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413624:
L_96768:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413625:
L_96776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96777
.p2align 0x4
.long 0x460
L_96777:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_96672
.p2align 0x4
.long 0x1
x_327:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_96675
L_96677:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
x_329:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96764
L_96765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96766
.p2align 0x4
.long 0x2C
L_96766:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96764:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96753:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_96675
L_96754:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_96743:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96744
L_96750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96751
.p2align 0x4
.long 0x45F
L_96751:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_96744:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_96705
L_96746:
	movq 0x0(%r14,%r15,8),%r13
L_96747:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_413630
L_96749:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_413630:
L_96748:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_96732:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96733
L_96737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_96738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96738
.p2align 0x4
.long 0x721
L_96738:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_96733:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_413633
L_96734:
L_96735:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413633:
L_96736:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_96735
.p2align 0x4
.long 0x2B
x_328:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96726
L_96727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96728
.p2align 0x4
.long 0x2C
L_96728:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96726:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_96686:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96687
L_96694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96695
.p2align 0x4
.long 0x2C
L_96695:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96687:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_413638
L_96688:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_413637
L_96689:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_413636
L_96690:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413636:
L_96691:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413637:
L_96692:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413638:
L_96693:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96679:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_96675
L_96680:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldi_6
.hidden unfoldi_6
unfoldi_6:
L_96778:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96779
L_99062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_99063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99063
.p2align 0x4
.long 0x458
L_99063:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_96779:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_413809
L_96780:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97258
L_96781:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1427,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96782
.p2align 0x4
.long 0x453
L_96782:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_96783:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1076:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413807
.p2align 0x4,,0x7
L_96784:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_413806
L_96786:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_413805
L_96787:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1F32,%rax
	cmpq $0x13,%rax
	ja L_413641
	jmp *jumpTable_195(,%rax,8)
.data
.p2align 0x4
jumpTable_195:
.quad L_413801,L_413788,L_413782,L_413781,L_413780,L_413778,L_413772,L_413768,L_413766,L_413764,L_413763,L_413748,L_413729,L_413672,L_413671,L_413648,L_413647,L_413646,L_413644,L_413642
.text
.p2align 0x4
L_413641:
L_96788:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%r10),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_413642:
L_98551:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x38(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%r15),%r13
	movq 0x0(%r13,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x60(%rbp)
	movq 0x18(%r10),%r9
	movq 0x40(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r8
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_413643
L_98553:
	movl %r13d,0x80(%rbp)
	movq $0x3941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	addq $0x28,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_98554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_413643:
L_96866:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413644:
L_98206:
	movq 0x0(%rbp),%r15
	movq 0x78(%r15),%r13
	movq 0x70(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x68(%r15),%r10
	movq 0x60(%r15),%r9
	movq 0x58(%r15),%r8
	movq 0x50(%r15),%rsp
	movq 0x48(%r15),%rsi
	movq 0x40(%r15),%rdi
	movq %rdi,0x28(%rbp)
	movq 0x38(%r15),%rdi
	movq %rdi,0x30(%rbp)
	movq 0x30(%r15),%rdi
	movq %rdi,0x38(%rbp)
	movq 0x28(%r15),%rdi
	movq %rdi,0x40(%rbp)
	movq 0x20(%r15),%rdi
	movq %rdi,0x48(%rbp)
	movq 0x18(%r15),%rdi
	movq %rdi,0x50(%rbp)
	movq 0x10(%r15),%rdi
	movq %rdi,0x58(%rbp)
	movq 0x8(%r15),%rdi
	movq %rdi,0x60(%rbp)
	movq 0x0(%r15),%rdi
	movq %rdi,0x68(%rbp)
	movslq %r14d,%rdi
	movq 0x80(%r15),%r14
	movq 0x0(%r14,%rdi,8),%rdx
	movq 0x0(%rdx),%rcx
	movq %rcx,0x70(%rbp)
	movq 0x8(%rdx),%rcx
	movq 0x10(%rdx),%rbx
	movq %rbx,0x78(%rbp)
	movq 0x18(%rdx),%rax
	movq %rax,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rcx),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdi
	cmpq %r15,%rdi
	jne L_96866
L_98208:
	movl %r14d,0x98(%rbp)
	movq $0x4077,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	movq %rsi,0x38(%r15)
	movq %rcx,0x40(%r15)
	addq $0x50,%r12
	movq %rbx,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_98209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413646:
L_98201:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_98202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_1
.p2align 0x4
L_413647:
L_98152:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	movq 0x18(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x18(%r11),%r9
	movq %r9,0x48(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_98153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_413648:
L_97963:
	movq 0x0(%rbp),%r13
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq %r9,0x20(%rbp)
	movq 0x18(%r13),%r9
	movq %r9,0x28(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r13),%r9
	movq %r9,0x40(%rbp)
	movslq %r14d,%r15
	movq 0x38(%r13),%r14
	movq 0x0(%r14,%r15,8),%r9
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r9),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r9),%r13
	movq %r13,0x58(%rbp)
L_97964:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_413670
L_97966:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_413668
	cmpq $0xEBF,%r15
	je L_413665
	cmpq $0xEC2,%r15
	je L_413649
	movq %r9,%r15
L_97965:
.p2align 0x4,,0x7
L_96797:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1076
.p2align 0x4
L_413649:
L_97978:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r15
	je L_413661
	cmpq $0x2,%r15
	je L_413657
L_97979:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_413656
	cmpq $0x2,%r14
	je L_413653
L_97980:
	movq %r14,%r15
	movq %r13,%r14
	xchgq %r10,%r11
L_97981:
	movq $0x240B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1F47,%r15
	je L_413652
	cmpq $0x1F48,%r15
	je L_413651
	cmpq $0x1F49,%r15
	je L_413650
L_97982:
	movq %r13,0x70(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
L_97983:
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_97984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_85
.p2align 0x4
L_413650:
L_98128:
	movq %r13,0x70(%rbp)
	movq 0x0(%r11),%r15
L_98129:
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_98130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_413651:
L_98117:
	movq %r13,0x70(%rbp)
	movq 0x0(%r11),%r15
L_98118:
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_98119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_413652:
L_98109:
	movq %r13,0x70(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
L_98110:
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_98111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_86
.p2align 0x4
L_413653:
L_98137:
	cmpq $0x1,%r11
	je L_413655
	cmpq $0x2,%r11
	je L_413654
L_98138:
	movq 0x8(%r11),%r15
	movq %r13,%r14
	movq %r10,%r11
	jmp L_97981
.p2align 0x4
L_413654:
	movq %r13,%r15
	movq %r10,%r11
L_98140:
	movq $0x2,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_97981
.p2align 0x4
L_413655:
	movq %r13,%r15
	movq %r10,%r11
	jmp L_98140
.p2align 0x4
L_413656:
L_98136:
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r11
	jmp L_97981
.p2align 0x4
L_413657:
L_98147:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1F47,%r15
	je L_413660
	cmpq $0x1F48,%r15
	je L_413659
	cmpq $0x1F49,%r15
	je L_413658
L_98148:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	movq $0x2,0x70(%rbp)
	jmp L_97983
.p2align 0x4
L_413658:
L_98151:
	movq 0x0(%r10),%r15
	movq $0x2,0x70(%rbp)
	jmp L_98129
.p2align 0x4
L_413659:
L_98150:
	movq 0x0(%r10),%r15
	movq $0x2,0x70(%rbp)
	jmp L_98118
.p2align 0x4
L_413660:
L_98149:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	movq $0x2,0x70(%rbp)
	jmp L_98110
.p2align 0x4
L_413661:
L_98142:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1F47,%r15
	je L_413664
	cmpq $0x1F48,%r15
	je L_413663
	cmpq $0x1F49,%r15
	je L_413662
L_98143:
	movq %r11,0x70(%rbp)
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	jmp L_97983
.p2align 0x4
L_413662:
L_98146:
	movq %r11,0x70(%rbp)
	movq 0x0(%r10),%r15
	jmp L_98129
.p2align 0x4
L_413663:
L_98145:
	movq %r11,0x70(%rbp)
	movq 0x0(%r10),%r15
	jmp L_98118
.p2align 0x4
L_413664:
L_98144:
	movq %r11,0x70(%rbp)
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	jmp L_98110
.p2align 0x4
L_413665:
L_97971:
	movq 0x0(%r14),%r15
L_97972:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_413667
L_97974:
	movq 0x8(%r11),%r14
L_97975:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_413666
L_97977:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r9)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r9)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r9)
	movq %r9,%r15
	jmp L_96797
.p2align 0x4
L_413666:
L_97976:
	movq %r9,%r15
	jmp L_96797
.p2align 0x4
L_413667:
L_97973:
	movq %r9,%r15
	jmp L_96797
.p2align 0x4
L_413668:
L_97967:
	movq 0x0(%r14),%r15
L_97968:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_413669
L_97970:
	movq 0x0(%r11),%r14
	movq $0x1D81,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
L_413669:
L_97969:
	movq %r9,%r15
	jmp L_96797
.p2align 0x4
L_413670:
	movq %r9,%r15
	jmp L_97965
.p2align 0x4
L_413671:
L_97954:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x18(%r10),%r9
	movq %r9,0x38(%rbp)
	movq $0x3219,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	addq $0x48,%rbp
	leaq (L_97955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_1
.p2align 0x4
L_413672:
L_97782:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	movslq %r14d,%r15
	movq 0x20(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq %r8,0x38(%rbp)
	movq 0x10(%r10),%rsp
	movq %rsp,0x40(%rbp)
	movq 0x18(%r10),%rsp
	movq %rsp,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	cmpq %r15,%r14
	jne L_96866
L_97784:
	testl %r13d,%r13d
	jnz L_413727
L_97791:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_413726
L_97793:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_413710
	cmpq $0xEBF,%r15
	je L_413694
	cmpq $0xEC0,%r15
	je L_413674
	movq %r9,%r15
L_97792:
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_97786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413673
.p2align 0x4,,0x7
L_97787:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
L_413673:
L_97788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97789
.p2align 0x4
.long 0x1244
L_97789:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_97787
.p2align 0x4
L_413674:
L_97895:
	movq 0x8(%r9),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r13
	cmpq %r14,%r13
	jne L_96866
L_97897:
	cmpl $0x1,%r10d
	jne L_413692
L_97899:
	cmpq $0x0,%r14
	jna L_413691
L_97901:
	movq 0x0(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413690
L_97902:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413689
L_97903:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movl $0x0,0x60(%rbp)
	movq %r11,%r14
	movq %r10,%r13
	movq %r15,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
L_97905:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_413688
L_97914:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCF7,%r10
	jne L_413687
L_97915:
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq %r14,0x0(%r11)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_413679
L_97906:
	movl 0x60(%rbp),%r10d
	incl %r10d
	jo L_413678
L_97907:
	cmpq $0x1,%r13
	je L_413675
L_97908:
	movl %r10d,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_97905
.p2align 0x4
L_413675:
	movl %r10d,%ecx
L_97910:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_413677
L_97911:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413676
L_97913:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413676:
L_97912:
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413677:
L_96823:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413678:
L_96808:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413679:
L_97917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97918
L_97951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97952
.p2align 0x4
.long 0x1368
L_97952:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97918:
	movl 0x60(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_97919:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413684
L_97920:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r15
L_97921:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	cmpq $0x1,%r13
	je installP_2
L_97922:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r13),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne installP_0
L_97937:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_97944
L_97938:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_97939:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	je L_413682
L_97940:
	cmpq $0x1,%r15
	je L_413680
L_97941:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_97939
.p2align 0x4
L_413680:
L_97942:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97944
L_97945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97946
.p2align 0x4
.long 0x132D
L_97946:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97944:
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
install_2:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movl $0x1,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_97924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413682:
L_97947:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_97830:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_97831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
installP_0:
installP_2:
	movq $0x106B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x27DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp install_2
.p2align 0x4
L_413684:
L_97950:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x60(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_97921
.p2align 0x4
L_413687:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97906
.p2align 0x4
L_413688:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97906
.p2align 0x4
L_413689:
L_97953:
	xorl %ecx,%ecx
	movq %r9,%r15
	jmp L_97910
.p2align 0x4
L_413690:
L_96813:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413691:
L_97183:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413692:
L_97898:
	movq %r9,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413694:
L_97847:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r13
	cmpq %r14,%r13
	jne L_96866
L_97849:
	cmpl $0x1,%r10d
	jne L_413708
L_97851:
	cmpq $0x0,%r14
	jna L_97183
L_97853:
	movq 0x0(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_96813
L_97854:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413705
L_97855:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movl $0x0,0x58(%rbp)
	movq %r11,%r14
	movq %r10,%r13
	movq %r15,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
L_97857:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_413704
L_97866:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCF7,%r10
	jne L_413703
L_97867:
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	cmpq %r14,0x0(%r11)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_413699
L_97858:
	movl 0x58(%rbp),%r10d
	incl %r10d
	jo L_96808
L_97859:
	cmpq $0x1,%r13
	je L_413695
L_97860:
	movl %r10d,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_97857
.p2align 0x4
L_413695:
	movl %r10d,%ecx
L_97862:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_96823
L_97863:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413696
L_97865:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413696:
L_97864:
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413699:
L_97869:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97870
L_97892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97893
.p2align 0x4
.long 0x1366
L_97893:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97870:
	movl 0x58(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_96823
L_97871:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_413700
L_97872:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
L_97873:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je install_1
L_97874:
	movq 0x8(%r14),%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne install_3
L_97889:
	movq %r15,0x20(%rbp)
	jmp L_97830
.p2align 0x4
install_3:
install_1:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl $0x1,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_97876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413700:
L_97891:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	jmp L_97873
.p2align 0x4
L_413703:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97858
.p2align 0x4
L_413704:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97858
.p2align 0x4
L_413705:
L_97894:
	xorl %ecx,%ecx
	movq %r9,%r15
	jmp L_97862
.p2align 0x4
L_413708:
L_97850:
	movq %r9,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413710:
L_97794:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r13
	cmpq %r14,%r13
	jne L_96866
L_97796:
	cmpl $0x1,%r10d
	jne L_413724
L_97798:
	cmpq $0x0,%r14
	jna L_97183
L_97800:
	movq 0x0(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_96813
L_97801:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413721
L_97802:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movl $0x0,0x58(%rbp)
	movq %r11,%r14
	movq %r10,%r13
	movq %r15,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
L_97804:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_413720
L_97813:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCF7,%r10
	jne L_413719
L_97814:
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	cmpq %r14,0x0(%r11)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_413715
L_97805:
	movl 0x58(%rbp),%r10d
	incl %r10d
	jo L_96808
L_97806:
	cmpq $0x1,%r13
	je L_413711
L_97807:
	movl %r10d,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_97804
.p2align 0x4
L_413711:
	movl %r10d,%ecx
L_97809:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_96823
L_97810:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413712
L_97812:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413712:
L_97811:
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413715:
L_97816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97817
L_97844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97845
.p2align 0x4
.long 0x1366
L_97845:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97817:
	movl 0x58(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_96823
L_97818:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_413716
L_97819:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
L_97820:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je install_0
L_97821:
	movq 0x8(%r14),%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne install_5
L_97841:
	movq %r15,0x20(%rbp)
	jmp L_97830
.p2align 0x4
install_5:
install_0:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl $0x1,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_97823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413716:
L_97843:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	jmp L_97820
.p2align 0x4
L_413719:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97805
.p2align 0x4
L_413720:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97805
.p2align 0x4
L_413721:
L_97846:
	xorl %ecx,%ecx
	movq %r9,%r15
	jmp L_97809
.p2align 0x4
L_413724:
L_97797:
	movq %r9,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413726:
	movq %r9,%r15
	jmp L_97792
.p2align 0x4
L_413727:
L_97785:
	movq %r9,0x20(%rbp)
	jmp L_97786
.p2align 0x4
L_413729:
L_97730:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x0(%r10),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r10),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r10),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r15
	cmpq %r14,%r15
	jne L_96866
L_97732:
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
loop_1095:
	cmpl %ecx,0x40(%rbp)
	je L_96797
L_97733:
	movslq %ecx,%r13
	cmpq %r14,%r13
	jnb L_97183
L_97735:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x10(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r8
	shrq $0x1,%r8
	cmpq $0xEB9,%r8
	je L_413731
L_97736:
	incl %ecx
	jo L_96808
L_97737:
	jmp loop_1095
.p2align 0x4
L_413731:
L_97738:
	cmpl $0x0,0x40(%rbp)
	jl L_413744
L_97739:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413743
.p2align 0x4,,0x7
L_97740:
	movl 0x44(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_413738
L_97763:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB9,%r14
	jne L_413737
L_97766:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	jne L_413736
L_97768:
	movq 0x0(%r14),%r15
L_97769:
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_413735
L_97771:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq 0x10(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r14
	shrq $0x1,%r14
	cmpq $0xEB9,%r14
	jne L_413734
L_97773:
	movq 0x0(%r9),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xE43,%r10
	jne L_413733
L_97775:
	movq 0x0(%r14),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r15)
	jne L_413732
L_97777:
	movq %r11,%r15
L_97765:
	movq %r15,0x48(%rbp)
	incl 0x44(%rbp)
	jmp loop_1096
.p2align 0x4
L_413732:
L_97776:
	movq (globalObjptr+0x570)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413733:
L_97774:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_97765
.p2align 0x4
L_413734:
L_97772:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_97765
.p2align 0x4
L_413735:
L_97770:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	jmp L_97765
.p2align 0x4
L_413736:
L_97767:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_97765
.p2align 0x4
L_413737:
L_97764:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_97765
.p2align 0x4
L_413738:
L_97741:
	movq $0x939,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r13)
	cmpq $0x1,%r11
	je L_413742
L_97742:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97743:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_96808
L_97744:
	cmpq $0x1,%r15
	je L_413739
L_97745:
	movq 0x8(%r15),%r15
	jmp L_97743
.p2align 0x4
L_413739:
L_97746:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97747
L_97760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97761
.p2align 0x4
.long 0x68D
L_97761:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97747:
	movl 0x40(%rbp),%ecx
L_97748:
	movl %ecx,0x50(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413742:
L_97762:
	xorl %ecx,%ecx
	jmp L_97748
.p2align 0x4
L_413743:
L_97778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97779
.p2align 0x4
.long 0xF34
L_97779:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_97740
.p2align 0x4
L_413744:
L_97338:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413748:
L_97594:
	movq 0x0(%rbp),%r13
	movq 0x48(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x38(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movslq %r14d,%r15
	movq 0x50(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x8(%r11),%r9
	movq 0x10(%r11),%r8
	movq %r8,0x70(%rbp)
	movq 0x18(%r11),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x40(%r13),%r14
	movq 0x10(%r8),%r11
	cmpq %r11,0x10(%r14)
	je L_413762
L_97596:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_413761
L_97602:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_413760
	cmpq $0xEBF,%r15
	je L_413759
	cmpq $0xEC2,%r15
	je L_413750
	movq %r9,%r15
L_97597:
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_97598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413749
.p2align 0x4,,0x7
L_97599:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
L_413749:
L_97600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97601
.p2align 0x4
.long 0x134D
L_97601:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_97599
.p2align 0x4
L_413750:
L_97610:
	movq %r9,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
.p2align 0x4,,0x7
L_97611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413758
.p2align 0x4,,0x7
L_97612:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_413757
	cmpq $0x2,%r15
	je L_413756
L_97613:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_413755
	cmpq $0x2,%r14
	je L_413751
L_97614:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_97598
.p2align 0x4
L_413751:
L_97616:
	cmpq $0x1,0x30(%rbp)
	jne L_413753
L_97710:
	movq $0x2,0x20(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_97692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413752
.p2align 0x4,,0x7
L_97693:
	movq $0x240B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_97598
.p2align 0x4
L_413752:
L_97694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_97695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97695
.p2align 0x4
.long 0x1359
L_97695:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_97693
.p2align 0x4
L_413753:
L_97617:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97619:
	movq $0x3FD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movl %r13d,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_97620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413755:
L_97615:
	movq 0x68(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x98(%rbp),%r13
	movq %r13,0x28(%rbp)
	jmp L_97598
.p2align 0x4
L_413756:
L_97712:
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_97598
.p2align 0x4
L_413757:
L_97711:
	movq 0x98(%rbp),%r14
	movq %r14,0x30(%rbp)
addLeave_0:
	movq $0x1C85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_97604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413758:
L_97713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_97714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97714
.p2align 0x4
.long 0x135F
L_97714:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_97612
.p2align 0x4
L_413759:
L_97609:
	movq %r9,0x30(%rbp)
	jmp addLeave_0
.p2align 0x4
L_413760:
L_97603:
	movq %r9,0x30(%rbp)
	jmp addLeave_0
.p2align 0x4
L_413761:
	movq %r9,%r15
	jmp L_97597
.p2align 0x4
L_413762:
L_97715:
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r9,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1C87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x90(%rbp)
	movl $0x1,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413763:
L_97593:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	jmp L_96797
.p2align 0x4
L_413764:
L_97590:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_413765
L_97591:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_96797
.p2align 0x4
L_413765:
L_97592:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413766:
L_97588:
	movq 0x0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	subl %r14d,%r11d
	jo L_96808
L_97589:
	movslq %r11d,%r15
	movq 0x0(%r10,%r15,8),%r10
	movq %r10,%r15
	jmp L_96797
.p2align 0x4
L_413768:
L_97583:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1094:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_413770
L_97586:
	incl %ecx
	jo L_96808
L_97587:
	jmp loop_1094
.p2align 0x4
L_413770:
L_97584:
	incl %ecx
	jo L_96808
L_97585:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_96797
.p2align 0x4
L_413772:
L_97512:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x18(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x18(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x60(%rbp)
	movl %r14d,0x58(%rbp)
	cmpq %r13,%r15
	movq %r10,0x50(%rbp)
	jne L_96866
L_97514:
	testq %r13,%r13
	jz L_413776
L_97515:
	cmpq $0x7FFFFFFF,%r13
	ja L_413775
L_97516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97517
L_97579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97580
.p2align 0x4
.long 0x1328
L_97580:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97517:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142D,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97518
.p2align 0x4
.long 0x1328
L_97518:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_97519:
	movl $0x0,0x5C(%rbp)
	movq $0x0,0x70(%rbp)
loop_1093:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_413773
L_97520:
	movq 0x68(%rbp),%r15
	movq $0x9BD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9BF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x3F05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413773:
L_97570:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_97571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepVar_0
.p2align 0x4
L_413775:
L_97258:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413776:
L_97582:
	movq (globalObjptr+0x568)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_97519
.p2align 0x4
L_413778:
L_97505:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq 0x10(%r11),%r9
	movq %r9,0x28(%rbp)
	movq 0x18(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_96866
L_97507:
	movl %r14d,0x48(%rbp)
	movq $0x405F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_97508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413780:
L_97481:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x48(%rbp)
	movq %r9,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_97482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_413781:
L_97177:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x48(%rbp)
	movq %r9,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_97178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_57
.p2align 0x4
L_413782:
L_97083:
	movq 0x0(%rbp),%r15
	movq 0x48(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%r15),%r13
	movq 0x30(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x60(%rbp)
	movslq %r14d,%r11
	movq 0x50(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x68(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq 0x10(%r10),%r8
	movq %r8,0x78(%rbp)
	movq 0x18(%r10),%rsp
	movq %rsp,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_96866
L_97085:
	testl %r14d,%r14d
	jz L_413783
L_97086:
	movq %r13,0x98(%rbp)
	movq %r8,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_97087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413783:
L_97176:
	movq $0x2B6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2B63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
L_97093:
	movq 0x78(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	je L_413785
L_97094:
	cmpq $0x1,%r15
	je L_413784
L_97095:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x1,0x10(%r13)
	movq %r13,0x90(%rbp)
	movl $0x1,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413784:
L_97167:
	movq $0x2,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413785:
L_97168:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x15B4,%r15
	je L_413786
L_97170:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq $0x1,0x10(%r14)
	movq %r14,0x90(%rbp)
	movl $0x1,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413786:
L_97169:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq $0x1D73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq $0x4069,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x90(%rbp)
	addq $0x18,%r12
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413788:
L_96812:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movslq %r14d,%r15
	movq 0x28(%r13),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x20(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_96814:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_413799
L_96815:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x68(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_96817:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_96818
L_96857:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD22,%r13
	jne L_96818
L_96858:
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x58(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_413792
L_96818:
	movl 0x68(%rbp),%r13d
	incl %r13d
	jo L_96808
L_96819:
	cmpq $0x1,%r15
	je L_413789
L_96820:
	movl %r13d,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_96817
.p2align 0x4
L_413789:
	movl %r13d,%ecx
L_96822:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_96824:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_331
L_96856:
	movl %ecx,0x0(%r15)
x_331:
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_96826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413792:
L_96860:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96861
L_97080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97081
.p2align 0x4
.long 0x1315
L_97081:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_96861:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_96862:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413794
L_96863:
	movq 0x70(%rbp),%r15
L_96864:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_96867:
	movl %r13d,0x80(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413794:
L_97079:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp L_96864
.p2align 0x4
L_413799:
L_97082:
	xorl %ecx,%ecx
	jmp L_96822
.p2align 0x4
L_413801:
L_96806:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1077:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_413803
L_96810:
	incl %ecx
	jo L_96808
L_96811:
	jmp loop_1077
.p2align 0x4
L_413803:
L_96807:
	incl %ecx
	jo L_96808
L_96809:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_96797
.p2align 0x4
L_413805:
L_99057:
	movq (globalObjptr+0x498)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413806:
L_96785:
	movq 0x8(%rbp),%r14
	movq $0x71F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413807:
L_99058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99059
.p2align 0x4
.long 0x45D
L_99059:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_96784
.p2align 0x4
L_413809:
L_99061:
	movq (globalObjptr+0x538)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_96783
.p2align 0x4
.long 0x535
L_96789:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96790
L_96804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96805
.p2align 0x4
.long 0xCE5
L_96805:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96790:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_413811
L_96791:
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_413811:
L_96794:
	movq $0x3A05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	movq $0x1,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_96795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceLabelVar_0
.p2align 0x4
.long 0x13B2
L_98554:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98555
L_99055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_99056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99056
.p2align 0x4
.long 0x141D
L_99056:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_98555:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x78(%rbp)
	movq $0x3EDD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_98556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1316
L_98209:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98211
L_98549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98550
.p2align 0x4
.long 0x1327
L_98550:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_98211:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_98212
L_98214:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC3,%r14
	jne L_413877
L_98215:
	movq 0x18(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r15),%r13
L_98216:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_98217
L_98218:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF8,%r15
	je L_413852
	cmpq $0xF0C,%r15
	je L_413814
L_98217:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
L_98213:
	movq $0x1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_96797
.p2align 0x4
L_413814:
L_98458:
	movl 0x0(%r14),%r11d
	movl %r11d,0x98(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x0,%r15
	jna L_97183
L_98460:
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	cmpq $0x1,%r15
	jna L_97183
L_98462:
	movq 0x8(%r13),%r10
	movq %r10,0xB0(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_98463:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_413848
L_98464:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x9C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_98466:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_98467
L_98528:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_98467
L_98529:
	movq 0x8(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_413840
L_98467:
	movl 0x9C(%rbp),%r13d
	incl %r13d
	movl %r13d,0xB8(%rbp)
	jo L_96808
L_98468:
	cmpq $0x1,%r14
	je L_413815
L_98469:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x9C(%rbp)
	jmp L_98466
.p2align 0x4
L_413815:
L_98470:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98471
L_98526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98527
.p2align 0x4
.long 0x13B0
L_98527:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98471:
	movl 0xB8(%rbp),%ecx
L_98472:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_98473:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl get_3
L_98525:
	movl %ecx,0x0(%r15)
get_3:
	movq 0xB0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_98475:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_413835
L_98476:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x9C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_98478:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_98479
L_98490:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_98479
L_98491:
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_413821
L_98479:
	movl 0x9C(%rbp),%r13d
	incl %r13d
	movl %r13d,0xB0(%rbp)
	jo L_96808
L_98480:
	cmpq $0x1,%r14
	je L_413816
L_98481:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x9C(%rbp)
	jmp L_98478
.p2align 0x4
L_413816:
L_98482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98483
L_98488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98489
.p2align 0x4
.long 0x1384
L_98489:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98483:
	movl 0xB0(%rbp),%ecx
L_98484:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98485:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_413817
L_98487:
	movl %ecx,0x0(%r13)
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413817:
L_98486:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413821:
L_98493:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98494
L_98522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98523
.p2align 0x4
.long 0x13AD
L_98523:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98494:
	movl 0x9C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98495:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413828
L_98497:
	movq 0xB0(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_98498
L_98499:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_413826
L_98500:
	movq 0x0(%r14),%r15
L_98502:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_98503
L_98504:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_413824
L_98505:
	movq 0x0(%r15),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0x20(%rbp)
L_98506:
	cmpq $0x3,0x0(%r15)
	je L_413823
L_98507:
	movl 0x98(%rbp),%r14d
	testl %r14d,%r14d
	jz L_413822
L_98510:
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_413822:
L_98509:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413823:
L_98517:
	movq 0xA0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
add1_0:
	movq 0x78(%rbp),%r15
loop_1097:
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_413824:
L_98503:
	movq (globalObjptr+0x580)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413826:
L_98498:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413828:
L_98518:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x9C(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_98519:
	movq 0xB0(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_98498
L_98520:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_98498
L_98521:
	movq 0x0(%r14),%r15
	jmp L_98502
.p2align 0x4
L_413835:
L_98524:
	xorl %ecx,%ecx
	jmp L_98484
.p2align 0x4
L_413840:
L_98531:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98532
L_98546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98547
.p2align 0x4
.long 0x13B1
L_98547:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98532:
	movl 0x9C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98533:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413843
L_98535:
	movq 0xB8(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz get_3
L_98536:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne get_3
L_98537:
	movq 0x0(%r14),%r15
L_98539:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_98503
L_98540:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_98503
L_98541:
	movq 0x0(%r15),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_98506
.p2align 0x4
L_413843:
L_98542:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x9C(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_98543:
	movq 0xB8(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz get_3
L_98544:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne get_3
L_98545:
	movq 0x0(%r14),%r15
	jmp L_98539
.p2align 0x4
L_413848:
L_98548:
	xorl %ecx,%ecx
	jmp L_98472
.p2align 0x4
L_413852:
L_98219:
	movl 0x0(%r14),%r11d
	movl %r11d,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x0,%r15
	jna L_97183
L_98221:
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	cmpq $0x1,%r15
	jna L_97183
L_98223:
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_98224:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_413872
L_98225:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x9C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_98227:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_98228
L_98239:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_98228
L_98240:
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_413858
L_98228:
	movl 0x9C(%rbp),%r13d
	incl %r13d
	movl %r13d,0xB0(%rbp)
	jo L_96808
L_98229:
	cmpq $0x1,%r15
	je L_413853
L_98230:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x9C(%rbp)
	jmp L_98227
.p2align 0x4
L_413853:
L_98231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98232
L_98237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98238
.p2align 0x4
.long 0x1384
L_98238:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98232:
	movl 0xB0(%rbp),%ecx
L_98233:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98234:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_413854
L_98236:
	movl %ecx,0x0(%r13)
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413854:
L_98235:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413858:
L_98242:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98243
L_98455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98456
.p2align 0x4
.long 0x13AD
L_98456:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98243:
	movl 0x9C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98244:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413865
L_98246:
	movq 0xB0(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_98247
L_98248:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_413863
L_98249:
	movq 0x0(%r14),%r15
L_98251:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_98252
L_98253:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_413861
L_98254:
	movq 0x0(%r15),%r14
	cmpq $0x3,0x0(%r14)
	je L_413860
L_98255:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jz L_413859
L_98258:
	movq %r14,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_413859:
L_98257:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413860:
L_98362:
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
sub1_0:
	movq 0x78(%rbp),%r15
loop_1098:
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_413861:
L_98252:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413863:
L_98247:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
L_413865:
L_98451:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x9C(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_98452:
	movq 0xB0(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_98247
L_98453:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_98247
L_98454:
	movq 0x0(%r14),%r15
	jmp L_98251
.p2align 0x4
L_413872:
L_98457:
	xorl %ecx,%ecx
	jmp L_98233
.p2align 0x4
L_413877:
L_98212:
	movq 0x70(%rbp),%r14
	movq 0x88(%rbp),%r15
	jmp L_98213
.p2align 0x4
.long 0x577
L_98202:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98203
L_98204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98205
.p2align 0x4
.long 0xF2D
L_98205:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98203:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x598
L_98153:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98154
L_98199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_98200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98200
.p2align 0x4
.long 0xFAA
L_98200:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_98154:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_413881
L_98155:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_98156:
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_98157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_413881:
L_98162:
	movq 0x50(%rbp),%r14
	movq 0x20(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_413882
L_98163:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_98164:
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_98165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_413882:
L_98170:
	movq 0x50(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_413883
L_98171:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_98172:
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_98173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_413883:
L_98178:
	movq 0x38(%rbp),%r15
L_98179:
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r14,%r15
	jmp L_96797
.p2align 0x4
.long 0x8C4
L_97984:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97985
L_98107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98108
.p2align 0x4
.long 0x1380
L_98108:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_97985:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_413885
L_97986:
	movq 0x70(%rbp),%r15
L_97987:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
L_413885:
L_97989:
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x60(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_96813
L_97990:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413896
L_97991:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x20(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_97993:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413895
L_98032:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD08,%r10
	jne L_413894
L_98033:
	movq 0x8(%r15),%r10
	movq %r10,0x78(%rbp)
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413889
L_97994:
	movl 0x20(%rbp),%r10d
	incl %r10d
	jo L_96808
L_97995:
	cmpq $0x1,%r14
	je L_413886
L_97996:
	movl %r10d,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_97993
.p2align 0x4
L_413886:
	movl %r10d,%ecx
L_97998:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_97999:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_337
L_98031:
	movl %ecx,0x0(%r15)
x_337:
	movq %r13,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413889:
L_98035:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98036
L_98104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98105
.p2align 0x4
.long 0x137F
L_98105:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98036:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_98037:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413891
L_98038:
	movq 0x78(%rbp),%r15
L_98039:
	movq 0x8(%r15),%r14
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x921,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x9C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r11,0x0(%r13)
	addq $0x20,%r12
	movq %r15,0x8(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x921,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x98(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xA0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0xB0(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x30(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r10,%r15
	jne L_96866
L_98041:
	movl %r14d,0xD0(%rbp)
	movq $0x3EEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413891:
L_98103:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_98039
.p2align 0x4
L_413894:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_97994
.p2align 0x4
L_413895:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_97994
.p2align 0x4
L_413896:
L_98106:
	xorl %ecx,%ecx
	jmp L_97998
.p2align 0x4
.long 0x8C4
L_98130:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98131
L_98134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98135
.p2align 0x4
.long 0x1381
L_98135:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98131:
	movq 0x78(%rbp),%r15
	andq $0x1,%r15
	jnz L_413899
L_98132:
	movq 0x70(%rbp),%r15
	jmp L_97987
.p2align 0x4
L_413899:
L_98133:
	movq 0x78(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq 0x70(%rbp),%r15
L_98123:
	testl %ecx,%ecx
	jz L_97987
L_98125:
	movq %r15,0x70(%rbp)
	jmp L_97989
.p2align 0x4
.long 0x8C4
L_98119:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98120
L_98126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98127
.p2align 0x4
.long 0x1381
L_98127:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98120:
	movq 0x78(%rbp),%r15
	andq $0x1,%r15
	jnz L_413902
L_98121:
	movq 0x70(%rbp),%r15
	jmp L_97987
.p2align 0x4
L_413902:
L_98122:
	movq 0x78(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq 0x70(%rbp),%r15
	jmp L_98123
.p2align 0x4
.long 0x8C4
L_98111:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98112
L_98115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98116
.p2align 0x4
.long 0x1380
L_98116:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98112:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_97989
L_98113:
	movq 0x70(%rbp),%r15
	jmp L_97987
.p2align 0x4
.long 0x560
L_97955:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97956
L_97961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97962
.p2align 0x4
.long 0xE4E
L_97962:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97956:
	movq $0x404B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_97957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceLabelVar_0
.p2align 0x4
.long 0x5B6
L_97924:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97925
L_97935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97936
.p2align 0x4
.long 0x1240
L_97936:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97925:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_97926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1364
L_97831:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97832
L_97833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97834
.p2align 0x4
.long 0x739
L_97834:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97832:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp L_97786
.p2align 0x4
.long 0x1362
L_97876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97877
L_97887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97888
.p2align 0x4
.long 0x1240
L_97888:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97877:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_97878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1362
L_97823:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97824
L_97839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97840
.p2align 0x4
.long 0x1240
L_97840:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97824:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_97825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x528
L_97749:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97750
L_97758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97759
.p2align 0x4
.long 0xF2D
L_97759:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97750:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97752:
	movl %r13d,%r14d
	decl %r14d
	jo L_96808
L_97753:
	movl %r13d,0x50(%rbp)
	movq $0x4063,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1351
L_97620:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x134E
L_97604:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97605
L_97607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97608
.p2align 0x4
.long 0x1350
L_97608:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_97605:
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
.long 0x1316
L_97716:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97717
L_97728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97729
.p2align 0x4
.long 0x1327
L_97729:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97717:
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
.long 0x1340
L_97521:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97522
L_97568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97569
.p2align 0x4
.long 0xD04
L_97569:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97522:
	movq 0x50(%rbp),%r15
	movl $0x0,0x0(%r15)
	movl 0x58(%rbp),%r14d
	subl 0x5C(%rbp),%r14d
	jo L_96808
L_97523:
	movl %r14d,0x80(%rbp)
	movq $0x3EEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x134B
L_97571:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97572
L_97577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97578
.p2align 0x4
.long 0x134C
L_97578:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97572:
	movl 0x80(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_413918
L_97573:
	movl 0x5C(%rbp),%ecx
L_97574:
	movl %ecx,0x5C(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x68(%rbp),%r13
	movl 0x80(%rbp),%r11d
	movl %r11d,0x0(%r13,%r14,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r13,%r14,1)
	incq %r15
	movq %r15,0x70(%rbp)
	jmp loop_1093
.p2align 0x4
L_413918:
L_97575:
	movl 0x5C(%rbp),%ecx
	incl %ecx
	jo L_96808
	jmp L_97574
.p2align 0x4
.long 0x577
L_97508:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97509
L_97510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97511
.p2align 0x4
.long 0xF2D
L_97511:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97509:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x598
L_97482:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97483
L_97503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97504
.p2align 0x4
.long 0xFAA
L_97504:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_97483:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_97485
L_97484:
	movq %r15,0x40(%rbp)
L_97485:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97487:
	movl %r13d,0x58(%rbp)
	movq $0x3F0B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x598
L_97178:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x58(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_96866
L_97180:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1078:
	cmpl 0x58(%rbp),%ecx
	je L_413965
L_97181:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_97183
L_97184:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_97187
L_97185:
	movq 0x0(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_97187
L_97189:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_413926
L_97187:
	incl %ecx
	jo L_96808
L_97188:
	jmp loop_1078
.p2align 0x4
L_413926:
L_97191:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97192
L_97470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97471
.p2align 0x4
.long 0xD05
L_97471:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97192:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r14,%r11
	jne L_96866
L_97194:
	cmpl 0x58(%rbp),%r13d
	jne L_413959
L_97196:
	testq %r11,%r11
	jz L_413958
L_97197:
	cmpq $0x7FFFFFFF,%r11
	ja L_97258
L_97198:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97199
L_97466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97467
.p2align 0x4
.long 0x1328
L_97467:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97199:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1429,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97200
.p2align 0x4
.long 0x1328
L_97200:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x58(%rbp)
L_97201:
	movq $0x1,0x68(%rbp)
	movq $0x0,0x70(%rbp)
loop_1079:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_413949
L_97202:
	movq 0x58(%rbp),%r15
	movq $0x177D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_96866
L_97204:
	testl %r15d,%r15d
	jz L_413947
L_97205:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_97338
L_97206:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1080:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_413929
L_97420:
	movslq %ebx,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_96866
L_97422:
	addl %ecx,%r10d
	jo L_96808
L_97423:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_1080
.p2align 0x4
L_413929:
L_97207:
	cmpq $0x0,0x48(%rbp)
	jna L_97183
L_97209:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_413944
L_97210:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97258
L_97211:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1423,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97212
.p2align 0x4
.long 0x1329
L_97212:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
L_97213:
	xorl %ecx,%ecx
	movq 0x50(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1081:
	cmpq 0x60(%rbp),%r15
	jnl L_413935
.p2align 0x4,,0x7
loop_1092:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_97410:
	cmpl %r11d,%ecx
	jl L_413932
L_97411:
	incl %ebx
	jo L_96808
L_97412:
	movslq %ebx,%r13
	cmpq 0x48(%rbp),%r13
	jnb L_97183
L_97414:
	movq 0x58(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_1092
.p2align 0x4
L_413932:
L_97415:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_97183
L_97417:
	movq 0x0(%r14,%r11,8),%r13
	incl %ecx
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1081
.p2align 0x4
L_413935:
L_97214:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97215
L_97406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97407
.p2align 0x4
.long 0x1339
L_97407:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_97215:
	movq 0x70(%rbp),%r15
	movq $0x11,0xFFFFFFFFFFFFFFF8(%r15)
L_97216:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97217
L_97278:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEC0,%r13
	jne L_413936
L_97279:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
L_97280:
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_57
.p2align 0x4
L_413936:
L_97217:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
L_97218:
	movq $0x939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_413940
L_97219:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97220:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_96808
L_97221:
	cmpq $0x1,%r15
	je L_413937
L_97222:
	movq 0x8(%r15),%r15
	jmp L_97220
.p2align 0x4
L_413937:
L_97223:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97224
L_97275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97276
.p2align 0x4
.long 0x5FD
L_97276:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_97224:
	movl 0x50(%rbp),%ecx
L_97225:
	movl %ecx,0x58(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413940:
L_97277:
	xorl %ecx,%ecx
	jmp L_97225
.p2align 0x4
L_413944:
L_97419:
	movq (globalObjptr+0x550)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_97213
.p2align 0x4
L_413947:
L_97425:
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_97426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413949:
L_97434:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r13),%r15
	movq %r15,%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r11
	je L_413955
L_97435:
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r10),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_413954
L_97443:
	movl 0x0(%r9),%r11d
	testl %r11d,%r11d
	jz L_413953
L_97445:
	movq 0x8(%r14),%r13
L_97446:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_96903
L_97447:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_413951
L_97448:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97450:
	movl %r13d,0x98(%rbp)
	movq $0x3F0F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_97451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413951:
L_96903:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413953:
	xchgq %r13,%r14
L_97437:
	movq $0x3EFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_97438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413954:
	xchgq %r13,%r14
	jmp L_97437
.p2align 0x4
L_413955:
L_97461:
	movq $0x3EFB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x80(%rbp)
	addq $0x10,%r12
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_97462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413958:
L_97469:
	movq (globalObjptr+0x548)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_97201
.p2align 0x4
L_413959:
L_96886:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413965:
L_97473:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97475
L_97479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97480
.p2align 0x4
.long 0x5A3
L_97480:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97475:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97476
L_97477:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC0,%r14
	jne L_413966
L_97478:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp L_97280
.p2align 0x4
L_413966:
L_97476:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq $0x1,%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_97218
.p2align 0x4
.long 0x1316
L_97087:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97088
L_97174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97175
.p2align 0x4
.long 0x1327
L_97175:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97088:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1318
L_97096:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97098
L_97165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97166
.p2align 0x4
.long 0x1325
L_97166:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97098:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz doitL_0
L_97111:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_413983
	cmpq $0xEBF,%r14
	je L_413981
	cmpq $0xEC2,%r14
	je L_413972
doitL_0:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_413971
L_97099:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
x_334:
	movq $0x1D73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movq %r15,0x90(%rbp)
	movl $0x1,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413971:
L_97110:
	movq $0x2,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413972:
L_97122:
	movq 0x68(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq $0x1,%r15
	je L_413979
	cmpq $0x2,%r15
	je L_413978
L_97123:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je doitL_0
	cmpq $0x2,%r13
	je L_413974
L_97124:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_97110
L_97125:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	jmp x_334
.p2align 0x4
L_413974:
L_97128:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_413976
L_97129:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97131:
	movq $0x4007,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movl %r13d,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_97132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413976:
L_97156:
	movq $0x2,%r14
	xchgq %r14,%r15
L_97143:
	movq $0x240B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_413977
L_97144:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x1,0x10(%r13)
	movq %r13,0x98(%rbp)
	movl $0x1,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_97145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413977:
L_97149:
	movq $0x2,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_97145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413978:
L_97160:
	movq $0x2,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413979:
L_97157:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x15B0,%r15
	je L_413980
L_97159:
	movq 0x0(%r14),%r15
leaveF_0:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x20,%r12
	movq $0x1,0x10(%r14)
	movq %r14,0x90(%rbp)
	movl $0x1,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413980:
L_97158:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,%r14
x_335:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0x1D73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq $0x4069,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x90(%rbp)
	addq $0x18,%r12
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_413981:
L_97119:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x15B0,%r15
	je L_413982
L_97121:
	movq 0x0(%r14),%r15
	jmp leaveF_0
.p2align 0x4
L_413982:
L_97120:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,%r14
	jmp x_335
.p2align 0x4
L_413983:
L_97112:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x15B0,%r15
	je L_413984
L_97118:
	movq 0x0(%r14),%r15
	jmp leaveF_0
.p2align 0x4
L_413984:
L_97113:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,%r14
	jmp x_335
.p2align 0x4
.long 0x1
L_96826:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1302
L_96868:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96869
L_97077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97078
.p2align 0x4
.long 0xCE5
L_97078:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96869:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_414027
L_96870:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_414022
	cmpq $0xEBF,%r14
	je L_414020
	cmpq $0xEC0,%r14
	je L_414005
	cmpq $0xEC1,%r14
	je L_414004
	cmpq $0xEC2,%r14
	je L_413989
	cmpq $0xEC3,%r14
	je L_413987
L_96871:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96866
L_96873:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413987:
L_97069:
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96866
L_97071:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413989:
L_96994:
	movq 0x10(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x58(%rbp)
	movq 0x30(%rbp),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_96813
L_96995:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_414002
L_96996:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_96998:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_414001
L_97037:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD21,%r10
	jne L_414000
L_97038:
	movq 0x8(%r15),%r10
	movq %r10,0x40(%rbp)
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413993
L_96999:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_96808
L_97000:
	cmpq $0x1,%r14
	je L_413990
L_97001:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_96998
.p2align 0x4
L_413990:
	movl %r10d,%ecx
L_97003:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_97004:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_333
L_97036:
	movl %ecx,0x0(%r15)
x_333:
	movq %r13,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413993:
L_97040:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97041
L_97066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97067
.p2align 0x4
.long 0x1312
L_97067:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97041:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_97042:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_413997
L_97043:
	movq 0x40(%rbp),%r15
L_97044:
	movq 0x10(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96866
L_97046:
	movq 0x58(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_96866
L_97048:
	cmpl %r9d,%r11d
	jne L_96886
L_97050:
	movl %r11d,0x80(%rbp)
	movq $0x3897,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_413997:
L_97065:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_97044
.p2align 0x4
L_414000:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96999
.p2align 0x4
L_414001:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96999
.p2align 0x4
L_414002:
L_97068:
	xorl %ecx,%ecx
	jmp L_97003
.p2align 0x4
L_414004:
L_96986:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_414005:
L_96911:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_96912:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_414018
L_96913:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_96915:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_96916
L_96954:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD22,%r13
	jne L_96916
L_96955:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x58(%rbp)
	je L_414009
L_96916:
	movl 0x38(%rbp),%r13d
	incl %r13d
	jo L_96808
L_96917:
	cmpq $0x1,%r14
	je L_414006
L_96918:
	movl %r13d,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96915
.p2align 0x4
L_414006:
	movl %r13d,%ecx
L_96920:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_96921:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_332
L_96953:
	movl %ecx,0x0(%r15)
x_332:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_96923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414009:
L_96957:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96958
L_96983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96984
.p2align 0x4
.long 0x130D
L_96984:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96958:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96823
L_96959:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_414013
L_96960:
	movq 0x40(%rbp),%r15
L_96961:
	movq 0x0(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_96963:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_96866
L_96965:
	cmpl %r11d,%r9d
	jne L_96886
L_96967:
	movl %r11d,0x80(%rbp)
	movq $0x3897,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_414013:
L_96982:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_96961
.p2align 0x4
L_414018:
L_96985:
	xorl %ecx,%ecx
	jmp L_96920
.p2align 0x4
L_414020:
L_96904:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96866
L_96906:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414022:
L_96879:
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_96903
L_96880:
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_96866
L_96882:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_96866
L_96884:
	cmpl %r10d,%r9d
	jne L_96886
L_96887:
	movl %r10d,0x80(%rbp)
	movq $0x3897,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_414027:
L_97076:
	movq $0x1,%r14
	xchgq %r14,%r15
L_96876:
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r14,%r15
	jmp L_96797
.p2align 0x4
.long 0x535
x_330:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96792
L_96801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96802
.p2align 0x4
.long 0xCE5
L_96802:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96792:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpl $0x2,0x0(%r13)
	jnl L_96794
L_96800:
	movq 0x40(%rbp),%r15
	jmp L_96797
.p2align 0x4
.long 0x1300
L_96795:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96796
L_96798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96799
.p2align 0x4
.long 0x1301
L_96799:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96796:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x535
L_98556:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98557
L_99053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_99054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99054
.p2align 0x4
.long 0xCE5
L_99054:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98557:
	movq $0x3211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_98558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_1
.p2align 0x4
.long 0x13AE
L_98511:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98512
L_98515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_98516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98516
.p2align 0x4
.long 0x13AF
L_98516:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98512:
	cmpq $0xFFFFFFFFFFFFFFFF,0x48(%rbp)
	jne L_98509
L_98514:
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp sub1_0
.p2align 0x4
.long 0x1386
L_98263:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98264
L_98358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98359
.p2align 0x4
.long 0x13A6
L_98359:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98264:
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_98271
L_98265:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_98266:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF16,%r15
	jne L_98267
L_98276:
	movq 0x0(%r11),%r15
	movq %r13,%r11
	andq $0x3,%r11
	cmpq $0x2,%r11
	je L_414041
	cmpq $0x3,%r11
	je L_414037
.p2align 0x4,,0x7
L_98267:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_414035
L_98268:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_98266
.p2align 0x4
L_414035:
L_98269:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98271
L_98274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_98275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98275
.p2align 0x4
.long 0x1387
L_98275:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_98271:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne loop_3848
L_98273:
	movq 0x70(%rbp),%r11
	movq 0x88(%rbp),%r15
	movq %r11,%r14
	jmp L_98213
.p2align 0x4
loop_3848:
	movq %r11,%r15
	jmp loop_1097
.p2align 0x4
L_414037:
L_98349:
	shrq $0x2,%r13
	movl %r13d,%r14d
	movq 0x60(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	jne L_98267
L_98351:
	cmpl 0x20(%rbp),%r14d
	jne L_98267
L_98353:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98299
L_98355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98356
.p2align 0x4
.long 0x13A5
L_98356:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98299:
	movq $0x1E1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
simplify_0:
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_98300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414041:
L_98277:
	shrq $0x2,%r13
	movl %r13d,%r11d
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF17,%r13
	jne L_98267
L_98278:
	movq 0x0(%r14),%r13
	movq 0x60(%rbp),%r14
	movq 0x10(%r15),%r10
	cmpq %r10,0x10(%r14)
	jne L_98267
L_98280:
	movl 0x20(%rbp),%r15d
	cmpl %r11d,%r15d
	jne L_98267
L_98283:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_98284
L_98285:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_414043
L_98286:
	movq 0x0(%r13),%r14
	movq %r14,0xA0(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	testl %r15d,%r15d
	jnz L_414042
L_98287:
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_98288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_414042:
L_98345:
	movq 0x58(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_414043:
L_98284:
	movq (globalObjptr+0x590)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1385
L_98259:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98260
L_98360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98361
.p2align 0x4
.long 0x13A7
L_98361:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98260:
	cmpq $0xFFFFFFFFFFFFFFFF,0x20(%rbp)
	jne L_98257
L_98262:
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp add1_0
.p2align 0x4
.long 0x1386
L_98363:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98364
L_98449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98450
.p2align 0x4
.long 0x13A6
L_98450:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98364:
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_98372
L_98365:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_98366:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF17,%r15
	jne L_414067
L_98387:
	movq 0x0(%r11),%r15
	movq %r13,%r11
	andq $0x3,%r11
	cmpq $0x2,%r11
	je L_414060
	cmpq $0x3,%r11
	je L_414055
.p2align 0x4,,0x7
L_98368:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_414053
L_98369:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_98366
.p2align 0x4
L_414053:
L_98370:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98372
L_98375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_98376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98376
.p2align 0x4
.long 0x1387
L_98376:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_98372:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne loop_3849
L_98374:
	movq 0x70(%rbp),%r11
	movq 0x88(%rbp),%r15
	movq %r11,%r14
	jmp L_98213
.p2align 0x4
loop_3849:
	movq %r11,%r15
	jmp loop_1098
.p2align 0x4
L_414055:
L_98446:
	shrq $0x2,%r13
	movl %r13d,%ecx
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF16,%r15
	jne L_98368
L_98447:
	movq 0x0(%r14),%r15
x_338:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_98368
L_98380:
	cmpl %ecx,0x20(%rbp)
	jne L_98368
L_98382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98384
L_98385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98386
.p2align 0x4
.long 0x13A8
L_98386:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98384:
	movq $0x1DF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp simplify_0
.p2align 0x4
L_414060:
L_98388:
	shrq $0x2,%r13
	movl %r13d,%r11d
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF16,%r13
	jne L_98368
L_98389:
	movq 0x50(%rbp),%r13
	movq 0x0(%r14),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	jne L_98368
L_98391:
	movl 0x20(%rbp),%r14d
	cmpl %r11d,%r14d
	jne L_98368
L_98394:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_98395
L_98396:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_414062
L_98397:
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	testl %r14d,%r14d
	jnz L_414061
L_98398:
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_98399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_414061:
L_98441:
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_414062:
L_98395:
	movq (globalObjptr+0x588)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414067:
L_98367:
	movq %r13,%r15
	andq $0x3,%r15
	cmpq $0x3,%r15
	jne L_98368
L_98377:
	shrq $0x2,%r13
	movl %r13d,%ecx
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF16,%r15
	jne L_98368
L_98378:
	movq 0x0(%r14),%r15
	jmp x_338
.p2align 0x4
.long 0x1382
L_98157:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98158
L_98196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_98197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98197
.p2align 0x4
.long 0xD07
L_98197:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_98158:
	movq 0x60(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpb $0x1,0x4(%r13)
	je L_414073
L_98159:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_98162
L_98160:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_98156
.p2align 0x4
L_414073:
L_98181:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_98183:
	movl %r13d,0x60(%rbp)
	movq $0x4075,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_98184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1382
L_98165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98166
L_98192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_98193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98193
.p2align 0x4
.long 0xD07
L_98193:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_98166:
	movq 0x60(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpb $0x1,0x4(%r13)
	je L_98181
L_98167:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_98170
L_98168:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_98164
.p2align 0x4
.long 0x5B6
L_98173:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98174
L_98188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_98189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98189
.p2align 0x4
.long 0x1240
L_98189:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_98174:
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpb $0x1,0x4(%r13)
	je L_98181
L_98175:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_98178
L_98176:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_98172
.p2align 0x4
.long 0x1
L_98001:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1369
L_98042:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98043
L_98101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98102
.p2align 0x4
.long 0x137E
L_98102:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98043:
	movq $0x35CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x543
L_97957:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97958
L_97959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97960
.p2align 0x4
.long 0xF39
L_97960:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97958:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x680
L_97926:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97927
L_97933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97934
.p2align 0x4
.long 0x1367
L_97934:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97927:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1363
L_97878:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97879
L_97885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97886
.p2align 0x4
.long 0x1365
L_97886:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97879:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1363
L_97825:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97826
L_97837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97838
.p2align 0x4
.long 0x1365
L_97838:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97826:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x528
L_97754:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97755
L_97756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97757
.p2align 0x4
.long 0xF2D
L_97757:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97755:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x1352
L_97621:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97622
L_97708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97709
.p2align 0x4
.long 0x135E
L_97709:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97622:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x6C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97624:
	cmpl 0x68(%rbp),%r13d
	jne L_96886
L_97626:
	movl %r13d,0xB8(%rbp)
	movq $0x3EF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x134F
L_97606:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_97598
.p2align 0x4
.long 0x1360
L_97718:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97720
L_97726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97727
.p2align 0x4
.long 0x1361
L_97727:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97720:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97721
L_97722:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_414093
	cmpq $0xEBF,%r14
	je L_414092
	cmpq $0xEC2,%r14
	je L_414091
L_97721:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_97598
.p2align 0x4
L_414091:
L_97725:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	jmp L_97611
.p2align 0x4
L_414092:
L_97724:
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp addLeave_0
.p2align 0x4
L_414093:
L_97723:
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp addLeave_0
.p2align 0x4
.long 0x1341
L_97524:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97525
L_97566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97567
.p2align 0x4
.long 0xD03
L_97567:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97525:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97527:
	testl %r13d,%r13d
	jz L_414096
L_97528:
	movl %r13d,0x80(%rbp)
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x406D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_414096:
L_97562:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97563
L_97564:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEC0,%r13
	jne L_414097
L_97565:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
L_97538:
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_97539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1381
.p2align 0x4
L_414097:
L_97563:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
L_97535:
	movq $0x1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_96797
.p2align 0x4
.long 0x529
L_97488:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97489
L_97500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97501
.p2align 0x4
.long 0x5A3
L_97501:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97489:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97491:
	movl %r13d,0x60(%rbp)
	movq $0x4071,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_97492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x132C
L_97281:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x68(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_96866
L_97283:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1086:
	cmpl %ecx,0x68(%rbp)
	je L_414143
L_97284:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_97183
L_97286:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_97289
L_97287:
	movq 0x0(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_97289
L_97291:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_414104
L_97289:
	incl %ecx
	jo L_96808
L_97290:
	jmp loop_1086
.p2align 0x4
L_414104:
L_97293:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97294
L_97399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97400
.p2align 0x4
.long 0x1337
L_97400:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97294:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x30(%rbp)
	cmpq %r11,%r14
	jne L_96866
L_97296:
	cmpl %r13d,0x68(%rbp)
	jne L_96886
L_97298:
	testq %r11,%r11
	jz L_414136
L_97299:
	cmpq $0x7FFFFFFF,%r11
	ja L_97258
L_97300:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97301
L_97395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97396
.p2align 0x4
.long 0x132D
L_97396:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97301:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142B,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97302
.p2align 0x4
.long 0x132D
L_97302:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_97303:
	movq $0x1,0x70(%rbp)
	movq $0x0,0x78(%rbp)
loop_1087:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_414121
L_97304:
	movq 0x68(%rbp),%r15
	movq $0x177B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_96866
L_97306:
	testl %r15d,%r15d
	jz L_414119
L_97307:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_97338
L_97308:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1088:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_414107
L_97333:
	movslq %ebx,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_96866
L_97335:
	addl %ecx,%r10d
	jo L_96808
L_97336:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_1088
.p2align 0x4
L_414107:
L_97309:
	cmpq $0x0,0x20(%rbp)
	jna L_97183
L_97311:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_414116
L_97312:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97258
L_97313:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97314
.p2align 0x4
.long 0x132E
L_97314:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x50(%rbp)
L_97315:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1089:
	cmpq 0x30(%rbp),%r15
	jnl L_414113
.p2align 0x4,,0x7
loop_1090:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_97323:
	cmpl %r11d,%ecx
	jl L_414110
L_97324:
	incl %ebx
	jo L_96808
L_97325:
	movslq %ebx,%r13
	cmpq 0x20(%rbp),%r13
	jnb L_97183
L_97327:
	movq 0x68(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_1090
.p2align 0x4
L_414110:
L_97328:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_97183
L_97330:
	movq 0x0(%r14,%r11,8),%r13
	incl %ecx
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1089
.p2align 0x4
L_414113:
L_97316:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97317
L_97319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97320
.p2align 0x4
.long 0x132F
L_97320:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_97317:
	movq 0x50(%rbp),%r15
	movq $0x6ED,0xFFFFFFFFFFFFFFF8(%r15)
L_97318:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_97218
.p2align 0x4
L_414116:
L_97332:
	movq (globalObjptr+0x1010)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_97315
.p2align 0x4
L_414119:
L_97339:
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_97340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414121:
L_97344:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_414133
L_97345:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_97347
L_97353:
	movl 0x0(%r11),%r14d
	testl %r14d,%r14d
	jz L_414131
L_97355:
	movq 0x8(%r15),%r14
L_97356:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_96903
L_97357:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_96903
L_97358:
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x90(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_97360:
	cmpl $0x0,%r13d
	jl L_97338
L_97361:
	movq $0x1,0x98(%rbp)
	movl $0x0,0x94(%rbp)
loop_1091:
	movl 0x90(%rbp),%r14d
	cmpl %r14d,0x94(%rbp)
	jl L_414126
L_97362:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_414125
L_97363:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97364:
	incl %ecx
	movl %ecx,0x88(%rbp)
	jo L_96808
L_97365:
	cmpq $0x1,%r15
	je L_414122
L_97366:
	movq 0x8(%r15),%r15
	jmp L_97364
.p2align 0x4
L_414122:
L_97367:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97368
L_97381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97382
.p2align 0x4
.long 0x1334
L_97382:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97368:
	movl 0x88(%rbp),%ecx
L_97369:
	movl %ecx,0x90(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414125:
L_97383:
	xorl %ecx,%ecx
	jmp L_97369
.p2align 0x4
L_414126:
L_97384:
	movslq 0x94(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414131:
L_97347:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_97348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414133:
L_97390:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_97391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414136:
L_97398:
	movq (globalObjptr+0x558)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_97303
.p2align 0x4
L_414143:
L_97402:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97403
L_97404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97405
.p2align 0x4
.long 0x1338
L_97405:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97403:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_97218
.p2align 0x4
.long 0x529
L_97226:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97227
L_97273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97274
.p2align 0x4
.long 0x5A3
L_97274:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97227:
	movq $0x939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_414149
L_97228:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97229:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_97230:
	cmpq $0x1,%r15
	je L_414146
L_97231:
	movq 0x8(%r15),%r15
	jmp L_97229
.p2align 0x4
L_414146:
L_97232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97233
L_97270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97271
.p2align 0x4
.long 0x1058
L_97271:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_97233:
	movl 0x28(%rbp),%ecx
L_97234:
	movl %ecx,0x60(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_97235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_414149:
L_97272:
	xorl %ecx,%ecx
	jmp L_97234
.p2align 0x4
.long 0x538
L_97426:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97428
L_97432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97433
.p2align 0x4
.long 0xE51
L_97433:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97428:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97429
L_97430:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC0,%r14
	jne L_414151
L_97431:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp L_97280
.p2align 0x4
L_414151:
L_97429:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_97218
.p2align 0x4
.long 0x133C
L_97451:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97452
L_97459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97460
.p2align 0x4
.long 0x133F
L_97460:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97452:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97454:
	movl %r13d,0xA0(%rbp)
	movq $0x4005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_97455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x133A
L_97438:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97439
L_97441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97442
.p2align 0x4
.long 0x133B
L_97442:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_97439:
	movq 0x68(%rbp),%r15
	movq 0x78(%rbp),%r14
L_97440:
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1079
.p2align 0x4
.long 0x133A
L_97462:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97463
L_97464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97465
.p2align 0x4
.long 0x133B
L_97465:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_97463:
	movq 0x68(%rbp),%r15
	movq 0x78(%rbp),%r14
	jmp L_97440
.p2align 0x4
.long 0x1317
L_97089:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97090
L_97172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97173
.p2align 0x4
.long 0x1326
L_97173:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97090:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x98(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_414158
L_97171:
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_97092:
	movq $0x1C87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0xA05,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x1C85,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0xA05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	movq $0x2B69,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r9)
	movq $0x2B67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r11,0x8(%r13)
	movq $0x2B65,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x18,%r12
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x2B61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq %r13,%r15
	movq %r9,%r14
	jmp L_97093
.p2align 0x4
L_414158:
	movq %r14,%r15
	jmp L_97092
.p2align 0x4
.long 0x1319
L_97100:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97101
L_97107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97108
.p2align 0x4
.long 0x131C
L_97108:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97101:
	movq 0x20(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
L_97102:
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_97103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
.long 0x131D
L_97132:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_97133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1321
L_97145:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97146
L_97147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97148
.p2align 0x4
.long 0x1322
L_97148:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97146:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r15,0x20(%rbp)
	movq %r14,%r15
	jmp L_97102
.p2align 0x4
.long 0x1319
L_97161:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97162
L_97163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97164
.p2align 0x4
.long 0x131C
L_97164:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97162:
	movq 0x20(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_97102
.p2align 0x4
.long 0x1319
L_97114:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97115
L_97116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97117
.p2align 0x4
.long 0x131C
L_97117:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97115:
	movq 0x20(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_97102
.p2align 0x4
.long 0x1
L_96827:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1303
L_96874:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96875
L_96877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96878
.p2align 0x4
.long 0x1304
L_96878:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96875:
	movq $0x1D7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_96876
.p2align 0x4
.long 0x1313
L_97072:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97073
L_97074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97075
.p2align 0x4
.long 0x1314
L_97075:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97073:
	movq $0x1D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	jmp L_96876
.p2align 0x4
.long 0x1
L_97006:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x130F
L_97051:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97052
L_97063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97064
.p2align 0x4
.long 0xD03
L_97064:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97052:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x3FBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_97053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x130E
L_96987:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96988
L_96992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96993
.p2align 0x4
.long 0x130C
L_96993:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96988:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_414167
L_96989:
L_96990:
	movq $0x1D83,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_96876
.p2align 0x4
L_414167:
L_96991:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_96990
.p2align 0x4
.long 0x1
L_96923:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x130A
L_96968:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96969
L_96980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96981
.p2align 0x4
.long 0x130C
L_96981:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96969:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x3FBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_96970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1307
L_96907:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96908
L_96909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96910
.p2align 0x4
.long 0x1308
L_96910:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96908:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_96876
.p2align 0x4
.long 0x1305
L_96888:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96889
L_96900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96901
.p2align 0x4
.long 0x1304
L_96901:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96889:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x3FBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_96890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13B3
L_98558:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98559
L_99051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_99052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99052
.p2align 0x4
.long 0xD04
L_99052:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98559:
	movq 0x48(%rbp),%r15
	movq 0x50(%r15),%r14
	movq 0x48(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_414197
L_98560:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEBE,%r11
	je L_414192
	cmpq $0xEBF,%r11
	je L_414187
	cmpq $0xEC0,%r11
	je L_414186
	cmpq $0xEC1,%r11
	je L_414174
	cmpq $0xEC2,%r11
	je L_414173
	cmpq $0xEC3,%r11
	je L_414172
L_98561:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1D7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,%r14
L_98562:
	movq $0x1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x28,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x68(%rbp),%r11
	movq %r11,0x18(%r13)
	movq $0x1DDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq %r13,%r15
	jmp L_96797
.p2align 0x4
L_414172:
L_98941:
	movq %r14,0xC0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
L_414173:
L_98731:
	movq %r13,0xB8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_98732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_84
.p2align 0x4
L_414174:
L_98616:
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_414182
L_98624:
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	movq %r8,0x50(%rbp)
	cmpq %r8,%r10
	jne L_96866
L_98626:
	testl %r9d,%r9d
	jnz L_98627
L_98729:
	cmpq $0x1,%r13
	jne L_414175
L_98730:
	movq $0x1,%r15
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
L_414175:
L_98627:
	movq 0x50(%rbp),%r15
	testq %r15,%r15
	jz L_414179
L_98628:
	cmpq $0x7FFFFFFF,%r15
	ja L_97258
L_98629:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98630
L_98725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98726
.p2align 0x4
.long 0x13BC
L_98726:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98630:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98631
.p2align 0x4
.long 0x13BC
L_98631:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x70(%rbp)
L_98632:
	movq $0x1,0x98(%rbp)
	movq $0x0,0xA0(%rbp)
loop_1099:
	movq 0x50(%rbp),%r13
	cmpq %r13,0xA0(%rbp)
	jl L_414176
L_98633:
	movq 0x70(%rbp),%r13
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x240F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1D83,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x98(%rbp),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_98562
.p2align 0x4
L_414176:
L_98634:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
L_414179:
L_98728:
	movq (globalObjptr+0x2190)(%rip),%r14
	movq %r14,0x70(%rbp)
	jmp L_98632
.p2align 0x4
L_414182:
L_98617:
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r15
	cmpq %r10,%r15
	jne L_96866
L_98619:
	testl %r9d,%r9d
	jz L_414183
L_98620:
	movq 0x50(%rbp),%r15
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
L_414183:
L_98621:
	cmpq $0x1,%r13
	je L_414184
L_98622:
	movq 0x50(%rbp),%r15
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
L_414184:
L_98623:
	movq $0x1,%r15
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
L_414186:
L_98597:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
L_414187:
L_98580:
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_96903
L_98581:
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r8
	movl %r8d,%esp
	movslq %esp,%rsi
	cmpq %r8,%rsi
	jne L_96866
L_98583:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r8
	movl %r8d,%esi
	movslq %esi,%rdi
	cmpq %r8,%rdi
	jne L_96866
L_98585:
	cmpl %esp,%esi
	jne L_96886
L_98587:
	movl %esp,0x80(%rbp)
	movq $0x388F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r9,0x18(%r8)
	movq %r14,0x28(%r8)
	addq $0x38,%r12
	movq %r13,0x0(%r8)
	movq %r15,0x20(%r8)
	movq %r8,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_98588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_414192:
L_98563:
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_96903
L_98564:
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r8
	movl %r8d,%esp
	movslq %esp,%rsi
	cmpq %rsi,%r8
	jne L_96866
L_98566:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r8
	movl %r8d,%esi
	movslq %esi,%rdi
	cmpq %rdi,%r8
	jne L_96866
L_98568:
	cmpl %esi,%esp
	jne L_96886
L_98570:
	movl %esp,0x80(%rbp)
	movq $0x388F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r9,0x18(%r8)
	movq %r14,0x28(%r8)
	addq $0x38,%r12
	movq %r13,0x0(%r8)
	movq %r15,0x20(%r8)
	movq %r8,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_98571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_414197:
L_99050:
	movq $0x1,%r13
	movq $0x1,%r14
	xchgq %r13,%r15
	jmp L_98562
.p2align 0x4
.long 0x138F
L_98300:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98301
L_98339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98340
.p2align 0x4
.long 0x139F
L_98340:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98301:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_98302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1388
L_98288:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x13A2
L_98346:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	decl %r15d
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1388
L_98399:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x13A2
L_98442:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	decl %r15d
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1383
L_98184:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98185
L_98186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_98187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98187
.p2align 0x4
.long 0x132B
L_98187:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_98185:
	movq 0x20(%rbp),%r15
	jmp L_98179
.p2align 0x4
.long 0x1
L_98002:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_98003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x136A
L_98044:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98045
L_98099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98100
.p2align 0x4
.long 0x137D
L_98100:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98045:
	movq 0xB8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_98047:
	movl %r13d,0xD8(%rbp)
	movq $0x3E6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
.long 0x132C
L_97928:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x2,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x132C
L_97880:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x2,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x132C
L_97827:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x2,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_97828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1353
L_97627:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97628
L_97706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97707
.p2align 0x4
.long 0x135D
L_97707:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97628:
	movq $0x1C85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0xB0(%rbp)
	movl $0x1,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_97629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1342
L_97529:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97530
L_97559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97560
.p2align 0x4
.long 0x134A
L_97560:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97530:
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
.long 0x1344
L_97539:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97540
L_97555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97556
.p2align 0x4
.long 0xE51
L_97556:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97540:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_97542:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_96866
L_97544:
	cmpl %r11d,%r9d
	jne L_96886
L_97546:
	movl %r11d,0x80(%rbp)
	movq $0x3899,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x5CA
L_97492:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97493
L_97498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97499
.p2align 0x4
.long 0x5A3
L_97499:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97493:
	movq $0x3A09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x4051,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_97494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceLabelVar_0
.p2align 0x4
.long 0x1330
L_97340:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97341
L_97342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97343
.p2align 0x4
.long 0x1331
L_97343:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_97341:
	movq 0x20(%rbp),%r15
	jmp L_97318
.p2align 0x4
.long 0x1332
L_97370:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97371
L_97379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97380
.p2align 0x4
.long 0x1333
L_97380:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97371:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97373:
	movl %r13d,%r14d
	decl %r14d
	jo L_96808
L_97374:
	movl %r13d,0x90(%rbp)
	movq $0x3FDD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1335
L_97385:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97386
L_97387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_97388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97388
.p2align 0x4
.long 0x1336
L_97388:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_97386:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq $0x1D71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x94(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r11)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0x70(%rbp)
	incl %r14d
	movl %r14d,0x94(%rbp)
	jmp loop_1091
.p2align 0x4
.long 0x1332
L_97348:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97349
L_97351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97352
.p2align 0x4
.long 0x1333
L_97352:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97349:
	movq 0x70(%rbp),%r15
	movq 0x80(%rbp),%r14
L_97350:
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1087
.p2align 0x4
.long 0x1332
L_97391:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97392
L_97393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97394
.p2align 0x4
.long 0x1333
L_97394:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97392:
	movq 0x70(%rbp),%r15
	movq 0x80(%rbp),%r14
	jmp L_97350
.p2align 0x4
.long 0x52A
L_97235:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1777,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97236
.p2align 0x4
.long 0x5A3
L_97236:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1082:
	cmpq $0x3,%r15
	jnl L_414220
L_97264:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_414219
	cmpl $0x1,%r14d
	je L_414218
	cmpl $0x2,%r14d
	je L_414217
L_97265:
	movq (globalObjptr+0x4D0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414217:
L_97269:
	movq 0x28(%rbp),%r14
L_97267:
	movq 0x50(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1082
.p2align 0x4
L_414218:
L_97268:
	movq 0x38(%rbp),%r14
	jmp L_97267
.p2align 0x4
L_414219:
L_97266:
	movq 0x48(%rbp),%r14
	jmp L_97267
.p2align 0x4
L_414220:
L_97237:
	movq 0x50(%rbp),%r15
	movq $0x1779,0xFFFFFFFFFFFFFFF8(%r15)
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1083:
	cmpl $0x3,%ecx
	jnl L_414223
L_97260:
	movslq %ecx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_96866
L_97262:
	addl %ebx,%r10d
	jo L_96808
L_97263:
	incl %ecx
	movl %r10d,%ebx
	jmp loop_1083
.p2align 0x4
L_414223:
L_97238:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq %ebx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_414232
L_97239:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97258
L_97240:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97241
.p2align 0x4
.long 0x132A
L_97241:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_97242:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1084:
	cmpq 0x38(%rbp),%r15
	jnl L_414229
.p2align 0x4,,0x7
loop_1085:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_97249:
	cmpl %r11d,%ecx
	jl L_414226
L_97250:
	incl %ebx
	jo L_96808
L_97251:
	movslq %ebx,%r13
	cmpq $0x3,%r13
	jnb L_97183
L_97253:
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_1085
.p2align 0x4
L_414226:
L_97254:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_97183
L_97256:
	movq 0x0(%r14,%r11,8),%r13
	incl %ecx
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1084
.p2align 0x4
L_414229:
L_97243:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97244
L_97245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97246
.p2align 0x4
.long 0x132B
L_97246:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97244:
	movq 0x48(%rbp),%r14
	movq $0x19,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
L_414232:
L_97259:
	movq (globalObjptr+0x560)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_97242
.p2align 0x4
.long 0x133D
L_97455:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97456
L_97457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_97458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97458
.p2align 0x4
.long 0x133E
L_97458:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_97456:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x88(%rbp),%r14
	jmp L_97440
.p2align 0x4
.long 0x131A
L_97103:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97104
L_97105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97106
.p2align 0x4
.long 0x131B
L_97106:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97104:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x131E
L_97133:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97134
L_97154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97155
.p2align 0x4
.long 0x1324
L_97155:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_97134:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97136:
	cmpl %r13d,0x68(%rbp)
	jne L_96886
L_97138:
	movl %r13d,0xA8(%rbp)
	movq $0x3EF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_97139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x4B0
L_96828:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1E0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_97007:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_97008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x130A
L_97053:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97054
L_97061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97062
.p2align 0x4
.long 0x130C
L_97062:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97054:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97056:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
L_96924:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1305
L_96970:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96971
L_96978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96979
.p2align 0x4
.long 0x1304
L_96979:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96971:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_96973:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1306
L_96890:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96891
L_96898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96899
.p2align 0x4
.long 0x1309
L_96899:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96891:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_96893:
	movl %r13d,0x80(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1403
L_98942:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x13D3
L_98732:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98733
L_98939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_98940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98940
.p2align 0x4
.long 0x1402
L_98940:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98733:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_414249
	cmpq $0x2,%r15
	je L_414248
L_98734:
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpq $0x1,%r14
	je L_414244
L_98735:
	movq %r13,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
L_414244:
L_98843:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_98781:
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %r9,%rsp
	jne L_96866
L_98783:
	movq 0xB0(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%rsp
	movl %esp,%esi
	movslq %esi,%rdi
	cmpq %rdi,%rsp
	jne L_96866
L_98785:
	cmpl %esi,%r8d
	jne L_96886
L_98787:
	movl %r8d,0x80(%rbp)
	movq $0x388F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x8(%r8)
	movq %r13,0x10(%r8)
	movq %r11,0x18(%r8)
	addq $0x38,%r12
	movq %r15,0x0(%r8)
	movq %r9,0x20(%r8)
	movq %r10,0x28(%r8)
	movq %r8,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_98788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_414248:
L_98938:
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_98781
.p2align 0x4
L_414249:
L_98844:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_414257
L_98845:
	cmpq $0x1,%r14
	je L_414256
L_98846:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x50(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x58(%rbp)
	movslq %r14d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r11,%r15
	jne L_96866
L_98848:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x98(%rbp)
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96866
L_98850:
	cmpl %r14d,%r13d
	jne L_414253
L_98852:
	movl $0x0,0x5C(%rbp)
loop_1104:
	movl 0x5C(%rbp),%r15d
	cmpl %r15d,0x58(%rbp)
	je L_414252
L_98853:
	movslq %r15d,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_97183
L_98855:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq 0x98(%rbp),%r14
	jnb L_97183
L_98857:
	movq %r13,0xD8(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_98858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414252:
L_98933:
	movq $0x1,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_98781
.p2align 0x4
L_414253:
L_98743:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414256:
L_98934:
	movq $0x1,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_98781
.p2align 0x4
L_414257:
L_98935:
	cmpq $0x1,%r14
	je L_414258
L_98936:
	movq (globalObjptr+0x21A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414258:
L_98937:
	movq $0x1,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_98781
.p2align 0x4
.long 0x13BD
L_98635:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98636
L_98723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_98724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98724
.p2align 0x4
.long 0x13D2
L_98724:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_98636:
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movl %r14d,%r15d
	movl %r15d,0xD8(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_96866
L_98638:
	movl $0x0,0xDC(%rbp)
loop_1100:
	movl 0xDC(%rbp),%r15d
	cmpl 0xD8(%rbp),%r15d
	je L_414261
L_98639:
	movslq %r15d,%r14
	cmpq 0xD0(%rbp),%r14
	jnb L_97183
L_98641:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xF0(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_98642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414261:
L_98722:
	movq 0x98(%rbp),%r13
	movq 0xB0(%rbp),%r14
	movq %r13,%r15
L_98677:
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_1099
.p2align 0x4
.long 0x13B9
L_98598:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98599
L_98614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_98615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98615
.p2align 0x4
.long 0x13BB
L_98615:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98599:
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_96866
L_98601:
	movq 0x48(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%rsp
	movl %esp,%esi
	movslq %esi,%rdi
	cmpq %rsp,%rdi
	jne L_96866
L_98603:
	cmpl %r8d,%esi
	jne L_96886
L_98605:
	movl %r8d,0x80(%rbp)
	movq $0x388F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x8(%r8)
	movq %r13,0x10(%r8)
	movq %r11,0x18(%r8)
	addq $0x38,%r12
	movq %r15,0x0(%r8)
	movq %r9,0x20(%r8)
	movq %r10,0x28(%r8)
	movq %r8,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_98606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13B8
L_98588:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98589
L_98594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98595
.p2align 0x4
.long 0x13B7
L_98595:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98589:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x4017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_98590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13B4
L_98571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98572
L_98577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98578
.p2align 0x4
.long 0x13B7
L_98578:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98572:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x4017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_98573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1390
L_98302:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98303
L_98337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98338
.p2align 0x4
.long 0x139E
L_98338:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98303:
	movslq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_97183
L_98305:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_96903
L_98306:
	movq $0x3FDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	movl $0x2,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1389
L_98289:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x13A3
L_98347:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1389
L_98400:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x13A3
L_98443:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x4B0
L_98003:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF160)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_98004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x136B
L_98048:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
.long 0x535
L_97929:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97930
L_97931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97932
.p2align 0x4
.long 0xCE5
L_97932:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97930:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x2085,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r9,0x0(%r13)
	movq %r14,0x20(%rbp)
	jmp L_97830
.p2align 0x4
.long 0x535
L_97881:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97882
L_97883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97884
.p2align 0x4
.long 0xCE5
L_97884:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97882:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x26C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r15,0x0(%r13)
	movq %r14,0x20(%rbp)
	jmp L_97830
.p2align 0x4
.long 0x535
L_97828:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97829
L_97835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97836
.p2align 0x4
.long 0xCE5
L_97836:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97829:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x26C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r15,0x0(%r13)
	movq %r14,0x20(%rbp)
	jmp L_97830
.p2align 0x4
.long 0x1354
L_97629:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97630
L_97704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97705
.p2align 0x4
.long 0x135C
L_97705:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97630:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x2,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_97631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1343
L_97531:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97533
L_97557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97558
.p2align 0x4
.long 0x1349
L_97558:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97533:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97534
L_97536:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC0,%r14
	jne L_414277
L_97537:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_97538
.p2align 0x4
L_414277:
L_97534:
	movq 0x38(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_97535
.p2align 0x4
.long 0x1345
L_97547:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97548
L_97553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97554
.p2align 0x4
.long 0x1348
L_97554:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97548:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x3FCD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_97549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0xCEC
L_97494:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97495
L_97496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97497
.p2align 0x4
.long 0x1244
L_97497:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97495:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_96797
.p2align 0x4
.long 0x1332
L_97375:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97376
L_97377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97378
.p2align 0x4
.long 0x1333
L_97378:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97376:
	movq 0x70(%rbp),%r15
	movq 0x80(%rbp),%r14
	jmp L_97350
.p2align 0x4
.long 0x131F
L_97139:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97140
L_97152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_97153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97153
.p2align 0x4
.long 0x1323
L_97153:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_97140:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x4065,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x20,%r12
	movq $0x1,0x10(%r14)
	movq %r14,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_97141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x5B0
L_96829:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_97008:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1E8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_97009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1310
L_97057:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97058
L_97059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97060
.p2align 0x4
.long 0x1311
L_97060:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97058:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_96876
.p2align 0x4
.long 0x4B0
L_96925:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1E0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x130B
L_96974:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96975
L_96976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96977
.p2align 0x4
.long 0x1309
L_96977:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96975:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_96876
.p2align 0x4
.long 0x1307
L_96894:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96895
L_96896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96897
.p2align 0x4
.long 0x1308
L_96897:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96895:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_96876
.p2align 0x4
.long 0x1404
L_98943:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_414288
L_98945:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_414287
L_98947:
	movq 0x0(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_414287:
L_98946:
	movq (globalObjptr+0x2130)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414288:
L_98944:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x13D4
L_98736:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98737
L_98841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98842
.p2align 0x4
.long 0x13EB
L_98842:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98737:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movl %r14d,%r15d
	movl %r15d,0xC8(%rbp)
	movslq %r15d,%r13
	movq %r13,0xD0(%rbp)
	cmpq %r14,%r13
	jne L_96866
L_98739:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x98(%rbp)
	movl %r13d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_96866
L_98741:
	cmpl %r14d,%r15d
	jne L_98743
L_98744:
	movl $0x0,0xCC(%rbp)
loop_1102:
	movl 0xCC(%rbp),%r15d
	cmpl %r15d,0xC8(%rbp)
	je L_414291
L_98745:
	movslq %r15d,%r14
	cmpq 0xC0(%rbp),%r14
	jnb L_97183
L_98747:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq 0x98(%rbp),%r14
	jnb L_97183
L_98749:
	movq %r13,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_98750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414291:
L_98840:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_98781
.p2align 0x4
.long 0x13DE
L_98788:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98789
L_98794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98795
.p2align 0x4
.long 0xCE5
L_98795:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98789:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x4017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_98790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13EC
L_98858:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_98859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13BE
L_98642:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98643
L_98720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98721
.p2align 0x4
.long 0x13D1
L_98721:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98643:
	movl 0xE8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414297
L_98644:
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_98645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
L_414297:
L_98718:
	movl 0xDC(%rbp),%r15d
	incl %r15d
	jo L_96808
L_98719:
	movl %r15d,0xDC(%rbp)
	jmp loop_1100
.p2align 0x4
.long 0x13BA
L_98606:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98607
L_98612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98613
.p2align 0x4
.long 0xD01
L_98613:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98607:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x4017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_98608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13B5
L_98590:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98591
L_98592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98593
.p2align 0x4
.long 0x13B6
L_98593:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98591:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
.long 0x13B5
L_98573:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98574
L_98575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98576
.p2align 0x4
.long 0x13B6
L_98576:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98574:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
.long 0x1391
L_98307:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x138A
L_98290:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x13A4
L_98348:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x138A
L_98401:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB0(%rbp)
L_98402:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x13A4
L_98444:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x5B0
L_98004:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_98005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x136C
L_98049:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98050
L_98097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98098
.p2align 0x4
.long 0x137C
L_98098:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98050:
	cmpq $0x1,0x78(%rbp)
	jne L_98052
L_98096:
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
L_98052:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_414303
L_98053:
	movq 0x8(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_98054:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq $0x3DD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414303:
L_98059:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_414304
L_98060:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_98061:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq $0x3DD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414304:
L_98066:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x9FD,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x28(%rbp),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r8),%rsp
	movl %esp,%esi
	movslq %esi,%rdi
	cmpq %rdi,%rsp
	jne L_96866
L_98068:
	movl %esi,0xD8(%rbp)
	movq $0x3E83,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r14,0x0(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r10,0x28(%rsp)
	addq $0x48,%r12
	movq %r9,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rsp)
	movq %r8,0x38(%rsp)
	movq %rsp,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
.long 0x1355
L_97631:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_96813
L_97632:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_414316
L_97633:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97635:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_97636
L_97673:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCA6,%r13
	jne L_97636
L_97674:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x50(%rbp)
	je L_414311
L_97636:
	incl %ecx
	jo L_96808
L_97637:
	cmpq $0x1,%r14
	je L_414308
L_97638:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97635
.p2align 0x4
L_414308:
L_97639:
L_97640:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_97641:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_336
L_97672:
	movl %ecx,0x0(%r15)
x_336:
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_97643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414311:
L_97676:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96823
L_97677:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414312
L_97702:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_97679:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414312:
L_97678:
	movq %r13,%r15
	jmp L_97679
.p2align 0x4
L_414316:
L_97703:
	xorl %ecx,%ecx
	jmp L_97640
.p2align 0x4
.long 0x1346
L_97549:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97550
L_97551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97552
.p2align 0x4
.long 0x1347
L_97552:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_97550:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r15
	jmp L_97535
.p2align 0x4
.long 0x1320
L_97141:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97142
L_97150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_97151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97151
.p2align 0x4
.long 0x1323
L_97151:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_97142:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_97143
.p2align 0x4
.long 0x51F
L_96830:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96831
L_96854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96855
.p2align 0x4
.long 0x4AF
L_96855:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96831:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96832:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_96833:
	cmpq $0x1,%r14
	je L_414320
L_96834:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96832
.p2align 0x4
L_414320:
L_96835:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96836
L_96852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96853
.p2align 0x4
.long 0x4E7
L_96853:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96836:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414321
L_96837:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_192:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414321:
L_96851:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_192
.p2align 0x4
.long 0x5B0
L_97009:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_96926:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1405
L_98948:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98949
L_99048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_99049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99049
.p2align 0x4
.long 0x141C
L_99049:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98949:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1454,%r15
	jne L_98944
L_98950:
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,%r15
	je L_414325
L_98951:
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_414325:
L_98958:
	movq $0x3963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movl $0x1,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x13D5
L_98750:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_98751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13DF
L_98790:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98791
L_98792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98793
.p2align 0x4
.long 0xD04
L_98793:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98791:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r14
	jmp L_98562
.p2align 0x4
.long 0x13ED
L_98859:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98860
L_98931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98932
.p2align 0x4
.long 0x1401
L_98932:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_98860:
	movl 0xD0(%rbp),%r15d
	cmpl %r15d,0xC0(%rbp)
	je L_414329
L_98861:
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414329:
L_98929:
	movl 0x5C(%rbp),%r15d
	incl %r15d
	jo L_96808
L_98930:
	movl %r15d,0x5C(%rbp)
	jmp loop_1104
.p2align 0x4
.long 0x13BF
L_98645:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_98646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x13B8
L_98608:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98609
L_98610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98611
.p2align 0x4
.long 0x13B7
L_98611:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98609:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
.long 0x1392
L_98308:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98309
L_98334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98335
.p2align 0x4
.long 0x139D
L_98335:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98309:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_98310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x138B
L_98291:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x138B
L_98403:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x13AC
L_98445:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	jmp L_98402
.p2align 0x4
.long 0x51F
L_98005:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98006
L_98029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_98030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98030
.p2align 0x4
.long 0x4AF
L_98030:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_98006:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_98007:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_98008:
	cmpq $0x1,%r14
	je L_414334
L_98009:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98007
.p2align 0x4
L_414334:
L_98010:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98011
L_98027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98028
.p2align 0x4
.long 0x4E7
L_98028:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98011:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414335
L_98012:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_196:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414335:
L_98026:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_196
.p2align 0x4
.long 0x136D
L_98055:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98056
L_98093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98094
.p2align 0x4
.long 0x137B
L_98094:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98056:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_98059
L_98057:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_98054
.p2align 0x4
.long 0x136E
L_98062:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98063
L_98090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98091
.p2align 0x4
.long 0x137A
L_98091:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98063:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_98066
L_98064:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_98061
.p2align 0x4
.long 0x136F
L_98069:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98070
L_98088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98089
.p2align 0x4
.long 0x1379
L_98089:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98070:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2777,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_3
.p2align 0x4
.long 0x1
L_97643:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1356
L_97680:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97681
L_97700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97701
.p2align 0x4
.long 0x135B
L_97701:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97681:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97683:
	movq $0x3FEB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	movl %r13d,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_97684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
rev_190:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414348
L_96838:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96839:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414347
.p2align 0x4,,0x7
L_96840:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414346
L_96841:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96839
.p2align 0x4
L_414346:
L_96843:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414347:
L_96848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96849
.p2align 0x4
.long 0x45C
L_96849:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96840
.p2align 0x4
L_414348:
L_96850:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96843
.p2align 0x4
.long 0x51F
L_97010:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97011
L_97034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_97035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97035
.p2align 0x4
.long 0x4AF
L_97035:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_97011:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_97012:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_97013:
	cmpq $0x1,%r14
	je L_414349
L_97014:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97012
.p2align 0x4
L_414349:
L_97015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97016
L_97032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97033
.p2align 0x4
.long 0x4E7
L_97033:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97016:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414350
L_97017:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_194:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414350:
L_97031:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_194
.p2align 0x4
.long 0x51F
L_96927:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96928
L_96951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96952
.p2align 0x4
.long 0x4AF
L_96952:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96928:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96929:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_96930:
	cmpq $0x1,%r14
	je L_414354
L_96931:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96929
.p2align 0x4
L_414354:
L_96932:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96933
L_96949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96950
.p2align 0x4
.long 0x4E7
L_96950:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96933:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414355
L_96934:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_193:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414355:
L_96948:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_193
.p2align 0x4
.long 0x1406
L_98952:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98953
L_99045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_99046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99046
.p2align 0x4
.long 0x141C
L_99046:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98953:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1454,%r13
	jne L_414359
L_98955:
	movl 0x0(%r14),%r13d
	movq $0x28A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movb $0x3,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_414359:
L_98954:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1404
L_98959:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1385
.p2align 0x4
.long 0x13D6
L_98751:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98752
L_98838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98839
.p2align 0x4
.long 0x13EA
L_98839:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98752:
	movl 0xD8(%rbp),%r15d
	cmpl %r15d,0xE8(%rbp)
	je L_414361
L_98753:
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_98754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414361:
L_98836:
	movl 0xCC(%rbp),%r15d
	incl %r15d
	jo L_96808
L_98837:
	movl %r15d,0xCC(%rbp)
	jmp loop_1102
.p2align 0x4
.long 0x13EE
L_98862:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98863
L_98927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98928
.p2align 0x4
.long 0x1400
L_98928:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98863:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x50(%rbp)
	movq 0xB8(%rbp),%r15
	testq %r15,%r15
	jz L_414368
L_98864:
	cmpq $0x7FFFFFFF,%r15
	ja L_97258
L_98865:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98866
L_98923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98924
.p2align 0x4
.long 0x13EF
L_98924:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98866:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x154B,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98867
.p2align 0x4
.long 0x13EF
L_98867:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x30(%rbp)
L_98868:
	movq $0x0,0x58(%rbp)
loop_1105:
	movq 0xB8(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_414365
L_98869:
	movq 0x30(%rbp),%r15
	movq $0xC05,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_98871:
	movq $0x3949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	movl %r13d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_414365:
L_98901:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq %r13,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414368:
L_98926:
	movq (globalObjptr+0x21A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_98868
.p2align 0x4
.long 0x13C0
L_98646:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98647
L_98716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_98717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98717
.p2align 0x4
.long 0x13D0
L_98717:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_98647:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0xE8(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xF0(%rbp)
	cmpq %r11,%r14
	jne L_96866
L_98649:
	cmpl 0xD8(%rbp),%r13d
	jne L_96886
L_98651:
	testq %r11,%r11
	jz L_414374
L_98652:
	cmpq $0x7FFFFFFF,%r11
	ja L_97258
L_98653:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98654
L_98712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_98713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98713
.p2align 0x4
.long 0x13C1
L_98713:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_98654:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x154B,%rcx
	movq 0xF0(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_98655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98655
.p2align 0x4
.long 0x13C1
L_98655:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB0(%rbp)
L_98656:
	movq $0x0,0xD8(%rbp)
loop_1101:
	movq 0xF0(%rbp),%r15
	cmpq %r15,0xD8(%rbp)
	jl L_414371
L_98657:
	movq 0xB0(%rbp),%r15
	movq $0xC05,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_98659:
	movq $0x3949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xF8(%rbp)
	movl %r13d,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_98660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_414371:
L_98690:
	movq 0xD8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xD0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xF8(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x100(%rbp)
	movq %r13,0x110(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_98691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414374:
L_98715:
	movq (globalObjptr+0x2198)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_98656
.p2align 0x4
.long 0x1393
L_98310:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98311
L_98332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98333
.p2align 0x4
.long 0x139C
L_98333:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98311:
	movslq 0x28(%rbp),%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_97183
L_98313:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_96903
L_98314:
	movl 0x0(%r13),%r15d
	movl %r15d,0xA8(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_98315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x138C
L_98292:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_98293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x138C
L_98404:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_98405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1
rev_194:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414383
L_98013:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_98014:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414382
.p2align 0x4,,0x7
L_98015:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414381
L_98016:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_98014
.p2align 0x4
L_414381:
L_98018:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414382:
L_98023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_98024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98024
.p2align 0x4
.long 0x45C
L_98024:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_98015
.p2align 0x4
L_414383:
L_98025:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98018
.p2align 0x4
.long 0x1370
L_98071:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98072
L_98086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98087
.p2align 0x4
.long 0x1378
L_98087:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98072:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2777,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1
L_97644:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_97645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1357
L_97684:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97685
L_97698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97699
.p2align 0x4
.long 0x135A
L_97699:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97685:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96866
L_97687:
	cmpl %r13d,0x34(%rbp)
	jne L_96886
L_97689:
	movl %r13d,0xB8(%rbp)
	movq $0x3EF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_97690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1
L_96844:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96845
L_96846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96847
.p2align 0x4
.long 0x452
L_96847:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96845:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_192:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414391
L_97018:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_97019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414390
.p2align 0x4,,0x7
L_97020:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414389
L_97021:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_97019
.p2align 0x4
L_414389:
L_97023:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414390:
L_97028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_97029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97029
.p2align 0x4
.long 0x45C
L_97029:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97020
.p2align 0x4
L_414391:
L_97030:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_97023
.p2align 0x4
.long 0x1
rev_191:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414394
L_96935:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96936:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414393
.p2align 0x4,,0x7
L_96937:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414392
L_96938:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96936
.p2align 0x4
L_414392:
L_96940:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414393:
L_96945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96946
.p2align 0x4
.long 0x45C
L_96946:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96937
.p2align 0x4
L_414394:
L_96947:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96940
.p2align 0x4
.long 0x1404
L_98956:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98958
L_99043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_99044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99044
.p2align 0x4
.long 0x141B
L_99044:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98958
.p2align 0x4
.long 0x13D4
L_98960:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x0,%r14
	jna L_97183
L_98962:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_98963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13D7
L_98754:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98755
L_98834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98835
.p2align 0x4
.long 0x13E9
L_98835:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_98755:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x78(%rbp)
	movq 0xD0(%rbp),%r15
	testq %r15,%r15
	jz L_414401
L_98756:
	cmpq $0x7FFFFFFF,%r15
	ja L_97258
L_98757:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98758
L_98830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98831
.p2align 0x4
.long 0x13D8
L_98831:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_98758:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x154B,%rcx
	movq 0xD0(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98759
.p2align 0x4
.long 0x13D8
L_98759:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x30(%rbp)
L_98760:
	movq $0x0,0x98(%rbp)
loop_1103:
	movq 0xD0(%rbp),%r15
	cmpq %r15,0x98(%rbp)
	jl L_414398
L_98761:
	movq 0x30(%rbp),%r15
	movq $0xC05,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_98763:
	movq $0x3949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	movl %r13d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_414398:
L_98808:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq %r13,0xE0(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_98809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414401:
L_98833:
	movq (globalObjptr+0x21B0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_98760
.p2align 0x4
.long 0x13F0
L_98872:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98873
L_98899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98900
.p2align 0x4
.long 0x13F9
L_98900:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98873:
	movq $0x389B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13FA
L_98902:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98903
L_98921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_98922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98922
.p2align 0x4
.long 0x13FF
L_98922:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_98903:
	movl 0xC8(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414404
L_98904:
	movq $0x1,%r15
	movq $0x1,%r14
L_98905:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x58(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x58(%rbp)
	jmp loop_1105
.p2align 0x4
L_414404:
L_98906:
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_98907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x13C2
L_98660:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98661
L_98688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98689
.p2align 0x4
.long 0x13C9
L_98689:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98661:
	movq $0x389B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_98662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13CA
L_98691:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98692
L_98710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_98711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98711
.p2align 0x4
.long 0x13CF
L_98711:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_98692:
	movl 0x108(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414407
L_98693:
	movq $0x1,%r15
	movq $0x1,%r14
L_98694:
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xD8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0xD8(%rbp)
	jmp loop_1101
.p2align 0x4
L_414407:
L_98695:
	movq 0x88(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_98696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1394
L_98315:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98316
L_98329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98330
.p2align 0x4
.long 0x139B
L_98330:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98316:
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x138D
L_98293:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98294
L_98343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98344
.p2align 0x4
.long 0x13A1
L_98344:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98294:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_98295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
.long 0x138D
L_98405:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98406
L_98439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98440
.p2align 0x4
.long 0x13A1
L_98440:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98406:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1
L_98019:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98020
L_98021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_98022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98022
.p2align 0x4
.long 0x452
L_98022:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_98020:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1371
L_98073:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98074
L_98084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98085
.p2align 0x4
.long 0x1377
L_98085:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98074:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x2,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x4B0
L_97645:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF1F0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_97646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1358
L_97690:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97691
L_97696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_97697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97697
.p2align 0x4
.long 0x135A
L_97697:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_97691:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_97692
.p2align 0x4
.long 0x1
L_97024:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97025
L_97026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_97027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97027
.p2align 0x4
.long 0x452
L_97027:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_97025:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96941:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96942
L_96943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96944
.p2align 0x4
.long 0x452
L_96944:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96942:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1407
L_98963:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13D9
L_98764:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98765
L_98806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98807
.p2align 0x4
.long 0x13E2
L_98807:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98765:
	movq $0x389B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13E3
L_98809:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98810
L_98828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_98829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98829
.p2align 0x4
.long 0x13E8
L_98829:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_98810:
	movl 0xD8(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414418
L_98811:
	movq $0x1,%r15
	movq $0x1,%r14
L_98812:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x98(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x98(%rbp)
	jmp loop_1103
.p2align 0x4
L_414418:
L_98813:
	movq 0x88(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_98814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x13F1
L_98874:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98875
L_98897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98898
.p2align 0x4
.long 0x13F8
L_98898:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98875:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_98877:
	movl %r11d,0xC8(%rbp)
	movq $0x394B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
.long 0x13FA
L_98907:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98908
L_98919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_98920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98920
.p2align 0x4
.long 0x13FF
L_98920:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_98908:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x90(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_98909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13C3
L_98662:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98663
L_98686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98687
.p2align 0x4
.long 0x13C9
L_98687:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98663:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_98665:
	movl %r11d,0x100(%rbp)
	movq $0x394B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_98666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
.long 0x13CA
L_98696:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98697
L_98708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_98709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98709
.p2align 0x4
.long 0x13CF
L_98709:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_98697:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x110(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x108(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x90(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_98698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x1395
L_98317:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98318
L_98327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98328
.p2align 0x4
.long 0x139A
L_98328:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98318:
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_98319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
.long 0x138E
L_98295:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98296
L_98341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_98342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98342
.p2align 0x4
.long 0x13A0
L_98342:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_98296:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_98299
	jmp L_98267
.p2align 0x4
.long 0x13A9
L_98407:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98408
L_98437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98438
.p2align 0x4
.long 0x13AB
L_98438:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98408:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414429
L_98409:
	movq (globalObjptr+0x19B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414429:
L_98413:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414434
L_98414:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
L_98415:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	movq 0xA8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_414431
L_98416:
	cmpq %r13,%r15
	jl L_98384
	jmp L_98368
.p2align 0x4
L_414431:
L_98419:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98420
L_98424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98425
.p2align 0x4
.long 0x13A1
L_98425:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98420:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xA0(%rbp),%rsi
	movq 0xA8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_98421:
	cmpl $0x0,%eax
	jg L_98384
	jmp L_98368
.p2align 0x4
L_414434:
L_98426:
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1372
L_98075:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_98076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x5B0
L_97646:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1408
L_98964:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98965
L_99041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_99042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99042
.p2align 0x4
.long 0x141A
L_99042:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98965:
	movl 0x74(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_414436
L_98966:
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414436:
L_99040:
	movq 0x50(%rbp),%r15
	movq $0x1,%r14
	jmp L_98562
.p2align 0x4
.long 0x13DA
L_98766:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98767
L_98804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98805
.p2align 0x4
.long 0x13E2
L_98805:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98767:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96866
L_98769:
	movl %r11d,0xC8(%rbp)
	movq $0x394B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
.long 0x13E3
L_98814:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98815
L_98826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_98827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98827
.p2align 0x4
.long 0x13E8
L_98827:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_98815:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x90(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_98816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13F2
L_98878:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98879
L_98895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98896
.p2align 0x4
.long 0x13F6
L_98896:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98879:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xC8(%rbp)
	movq $0x3EFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	addq $0xC0,%rbp
	leaq (L_98880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x13FB
L_98909:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98910
L_98917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98918
.p2align 0x4
.long 0x13FE
L_98918:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_98910:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_98911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13C4
L_98666:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98667
L_98684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98685
.p2align 0x4
.long 0x13C7
L_98685:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98667:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x100(%rbp)
	movq $0x3EFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0x18,%r12
	addq $0xF8,%rbp
	leaq (L_98668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x13CB
L_98698:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98699
L_98706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_98707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98707
.p2align 0x4
.long 0x13CE
L_98707:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_98699:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x120,%rbp
	leaq (L_98700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x1396
L_98319:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98320
L_98325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98326
.p2align 0x4
.long 0x1399
L_98326:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98320:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_98321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
bug_261:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98410
L_98411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_98412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98412
.p2align 0x4
.long 0x452
L_98412:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_98410:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x13AA
L_98427:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98428
L_98435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98436
.p2align 0x4
.long 0x13AB
L_98436:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98428:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414447
L_98429:
	movq 0xA8(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_98415
.p2align 0x4
L_414447:
L_98430:
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1373
L_98076:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98077
L_98082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98083
.p2align 0x4
.long 0x1376
L_98083:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98077:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_98078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
.long 0x51F
L_97647:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97648
L_97670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_97671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97671
.p2align 0x4
.long 0x4AF
L_97671:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_97648:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_97649:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96808
L_97650:
	cmpq $0x1,%r14
	je L_414450
L_97651:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97649
.p2align 0x4
L_414450:
L_97652:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97653
L_97668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97669
.p2align 0x4
.long 0x4E7
L_97669:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97653:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414451
L_97654:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_195:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414451:
L_97667:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_195
.p2align 0x4
.long 0x1409
L_98967:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98968
L_99038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_99039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99039
.p2align 0x4
.long 0x1419
L_99039:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98968:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x70(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x78(%rbp)
	cmpq %r11,%r14
	jne L_96866
L_98970:
	movq 0xB8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r15,%r10
	jne L_96866
L_98972:
	cmpl %r13d,%r14d
	jne L_96886
L_98974:
	testq %r11,%r11
	jz L_414459
L_98975:
	cmpq $0x7FFFFFFF,%r11
	ja L_97258
L_98976:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98977
L_99034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_99035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99035
.p2align 0x4
.long 0x140A
L_99035:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98977:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x154B,%rcx
	movq 0x78(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98978
.p2align 0x4
.long 0x140A
L_98978:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x50(%rbp)
L_98979:
	movq $0x0,0xA8(%rbp)
loop_1106:
	movq 0x78(%rbp),%r15
	cmpq %r15,0xA8(%rbp)
	jl L_414456
L_98980:
	movq 0x50(%rbp),%r15
	movq $0xC05,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96866
L_98982:
	movq $0x3949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB0(%rbp)
	movl %r13d,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_414456:
L_99012:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq %r13,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_99013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414459:
L_99037:
	movq (globalObjptr+0x21B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_98979
.p2align 0x4
.long 0x13DB
L_98770:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98771
L_98802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98803
.p2align 0x4
.long 0x13E0
L_98803:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98771:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xC8(%rbp)
	movq $0x3EFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	addq $0xC0,%rbp
	leaq (L_98772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x13E4
L_98816:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98817
L_98824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_98825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98825
.p2align 0x4
.long 0x13E7
L_98825:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_98817:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_98818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13F3
L_98880:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x2,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x13FC
L_98911:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98912
L_98915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_98916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98916
.p2align 0x4
.long 0x13FD
L_98916:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_98912:
	movl 0x98(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414466
L_98913:
	movq $0x1,%r15
	movq 0x78(%rbp),%r14
	jmp L_98905
.p2align 0x4
L_414466:
L_98914:
	movq 0xD0(%rbp),%r15
	movq 0x78(%rbp),%r14
	jmp L_98905
.p2align 0x4
.long 0x13C2
L_98668:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x2,0xF8(%rbp)
	movl $0x0,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_98669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x13CC
L_98700:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98701
L_98704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_98705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98705
.p2align 0x4
.long 0x13CD
L_98705:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_98701:
	movl 0x100(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414468
L_98702:
	movq $0x1,%r15
	movq 0xF8(%rbp),%r14
	jmp L_98694
.p2align 0x4
L_414468:
L_98703:
	movq 0x110(%rbp),%r15
	movq 0xF8(%rbp),%r14
	jmp L_98694
.p2align 0x4
.long 0x1397
L_98321:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98322
L_98323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_98324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98324
.p2align 0x4
.long 0x1398
L_98324:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_98322:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r15
	jmp L_98213
.p2align 0x4
.long 0x138D
L_98431:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98432
L_98433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98434
.p2align 0x4
.long 0x13A1
L_98434:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98432:
	movq 0xA8(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_98415
.p2align 0x4
.long 0x1374
L_98078:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98079
L_98080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_98081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98081
.p2align 0x4
.long 0x1375
L_98081:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_98079:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x2777,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r14,%r15
	jmp L_96797
.p2align 0x4
.long 0x1
rev_193:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414475
L_97655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_97656:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414474
.p2align 0x4,,0x7
L_97657:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414473
L_97658:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_97656
.p2align 0x4
L_414473:
L_97660:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414474:
L_97664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_97665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97665
.p2align 0x4
.long 0x45C
L_97665:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97657
.p2align 0x4
L_414475:
L_97666:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_97660
.p2align 0x4
.long 0x140B
L_98983:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98984
L_99010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99011
.p2align 0x4
.long 0x1412
L_99011:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98984:
	movq $0x389B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x1413
L_99013:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99014
L_99032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_99033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99033
.p2align 0x4
.long 0x1418
L_99033:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_99014:
	movl 0xD0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414477
L_99015:
	movq $0x1,%r15
	movq $0x1,%r14
L_99016:
	movq 0x50(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xA8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0xA8(%rbp)
	jmp loop_1106
.p2align 0x4
L_414477:
L_99017:
	movq 0x88(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_99018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x13D9
L_98772:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x2,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x13E5
L_98818:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98819
L_98822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_98823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98823
.p2align 0x4
.long 0x13E6
L_98823:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_98819:
	movl 0xC0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414479
L_98820:
	movq $0x1,%r15
	movq 0xB8(%rbp),%r14
	jmp L_98812
.p2align 0x4
L_414479:
L_98821:
	movq 0xE0(%rbp),%r15
	movq 0xB8(%rbp),%r14
	jmp L_98812
.p2align 0x4
.long 0x13F2
L_98881:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98882
L_98893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98894
.p2align 0x4
.long 0x13F6
L_98894:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98882:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96866
L_98884:
	movl %r11d,0xC8(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13C4
L_98669:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98670
L_98682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98683
.p2align 0x4
.long 0x13C7
L_98683:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98670:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96866
L_98672:
	movl %r11d,0x100(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_98673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x1
bug_260:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97661
L_97662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_97663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97663
.p2align 0x4
.long 0x452
L_97663:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_97661:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x140C
L_98985:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98986
L_99008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99009
.p2align 0x4
.long 0x1412
L_99009:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98986:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96866
L_98988:
	movl %r11d,0xB8(%rbp)
	movq $0x394B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_98989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
.long 0x1413
L_99018:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99019
L_99030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_99031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99031
.p2align 0x4
.long 0x1418
L_99031:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_99019:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x90(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_99020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13DB
L_98773:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98774
L_98800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98801
.p2align 0x4
.long 0x13E0
L_98801:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98774:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_98776:
	movl %r11d,0xC8(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x13F4
L_98885:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98886
L_98891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98892
.p2align 0x4
.long 0x13F7
L_98892:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98886:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xC8(%rbp)
	movq $0x3FE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	addq $0xC0,%rbp
	leaq (L_98887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13C5
L_98673:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98674
L_98680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98681
.p2align 0x4
.long 0x13C8
L_98681:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98674:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xD8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x100(%rbp)
	movq $0x3FE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0x18,%r12
	addq $0xF8,%rbp
	leaq (L_98675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x140D
L_98989:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98990
L_99006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99007
.p2align 0x4
.long 0x1410
L_99007:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98990:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xB8(%rbp)
	movq $0x3EFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	addq $0xB0,%rbp
	leaq (L_98991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1414
L_99020:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99021
L_99028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_99029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99029
.p2align 0x4
.long 0x1417
L_99029:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_99021:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_99022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x13DC
L_98777:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98778
L_98798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98799
.p2align 0x4
.long 0x13E1
L_98799:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98778:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xC8(%rbp)
	movq $0x3FE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	addq $0xC0,%rbp
	leaq (L_98779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x13F5
L_98887:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98888
L_98889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98890
.p2align 0x4
.long 0x13F6
L_98890:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98888:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x30(%rbp)
	movq $0x240B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x2,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_98781
.p2align 0x4
.long 0x13C6
L_98675:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98676
L_98678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_98679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98679
.p2align 0x4
.long 0x13C7
L_98679:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_98676:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x17D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,%r14
	jmp L_98677
.p2align 0x4
.long 0x140B
L_98991:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x2,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_98992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x1415
L_99022:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99023
L_99026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_99027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99027
.p2align 0x4
.long 0x1416
L_99027:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_99023:
	movl 0xC0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_414498
L_99024:
	movq $0x1,%r15
	movq 0xB8(%rbp),%r14
	jmp L_99016
.p2align 0x4
L_414498:
L_99025:
	movq 0xD8(%rbp),%r15
	movq 0xB8(%rbp),%r14
	jmp L_99016
.p2align 0x4
.long 0x13DD
L_98779:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98780
L_98796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98797
.p2align 0x4
.long 0x13E0
L_98797:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98780:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x30(%rbp)
	movq $0x240B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_98781
.p2align 0x4
.long 0x140D
L_98992:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98993
L_99004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99005
.p2align 0x4
.long 0x1410
L_99005:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98993:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96866
L_98995:
	movl %r11d,0xB8(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_98996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x140E
L_98996:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98997
L_99002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99003
.p2align 0x4
.long 0x1411
L_99003:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98997:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x80(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xB8(%rbp)
	movq $0x3FE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	addq $0xB0,%rbp
	leaq (L_98998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x140F
L_98998:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98999
L_99000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99001
.p2align 0x4
.long 0x1410
L_99001:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_98999:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1D87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0xA0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r14)
	movq %r15,0x18(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x20(%r14)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_98562
