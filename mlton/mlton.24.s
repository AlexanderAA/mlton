/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:26 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl primApp_1
.hidden primApp_1
primApp_1:
L_75596:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75597
L_75704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75705
.p2align 0x4
.long 0x4AF
L_75705:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75597:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x6,%r14
	je L_404780
	cmpq $0x39,%r14
	je equal_0
	cmpq $0x3A,%r14
	je equal_3
	cmpq $0x41,%r14
	je dontFlatten_0
	cmpq $0x42,%r14
	je dontFlatten_0
	cmpq $0x5D,%r14
	je L_404772
	cmpq $0x5E,%r14
	je L_404770
L_75598:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_75599
L_75607:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1202,%r14
	je dontFlatten_3
L_75599:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (makeValue_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
dontFlatten_3:
dontFlatten_0:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_404768
L_75611:
	cmpl $0x0,%r13d
	jl L_404767
L_75612:
	movl $0x0,0xC(%rbp)
loop_903:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_404766
L_75613:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (makeValue_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_404766:
L_75621:
	movslq 0xC(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
L_404767:
L_75623:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404768:
L_75610:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404770:
L_75694:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_404771
L_75696:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
L_404771:
L_75631:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404772:
L_75677:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75631
L_75679:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF3F,%r14
	je L_404776
	cmpq $0xF41,%r14
	je L_404773
L_75680:
	movq (globalObjptr+0x22B8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404773:
L_75682:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r11
L_75683:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_75684
L_75685:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF24,%r14
	jne L_404774
L_75686:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (makeValue_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_404774:
L_75684:
	movq (globalObjptr+0x22C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404776:
L_75681:
	movq 0x0(%r13),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
equal_3:
equal_0:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_75631
L_75662:
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r14
	jna L_75631
L_75664:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_404780:
L_75624:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (makeValue_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x1
makeValue_5:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75600
L_75605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75606
.p2align 0x4
.long 0x452
L_75606:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75600:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404782
L_75604:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404782:
L_75601:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_404783
L_75603:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404783:
L_75602:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x1
makeValue_6:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75614
L_75619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75620
.p2align 0x4
.long 0x452
L_75620:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75614:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404785
L_75618:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404785:
L_75615:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_404786
L_75617:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404786:
L_75616:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp x_1355
.p2align 0x4
.long 0xFFB
L_75622:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0xC(%rbp)
	jmp loop_903
.p2align 0x4
.long 0x56D
L_75697:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_75698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x1
makeValue_9:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75687
L_75692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75693
.p2align 0x4
.long 0x452
L_75693:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75687:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404788
L_75691:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404788:
L_75688:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_404789
L_75690:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404789:
L_75689:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x457
L_75665:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
.long 0x2B
makeValue_7:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75625
L_75658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75659
.p2align 0x4
.long 0x2C
L_75659:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75625:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404794
L_75657:
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
L_75629:
	movq 0x10(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_75631
L_75632:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF40,%r15
	jne L_404791
L_75653:
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
L_404791:
L_75633:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_404792
L_75634:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404792:
L_75635:
	movq $0x1,0x20(%rbp)
L_75636:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
L_404794:
L_75626:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_404795
L_75656:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	jmp L_75629
.p2align 0x4
L_404795:
L_75627:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x522
L_75698:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75699
L_75702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75703
.p2align 0x4
.long 0x4E9
L_75703:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_75699:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404797
L_75701:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404797:
L_75700:
	movq $0x1E7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x968
L_75666:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (makeValue_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x490
L_75654:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF40,%r13
	jne L_404799
L_75655:
	movq %r14,0x20(%rbp)
	jmp L_75636
.p2align 0x4
L_404799:
L_75652:
	movq (globalObjptr+0x22C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_75637:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_75652
L_75638:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_75610
L_75640:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_75610
L_75642:
	cmpl %r11d,%ecx
	jne L_75644
L_75645:
	cmpl $0x0,%r11d
	jl L_404801
L_75646:
	xorl %ecx,%ecx
loop_904:
	cmpl 0x28(%rbp),%ecx
	jnl L_404800
L_75648:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x60(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_75649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_404800:
L_75647:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404801:
L_75644:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_75628:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_75629
.p2align 0x4
.long 0x1
makeValue_8:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75667
L_75672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75673
.p2align 0x4
.long 0x452
L_75673:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75667:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_404806
L_75671:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404806:
L_75668:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_404807
L_75670:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404807:
L_75669:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x1036
L_75649:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_904
.text
.p2align 0x4
.globl coerces_1
.hidden coerces_1
coerces_1:
L_75706:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_75724
L_75707:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404814
L_75708:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_75710
L_75711:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_404812
L_75713:
	cmpl %r13d,%r11d
	je L_404809
L_75714:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF058)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404809:
L_75718:
	cmpl $0x0,0x20(%rbp)
	jl L_404811
L_75719:
	xorl %ecx,%ecx
loop_905:
	cmpl 0x20(%rbp),%ecx
	jnl L_404810
L_75721:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x10(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_75722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_1
.p2align 0x4
L_404810:
L_75720:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404811:
L_75723:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404812:
L_75710:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404814:
L_75724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75725
.p2align 0x4
.long 0x4AF
L_75725:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75708
.p2align 0x4
.long 0x1
bug_209:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75715
L_75716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75717
.p2align 0x4
.long 0x452
L_75717:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75715:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5BF
L_75722:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x10(%rbp),%ecx
	jmp loop_905
.text
.p2align 0x4
.globl get_70
.hidden get_70
get_70:
L_75726:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75727
L_75781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75782
.p2align 0x4
.long 0x460
L_75782:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75727:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_404826
L_75729:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_404825
L_75730:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_75732:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_404824
L_75773:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD45,%r10
	jne L_404823
L_75774:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_404820
L_75733:
	incl %ecx
	jo L_404819
L_75735:
	cmpq $0x1,%r14
	je L_404817
L_75736:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_75732
.p2align 0x4
L_404817:
L_75737:
L_75738:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_404818
L_75740:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_209
L_75772:
	movl %ecx,0x0(%r15)
x_209:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_404818:
L_75739:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404819:
L_75734:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404820:
L_75776:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75739
L_75777:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_404821
L_75779:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404821:
L_75778:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404823:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_75733
.p2align 0x4
L_404824:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_75733
.p2align 0x4
L_404825:
L_75780:
	xorl %ecx,%ecx
	jmp L_75738
.p2align 0x4
L_404826:
L_75728:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_75742:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_75743:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_75744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_75744:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF010)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_75745:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_75746:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75747
L_75770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75771
.p2align 0x4
.long 0x4AF
L_75771:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75747:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_75748:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_75734
L_75749:
	cmpq $0x1,%r14
	je L_404828
L_75750:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_75748
.p2align 0x4
L_404828:
L_75751:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75752
L_75768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75769
.p2align 0x4
.long 0x4E7
L_75769:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75752:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_404829
L_75753:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_115:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_404829:
L_75767:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_115
.p2align 0x4
.long 0x1
rev_113:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_404835
L_75754:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_75755:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404834
.p2align 0x4,,0x7
L_75756:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_404833
L_75757:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_75755
.p2align 0x4
L_404833:
L_75759:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404834:
L_75764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75765
.p2align 0x4
.long 0x45C
L_75765:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_75756
.p2align 0x4
L_404835:
L_75766:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_75759
.p2align 0x4
.long 0x1
L_75760:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75761
L_75762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75763
.p2align 0x4
.long 0x452
L_75763:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75761:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl visit_3
.hidden visit_3
visit_3:
L_75783:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75784
L_76086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76087
.p2align 0x4
.long 0x4DF
L_76087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75784:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_404848
L_75786:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_404847
L_75787:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_75789:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_404846
L_75830:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD4C,%r10
	jne L_404845
L_75831:
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_404840
L_75790:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_404839
L_75792:
	cmpq $0x1,%r14
	je L_404837
L_75793:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_75789
.p2align 0x4
L_404837:
	movl %r10d,%ecx
L_75795:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_404838
L_75797:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_210
L_75829:
	movl %ecx,0x0(%r15)
x_210:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_404838:
L_75796:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404839:
L_75791:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404840:
L_75833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75834
L_76083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76084
.p2align 0x4
.long 0xA2C
L_76084:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_75834:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_75796
L_75835:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_404842
L_75836:
	movq 0x38(%rbp),%r15
L_75837:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_404841
L_75838:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x3343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_404841:
L_76081:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404842:
L_76082:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_75837
.p2align 0x4
L_404845:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_75790
.p2align 0x4
L_404846:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_75790
.p2align 0x4
L_404847:
L_76085:
	xorl %ecx,%ecx
	jmp L_75795
.p2align 0x4
L_404848:
L_75785:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_75799:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4ED
L_75839:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75840
L_76079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76080
.p2align 0x4
.long 0x4F1
L_76080:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75840:
	movq 0x8(%rbp),%r10
	movq 0x48(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x40(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x38(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x30(%r10),%r9
	movq 0x28(%r10),%r15
	movq 0x20(%r10),%r11
	movq 0x18(%r10),%r8
	movq 0x10(%r10),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x8(%r10),%rsp
	movq %rsp,0x58(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_404887
L_75841:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_404881
	cmpq $0xF32,%r14
	je L_404875
	cmpq $0xF33,%r14
	je L_404870
	cmpq $0xF34,%r14
	je L_404869
	cmpq $0xF35,%r14
	je L_404868
	cmpq $0xF36,%r14
	je L_404867
L_75842:
	movq 0x10(%r10),%r9
	movq 0x8(%r10),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%r10
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%rsp
	movq 0x0(%rsp),%r14
	incq %r14
	jo L_75785
L_75843:
	movq %r14,0x0(%rsp)
	movq 0x0(%r15),%rsp
	cmpq $0x1,%rsp
	je L_404865
L_75844:
	movq 0x0(%rsp),%r14
	movq 0x8(%rsp),%rsp
	xorl %ecx,%ecx
	movq %rsp,%r15
	movq %r9,%r13
	movq %r8,%r9
.p2align 0x4,,0x7
L_75846:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_404864
L_75885:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xD4C,%r8
	jne L_404863
L_75886:
	movq 0x8(%r14),%r8
	cmpq %r9,0x0(%r14)
	movq %r9,(localObjptr+0x18)(%rip)
	je L_404853
	movq %r11,(localObjptr+0x10)(%rip)
L_75847:
	incl %ecx
	jo L_75791
L_75848:
	cmpq $0x1,%r15
	je L_404850
L_75849:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_75846
.p2align 0x4
L_404850:
L_75850:
L_75851:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75796
L_75852:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_211
L_75884:
	movl %ecx,0x0(%r15)
x_211:
	movq %r13,0x8(%rbp)
	movq %r10,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_75854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_404853:
L_75888:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75796
L_75889:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_404861
L_75918:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
L_75891:
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_75893
L_75894:
	testl %r13d,%r13d
	jz L_404859
L_75895:
	cmpq $0x0,%r15
	jna L_404858
L_75898:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
L_75899:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %rdx,%r14
	jne L_404857
L_75901:
	testq %rdx,%rdx
	jz L_404856
L_75902:
	cmpq $0x7FFFFFFF,%rdx
	ja L_404855
L_75903:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_75904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75904
.p2align 0x4
.long 0xE14
L_75904:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_75905:
	movq $0x0,0x70(%rbp)
loop_906:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_404854
L_75906:
	movq 0x68(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_75907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
L_404854:
L_75912:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_75913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404855:
L_75915:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404856:
L_75916:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_75905
.p2align 0x4
L_404857:
L_75893:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404858:
L_75897:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404859:
L_75917:
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_75899
.p2align 0x4
L_404861:
L_75890:
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_75891
.p2align 0x4
L_404863:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_75847
.p2align 0x4
L_404864:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_75847
.p2align 0x4
L_404865:
L_75919:
	xorl %ecx,%ecx
	movq %r9,%r13
	jmp L_75851
.p2align 0x4
L_404867:
L_76060:
	movq 0x20(%r10),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r10),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xF00)(%rip),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_76061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
L_404868:
L_75992:
	movq %r9,0x68(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x50(%rbp)
	addq $0x60,%rbp
	leaq (L_75993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_404869:
L_75965:
	movq %r8,0x78(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	addq $0x70,%rbp
	leaq (L_75966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404870:
L_75952:
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x50(%rbp)
	jne L_75893
L_75954:
	testq %rdx,%rdx
	jz L_404873
L_75955:
	cmpq $0x7FFFFFFF,%rdx
	ja L_75915
L_75956:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_75957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75957
.p2align 0x4
.long 0x1038
L_75957:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_75958:
	movq $0x0,0x68(%rbp)
loop_909:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_404871
L_75959:
	movq 0x60(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_75960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
L_404871:
L_75961:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_75962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404873:
L_75964:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_75958
.p2align 0x4
L_404875:
L_75938:
	movq 0x0(%r10),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,0x10(%rbp)
	je L_404880
L_75939:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq %rdx,%r14
	jne L_75893
L_75941:
	testq %rdx,%rdx
	jz L_404878
L_75942:
	cmpq $0x7FFFFFFF,%rdx
	ja L_75915
L_75943:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_75944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75944
.p2align 0x4
.long 0xAA0
L_75944:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_75945:
	movq $0x0,0x58(%rbp)
loop_908:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_404876
L_75946:
	movq 0x50(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xEF08)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404876:
L_75947:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_75948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404878:
L_75950:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_75945
.p2align 0x4
L_404880:
L_75951:
	movq (globalObjptr+0x21E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404881:
L_75920:
	movq 0x0(%r10),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,0x18(%rbp)
	je L_404886
L_75921:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq %r14,%rdx
	jne L_75893
L_75923:
	testq %rdx,%rdx
	jz L_404884
L_75924:
	cmpq $0x7FFFFFFF,%rdx
	ja L_75915
L_75925:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_75926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75926
.p2align 0x4
.long 0xAA0
L_75926:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_75927:
	movq $0x0,0x58(%rbp)
loop_907:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_404882
L_75928:
	movq 0x50(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404882:
L_75933:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_75934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404884:
L_75936:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_75927
.p2align 0x4
L_404886:
L_75937:
	movq (globalObjptr+0x21F0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404887:
L_75909:
	movq $0x369D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0xF,0x0(%rbp)
	movq $0x11,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x1
L_75800:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_75801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_75854:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4ED
L_75907:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75909
L_75910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75911
.p2align 0x4
.long 0x4F1
L_75911:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_75909
.p2align 0x4
.long 0x1025
L_75913:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_906
.p2align 0x4
.long 0xC0B
L_76061:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xF00)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF048)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_76062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
.long 0x8A7
L_75993:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r14
	jne L_75893
L_75995:
	testq %rdx,%rdx
	jz L_404892
L_75996:
	cmpq $0x7FFFFFFF,%rdx
	ja L_75915
L_75997:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_75998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75998
.p2align 0x4
.long 0x103C
L_75998:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x58(%rbp)
L_75999:
	movq $0x0,0x80(%rbp)
loop_910:
	movq 0x78(%rbp),%r15
	cmpq %r15,0x80(%rbp)
	jl L_404890
L_76000:
	movq 0x58(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF018)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_76001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404890:
L_76056:
	movq 0x80(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_76057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404892:
L_76059:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_75999
.p2align 0x4
.long 0x9D7
L_75966:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75967
L_75990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_75991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75991
.p2align 0x4
.long 0x901
L_75991:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_75967:
	movq $0xD03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1208,%r13
	jne L_404894
L_75968:
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq $0x3631,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x68(%rbp)
	movb $0x17,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_75969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_404894:
L_75989:
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x3687,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movb $0x18,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_75969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x1039
L_75960:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
.long 0x103A
L_75962:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_909
.p2align 0x4
.long 0x4ED
L_75929:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75909
L_75931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75932
.p2align 0x4
.long 0x4F1
L_75932:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_75909
.p2align 0x4
.long 0x1037
L_75948:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_908
.p2align 0x4
.long 0x1037
L_75934:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_907
.p2align 0x4
.long 0x4B0
L_75801:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_75855:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_75856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC0B
L_76062:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x70(%rbp)
	cmpq %rdx,%r14
	jne L_75893
L_76064:
	testq %rdx,%rdx
	jz L_404899
L_76065:
	cmpq $0x7FFFFFFF,%rdx
	ja L_75915
L_76066:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_76067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76067
.p2align 0x4
.long 0x1043
L_76067:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_76068:
	movq $0x0,0x80(%rbp)
loop_911:
	movq 0x70(%rbp),%r15
	cmpq %r15,0x80(%rbp)
	jl L_404897
L_76069:
	movq 0x78(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_76070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
L_404897:
L_76074:
	movq 0x80(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_76075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_404899:
L_76077:
	movq (globalObjptr+0x2378)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_76068
.p2align 0x4
.long 0x103D
L_76001:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76002
L_76054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_76055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76055
.p2align 0x4
.long 0x1041
L_76055:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_76002:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_404910
	cmpq $0x2,%r15
	je L_404908
L_76003:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x60(%rbp)
	je L_404901
L_76004:
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_76005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
L_404901:
L_76008:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_404906
	cmpq $0x2,%r15
	je L_404903
L_76009:
	cmpq $0x1,0x68(%rbp)
	je L_75909
L_76010:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_76011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
L_404903:
L_76016:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_75909
L_76017:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_404904
L_76018:
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF030)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404904:
L_76020:
	movq (globalObjptr+0x21E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404906:
L_76013:
	cmpq $0x1,0x68(%rbp)
	je L_75909
L_76014:
	movq (globalObjptr+0x21F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404908:
L_76049:
	cmpq $0x1,0x60(%rbp)
	jne bug_211
L_76051:
	cmpq $0x1,0x68(%rbp)
	je L_75909
bug_211:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0xF040)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404910:
L_76027:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_404912
L_76028:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_76020
L_76029:
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0xF030)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_76030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404912:
L_76044:
	cmpq $0x1,0x10(%rbp)
	je L_404915
L_76045:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_75909
L_76046:
	xchgq %r13,%r15
L_76034:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_404913
L_76035:
	movq %r15,0x48(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xF038)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
L_404913:
L_76036:
	movq (globalObjptr+0x2200)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404915:
L_76032:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_75909
L_76033:
	jmp L_76034
.p2align 0x4
.long 0x1042
L_76057:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x80(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x80(%rbp)
	jmp loop_910
.p2align 0x4
.long 0x84D
L_75969:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75970
L_75987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_75988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75988
.p2align 0x4
.long 0xBD6
L_75988:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_75970:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_75909
L_75971:
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (length_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
.long 0x5B0
L_75802:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_75856:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1044
L_76070:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1383
.p2align 0x4
.long 0x1045
L_76075:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x80(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x80(%rbp)
	jmp loop_911
.p2align 0x4
.long 0x103E
L_76005:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF020)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_76006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
.long 0x103F
L_76011:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xF028)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
.long 0x1039
L_76030:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76032
L_76041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_76042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76042
.p2align 0x4
.long 0x1040
L_76042:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_76032
.p2align 0x4
.long 0x103B
length_16:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75972
L_75984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_75985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75985
.p2align 0x4
.long 0xBD6
L_75985:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_75972:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_75893
L_75974:
	testl %r13d,%r13d
	jz L_75909
L_75975:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_75976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x51F
L_75803:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75804
L_75827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75828
.p2align 0x4
.long 0x4AF
L_75828:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75804:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_75805:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_75791
L_75806:
	cmpq $0x1,%r14
	je L_404924
L_75807:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_75805
.p2align 0x4
L_404924:
L_75808:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75809
L_75825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75826
.p2align 0x4
.long 0x4E7
L_75826:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75809:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_404925
L_75810:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_116:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_404925:
L_75824:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_116
.p2align 0x4
.long 0x5B0
L_75857:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x67D
L_76071:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_75897
L_76073:
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
.long 0x66D
L_76006:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76008
L_76024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_76025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76025
.p2align 0x4
.long 0x66C
L_76025:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_76008
.p2align 0x4
.long 0x1
L_75976:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75977
L_75981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75982
.p2align 0x4
.long 0x452
L_75982:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75977:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1E80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF20)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_114:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_404934
L_75811:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_75812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404933
.p2align 0x4,,0x7
L_75813:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_404932
L_75814:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_75812
.p2align 0x4
L_404932:
L_75816:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404933:
L_75821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75822
.p2align 0x4
.long 0x45C
L_75822:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_75813
.p2align 0x4
L_404934:
L_75823:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_75816
.p2align 0x4
.long 0x51F
L_75858:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75859
L_75882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75883
.p2align 0x4
.long 0x4AF
L_75883:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75859:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_75860:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_75791
L_75861:
	cmpq $0x1,%r14
	je L_404935
L_75862:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_75860
.p2align 0x4
L_404935:
L_75863:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75864
L_75880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75881
.p2align 0x4
.long 0x4E7
L_75881:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75864:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_404936
L_75865:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_117:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_404936:
L_75879:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_117
.p2align 0x4
.long 0x1
bug_210:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75978
L_75979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75980
.p2align 0x4
.long 0x452
L_75980:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75978:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_75817:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75818
L_75819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75820
.p2align 0x4
.long 0x452
L_75820:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75818:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_115:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_404944
L_75866:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_75867:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404943
.p2align 0x4,,0x7
L_75868:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_404942
L_75869:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_75867
.p2align 0x4
L_404942:
L_75871:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404943:
L_75876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75877
.p2align 0x4
.long 0x45C
L_75877:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_75868
.p2align 0x4
L_404944:
L_75878:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_75871
.p2align 0x4
.long 0x1
L_75872:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75873
L_75874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75875
.p2align 0x4
.long 0x452
L_75875:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75873:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl primApp_0
.hidden primApp_0
primApp_0:
L_76088:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76089
L_76211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76212
.p2align 0x4
.long 0x4AF
L_76212:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76089:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x6,%r14
	je L_404956
	cmpq $0x39,%r14
	je equal_1
	cmpq $0x3A,%r14
	je equal_5
	cmpq $0x41,%r14
	je dontFlatten_1
	cmpq $0x42,%r14
	je dontFlatten_1
	cmpq $0x5D,%r14
	je L_404952
	cmpq $0x5E,%r14
	je L_404950
L_76090:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_76091
L_76100:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1202,%r14
	je dontFlatten_6
L_76091:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
dontFlatten_6:
dontFlatten_1:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_404948
L_76104:
	cmpl $0x0,%r13d
	jl L_404947
L_76105:
	movl $0x0,0xC(%rbp)
loop_912:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_404946
L_76106:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_404946:
L_76115:
	movslq 0xC(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_404947:
L_76119:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404948:
L_76103:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404950:
L_76187:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_404951
L_76189:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_404951:
L_76127:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404952:
L_76169:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76127
L_76171:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
equal_5:
equal_1:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_76127
L_76154:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_76127
L_76156:
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_404956:
L_76120:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x1
L_76092:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76093
L_76098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76099
.p2align 0x4
.long 0x452
L_76099:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76093:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404958
L_76097:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404958:
L_76094:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_404959
L_76096:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404959:
L_76095:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76107:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76108
L_76113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76114
.p2align 0x4
.long 0x452
L_76114:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76108:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404961
L_76112:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404961:
L_76109:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_404962
L_76111:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404962:
L_76110:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFFB
L_76116:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_76117
L_76118:
	movq 0x28(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x2,0x0(%r14)
L_76117:
	incl 0xC(%rbp)
	jmp loop_912
.p2align 0x4
.long 0x56F
L_76190:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_76191
L_76210:
	movq 0x28(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x2,0x0(%r14)
L_76191:
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_76192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x45A
L_76172:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF47,%r14
	je L_404969
	cmpq $0xF49,%r14
	je L_404966
L_76173:
	movq (globalObjptr+0x2358)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404966:
L_76175:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
L_76176:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_76173
L_76177:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	jne L_76173
L_76178:
	movq 0x0(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_76179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_404969:
L_76174:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x968
L_76157:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x2B
L_76121:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76122
L_76150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76151
.p2align 0x4
.long 0x2C
L_76151:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76122:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404971
L_76149:
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
L_76125:
	movq 0x10(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_76127
L_76128:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_404971:
L_76123:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_404972
L_76148:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	jmp L_76125
.p2align 0x4
L_404972:
L_76124:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	jmp L_76125
.p2align 0x4
.long 0x8F9
L_76192:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76193
L_76208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76209
.p2align 0x4
.long 0xA30
L_76209:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76193:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404974
L_76207:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404974:
L_76194:
	movq $0xD31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x1
L_76179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76180
L_76185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76186
.p2align 0x4
.long 0x452
L_76186:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76180:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404976
L_76184:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404976:
L_76181:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_404977
L_76183:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404977:
L_76182:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76158:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76159
L_76164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76165
.p2align 0x4
.long 0x452
L_76165:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76159:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_404979
L_76163:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404979:
L_76160:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_404980
L_76162:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404980:
L_76161:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_76129:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x8FB
L_76195:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76196
L_76205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76206
.p2align 0x4
.long 0x75C
L_76206:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76196:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	je L_404983
	cmpq $0xF49,%r15
	je L_404982
L_76197:
	movq 0x10(%r14),%r15
L_76198:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	xorl 0x0(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_76199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_404982:
L_76204:
	movq 0x0(%r14),%r15
	jmp L_76198
.p2align 0x4
L_404983:
L_76203:
	movq 0x30(%r14),%r15
	jmp L_76198
.p2align 0x4
.long 0x51A
L_76130:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_404987
	cmpq $0xF49,%r14
	je L_404985
L_76131:
	movq (globalObjptr+0x2360)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404985:
L_76146:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF49,%r14
	jne L_76131
L_76147:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404987:
L_76132:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF48,%r13
	jne L_76131
L_76133:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_76103
L_76135:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_76103
L_76137:
	cmpl %ecx,%r11d
	jne L_76139
L_76140:
	cmpl $0x0,%r11d
	jl L_404989
L_76141:
	xorl %ecx,%ecx
loop_913:
	cmpl 0x38(%rbp),%ecx
	jnl L_404988
L_76143:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_404988:
L_76142:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404989:
L_76139:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_76199:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76200
L_76201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76202
.p2align 0x4
.long 0x4E8
L_76202:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76200:
	movq $0x1E95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2879,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1046
L_76144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x28(%rbp),%ecx
	jmp loop_913
.text
.p2align 0x4
.globl unify_4
.hidden unify_4
unify_4:
L_76213:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76214
L_76324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76325
.p2align 0x4
.long 0x460
L_76325:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76214:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF45,%r14
	je L_404997
L_76320:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF46,%r13
	jne L_404996
L_76321:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_404995
L_76322:
	movq (globalObjptr+0x2340)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404995:
L_76323:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404996:
L_76216:
	movq (globalObjptr+0x2328)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404997:
L_76215:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF45,%r13
	jne L_76216
L_76217:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
.long 0x5B0
L_76218:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
.long 0x51F
L_76219:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	je L_405000
L_76220:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405000:
L_76319:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_76221:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_405001
L_76223:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405001:
L_76222:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_76224:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_76222
L_76225:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
.long 0x65C
L_76226:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
.long 0x4A6
L_76227:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76228
L_76317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76318
.p2align 0x4
.long 0x638
L_76318:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76228:
	movq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq %r14,%r15
	je L_76235
L_76229:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144C,%r11
	jne L_76230
L_76231:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_76230
L_76232:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_405026
L_76233:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r10d,%r11d
	jne L_405024
L_76306:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_405023
L_76307:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_405022
L_76309:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_405021
L_76310:
	movq 0x8(%r15),%r13
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x143B,%r14
	je L_405019
L_76312:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
L_76252:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x143B,%r14
	je L_405018
L_76259:
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF4A,%r13
	je L_405016
L_76273:
	movq 0x28(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF4B,%r15
	jne L_405015
L_76274:
	movq 0x28(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_76276
L_76277:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_405013
L_76279:
	cmpl %r11d,%ecx
	jne L_76281
L_76282:
	cmpl $0x0,%r11d
	jl L_405011
L_76283:
	xorl %ecx,%ecx
loop_914:
	cmpl 0x38(%rbp),%ecx
	jnl L_405003
L_76300:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_405003:
L_76284:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x2,%r14
	je L_405008
L_76285:
	andq $0x3,%r14
	jz L_405006
L_76286:
	cmpq $0x2,%r13
	je L_405005
L_76287:
	andq $0x3,%r13
	jz L_405004
L_76265:
	movq $0x2879,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405004:
L_76289:
	movq (globalObjptr+0x2338)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405005:
L_76290:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_76265
.p2align 0x4
L_405006:
L_76291:
	cmpq $0x2,%r13
	je L_405007
L_76292:
	jmp L_76289
.p2align 0x4
L_405007:
L_76294:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_76265
.p2align 0x4
L_405008:
L_76295:
	cmpq $0x2,%r13
	je L_405010
L_76296:
	andq $0x3,%r13
	jz L_405009
L_76297:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_76265
.p2align 0x4
L_405009:
L_76298:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_76265
.p2align 0x4
L_405010:
L_76299:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_76265
.p2align 0x4
L_405011:
L_76281:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405013:
L_76276:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405015:
L_76261:
	movq (globalObjptr+0x2330)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405016:
L_76260:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF4A,%r15
	jne L_76261
L_76262:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_405018:
L_76253:
	movq $0x2879,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405019:
L_76311:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76237:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x143B,%r13
	jne L_405020
L_76238:
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405020:
L_76245:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2879,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_405021:
L_76241:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405022:
L_76308:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405023:
L_76230:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405024:
L_76235:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x143B,%r14
	je L_405025
L_76251:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp L_76252
.p2align 0x4
L_405025:
L_76236:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_76237
.p2align 0x4
L_405026:
L_76313:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x143B,%r14
	je L_405027
L_76315:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp L_76252
.p2align 0x4
L_405027:
L_76314:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_76237
.p2align 0x4
.long 0xBD7
L_76301:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76302
L_76303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76304
.p2align 0x4
.long 0x73E
L_76304:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76302:
	movl 0x3C(%rbp),%ecx
	jmp loop_914
.p2align 0x4
.long 0x490
L_76266:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76267
L_76269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_76270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76270
.p2align 0x4
.long 0x5E6
L_76270:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_76267:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_76241
L_76268:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_76263:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76265
L_76271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76272
.p2align 0x4
.long 0x4E9
L_76272:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76265
.p2align 0x4
.long 0x490
L_76254:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76255
L_76257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_76258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76258
.p2align 0x4
.long 0x5E6
L_76258:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_76255:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_76241
L_76256:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_76239:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76240
L_76243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76244
.p2align 0x4
.long 0x2C
L_76244:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76240:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_76241
L_76242:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_76246:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76247
L_76249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76250
.p2align 0x4
.long 0x2C
L_76250:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76247:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_76241
L_76248:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl coerces_2
.hidden coerces_2
coerces_2:
L_76326:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76344
L_76327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405047
L_76328:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_76330
L_76331:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_405045
L_76333:
	cmpl %r13d,%r11d
	je L_405042
L_76334:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF058)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405042:
L_76338:
	cmpl $0x0,0x18(%rbp)
	jl L_405044
L_76339:
	xorl %ecx,%ecx
loop_915:
	cmpl 0x18(%rbp),%ecx
	jnl L_405043
L_76341:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x10(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_405043:
L_76340:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405044:
L_76343:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405045:
L_76330:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405047:
L_76344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76345
.p2align 0x4
.long 0x45C
L_76345:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76328
.p2align 0x4
.long 0x1
bug_212:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76335
L_76336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76337
.p2align 0x4
.long 0x452
L_76337:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76335:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F9
L_76342:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x10(%rbp),%ecx
	jmp loop_915
.text
.p2align 0x4
.globl x_1383
.hidden x_1383
x_1383:
L_76346:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76347
L_76402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76403
.p2align 0x4
.long 0x460
L_76403:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76347:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_405059
L_76349:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_405058
L_76350:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_76352:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_405057
L_76393:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD4C,%r10
	jne L_405056
L_76394:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_405053
L_76353:
	incl %ecx
	jo L_405052
L_76355:
	cmpq $0x1,%r14
	je L_405050
L_76356:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_76352
.p2align 0x4
L_405050:
L_76357:
L_76358:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405051
L_76360:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_212
L_76392:
	movl %ecx,0x0(%r15)
x_212:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_405051:
L_76359:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405052:
L_76354:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405053:
L_76396:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_76359
L_76397:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405054
L_76400:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_76399:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405054:
L_76398:
	movq %r10,%r15
	jmp L_76399
.p2align 0x4
L_405056:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76353
.p2align 0x4
L_405057:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76353
.p2align 0x4
L_405058:
L_76401:
	xorl %ecx,%ecx
	jmp L_76358
.p2align 0x4
L_405059:
L_76348:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76362:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_76363:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_76364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_76364:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_76365:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_76366:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76367
L_76390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76391
.p2align 0x4
.long 0x4AF
L_76391:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76367:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_76368:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_76354
L_76369:
	cmpq $0x1,%r14
	je L_405061
L_76370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_76368
.p2align 0x4
L_405061:
L_76371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76372
L_76388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76389
.p2align 0x4
.long 0x4E7
L_76389:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76372:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405062
L_76373:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_118:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_405062:
L_76387:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_118
.p2align 0x4
.long 0x1
rev_116:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_405068
L_76374:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_76375:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405067
.p2align 0x4,,0x7
L_76376:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405066
L_76377:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_76375
.p2align 0x4
L_405066:
L_76379:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405067:
L_76384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76385
.p2align 0x4
.long 0x45C
L_76385:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76376
.p2align 0x4
L_405068:
L_76386:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76379
.p2align 0x4
.long 0x1
L_76380:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76381
L_76382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76383
.p2align 0x4
.long 0x452
L_76383:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76381:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_71
.hidden get_71
get_71:
L_76404:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76405
L_76459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76460
.p2align 0x4
.long 0x460
L_76460:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76405:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_405079
L_76407:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_405078
L_76408:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_76410:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_405077
L_76451:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD4B,%r10
	jne L_405076
L_76452:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_405073
L_76411:
	incl %ecx
	jo L_405072
L_76413:
	cmpq $0x1,%r14
	je L_405070
L_76414:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_76410
.p2align 0x4
L_405070:
L_76415:
L_76416:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405071
L_76418:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_213
L_76450:
	movl %ecx,0x0(%r15)
x_213:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_405071:
L_76417:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405072:
L_76412:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405073:
L_76454:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_76417
L_76455:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405074
L_76457:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405074:
L_76456:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405076:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76411
.p2align 0x4
L_405077:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76411
.p2align 0x4
L_405078:
L_76458:
	xorl %ecx,%ecx
	jmp L_76416
.p2align 0x4
L_405079:
L_76406:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76420:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_76421:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_76422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_76422:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF010)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_76423:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_76424:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76425
L_76448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76449
.p2align 0x4
.long 0x4AF
L_76449:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76425:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_76426:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_76412
L_76427:
	cmpq $0x1,%r14
	je L_405081
L_76428:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_76426
.p2align 0x4
L_405081:
L_76429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76430
L_76446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76447
.p2align 0x4
.long 0x4E7
L_76447:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76430:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405082
L_76431:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_119:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_405082:
L_76445:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_119
.p2align 0x4
.long 0x1
rev_117:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_405088
L_76432:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_76433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405087
.p2align 0x4,,0x7
L_76434:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405086
L_76435:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_76433
.p2align 0x4
L_405086:
L_76437:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405087:
L_76442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76443
.p2align 0x4
.long 0x45C
L_76443:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76434
.p2align 0x4
L_405088:
L_76444:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76437
.p2align 0x4
.long 0x1
L_76438:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76439
L_76440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76441
.p2align 0x4
.long 0x452
L_76441:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76439:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl visit_2
.hidden visit_2
visit_2:
L_76461:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76462
L_76482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76483
.p2align 0x4
.long 0x4DF
L_76483:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76462:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_76463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x4E4
L_76463:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76464
L_76480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76481
.p2align 0x4
.long 0xBC1
L_76481:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76464:
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76466
L_76467:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_405092
L_76468:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405091
L_76470:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x3331,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_76471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_405091:
L_76466:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405092:
L_76479:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4ED
L_76471:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76472
L_76477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76478
.p2align 0x4
.long 0x4F1
L_76478:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76472:
	movq $0x3549,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq $0x2,0x48(%rbp)
	movq $0x2,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_76473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x4ED
L_76473:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76474
L_76475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76476
.p2align 0x4
.long 0x4F1
L_76476:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76474:
	movq $0x369F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0x11,0x0(%rbp)
	movq $0x12,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_0
.text
.p2align 0x4
.globl tabulate_21
.hidden tabulate_21
tabulate_21:
L_76484:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76485
L_76620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76621
.p2align 0x4
.long 0x458
L_76621:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76485:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_405133
L_76486:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405132
L_76487:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76488
.p2align 0x4
.long 0x453
L_76488:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_76489:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_916:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405131
.p2align 0x4,,0x7
L_76490:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_405130
L_76492:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1CF6,%rax
	cmpq $0xB,%rax
	ja L_405097
	jmp *jumpTable_167(,%rax,8)
.data
.p2align 0x4
jumpTable_167:
.quad L_405125,L_405122,L_405121,L_405120,L_405114,L_405113,L_405111,L_405110,L_405109,L_405108,L_405103,L_405098
.text
.p2align 0x4
L_405097:
L_76493:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405098:
L_76608:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_919:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_405100
L_76614:
	incl %r14d
	jo L_405099
L_76615:
	movl %r14d,0x20(%rbp)
	jmp loop_919
.p2align 0x4
L_405099:
L_76515:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405100:
L_76609:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405102
.p2align 0x4,,0x7
L_76610:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_76515
L_76611:
	movq 0x28(%rbp),%r13
	movl %r14d,0x0(%r13)
.p2align 0x4,,0x7
L_76502:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_916
.p2align 0x4
L_405102:
L_76612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76613
.p2align 0x4
.long 0x579
L_76613:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76610
.p2align 0x4
L_405103:
L_76600:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_918:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_405105
L_76606:
	incl %r14d
	jo L_76515
L_76607:
	movl %r14d,0x20(%rbp)
	jmp loop_918
.p2align 0x4
L_405105:
L_76601:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405107
.p2align 0x4,,0x7
L_76602:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_76515
L_76603:
	movq 0x28(%rbp),%r13
	movl %r14d,0x0(%r13)
	jmp L_76502
.p2align 0x4
L_405107:
L_76604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76605
.p2align 0x4
.long 0x579
L_76605:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76602
.p2align 0x4
L_405108:
L_76599:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_76502
.p2align 0x4
L_405109:
L_76583:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0xE0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405110:
L_76562:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x18(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x38(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x50(%rbp)
	movl $0x0,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_405111:
L_76559:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_405112
L_76561:
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_76502
.p2align 0x4
L_405112:
L_76530:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405113:
L_76558:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_76502
.p2align 0x4
L_405114:
L_76543:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r10),%r8
	movq %r8,0x28(%rbp)
	cmpq $0x1,%r13
	je L_76547
	cmpq $0x2,%r13
	je L_405117
L_76544:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1D03,%r15
	je L_405116
	cmpq $0x1D04,%r15
	je L_405115
L_76545:
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq %r9,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1428
.p2align 0x4
L_405115:
L_76552:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r9,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405116:
L_76551:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r9,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_405117:
.p2align 0x4,,0x7
L_76547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405118
.p2align 0x4,,0x7
L_76548:
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76502
.p2align 0x4
L_405118:
L_76549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76550
.p2align 0x4
.long 0x57A
L_76550:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_76548
.p2align 0x4
L_405120:
L_76526:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0xE8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405121:
L_76525:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_76502
.p2align 0x4
L_405122:
L_76521:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_405124
	cmpl $0x1,%r14d
	je L_405123
L_76522:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405123:
L_76524:
	movq %r11,%r15
	jmp L_76502
.p2align 0x4
L_405124:
	movq %r13,%r15
	jmp L_76502
.p2align 0x4
L_405125:
L_76512:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_917:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_405127
L_76519:
	incl %r14d
	jo L_76515
L_76520:
	movl %r14d,0x20(%rbp)
	jmp loop_917
.p2align 0x4
L_405127:
L_76513:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405129
.p2align 0x4,,0x7
L_76514:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_76515
L_76516:
	movq 0x28(%rbp),%r13
	movl %r14d,0x0(%r13)
	jmp L_76502
.p2align 0x4
L_405129:
L_76517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76518
.p2align 0x4
.long 0x579
L_76518:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76514
.p2align 0x4
L_405130:
L_76491:
	movq 0x8(%rbp),%r14
	movq $0xAEB,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405131:
L_76616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76617
.p2align 0x4
.long 0x45D
L_76617:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_76490
.p2align 0x4
L_405132:
L_76618:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405133:
L_76619:
	movq (globalObjptr+0xB88)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_76489
.p2align 0x4
.long 0x560
L_76494:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	jg L_405135
L_76495:
	movl $0x8,%ecx
L_76496:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405135:
L_76505:
	cmpl $0x10,0x40(%rbp)
	jg L_405136
L_76506:
	movl $0x10,%ecx
	jmp L_76496
.p2align 0x4
L_405136:
L_76507:
	cmpl $0x20,0x40(%rbp)
	jg L_405137
L_76508:
	movl $0x20,%ecx
	jmp L_76496
.p2align 0x4
L_405137:
L_76509:
	cmpl $0x40,0x40(%rbp)
	je L_405138
L_76510:
	movq (globalObjptr+0x1708)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405138:
L_76511:
	movl $0x40,%ecx
	jmp L_76496
.p2align 0x4
.long 0x560
L_76584:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76585
L_76597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76598
.p2align 0x4
.long 0x68D
L_76598:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76585:
	movslq 0x40(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76530
L_76587:
	movq 0x0(%r14,%r15,8),%r13
L_76588:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_405139
L_76590:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
L_405139:
L_76589:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x529
L_76563:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_76564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3827
.p2align 0x4
.long 0x56D
L_76546:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_76547
.p2align 0x4
.long 0x558
L_76553:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_76547
L_76554:
	movq %r15,0x20(%rbp)
	jmp L_76547
.p2align 0x4
.long 0x560
L_76527:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76528
L_76541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76542
.p2align 0x4
.long 0x68D
L_76542:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76528:
	movslq 0x40(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76530
L_76531:
	movq 0x0(%r14,%r15,8),%r13
L_76532:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_405143
L_76534:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_405143:
L_76533:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x575
L_76497:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_76498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1049
L_76591:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76592
L_76595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76596
.p2align 0x4
.long 0x104A
L_76596:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76592:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76530
L_76594:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76502
.p2align 0x4
.long 0x104B
L_76564:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1049
L_76535:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76536
L_76539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76540
.p2align 0x4
.long 0x104A
L_76540:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76536:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76530
L_76538:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76502
.p2align 0x4
.long 0x1047
L_76498:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_76499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x104C
L_76565:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76566
L_76581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76582
.p2align 0x4
.long 0x1050
L_76582:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76566:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_405153
L_76567:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_76568:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_76515
L_76569:
	cmpq $0x1,%r15
	je L_405150
L_76570:
	movq 0x8(%r15),%r15
	jmp L_76568
.p2align 0x4
L_405150:
L_76571:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76572
L_76578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76579
.p2align 0x4
.long 0x104F
L_76579:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76572:
	movl 0x28(%rbp),%ecx
L_76573:
	movl %ecx,0x70(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_405153:
L_76580:
	xorl %ecx,%ecx
	jmp L_76573
.p2align 0x4
.long 0x1048
L_76499:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x104D
L_76574:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76575
L_76576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76577
.p2align 0x4
.long 0x104E
L_76577:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76575:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76502
.p2align 0x4
.long 0x561
L_76500:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76501
L_76503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76504
.p2align 0x4
.long 0x576
L_76504:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76501:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_76502
.text
.p2align 0x4
.globl forceMeaningBlock_1
.hidden forceMeaningBlock_1
forceMeaningBlock_1:
L_76622:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76675
L_76623:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405172
L_76624:
	movq 0x8(%rbp),%r15
	movq 0x88(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x58(%r15),%r14
	movq 0x40(%r15),%r13
	movq 0x30(%r15),%r11
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r10
	movslq 0x0(%r15),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	jnb L_76626
L_76627:
	movl 0x0(%r14,%r9,4),%r15d
	testl %r15d,%r15d
	jnz L_405170
L_76628:
	movl $0x1,0x0(%r14,%r9,4)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_405169
L_76630:
	movq 0x0(%r11,%r9,8),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x973,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	cmpq $0x1,%r10
	je L_405164
	cmpq $0x2,%r10
	je L_405163
L_76631:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEDF,%r14
	je L_405161
	cmpq $0xEE0,%r14
	je L_405159
	cmpq $0xEE1,%r14
	je L_405158
L_76632:
	movq 0x8(%r10),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_405157
L_76635:
	movl %r13d,0x40(%rbp)
	movq $0x3FD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_76636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405157:
L_76634:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405158:
L_76671:
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_76667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyBlock_0
.p2align 0x4
L_405159:
L_76663:
	movq 0x10(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_76634
L_76665:
	movl %r13d,0x48(%rbp)
	movq $0x3A25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_76666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405161:
L_76656:
	movq 0x8(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_76634
L_76658:
	movl %r13d,0x40(%rbp)
	movq $0x3FF1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_76659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405163:
L_76673:
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_76667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyBlock_0
.p2align 0x4
L_405164:
L_76672:
	movq $0x1,0x28(%rbp)
	movq $0x1,%r15
L_76638:
	movq $0x939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_405168
L_76639:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_76640:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_405167
L_76642:
	cmpq $0x1,%r15
	je L_405165
L_76643:
	movq 0x8(%r15),%r15
	jmp L_76640
.p2align 0x4
L_405165:
L_76644:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76645
L_76651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76652
.p2align 0x4
.long 0x788
L_76652:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76645:
	movl 0x38(%rbp),%ecx
L_76646:
	movl %ecx,0x40(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_405167:
L_76641:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405168:
L_76653:
	xorl %ecx,%ecx
	jmp L_76646
.p2align 0x4
L_405169:
L_76626:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405170:
L_76674:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405172:
L_76675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76676
.p2align 0x4
.long 0x460
L_76676:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_76624
.p2align 0x4
.long 0x4A7
L_76636:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76637
L_76654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76655
.p2align 0x4
.long 0x721
L_76655:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76637:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_76638
.p2align 0x4
.long 0x8AA
L_76667:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76668
L_76669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76670
.p2align 0x4
.long 0x721
L_76670:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76668:
	movq 0x30(%rbp),%r15
	jmp L_76638
.p2align 0x4
.long 0x4ED
L_76666:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_76667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x4A7
L_76659:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76660
L_76661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76662
.p2align 0x4
.long 0x721
L_76662:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76660:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_76638
.p2align 0x4
.long 0x4A7
L_76647:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76648
L_76649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76650
.p2align 0x4
.long 0x721
L_76650:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76648:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldi_5
.hidden unfoldi_5
unfoldi_5:
L_76677:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76678
L_77270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77271
.p2align 0x4
.long 0x458
L_77271:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76678:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_405294
L_76679:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405293
L_76680:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76681
.p2align 0x4
.long 0x453
L_76681:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_76682:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405292
.p2align 0x4,,0x7
L_76683:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_405291
L_76685:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_405290
	cmpq $0x2,%r15
	je L_405289
L_76686:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x202A,%rax
	cmpq $0x12,%rax
	ja L_405178
	jmp *jumpTable_168(,%rax,8)
.data
.p2align 0x4
jumpTable_168:
.quad L_405288,L_405277,L_405273,L_405270,L_405269,L_405256,L_405243,L_405241,L_405240,L_405238,L_405235,L_405231,L_405230,L_405228,L_405216,L_405212,L_405201,L_405184,L_405182
.text
.p2align 0x4
L_405178:
L_76687:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_921:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_405180
L_76692:
	incl %ecx
	jo L_405179
L_76693:
	jmp loop_921
.p2align 0x4
L_405179:
L_76689:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405180:
L_76688:
	incl %ecx
	jo L_76689
L_76690:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
.p2align 0x4,,0x7
L_76691:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_920
.p2align 0x4
L_405182:
L_77261:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_405183
L_77263:
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_76691
.p2align 0x4
L_405183:
L_77062:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405184:
L_77090:
	movq 0x0(%rbp),%r9
	movq 0x38(%r9),%r8
	movq %r8,0x20(%rbp)
	movq 0x30(%r9),%r8
	movq %r8,0x28(%rbp)
	movq 0x28(%r9),%r8
	movq %r8,0x30(%rbp)
	movq 0x20(%r9),%r8
	movq %r8,0x38(%rbp)
	movq 0x18(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x10(%r9),%r15
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%r13
	movslq %r14d,%r11
	movq 0x40(%r9),%rsp
	movq 0x0(%rsp,%r11,8),%rsi
	movq %rsi,0x48(%rbp)
	movq 0x0(%rsi),%r9
	movq %r9,0x50(%rbp)
	movq 0x8(%rsi),%rsp
	movq %rsp,0x58(%rbp)
	cmpq $0x1,%r9
	je L_405200
L_77091:
	movq 0x10(%r9),%r14
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r11
	incq %r11
	jo L_405199
L_77092:
	movq %r11,0x0(%r9)
	movq 0x0(%r14),%r9
	cmpq $0x1,%r9
	je L_405198
L_77093:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r9
	xorl %ecx,%ecx
	movq %r8,%r14
	movq %r9,%r11
.p2align 0x4,,0x7
L_77095:
	movq %r11,%r9
	andq $0x3,%r9
	jnz L_405197
L_77104:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	shrq $0x1,%r9
	cmpq $0xD23,%r9
	jne L_405196
L_77105:
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r15
	movq %r15,(localObjptr+0x8)(%rip)
	je L_405189
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r13,(localObjptr+0x18)(%rip)
L_77096:
	incl %ecx
	jo L_76689
L_77097:
	cmpq $0x1,%r10
	je L_405185
L_77098:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	movq (localObjptr+0x8)(%rip),%r15
	movq (localObjptr+0x10)(%rip),%r14
	movq (localObjptr+0x18)(%rip),%r13
	jmp L_77095
.p2align 0x4
L_405185:
L_77099:
L_77100:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405187
L_77101:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405186
L_77103:
	movl %ecx,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405186:
L_77102:
	movq 0x48(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405187:
L_76795:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405189:
L_77107:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_76795
L_77108:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405192
L_77255:
	movl %ecx,0x0(%r15)
L_77256:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_77111
L_77257:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x13C9,%r15
	je L_405190
L_77111:
	movq 0x48(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405190:
L_77258:
	movq 0x10(%r9),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x70(%rbp)
	movq %r13,(localObjptr+0x18)(%rip)
	movq %r14,(localObjptr+0x10)(%rip)
L_77114:
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (localObjptr+0x18)(%rip),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (loop_923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_405192:
L_77110:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_77111
L_77112:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0x13C9,%r11
	jne L_77111
L_77113:
	movq 0x10(%r9),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r9),%r11
	movq %r11,0x70(%rbp)
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r13,(localObjptr+0x18)(%rip)
	jmp L_77114
.p2align 0x4
L_405196:
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x8)(%rip)
	movq %r13,(localObjptr+0x18)(%rip)
	jmp L_77096
.p2align 0x4
L_405197:
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x8)(%rip)
	movq %r13,(localObjptr+0x18)(%rip)
	jmp L_77096
.p2align 0x4
L_405198:
L_77259:
	xorl %ecx,%ecx
	jmp L_77100
.p2align 0x4
L_405199:
L_76785:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405200:
L_77260:
	movq 0x48(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405201:
L_77054:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBA,%r14
	jne L_405211
L_77056:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x45,%r15
	je L_405208
	cmpq $0x46,%r15
	je L_405206
	cmpq $0x47,%r15
	je L_405203
L_77057:
	andq $0x3,%r14
	jnz L_77058
L_77059:
L_77058:
	movq 0x20(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405203:
L_77085:
	cmpq $0x1,0x28(%rbp)
	jne L_405204
L_77089:
	movq 0x20(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405204:
L_77086:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r11)
	jna L_77062
L_77088:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	movq %r13,%r14
x_214:
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_77066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_405206:
L_77074:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r11)
	jna L_77062
L_77076:
	movq %r13,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_77077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_405208:
L_77060:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	cmpq $0x0,%r15
	jna L_77062
L_77063:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jna L_77062
L_77065:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq %r13,%r14
	jmp x_214
.p2align 0x4
L_405211:
L_77055:
	movq 0x20(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405212:
L_77039:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	movq %r13,%r11
	imulq $0x28,%r14
	movq 0x10(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x30(%rbp)
	imulq $0x28,%r11
	movq 0x18(%r10,%r11,1),%r14
	movq %r14,0x38(%rbp)
	imulq $0x28,%r13
	movq 0x20(%r10,%r13,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r9),%r15
L_77040:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_77041
L_77045:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB4,%r14
	je L_405214
.p2align 0x4,,0x7
L_77041:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405213
.p2align 0x4,,0x7
L_77042:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405213:
L_77043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77044
.p2align 0x4
.long 0x5B5
L_77044:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_77042
.p2align 0x4
L_405214:
L_77046:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_77047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_405216:
L_76974:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x10(%r11),%r9
	movq %r9,0x38(%rbp)
	cmpq $0x1,%r10
	movq %r10,0x28(%rbp)
	jne L_405227
L_77031:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_405225
	cmpq $0xEB8,%r15
	je L_405224
	cmpq $0xEB9,%r15
	je L_405223
	cmpq $0xEBA,%r15
	je L_405221
	cmpq $0xEBB,%r15
	je L_405219
	cmpq $0xEBC,%r15
	je L_405217
L_77032:
	movq 0x0(%r9),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
L_76981:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405217:
L_77038:
	movq 0x8(%r9),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq $0x1,0x38(%rbp)
L_77021:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_405218
L_77023:
	movl %r13d,0x50(%rbp)
	movq $0x4001,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_77024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405218:
L_76710:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405219:
L_77037:
	movq %r9,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_76986:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405220
.p2align 0x4,,0x7
L_76987:
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_76691
.p2align 0x4
L_405220:
L_76988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76989
.p2align 0x4
.long 0x576
L_76989:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76987
.p2align 0x4
L_405221:
L_77036:
	movq 0x10(%r9),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq 0x8(%r9),%r9
	movq %r9,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_77012:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_76710
L_77014:
	movl %r13d,0x58(%rbp)
	movq $0x4001,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_77015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405223:
L_77035:
	movq %r9,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_76986
.p2align 0x4
L_405224:
L_77034:
	movq 0x8(%r9),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r9),%r15d
	movl %r15d,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_77002:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_77003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405225:
L_77033:
	movq 0x0(%r9),%r15
	movq $0x1,0x28(%rbp)
L_76994:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_76710
L_76996:
	movl %r13d,0x48(%rbp)
	movq $0x4001,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405227:
L_76975:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405228:
L_76973:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r15
	movslq %r14d,%r13
	movq 0x0(%r11,%r13,8),%r11
	movq %r11,%r14
doitStatement_0:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEBC,%r11
	jne L_405229
L_76777:
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_405229:
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405230:
L_76908:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r10,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1310
.p2align 0x4
L_405231:
L_76903:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_922:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_405233
L_76906:
	incl %ecx
	jo L_76689
L_76907:
	jmp loop_922
.p2align 0x4
L_405233:
L_76904:
	incl %ecx
	jo L_76689
L_76905:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_76691
.p2align 0x4
L_405235:
L_76899:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_405237
	cmpl $0x1,%r14d
	je L_405236
L_76900:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405236:
L_76902:
	movq %r11,%r15
	jmp L_76691
.p2align 0x4
L_405237:
	movq %r13,%r15
	jmp L_76691
.p2align 0x4
L_405238:
L_76896:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405239
L_76897:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_76691
.p2align 0x4
L_405239:
L_76898:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405240:
L_76895:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405241:
L_76893:
	movq 0x0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	subl %r14d,%r11d
	jo L_76689
L_76894:
	movslq %r11d,%r15
	movq 0x0(%r10,%r15,8),%r10
	movq %r10,%r15
	jmp L_76691
.p2align 0x4
L_405243:
L_76825:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movslq %r14d,%r11
	movq 0x28(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x10(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_405254
	cmpq $0xEB8,%r15
	je L_405253
	cmpq $0xEB9,%r15
	je L_405251
	cmpq $0xEBA,%r15
	je L_405249
	cmpq $0xEBB,%r15
	je L_405246
	cmpq $0xEBC,%r15
	je L_405244
L_76826:
	movq %r13,0x68(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_76827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_405244:
L_76884:
	movq 0x8(%r9),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_76710
L_76886:
	movl %r11d,0x68(%rbp)
	movq $0x3FF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	addq $0x60,%rbp
	leaq (L_76887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405246:
L_76881:
	cmpq $0x1,0x40(%rbp)
	jne L_405248
L_76883:
	movq %r9,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_76836:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405247
.p2align 0x4,,0x7
L_76837:
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_76691
.p2align 0x4
L_405247:
L_76838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76839
.p2align 0x4
.long 0x1054
L_76839:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_76837
.p2align 0x4
L_405248:
L_76882:
	movq %r9,0x50(%rbp)
L_76832:
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_76833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_405249:
L_76872:
	movq 0x10(%r9),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_76710
L_76874:
	movl %r11d,0x70(%rbp)
	movq $0x3FF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_76875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405251:
L_76869:
	cmpq $0x1,0x40(%rbp)
	jne L_405252
L_76871:
	movq %r9,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
L_405252:
L_76870:
	movq %r9,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405253:
L_76859:
	movq %r13,0x68(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x50(%rbp)
	movl 0x0(%r9),%r14d
	movl %r14d,0x2C(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_76860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_405254:
L_76850:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_76710
L_76852:
	movl %r11d,0x60(%rbp)
	movq $0x3FF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_76853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405256:
L_76783:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x20(%rbp)
	movq 0x8(%r9),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x10(%r9),%rsp
	cmpq $0x1,%r8
	je L_405268
L_76784:
	movq 0x10(%r8),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_76785
L_76786:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_405266
L_76787:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %rsp,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_76789:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_76790
L_76803:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xCF9,%r11
	je L_405262
L_76790:
	incl %ecx
	jo L_76689
L_76791:
	cmpq $0x1,%r13
	je L_405257
L_76792:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_76789
.p2align 0x4
L_405257:
L_76793:
L_76794:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_76795
L_76796:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405259
L_76802:
	movl %ecx,0x0(%r14)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_76798:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405258
.p2align 0x4,,0x7
L_76799:
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_76691
.p2align 0x4
L_405258:
L_76800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76801
.p2align 0x4
.long 0x576
L_76801:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76799
.p2align 0x4
L_405259:
L_76797:
	movq %r15,0x30(%rbp)
	jmp L_76798
.p2align 0x4
L_405262:
L_76804:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_76795
L_76805:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405263
L_76822:
	movl %ecx,0x0(%r14)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
L_76807:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_405263:
L_76806:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	jmp L_76807
.p2align 0x4
L_405266:
L_76823:
	xorl %ecx,%ecx
	movq %rsp,%r15
	jmp L_76794
.p2align 0x4
L_405268:
L_76824:
	movq %rsp,0x30(%rbp)
	jmp L_76798
.p2align 0x4
L_405269:
L_76775:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r15
	movslq %r14d,%r13
	movq 0x0(%r11,%r13,8),%r11
	movq %r11,%r14
	jmp doitStatement_0
.p2align 0x4
L_405270:
L_76756:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq %r11,%r14
	movq %r11,%r10
	imulq $0x28,%r14
	movq 0x18(%r15),%r9
	movq 0x0(%r9,%r14,1),%r8
	movq %r8,0x38(%rbp)
	imulq $0x28,%r10
	movq 0x8(%r9,%r10,1),%r14
	movq %r14,0x40(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r9,%r11,1),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r8),%r15
L_76757:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_76758
L_76766:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEB4,%r11
	jne L_405271
L_76767:
	movq %r14,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_76768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_405271:
L_76758:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_76759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_405273:
L_76740:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	movq %r13,%r11
	imulq $0x28,%r14
	movq 0x10(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x30(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r10,%r11,1),%r14
	movq %r14,0x38(%rbp)
	imulq $0x28,%r13
	movq 0x18(%r10,%r13,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r9),%r15
L_76741:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_76742
L_76746:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB4,%r14
	je L_405275
.p2align 0x4,,0x7
L_76742:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405274
.p2align 0x4,,0x7
L_76743:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405274:
L_76744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76745
.p2align 0x4
.long 0x5B5
L_76745:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_76743
.p2align 0x4
L_405275:
L_76747:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_405277:
L_76695:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x10(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_405286
	cmpq $0xEB8,%r15
	je L_405285
	cmpq $0xEB9,%r15
	je L_405284
	cmpq $0xEBA,%r15
	je L_405282
	cmpq $0xEBB,%r15
	je L_405280
	cmpq $0xEBC,%r15
	je L_405278
L_76696:
	movq %r13,0x48(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405278:
L_76733:
	movq 0x8(%r9),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_76710
L_76735:
	movl %r11d,0x48(%rbp)
	movq $0x3FBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_76736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405280:
L_76732:
	movq %r9,0x30(%rbp)
.p2align 0x4,,0x7
L_76701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405281
.p2align 0x4,,0x7
L_76702:
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_76691
.p2align 0x4
L_405281:
L_76703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76704
.p2align 0x4
.long 0x576
L_76704:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76702
.p2align 0x4
L_405282:
L_76725:
	movq 0x10(%r9),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_76710
L_76727:
	movl %r11d,0x50(%rbp)
	movq $0x3FBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_76728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405284:
L_76724:
	movq %r9,0x30(%rbp)
	jmp L_76701
.p2align 0x4
L_405285:
L_76716:
	movq %r13,0x50(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r9),%r14d
	movl %r14d,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_405286:
L_76708:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_76710
L_76711:
	movl %r11d,0x40(%rbp)
	movq $0x3FBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_76712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405288:
L_76694:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_76691
.p2align 0x4
L_405289:
L_77265:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405290:
L_77264:
	movq (globalObjptr+0x498)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405291:
L_76684:
	movq 0x8(%rbp),%r14
	movq $0x19,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405292:
L_77266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_77267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77267
.p2align 0x4
.long 0x45D
L_77267:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_76683
.p2align 0x4
L_405293:
L_77268:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405294:
L_77269:
	movq (globalObjptr+0x4B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_76682
.p2align 0x4
.long 0x105B
loop_923:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq %r14,0x88(%rbp)
	cmpq $0x1,%r11
	je L_77121
L_77115:
	movq 0x8(%r11),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_77116:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x68(%rbp),%r15
	cmpq %r15,%r14
	je L_405338
L_77117:
	andq $0x3,%r15
	cmpq $0x2,%r15
	je L_405335
	cmpq $0x3,%r15
	je L_405323
.p2align 0x4,,0x7
L_77118:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_405296
L_77119:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_77116
.p2align 0x4
L_405296:
L_77121:
	movq 0x68(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_405321
	cmpq $0x2,%r15
	je L_405319
	cmpq $0x3,%r15
	je L_405317
L_77122:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_77129
L_77123:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x98(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_77124:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x98(%rbp),%r15
	cmpq %r15,%r14
	je L_405315
L_77125:
	andq $0x3,%r15
	cmpq $0x2,%r15
	je L_405312
	cmpq $0x3,%r15
	je L_405299
.p2align 0x4,,0x7
L_77126:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_405297
L_77127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_77124
.p2align 0x4
L_405297:
L_77129:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405298
L_77130:
	movq %r14,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (loop_923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_405298:
L_77131:
	movq 0x48(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405299:
L_77203:
	movq 0x98(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x3,%r15
	jne L_77126
L_77204:
	shrq $0x2,%r14
	movl %r14d,%r10d
	cmpl %r11d,%r10d
	jne L_77126
	movq %r13,%r15
L_77136:
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF16,%r13
	je L_405301
L_77198:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF17,%r14
	jne L_77126
L_77199:
	movq %r13,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_77200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1411
.p2align 0x4
L_405301:
L_77137:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF16,%r14
	jne L_77126
L_77138:
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77126
.p2align 0x4,,0x7
L_77141:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF16,%r14
	je L_405303
L_77190:
	movq 0x0(%r15),%r14
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF17,%r13
	jne L_77126
L_77191:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_77192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1411
.p2align 0x4
L_405303:
L_77142:
	movq 0x0(%r15),%r14
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF16,%r13
	jne L_77126
L_77143:
	movq 0x0(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	jne L_77126
L_77145:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb doit_13
L_77188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77189
.p2align 0x4
.long 0x1063
L_77189:
	addq $0xFFFFFFFFFFFFFF98,%rbp
doit_13:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_76689
L_77148:
	movl %r14d,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_405304
L_77149:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_405304:
L_77174:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405312:
L_77132:
	movq 0x98(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x2,%r15
	jne L_77126
L_77133:
	shrq $0x2,%r14
	movl %r14d,%r10d
	cmpl %r10d,%r11d
	jne L_77126
	movq %r13,%r15
	jmp L_77136
.p2align 0x4
L_405315:
	xchgq %r13,%r15
	jmp L_77136
.p2align 0x4
L_405317:
L_77215:
	movq 0x68(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_77129
L_77216:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x98(%rbp)
	movq %r13,%r15
	jmp L_77124
.p2align 0x4
L_405319:
L_77212:
	movq 0x68(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_77129
L_77213:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x98(%rbp)
	movq %r13,%r15
	jmp L_77124
.p2align 0x4
L_405321:
L_77209:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_77129
L_77210:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq $0x0,0x98(%rbp)
	movq %r14,%r15
	jmp L_77124
.p2align 0x4
L_405323:
L_77249:
	movq 0x68(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x3,%r15
	jne L_77118
L_77250:
	shrq $0x2,%r14
	movl %r14d,%r10d
	cmpl %r10d,%r11d
	jne L_77118
	movq %r13,%r15
L_77222:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF16,%r13
	je L_405325
L_77244:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF17,%r14
	jne L_77118
L_77245:
	movq %r13,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_77246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1411
.p2align 0x4
L_405325:
L_77223:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF16,%r14
	jne L_77118
L_77224:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	jne L_77118
.p2align 0x4,,0x7
L_77227:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF16,%r14
	je L_405327
L_77236:
	movq 0x0(%r15),%r14
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF17,%r13
	jne L_77118
L_77237:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_77238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1411
.p2align 0x4
L_405327:
L_77228:
	movq 0x0(%r15),%r14
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF16,%r13
	jne L_77118
L_77229:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77118
L_77231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77233
L_77234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77235
.p2align 0x4
.long 0x1067
L_77235:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77233:
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_13
.p2align 0x4
L_405335:
L_77218:
	movq 0x68(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x2,%r15
	jne L_77118
L_77219:
	shrq $0x2,%r14
	movl %r14d,%r10d
	cmpl %r11d,%r10d
	jne L_77118
	movq %r13,%r15
	jmp L_77222
.p2align 0x4
L_405338:
	xchgq %r13,%r15
	jmp L_77222
.p2align 0x4
.long 0x577
L_77066:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77067
L_77072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77073
.p2align 0x4
.long 0xF2D
L_77073:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77067:
	movq 0x38(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpb $0x1,0x4(%r13)
	je L_405340
L_77068:
	movq 0x20(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405340:
L_77069:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_405341
L_77070:
	movq 0x0(%r14),%r15
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r13,%r15
	jmp L_76691
.p2align 0x4
L_405341:
L_76752:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x577
L_77077:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77078
L_77083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77084
.p2align 0x4
.long 0xF2D
L_77084:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77078:
	movq 0x38(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpb $0x1,0x4(%r13)
	je L_405343
L_77079:
	movq 0x20(%rbp),%r15
	jmp L_76691
.p2align 0x4
L_405343:
L_77080:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_76752
L_77081:
	movq 0x0(%r14),%r15
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r13,%r15
	jmp L_76691
.p2align 0x4
.long 0x529
L_77047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_77048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
.long 0x5C0
L_76982:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76983
L_76991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76992
.p2align 0x4
.long 0xF2D
L_76992:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76983:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_405346
L_76984:
L_76985:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76986
.p2align 0x4
L_405346:
L_76990:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_76985
.p2align 0x4
.long 0x5C0
L_77024:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77025
L_77026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77027
.p2align 0x4
.long 0xF2D
L_77027:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77025:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76986
.p2align 0x4
.long 0x572
L_77015:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77016
L_77017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77018
.p2align 0x4
.long 0xE4E
L_77018:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_77016:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76986
.p2align 0x4
.long 0x5C5
L_77003:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77004
L_77008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77009
.p2align 0x4
.long 0xF35
L_77009:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_77004:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_405350
L_77005:
L_77006:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76986
.p2align 0x4
L_405350:
L_77007:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_77006
.p2align 0x4
.long 0x56F
L_76997:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76998
L_76999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_77000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77000
.p2align 0x4
.long 0x576
L_77000:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76998:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_76986
.p2align 0x4
.long 0x560
L_76976:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76977
L_77029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77030
.p2align 0x4
.long 0xE4E
L_77030:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76977:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_405359
L_76978:
L_76979:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_405358
	cmpq $0xEB8,%r13
	je L_405357
	cmpq $0xEB9,%r13
	je L_405356
	cmpq $0xEBA,%r13
	je L_405355
	cmpq $0xEBB,%r13
	je L_405354
	cmpq $0xEBC,%r13
	je L_405353
L_76980:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_76981
.p2align 0x4
L_405353:
L_77020:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
	jmp L_77021
.p2align 0x4
L_405354:
L_77019:
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_76986
.p2align 0x4
L_405355:
L_77011:
	movq %r15,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_77012
.p2align 0x4
L_405356:
L_77010:
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_76986
.p2align 0x4
L_405357:
L_77001:
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x38(%rbp)
	jmp L_77002
.p2align 0x4
L_405358:
L_76993:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	jmp L_76994
.p2align 0x4
L_405359:
L_77028:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_76979
.p2align 0x4
.long 0x529
L_76778:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_76779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattens_0
.p2align 0x4
.long 0x529
L_76909:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
.long 0x5B8
L_76827:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76828
L_76848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76849
.p2align 0x4
.long 0x1057
L_76849:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76828:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405362
L_76829:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76830:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x40(%rbp)
	je L_405361
L_76831:
	movq %r14,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405361:
L_76846:
	movq %r14,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
L_405362:
L_76847:
	movq 0x50(%rbp),%r15
	jmp L_76830
.p2align 0x4
.long 0x5B8
L_76887:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76888
L_76891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76892
.p2align 0x4
.long 0x1057
L_76892:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76888:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x40(%rbp)
	je L_405364
L_76889:
	movq %r15,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405364:
L_76890:
	movq %r15,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
.long 0x5B7
L_76833:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movq %r15,0x20(%rbp)
	cmpl $0x2,0x28(%rbp)
	jl L_405367
L_76834:
	cmpl $0x2,%r11d
	je L_405366
L_76835:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76836
.p2align 0x4
L_405366:
L_76840:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_76841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_405367:
L_76845:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1059
L_76875:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76876
L_76879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_76880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76880
.p2align 0x4
.long 0x105A
L_76880:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_76876:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	cmpq $0x1,0x40(%rbp)
	je L_405368
L_76877:
	movq %r15,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405368:
L_76878:
	movq %r15,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
.long 0x5B8
L_76860:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76861
L_76867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76868
.p2align 0x4
.long 0x1057
L_76868:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76861:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405371
L_76862:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76863:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpq $0x1,0x40(%rbp)
	je L_405370
L_76864:
	movq %r14,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405370:
L_76865:
	movq %r14,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
L_405371:
L_76866:
	movq 0x50(%rbp),%r15
	jmp L_76863
.p2align 0x4
.long 0x52A
L_76853:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76854
L_76857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_76858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76858
.p2align 0x4
.long 0x1058
L_76858:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_76854:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq $0x1,0x40(%rbp)
	je L_405373
L_76855:
	movq %r15,0x50(%rbp)
	jmp L_76832
.p2align 0x4
L_405373:
L_76856:
	movq %r15,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_76836
.p2align 0x4
.long 0x560
L_76808:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76809
L_76820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76821
.p2align 0x4
.long 0x68D
L_76821:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76809:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_405375
L_76810:
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movl $0x1,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405375:
L_76819:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_76798
.p2align 0x4
.long 0x598
L_76768:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_76769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
.long 0x5FA
L_76759:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76760
L_76764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76765
.p2align 0x4
.long 0x739
L_76765:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76760:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
L_76761:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_405377
L_76763:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r15
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r9
	movq $0x49A7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r15,0x0(%r8)
	movq %r14,0x8(%r8)
	movq $0x1B55,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r9,0x8(%rsp)
	addq $0x18,%r12
	movq %r13,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %rsp,0x0(%r13)
	movq $0x1093,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq 0x0(%r14),%r15
	movq $0x27B7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r8,0x0(%r14)
	movq 0x0(%r13),%r15
	movq $0x4A5B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq %r14,0x0(%r9)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r13)
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
L_405377:
L_76762:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x529
L_76748:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_76749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
.long 0x577
L_76697:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76698
L_76706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76707
.p2align 0x4
.long 0xF2D
L_76707:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76698:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_405379
L_76699:
L_76700:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_76701
.p2align 0x4
L_405379:
L_76705:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_76700
.p2align 0x4
.long 0x577
L_76736:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76737
L_76738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76739
.p2align 0x4
.long 0xF2D
L_76739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76737:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_76701
.p2align 0x4
.long 0x560
L_76728:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76729
L_76730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76731
.p2align 0x4
.long 0xE4E
L_76731:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76729:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	jmp L_76701
.p2align 0x4
.long 0x1051
L_76717:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76718
L_76722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76723
.p2align 0x4
.long 0xF35
L_76723:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76718:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_405383
L_76719:
L_76720:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	jmp L_76701
.p2align 0x4
L_405383:
L_76721:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_76720
.p2align 0x4
.long 0x558
L_76712:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76713
L_76714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76715
.p2align 0x4
.long 0x576
L_76715:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76713:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_76701
.p2align 0x4
.long 0x1066
L_77200:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	testl %r15d,%r15d
	jnz L_77141
	jmp L_77126
.p2align 0x4
.long 0x1064
L_77192:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77193
L_77196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_77197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77197
.p2align 0x4
.long 0x1065
L_77197:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_77193:
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz doit_13
	jmp L_77126
.p2align 0x4
.long 0x105C
L_77150:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_77151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x106A
L_77246:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	testl %r15d,%r15d
	jnz L_77227
	jmp L_77118
.p2align 0x4
.long 0x1068
L_77238:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77239
L_77242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_77243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77243
.p2align 0x4
.long 0x1069
L_77243:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_77239:
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_77233
	jmp L_77118
.p2align 0x4
.long 0x1052
L_77048:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77049
L_77052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_77053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77053
.p2align 0x4
.long 0x5A3
L_77053:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_77049:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_77050:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_76752
L_77051:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x49A5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_77041
.p2align 0x4
.long 0x5C0
L_76779:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76780
L_76781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76782
.p2align 0x4
.long 0xF2D
L_76782:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76780:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_76691
.p2align 0x4
.long 0x542
L_76910:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76911
L_76971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76972
.p2align 0x4
.long 0xE4E
L_76972:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76911:
	movq 0x30(%rbp),%r11
	cmpq $0x1,%r11
	je L_405408
	cmpq $0x2,%r11
	je L_405407
L_76912:
	movq 0x8(%r11),%r15
	movq 0x38(%rbp),%r11
	cmpq 0x8(%r11),%r15
	je L_405406
L_76913:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r13
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_76785
L_76914:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_405404
L_76915:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movl $0x0,0x30(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_76917:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_405403
L_76956:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCF4,%r11
	jne L_405402
L_76957:
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	cmpq 0x0(%r15),%r13
	movq %r13,(localObjptr+0x8)(%rip)
	je L_405398
L_76918:
	movl 0x30(%rbp),%r11d
	incl %r11d
	jo L_76689
L_76919:
	cmpq $0x1,%r14
	je L_405394
L_76920:
	movl %r11d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_76917
.p2align 0x4
L_405394:
	movl %r11d,%ecx
L_76922:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_76795
L_76923:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_76925
L_76955:
	movl %ecx,0x0(%r15)
L_76925:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_405398:
L_76959:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76960
L_76965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76966
.p2align 0x4
.long 0x78B
L_76966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76960:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_76795
L_76961:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_405399
L_76962:
	movq 0x38(%rbp),%r15
L_76963:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76691
.p2align 0x4
L_405399:
L_76964:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_76963
.p2align 0x4
L_405402:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_76918
.p2align 0x4
L_405403:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_76918
.p2align 0x4
L_405404:
L_76967:
	xorl %ecx,%ecx
	jmp L_76922
.p2align 0x4
L_405406:
L_76968:
	movq 0x28(%rbp),%r15
	jmp L_76963
.p2align 0x4
L_405407:
L_76970:
	movq 0x28(%rbp),%r15
	jmp L_76963
.p2align 0x4
L_405408:
L_76969:
	movq 0x28(%rbp),%r15
	jmp L_76963
.p2align 0x4
.long 0x1055
L_76841:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76842
L_76843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_76844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76844
.p2align 0x4
.long 0x1056
L_76844:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_76842:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x49AB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r9,0x0(%r15)
	movq 0x0(%r10),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_76836
.p2align 0x4
.long 0x575
L_76811:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76812
L_76817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76818
.p2align 0x4
.long 0xF2D
L_76818:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76812:
	movq $0x1E11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x50(%rbp)
	movl $0x0,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1053
L_76769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76770
L_76773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_76774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76774
.p2align 0x4
.long 0xFAA
L_76774:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_76770:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_76771:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_76752
L_76772:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4A59,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_76758
.p2align 0x4
.long 0x1052
L_76749:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76750
L_76754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76755
.p2align 0x4
.long 0x5A3
L_76755:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76750:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_76751:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_76752
L_76753:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4A5D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_76742
.p2align 0x4
.long 0x105D
L_77151:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_76926:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_76927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x571
L_76813:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76814
L_76815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76816
.p2align 0x4
.long 0xE4E
L_76816:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76814:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	jmp L_76798
.p2align 0x4
.long 0x105D
L_77152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77153
L_77185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77186
.p2align 0x4
.long 0xE6E
L_77186:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77153:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_77154:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_76689
L_77155:
	cmpq $0x1,%r14
	je L_405417
L_77156:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_77154
.p2align 0x4
L_405417:
L_77157:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77158
L_77183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77184
.p2align 0x4
.long 0x5BC
L_77184:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77158:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_405418
L_77159:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
L_77160:
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_405418:
L_77182:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_77160
.p2align 0x4
.long 0x4B0
L_76927:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDFF0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x105D
L_77161:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_77162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5B0
L_76928:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x105E
L_77162:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_76929:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76930
L_76953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76954
.p2align 0x4
.long 0x4AF
L_76954:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76930:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_76931:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_76689
L_76932:
	cmpq $0x1,%r14
	je L_405422
L_76933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_76931
.p2align 0x4
L_405422:
L_76934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76935
L_76951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76952
.p2align 0x4
.long 0x4E7
L_76952:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76935:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405423
L_76936:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_120:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_405423:
L_76950:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_120
.p2align 0x4
.long 0x105E
L_77163:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77164
L_77180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77181
.p2align 0x4
.long 0xE6E
L_77181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77164:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_77165:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_76689
L_77166:
	cmpq $0x1,%r14
	je L_405427
L_77167:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_77165
.p2align 0x4
L_405427:
L_77168:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77169
L_77178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77179
.p2align 0x4
.long 0x1062
L_77179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77169:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405428
L_77170:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
x_215:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x70(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_405428:
L_77177:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_215
.p2align 0x4
.long 0x1
rev_118:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_405434
L_76937:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_76938:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405433
.p2align 0x4,,0x7
L_76939:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405432
L_76940:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_76938
.p2align 0x4
L_405432:
L_76942:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405433:
L_76947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76948
.p2align 0x4
.long 0x45C
L_76948:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76939
.p2align 0x4
L_405434:
L_76949:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76942
.p2align 0x4
.long 0x105F
L_77171:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_77172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_76943:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76944
L_76945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76946
.p2align 0x4
.long 0x452
L_76946:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76944:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1060
L_77172:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77174
L_77175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77176
.p2align 0x4
.long 0x1061
L_77176:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_77174
.text
.p2align 0x4
.globl get_61
.hidden get_61
get_61:
L_77272:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77302
L_77273:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405449
L_77274:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_405448
L_77276:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_405447
L_77277:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_77279:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_77280
L_77294:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD0D,%r13
	jne L_77280
L_77295:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_405442
L_77280:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_405441
L_77282:
	cmpq $0x1,%r15
	je L_405437
L_77283:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_77279
.p2align 0x4
L_405437:
L_77284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77285
L_77292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_77293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77293
.p2align 0x4
.long 0x814
L_77293:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_77285:
	movl 0x18(%rbp),%ecx
L_77286:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405439
L_77288:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_77290
L_77291:
	movl %ecx,0x0(%r15)
L_77290:
	movq $0x1093,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x19B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1A1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405439:
L_77287:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405441:
L_77281:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405442:
L_77297:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77287
L_77298:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405443
L_77300:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405443:
L_77299:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405447:
L_77301:
	xorl %ecx,%ecx
	jmp L_77286
.p2align 0x4
L_405448:
L_77275:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405449:
L_77302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77303
.p2align 0x4
.long 0x460
L_77303:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_77274
.text
.p2align 0x4
.globl flattens_0
.hidden flattens_0
flattens_0:
L_77304:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77416
L_77305:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405460
L_77306:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77308
L_77309:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_405458
L_77311:
	cmpl %r13d,%ecx
	jne L_77313
L_77314:
	cmpl $0x0,%r13d
	jl L_405456
L_77315:
	movq $0x1,0x10(%rbp)
	xorl %ecx,%ecx
loop_924:
	cmpl 0x30(%rbp),%ecx
	jnl L_405451
L_77328:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x34(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_77329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_405451:
L_77316:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_405455
L_77317:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_77318:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_405454
L_77320:
	cmpq $0x1,%r15
	je L_405452
L_77321:
	movq 0x8(%r15),%r15
	jmp L_77318
.p2align 0x4
L_405452:
L_77322:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77323
L_77325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_77326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77326
.p2align 0x4
.long 0x49D
L_77326:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_77323:
	movl 0x20(%rbp),%ecx
L_77324:
	movl %ecx,0x8(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405454:
L_77319:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405455:
L_77327:
	xorl %ecx,%ecx
	jmp L_77324
.p2align 0x4
L_405456:
L_77313:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405458:
L_77308:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405460:
L_77416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_77417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77417
.p2align 0x4
.long 0x45C
L_77417:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_77306
.p2align 0x4
.long 0x106B
L_77329:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77330
L_77413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77414
.p2align 0x4
.long 0x1072
L_77414:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_77330:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1444,%r14
	jne L_405480
L_77332:
	cmpq $0x1,0x8(%r15)
	je L_405479
L_77333:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_405478
L_77335:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_405477
L_77336:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_77338:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405476
L_77404:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_405475
L_77405:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_405467
L_77339:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_77319
L_77340:
	cmpq $0x1,%r15
	je L_405462
L_77341:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_77338
.p2align 0x4
L_405462:
L_77342:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77343
L_77402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_77403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77403
.p2align 0x4
.long 0x1071
L_77403:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_77343:
	movl 0x50(%rbp),%ecx
L_77344:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405464
L_77346:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_77348
L_77401:
	movl %ecx,0x0(%r15)
L_77348:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_77349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_405464:
L_77345:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405467:
L_77407:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77345
L_77408:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405473
L_77410:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_77360:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
L_77361:
	movq %r13,%r15
	movq %r13,0x40(%rbp)
	andq $0x3,%r15
	jz L_405468
L_77362:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_77363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_405468:
L_77384:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77308
L_77386:
	cmpl $0x0,%r13d
	jl L_405471
L_77387:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405470
.p2align 0x4,,0x7
L_77388:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_405469
L_77390:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x10(%rbp)
	incl %r15d
	movl %r15d,0x3C(%rbp)
	jmp loop_925
.p2align 0x4
L_405469:
L_77389:
	movl 0x34(%rbp),%ecx
	jmp loop_924
.p2align 0x4
L_405470:
L_77391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_77392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77392
.p2align 0x4
.long 0x978
L_77392:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_77388
.p2align 0x4
L_405471:
L_77393:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405473:
L_77409:
	movq %r11,%r15
	jmp L_77360
.p2align 0x4
L_405475:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_77339
.p2align 0x4
L_405476:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_77339
.p2align 0x4
L_405477:
L_77411:
	xorl %ecx,%ecx
	jmp L_77344
.p2align 0x4
L_405478:
L_77334:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405479:
L_77412:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	movl 0x34(%rbp),%ecx
	jmp loop_924
.p2align 0x4
L_405480:
L_77331:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x106C
L_77349:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77350
L_77399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77400
.p2align 0x4
.long 0x1070
L_77400:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77350:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_77331
L_77351:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_405482
L_77352:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_405482:
L_77359:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_77360
.p2align 0x4
.long 0x106D
L_77363:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77364
L_77382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_77383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77383
.p2align 0x4
.long 0x106E
L_77383:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_77364:
	movq $0x3B83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_77365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4B9
L_77353:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77354
L_77396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77397
.p2align 0x4
.long 0x4DC
L_77397:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_77354:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_405486
L_77356:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movb $0xD,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_77357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_405486:
L_77355:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_77365:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (toString_121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x106C
L_77357:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77359
L_77394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_77395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77395
.p2align 0x4
.long 0x106F
L_77395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_77359
.p2align 0x4
.long 0x2B
toString_121:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (rev_119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2B
rev_119:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_405491
L_77366:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_77367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405490
.p2align 0x4,,0x7
L_77368:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_405489
L_77369:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_77367
.p2align 0x4
L_405489:
L_77371:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_77372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405490:
L_77379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_77380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77380
.p2align 0x4
.long 0x520
L_77380:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_77368
.p2align 0x4
L_405491:
L_77381:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_77371
.p2align 0x4
.long 0x2B
L_77372:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77373
L_77377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_77378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77378
.p2align 0x4
.long 0x2C
L_77378:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_77373:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF098)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_213:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77374
L_77375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_77376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77376
.p2align 0x4
.long 0x452
L_77376:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_77374:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1310
.hidden x_1310
x_1310:
L_77418:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77471
L_77419:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405517
L_77420:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x18(%r10),%r14
	movq 0x10(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_77421
L_77422:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_405515
L_77423:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_77425:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405514
L_77463:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF6,%r11
	jne L_405513
L_77464:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_405510
L_77426:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_77427
L_77428:
	cmpq $0x1,%r15
	je L_405494
L_77429:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_77425
.p2align 0x4
L_405494:
L_77430:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77431
L_77461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_77462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77462
.p2align 0x4
.long 0xBF0
L_77462:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_77431:
	movl 0x8(%rbp),%ecx
L_77432:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77433
L_77434:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl newNode_1
L_77460:
	movl %ecx,0x0(%r15)
newNode_1:
	movq 0x10(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x8(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_405506
L_77436:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_405505
L_77437:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_77439:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405504
L_77452:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF4,%r11
	jne L_405503
L_77453:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_405500
L_77440:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_405499
L_77441:
	cmpq $0x1,%r15
	je L_405495
L_77442:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_77439
.p2align 0x4
L_405495:
L_77443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77444
L_77450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77451
.p2align 0x4
.long 0x564
L_77451:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77444:
	movl 0x10(%rbp),%ecx
L_77445:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405497
L_77446:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_77448
L_77449:
	movl %ecx,0x0(%r15)
L_77448:
	movq $0x19E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r15,0x10(%r10)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq $0x19ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405497:
L_77433:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405499:
L_77427:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405500:
L_77455:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77433
L_77456:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405501
L_77458:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405501:
L_77457:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405503:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_77440
.p2align 0x4
L_405504:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_77440
.p2align 0x4
L_405505:
L_77459:
	xorl %ecx,%ecx
	jmp L_77445
.p2align 0x4
L_405506:
L_77421:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405510:
L_77466:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77433
L_77467:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405511
L_77469:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405511:
L_77468:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405513:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_77426
.p2align 0x4
L_405514:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_77426
.p2align 0x4
L_405515:
L_77470:
	xorl %ecx,%ecx
	jmp L_77432
.p2align 0x4
L_405517:
L_77471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77472
.p2align 0x4
.long 0x460
L_77472:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_77420
.text
.p2align 0x4
.globl get_49
.hidden get_49
get_49:
L_77473:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77509
L_77474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405531
L_77475:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_405530
L_77477:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_405529
L_77478:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_77480:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405528
L_77501:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD16,%r11
	jne L_405527
L_77502:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_405524
L_77481:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_405523
L_77483:
	cmpq $0x1,%r15
	je L_405519
L_77484:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_77480
.p2align 0x4
L_405519:
L_77485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77486
L_77499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_77500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77500
.p2align 0x4
.long 0x45F
L_77500:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_77486:
	movl 0x20(%rbp),%ecx
L_77487:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405521
L_77489:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl new_4
L_77498:
	movl %ecx,0x0(%r15)
new_4:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x4(%r15)
	movb 0x4(%r15),%r14b
	testb %r14b,%r14b
	jz L_405520
L_77493:
	movb $0x0,0x4(%r15)
	movl $0x0,0x0(%r15)
	movq $0x1,0x40(%rbp)
	movb $0x8,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_77494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_405520:
L_77492:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x13B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x30,%r12
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x1A2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405521:
L_77488:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405523:
L_77482:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405524:
L_77504:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77488
L_77505:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405525
L_77507:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405525:
L_77506:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405527:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_77481
.p2align 0x4
L_405528:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_77481
.p2align 0x4
L_405529:
L_77508:
	xorl %ecx,%ecx
	jmp L_77487
.p2align 0x4
L_405530:
L_77476:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405531:
L_77509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77510
.p2align 0x4
.long 0x460
L_77510:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_77475
.p2align 0x4
.long 0x4A8
L_77494:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77492
L_77496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_77497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77497
.p2align 0x4
.long 0x721
L_77497:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_77492
.text
.p2align 0x4
.globl get_72
.hidden get_72
get_72:
L_77511:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77541
L_77512:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405546
L_77513:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_405545
L_77515:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_405544
L_77516:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_77518:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_77519
L_77533:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD24,%r13
	jne L_77519
L_77534:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_405539
L_77519:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_405538
L_77521:
	cmpq $0x1,%r15
	je L_405534
L_77522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_77518
.p2align 0x4
L_405534:
L_77523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77524
L_77531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_77532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77532
.p2align 0x4
.long 0x49C
L_77532:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_77524:
	movl 0x18(%rbp),%ecx
L_77525:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405536
L_77527:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_77529
L_77530:
	movl %ecx,0x0(%r15)
L_77529:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1A49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405536:
L_77526:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405538:
L_77520:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405539:
L_77536:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_77526
L_77537:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405540
L_77539:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405540:
L_77538:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405544:
L_77540:
	xorl %ecx,%ecx
	jmp L_77525
.p2align 0x4
L_405545:
L_77514:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405546:
L_77541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77542
.p2align 0x4
.long 0x460
L_77542:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_77513
.text
.p2align 0x4
.globl tabulate_25
.hidden tabulate_25
tabulate_25:
L_77543:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_77544
L_77576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_77577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77577
.p2align 0x4
.long 0x458
L_77577:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_77544:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_405562
L_77545:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405561
L_77546:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1457,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_77547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77547
.p2align 0x4
.long 0x453
L_77547:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_77548:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_926:
	movq 0x18(%rbp),%r13
	cmpq 0x10(%rbp),%r13
	jnl L_405560
L_77550:
	movl %r13d,%r11d
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_405559
L_77551:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1D13,%r15
	je L_405558
	cmpq $0x1D14,%r15
	je L_405557
	cmpq $0x1D15,%r15
	je L_405555
	cmpq $0x1D16,%r15
	je L_405554
	cmpq $0x1D17,%r15
	je L_405553
	cmpq $0x1D18,%r15
	je L_405550
L_77552:
	movslq %r11d,%r15
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_405549
L_77557:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_405548
L_77560:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_77554:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_77555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405548:
L_77559:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405549:
L_77553:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_77554
.p2align 0x4
L_405550:
L_77568:
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_405552
L_77570:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_77559
L_77572:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_77556:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_926
.p2align 0x4
L_405552:
L_77569:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_77555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405553:
L_77567:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_77555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405554:
L_77566:
	movq 0x0(%r13),%r15
	jmp L_77556
.p2align 0x4
L_405555:
L_77563:
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405556
L_77564:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_77556
.p2align 0x4
L_405556:
L_77565:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405557:
L_77562:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_77555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405558:
L_77561:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_77555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405559:
L_77573:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405560:
L_77549:
	movq 0x8(%rbp),%r15
	movq $0x8DF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405561:
L_77574:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405562:
L_77575:
	movq (globalObjptr+0xB70)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_77548
.p2align 0x4
.long 0x5F9
L_77555:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_77556
.text
.p2align 0x4
.globl gotoMeaning_0
.hidden gotoMeaning_0
gotoMeaning_0:
L_77578:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_77698
L_77579:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405607
L_77580:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
loop_927:
	movq 0x18(%rbp),%r15
	movq 0x60(%r15),%r14
	movq 0x58(%r15),%r13
	movq 0x50(%r15),%r11
	movq 0x48(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x40(%r15),%r10
	movq 0x38(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x30(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x28(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r8d
	movq 0x10(%r15),%rsp
	movslq %r8d,%r15
	movl %r8d,0x58(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	jnb L_77582
L_77583:
	movl 0x0(%r9,%r15,4),%r8d
	movl %r8d,0x5C(%rbp)
	movq $0x975,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r10,0x0(%r9)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r9)
	cmpq $0x1,%rsp
	je L_405605
	cmpq $0x2,%rsp
	je L_405604
L_77584:
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r10
	shrq $0x1,%r10
	cmpq $0xEDF,%r10
	je L_405596
	cmpq $0xEE0,%r10
	je L_405579
	cmpq $0xEE1,%r10
	je L_405571
L_77585:
	movq 0x8(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%rsp),%r9
	movq %r9,0x40(%rbp)
	cmpq $0x1,%r10
	je L_405570
L_77586:
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_405569
L_77587:
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_77588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405568
.p2align 0x4,,0x7
L_77589:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_405564
L_77590:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_77588
.p2align 0x4
L_405564:
L_77591:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_77592:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405567
.p2align 0x4,,0x7
L_77593:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_405565
L_77594:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_77592
.p2align 0x4
L_405565:
L_77595:
	movq %r15,0x48(%rbp)
L_77596:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_405566
L_77599:
	movq $0x3FD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_77600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405566:
L_77598:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405567:
L_77604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77605
.p2align 0x4
.long 0x6FB
L_77605:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_77593
.p2align 0x4
L_405568:
L_77606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77607
.p2align 0x4
.long 0x1073
L_77607:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_77589
.p2align 0x4
L_405569:
L_77608:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_77596
.p2align 0x4
L_405570:
L_77609:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_77596
.p2align 0x4
L_405571:
L_77676:
	movq 0x10(%rsp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rsp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rsp),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_405578
L_77677:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_405577
L_77678:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_77679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405576
.p2align 0x4,,0x7
L_77680:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_405572
L_77681:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_77679
.p2align 0x4
L_405572:
L_77682:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_77683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405575
.p2align 0x4,,0x7
L_77684:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_405573
L_77685:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_77683
.p2align 0x4
L_405573:
L_77687:
	movq 0x20(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_405574
L_77689:
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	movq $0x40AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x50,%r12
	movl 0x5C(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl 0x58(%rbp),%r11d
	movl %r11d,0x4(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r13)
	movq %r14,0x38(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x40(%r13)
	movq %r13,0x20(%rbp)
	movq $0x40AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp simplifyCase_0
.p2align 0x4
L_405574:
L_77582:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405575:
L_77690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_77691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77691
.p2align 0x4
.long 0x1076
L_77691:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_77684
.p2align 0x4
L_405576:
L_77692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_77693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77693
.p2align 0x4
.long 0x1077
L_77693:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_77680
.p2align 0x4
L_405577:
L_77694:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_77687
.p2align 0x4
L_405578:
L_77695:
	movq 0x30(%rbp),%r15
	jmp L_77687
.p2align 0x4
L_405579:
L_77634:
	movq 0x10(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%rsp),%r9
	movq %r9,0x68(%rbp)
	movq 0x0(%rsp),%r8
	movq %r8,0x70(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_77582
L_77636:
	movl 0x0(%r11,%r15,4),%r8d
	testl %r8d,%r8d
	jnz L_77674
L_77637:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_77582
L_77639:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_405592
L_77640:
	movl 0x5C(%rbp),%r13d
	decl %r13d
	jo L_77641
L_77642:
	movq 0x50(%rbp),%r11
	movl %r13d,0x0(%r11,%r15,4)
	cmpl $0x0,%r13d
	jng L_405589
L_77668:
	movq 0x8(%r14),%r15
	movslq 0x0(%r10),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_77582
L_77670:
	movl 0x0(%r15,%r14,4),%r13d
	incl %r13d
	jo L_405587
L_77671:
	movl %r13d,0x0(%r15,%r14,4)
	cmpq $0x1,%r9
	je L_405586
L_77644:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_405585
L_77645:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_77646:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405584
.p2align 0x4,,0x7
L_77647:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_405580
L_77648:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_77646
.p2align 0x4
L_405580:
L_77649:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_77650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405583
.p2align 0x4,,0x7
L_77651:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_405581
L_77652:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_77650
.p2align 0x4
L_405581:
L_77653:
	movq %r15,0x20(%rbp)
L_77654:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77598
L_77656:
	movl %r13d,0x50(%rbp)
	movq $0x3A31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_77657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405583:
L_77661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_77662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77662
.p2align 0x4
.long 0x1074
L_77662:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_77651
.p2align 0x4
L_405584:
L_77663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_77664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77664
.p2align 0x4
.long 0x1075
L_77664:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_77647
.p2align 0x4
L_405585:
L_77665:
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_77654
.p2align 0x4
L_405586:
L_77667:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_77654
.p2align 0x4
L_405587:
L_77641:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405589:
L_77643:
	cmpq $0x1,%r9
	je L_77667
	jmp L_77644
.p2align 0x4
L_405592:
L_77674:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_18
.p2align 0x4
L_405596:
L_77610:
	movq 0x8(%rsp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rsp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	je L_405603
L_77611:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_405602
L_77612:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_77613:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405601
.p2align 0x4,,0x7
L_77614:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_405597
L_77615:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_77613
.p2align 0x4
L_405597:
L_77616:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_77617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405600
.p2align 0x4,,0x7
L_77618:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_405598
L_77619:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_77617
.p2align 0x4
L_405598:
L_77620:
	movq %r15,0x48(%rbp)
L_77621:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77598
L_77623:
	movq $0x3FEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_77624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405600:
L_77628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77629
.p2align 0x4
.long 0x6FB
L_77629:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_77618
.p2align 0x4
L_405601:
L_77630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77631
.p2align 0x4
.long 0x1073
L_77631:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_77614
.p2align 0x4
L_405602:
L_77632:
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_77621
.p2align 0x4
L_405603:
L_77633:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_77621
.p2align 0x4
L_405604:
L_77697:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_18
.p2align 0x4
L_405605:
L_77696:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405607:
L_77698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_77699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77699
.p2align 0x4
.long 0x4AF
L_77699:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_77580
.p2align 0x4
.long 0x90E
L_77600:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77601
L_77602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_77603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77603
.p2align 0x4
.long 0x9BF
L_77603:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_77601:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E4
L_77657:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77658
L_77659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77660
.p2align 0x4
.long 0x5E7
L_77660:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77658:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp loop_927
.p2align 0x4
.long 0x90E
L_77624:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77625
L_77626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_77627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77627
.p2align 0x4
.long 0x9BF
L_77627:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_77625:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl normal_18
.hidden normal_18
normal_18:
L_77700:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_77701
L_77734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_77735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77735
.p2align 0x4
.long 0x107B
L_77735:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_77701:
	cmpl $0x1,0x48(%rbp)
	je L_405612
L_77702:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_77703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_405612:
L_77717:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77706
L_77719:
	movl $0x0,0x0(%r14,%r15,4)
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405618
L_77721:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77709
L_77723:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_405616
L_77725:
	cmpl %ecx,%r13d
	jne L_77727
L_77728:
	cmpl $0x0,%r13d
	jl L_405614
L_77729:
	xorl %ecx,%ecx
loop_928:
	cmpl 0x48(%rbp),%ecx
	jnl L_405613
L_77731:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x30(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_77732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_405613:
L_77730:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp simplifyBlock_0
.p2align 0x4
L_405614:
L_77727:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405616:
L_77709:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405618:
L_77706:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1078
L_77703:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77704
L_77715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_77716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77716
.p2align 0x4
.long 0x1079
L_77716:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_77704:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77706
L_77707:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77709
L_77710:
	movl %r13d,0x38(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_77711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x107A
L_77732:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x30(%rbp),%ecx
	jmp loop_928
.p2align 0x4
.long 0x51A
L_77711:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77712
L_77713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_77714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77714
.p2align 0x4
.long 0x51D
L_77714:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_77712:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplifyBlock_0
.hidden simplifyBlock_0
simplifyBlock_0:
L_77736:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_77737
L_78364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78365
.p2align 0x4
.long 0x45C
L_78365:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_77737:
	movq 0x10(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x48(%rbp)
	jne L_77739
L_77740:
	testq %rdx,%rdx
	jz L_405690
L_77741:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405689
L_77742:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_77743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77743
.p2align 0x4
.long 0xB6A
L_77743:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_77744:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_929:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405688
.p2align 0x4,,0x7
L_77745:
	movq 0x60(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_405638
L_78150:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r11
	jne L_405637
.p2align 0x4,,0x7
L_78153:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405636
.p2align 0x4,,0x7
L_78154:
	movq 0x78(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB6,%r15
	je L_405635
	cmpq $0xEB7,%r15
	je L_405633
	cmpq $0xEB8,%r15
	je L_405632
	cmpq $0xEBA,%r15
	je L_405630
	cmpq $0xEBB,%r15
	je L_405628
	cmpq $0xEBC,%r15
	je L_405626
L_78155:
	movq $0xA15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,0x68(%rbp)
	jne L_405625
L_78162:
	movq $0x3E23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
.p2align 0x4,,0x7
L_78159:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_929
.p2align 0x4
L_405625:
L_78156:
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405626:
L_78344:
	movq 0x8(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_405627
L_78346:
	movl %r13d,0x98(%rbp)
	movq $0x3A29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_78347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405627:
L_77739:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405628:
L_78337:
	movq 0x0(%r14),%r15
	movq $0x27ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x68(%rbp)
	jne L_405629
.p2align 0x4,,0x7
L_78167:
	movq $0x1,%r15
	jmp L_78159
.p2align 0x4
L_405629:
L_78338:
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405630:
L_78260:
	movq 0x10(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77739
L_78262:
	movl %r13d,0xA0(%rbp)
	movq $0x3A29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_78263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405632:
L_78242:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405633:
L_78169:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77739
L_78171:
	movl %r13d,0x88(%rbp)
	movq $0x3A29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_78172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405635:
L_78163:
	movq 0x0(%r14),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405636:
L_78357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78358
.p2align 0x4
.long 0x10CB
L_78358:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_78154
.p2align 0x4
L_405637:
L_78151:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r11,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_78152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_405638:
L_77746:
	movq 0x58(%rbp),%r14
	movq $0x1785,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x10(%rbp),%r14
	movq 0xF0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0xD0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_405652
L_77747:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_405650
	cmpq $0xEBF,%r14
	je L_405648
	cmpq $0xEC0,%r14
	je L_405646
	cmpq $0xEC1,%r14
	je L_405645
	cmpq $0xEC2,%r14
	je L_405642
	cmpq $0xEC3,%r14
	je L_405640
L_77748:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_77739
L_77750:
	movl %r11d,0x90(%rbp)
	movq $0x3FD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_77751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405640:
L_77997:
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_77739
L_77999:
	movl %r13d,0x90(%rbp)
	movq $0x3A29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405642:
L_77890:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
L_77891:
	movq %r14,%r15
	andq $0x3,%r15
	jz L_405644
L_77892:
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_77893:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77739
L_77895:
	movl %r13d,0x70(%rbp)
	movq $0x3FD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405644:
L_77900:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_77901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405645:
L_77885:
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_77886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405646:
L_77872:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_77739
L_77874:
	movl %r11d,0x90(%rbp)
	movq $0x3A29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_77875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405648:
L_77865:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_77739
L_77867:
	movl %r11d,0x70(%rbp)
	movq $0x3FD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405650:
L_77858:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_77739
L_77860:
	movl %r11d,0x70(%rbp)
	movq $0x3FD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405652:
L_78149:
	movq $0x1,0x10(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
L_77764:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77739
L_77766:
	decl %r11d
	jo L_405686
L_77768:
	movq %r15,0x18(%rbp)
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_930:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405685
.p2align 0x4,,0x7
L_77769:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_405678
L_77770:
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%r14
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_405677
L_77771:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x1F11,%rax
	cmpq $0x8,%rax
	ja L_405653
	jmp *jumpTable_169(,%rax,8)
.data
.p2align 0x4
jumpTable_169:
.quad L_405676,L_405674,L_405672,L_405667,L_405665,L_405663,L_405660,L_405657,L_405655
.text
.p2align 0x4
L_405653:
L_77772:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jz L_405654
L_77774:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405654:
L_77773:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405655:
L_77831:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x18(%r13),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_405656
L_77833:
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405656:
L_77832:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405657:
L_77822:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_405658
L_77823:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405658:
L_77824:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77739
L_77826:
	movl %r13d,0x70(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_77827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405660:
L_77813:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_405661
L_77814:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405661:
L_77815:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77739
L_77817:
	movl %r13d,0x70(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_77818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405663:
L_77810:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x18(%r13),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_405664
L_77812:
	movq $0x1D77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405664:
L_77811:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405665:
L_77803:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77739
L_77805:
	movl %r13d,0x70(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_77806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405667:
L_77786:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x18(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_405670
L_77787:
	testl %r14d,%r14d
	jnz L_405668
L_77788:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405668:
L_77789:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_77739
L_77791:
	movl %r13d,0x70(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_77792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405670:
L_77796:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_77739
L_77798:
	movl %r13d,0x70(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_77799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405672:
L_77779:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r13),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_405673
L_77780:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405673:
L_77781:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_77782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405674:
L_77776:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movq 0x20(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_405675
L_77778:
	movq 0x0(%r14),%r13
	movq 0x20(%r14),%r9
	movl $0x1,0x0(%r9)
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405675:
L_77777:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405676:
L_77775:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405677:
L_77834:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
L_405678:
L_77835:
	cmpq $0x1,0x18(%rbp)
	je L_405684
L_77836:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_405683
L_77837:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_77838:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405682
.p2align 0x4,,0x7
L_77839:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_405679
L_77840:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_77838
.p2align 0x4
L_405679:
L_77841:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_77842:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405681
.p2align 0x4,,0x7
L_77843:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_405680
L_77844:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_77842
.p2align 0x4
L_405680:
L_77845:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405681:
L_77846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_77847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77847
.p2align 0x4
.long 0x520
L_77847:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_77843
.p2align 0x4
L_405682:
L_77848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_77849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77849
.p2align 0x4
.long 0x721
L_77849:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_77839
.p2align 0x4
L_405683:
L_77850:
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405684:
L_77851:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405685:
L_77852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77853
.p2align 0x4
.long 0x1085
L_77853:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_77769
.p2align 0x4
L_405686:
L_77767:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405688:
L_78360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78361
.p2align 0x4
.long 0x10D7
L_78361:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_77745
.p2align 0x4
L_405689:
L_78362:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405690:
L_78363:
	movq (globalObjptr+0x1F28)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_77744
.p2align 0x4
.long 0x10C4
L_78157:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78158
L_78160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78161
.p2align 0x4
.long 0x10C5
L_78161:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78158:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x3E21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_78159
.p2align 0x4
.long 0x10D6
L_78347:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78348
L_78355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78356
.p2align 0x4
.long 0x10C9
L_78356:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78348:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78349:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_78350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
.long 0x10C7
L_78339:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78340
L_78341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78342
.p2align 0x4
.long 0x10C8
L_78342:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78340:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_78159
.p2align 0x4
.long 0x10D0
L_78263:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_78264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_3
.p2align 0x4
.long 0x10CC
L_78243:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78244
L_78258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78259
.p2align 0x4
.long 0x10CF
L_78259:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78244:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_78245:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_216
L_78252:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13F4,%r15
	jne x_1429
L_78253:
	movq 0x0(%r13),%r15
	movslq 0x80(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_405698
L_78255:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78256:
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_78166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_405698:
L_77755:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
x_1429:
x_216:
	movq $0x27EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78246:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_78247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
.long 0x1091
L_78172:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78173
L_78240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78241
.p2align 0x4
.long 0x10CB
L_78241:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78173:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_78175
L_78176:
	movl %ecx,%ebx
	decl %ebx
	jo L_405724
L_78178:
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
loop_933:
	cmpl $0x0,%ebx
	jl L_405720
L_78179:
	movl %ebx,%r15d
	decl %r15d
	movslq %ebx,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
L_78180:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_405718
L_78195:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r14
	shrq $0x1,%r14
	cmpq $0x13F5,%r14
	jne L_405716
L_78200:
	movq 0x8(%r9),%r14
	cmpl 0x0(%r9),%ebx
	jne L_405714
L_78205:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_405705
L_78206:
	movq 0x0(%r14),%r11
	movq 0x0(%r13),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_405701
L_78211:
	movl %r15d,%ebx
	jmp loop_933
.p2align 0x4
L_405701:
L_78207:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78208
L_78209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78210
.p2align 0x4
.long 0x10C9
L_78210:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78208:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
L_78183:
	cmpq 0x80(%rbp),%r15
	je L_405702
L_78184:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405702:
L_78186:
	movq $0x27E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78187:
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405705:
L_78212:
	movq 0x10(%r14),%r11
	cmpq $0x1,%r11
	je L_405712
L_78213:
	movq 0x8(%r11),%r10
L_78214:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_78215
L_78219:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0xEB2,%r11
	jne L_405709
L_78220:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_405708
L_78222:
	cmpl %r8d,%ecx
	jne L_405706
L_78227:
	movq %r14,0x88(%rbp)
	movl %r15d,%ebx
	jmp loop_933
.p2align 0x4
L_405706:
L_78223:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78224
L_78225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78226
.p2align 0x4
.long 0x10C9
L_78226:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78224:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405708:
L_78175:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405709:
L_78215:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78216
L_78217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78218
.p2align 0x4
.long 0x10C9
L_78218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78216:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405712:
L_78228:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78229
L_78230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78231
.p2align 0x4
.long 0x10C9
L_78231:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78229:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405714:
L_78201:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78202
L_78203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78204
.p2align 0x4
.long 0x10C9
L_78204:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78202:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405716:
L_78196:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78197
L_78198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78199
.p2align 0x4
.long 0x10C9
L_78199:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78197:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405718:
L_78181:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78182
L_78193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78194
.p2align 0x4
.long 0x10C9
L_78194:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78182:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_78183
.p2align 0x4
L_405720:
L_78232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78233
L_78238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78239
.p2align 0x4
.long 0x10CA
L_78239:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78233:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_78186
L_78234:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_78167
L_78235:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_78166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_405724:
L_78177:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10C6
L_78164:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78165:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_78166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
.long 0x10C3
L_78152:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_78153
.p2align 0x4
.long 0x107C
L_77751:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x109E
L_78000:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_78001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_3
.p2align 0x4
.long 0x108F
L_77896:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77897
L_77898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77899
.p2align 0x4
.long 0x1090
L_77899:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77897:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	jmp L_77764
.p2align 0x4
.long 0x1091
L_77901:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x60(%rbp)
	movslq %r15d,%r11
	movl %r15d,0x50(%rbp)
	cmpq %r13,%r11
	jnb L_77755
L_77903:
	movq 0x0(%r14,%r11,8),%r15
L_77904:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_405739
L_77905:
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_77990
	cmpq $0x2,%r15
	je L_405729
L_77906:
	movq %r15,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_77907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405729:
L_77990:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je nonTail_0
L_77991:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_0
L_77992:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEDE,%r15
	jne nonTail_0
L_77993:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
L_77962:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_77739
L_77964:
	movslq 0x78(%rbp),%r13
	movq 0x70(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_77755
L_77966:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%rsp
	cmpq %rsp,%r8
	jne L_77739
L_77968:
	cmpl %ecx,%ebx
	jne nonTail_0
L_77970:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_932:
	cmpl %ebx,%ecx
	je L_405733
L_77971:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_77755
L_77973:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_0
L_77974:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %ebx,%r13d
	jne nonTail_2
L_77976:
	incl %ebx
	jo L_77767
L_77977:
	jmp loop_932
.p2align 0x4
nonTail_2:
nonTail_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77913
L_77938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_77939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77939
.p2align 0x4
.long 0x1099
L_77939:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_77913:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_77914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_405733:
L_77978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77979
L_77984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_77985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77985
.p2align 0x4
.long 0x109C
L_77985:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_77979:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
tail_1:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405739:
L_77758:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x108D
L_77886:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77887
L_77888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_77889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77889
.p2align 0x4
.long 0x108E
L_77889:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_77887:
	movq $0x40AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x18(%rbp),%r10
	movq %r10,0x18(%r15)
	movq %r15,0x88(%rbp)
	movq $0x40A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r9
	movq %r9,0x10(%r15)
	movq %r15,0x70(%rbp)
	movq %r14,0x68(%rbp)
	movq %r10,0x78(%rbp)
	movq %r13,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r11,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_77882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyCase_0
.p2align 0x4
.long 0x108A
L_77875:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_77876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x1088
L_77868:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77869
L_77870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77871
.p2align 0x4
.long 0x1089
L_77871:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77869:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_77764
.p2align 0x4
.long 0x1088
L_77861:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77862
L_77863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77864
.p2align 0x4
.long 0x1089
L_77864:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77862:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_77764
.p2align 0x4
.long 0x1083
L_77827:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77828
L_77829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77830
.p2align 0x4
.long 0x1084
L_77830:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77828:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0x107F
L_77818:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77819
L_77820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77821
.p2align 0x4
.long 0x1080
L_77821:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77819:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0x107F
L_77806:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77807
L_77808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77809
.p2align 0x4
.long 0x1080
L_77809:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77807:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0x107F
L_77792:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77793
L_77794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77795
.p2align 0x4
.long 0x1080
L_77795:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77793:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0x1081
L_77799:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77800
L_77801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77802
.p2align 0x4
.long 0x1082
L_77802:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77800:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0x107F
L_77782:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77783
L_77784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77785
.p2align 0x4
.long 0x1080
L_77785:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77783:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_930
.p2align 0x4
.long 0xF46
L_78350:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78351
L_78352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78353
.p2align 0x4
.long 0x10D5
L_78353:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78351:
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_78159
.p2align 0x4
.long 0xF46
L_78264:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78265
L_78335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78336
.p2align 0x4
.long 0x10D5
L_78336:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78265:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x3,%r14
	je L_405756
L_78266:
	andq $0x3,%r15
	jz L_405751
L_78267:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_78268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1431
.p2align 0x4
L_405751:
L_78282:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13F9,%r14
	je L_405754
	cmpq $0x13FA,%r14
	je L_405753
L_78283:
	movq 0x0(%r15),%r14
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78284:
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_78166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_405753:
L_78293:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_405754:
L_78286:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x27ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78287:
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_78288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405756:
L_78321:
	shrq $0x2,%r15
	movl %r15d,%r14d
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	testl %r14d,%r14d
	jnz L_405757
L_78322:
	movq %r11,0x78(%rbp)
L_78323:
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405757:
L_78334:
	movq %r13,0x78(%rbp)
	jmp L_78323
.p2align 0x4
.long 0x1026
L_78166:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78167
.p2align 0x4
.long 0x10CD
L_78247:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78248
L_78249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78250
.p2align 0x4
.long 0x10CE
L_78250:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78248:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3E25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_78159
.p2align 0x4
.long 0x10C7
L_78188:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78189
L_78190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78191
.p2align 0x4
.long 0x10C8
L_78191:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78189:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_78159
.p2align 0x4
.long 0x107D
L_77752:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77753
L_77856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77857
.p2align 0x4
.long 0x1087
L_77857:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77753:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_77756:
	movq 0x0(%r14,%r15,8),%r13
L_77757:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_77759:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_77760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x109F
L_78001:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78002
L_78147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78148
.p2align 0x4
.long 0x1034
L_78148:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78002:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_405772
L_78003:
	andq $0x3,%r15
	jz L_405765
L_78004:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77739
L_78006:
	movl %r13d,0x90(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_405765:
L_78033:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13F9,%r14
	je L_405771
	cmpq $0x13FA,%r14
	je L_405766
L_78034:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405766:
L_78086:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq $0xB95,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	cmpq $0x1,%r14
	je L_405770
L_78087:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_78088:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_77767
L_78089:
	cmpq $0x1,%r15
	je L_405767
L_78090:
	movq 0x8(%r15),%r15
	jmp L_78088
.p2align 0x4
L_405767:
L_78091:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78092
L_78125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78126
.p2align 0x4
.long 0x10BF
L_78126:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78092:
	movl 0x20(%rbp),%ecx
L_78093:
	movl %ecx,0x90(%rbp)
	movq $0x3A2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (uses_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405770:
L_78127:
	xorl %ecx,%ecx
	jmp L_78093
.p2align 0x4
L_405771:
L_78056:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405772:
L_78128:
	movq 0x60(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x1092
L_77907:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r13d
	movl %r13d,0x7C(%rbp)
	movslq %r13d,%r15
	cmpq 0x60(%rbp),%r15
	jnb L_77755
L_77909:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
L_77910:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_77758
L_77911:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_77990
L_77912:
	movq %r15,%r14
	andq $0x3,%r14
	jnz nonTail_0
L_77940:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEDF,%r14
	jne nonTail_0
L_77941:
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r15
	jne L_77739
L_77943:
	movslq %ecx,%r13
	movq 0x70(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_77755
L_77945:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ecx
	movslq %ecx,%rsp
	cmpq %rsp,%r8
	jne L_77739
L_77947:
	cmpl %ebx,%ecx
	jne nonTail_0
L_77949:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_931:
	cmpl %ebx,%ecx
	je L_405776
L_77950:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_77755
L_77952:
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_0
L_77953:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %r13d,%ecx
	jne nonTail_0
L_77955:
	incl %ecx
	jo L_77767
L_77956:
	jmp loop_931
.p2align 0x4
L_405776:
L_77957:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77958
L_77987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_77988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77988
.p2align 0x4
.long 0x109D
L_77988:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_77958:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_405777
L_77959:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_0
L_77960:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEDE,%r15
	jne nonTail_0
L_77961:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
	jmp L_77962
.p2align 0x4
L_405777:
L_77986:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp tail_1
.p2align 0x4
.long 0x1093
L_77914:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77915
L_77936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_77937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77937
.p2align 0x4
.long 0x1098
L_77937:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_77915:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_405787
	cmpq $0x2,%r15
	je L_405785
L_77916:
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_77917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405785:
L_77935:
	movq $0x2,%r14
	xchgq %r14,%r15
L_77927:
	movslq 0x78(%rbp),%r14
	movq 0x38(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_77755
L_77929:
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq $0x240B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x30(%rbp)
	jmp L_77893
.p2align 0x4
L_405787:
L_77934:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_77927
.p2align 0x4
.long 0x109A
L_77980:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77981
L_77982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77983
.p2align 0x4
.long 0x109B
L_77983:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77981:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_77893
.p2align 0x4
.long 0x1088
L_77882:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_77764
.p2align 0x4
.long 0x108B
L_77876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77877
L_77883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77884
.p2align 0x4
.long 0x108C
L_77884:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77877:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_77879:
	movq 0x0(%r14,%r15,8),%r13
L_77880:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_77881:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_77882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0xF46
L_78268:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movb 0x98(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78269
L_78280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78281
.p2align 0x4
.long 0x10D3
L_78281:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78269:
	cmpb $0x0,0x90(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x94(%rbp)
	movq $0xA13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_405793
L_78270:
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_78271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405793:
L_78276:
	movl 0x94(%rbp),%r11d
	testl %r11d,%r11d
	jz L_78167
L_78278:
	movq 0x80(%rbp),%r13
	movq 0x88(%rbp),%r14
	movq 0x78(%rbp),%r11
	xchgq %r11,%r15
L_78279:
	movq $0x3E2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r11)
	movq %r11,%r15
	jmp L_78159
.p2align 0x4
.long 0x10C7
L_78294:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78295
L_78319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78320
.p2align 0x4
.long 0x10C8
L_78320:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78295:
	movq $0xB95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_405799
L_78296:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_78297:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_77767
L_78298:
	cmpq $0x1,%r15
	je L_405796
L_78299:
	movq 0x8(%r15),%r15
	jmp L_78297
.p2align 0x4
L_405796:
L_78300:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78301
L_78316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78317
.p2align 0x4
.long 0x10D4
L_78317:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78301:
	movl 0x78(%rbp),%ecx
L_78302:
	movl %ecx,0xA0(%rbp)
	movq $0x3A2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_78303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405799:
L_78318:
	xorl %ecx,%ecx
	jmp L_78302
.p2align 0x4
.long 0x10C7
L_78288:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78289
L_78290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78291
.p2align 0x4
.long 0x10C8
L_78291:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78289:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_78159
.p2align 0x4
.long 0x10C3
L_78324:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78325
L_78332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_78333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78333
.p2align 0x4
.long 0x10C9
L_78333:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_78325:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_78167
L_78326:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_78327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
.long 0x107E
L_77760:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77761
L_77854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_77855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77855
.p2align 0x4
.long 0x1086
L_77855:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_77761:
	movslq 0x18(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_77763:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_77764
.p2align 0x4
.long 0x10A0
L_78007:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10A7
L_78035:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78036
L_78054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78055
.p2align 0x4
.long 0x10AD
L_78055:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78036:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78038:
	movq 0x0(%r14,%r15,8),%r13
L_78039:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78040:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x10B9
uses_1:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78094
L_78123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78124
.p2align 0x4
.long 0x10BE
L_78124:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78094:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77739
L_78096:
	movl %r13d,0x90(%rbp)
	movq $0x3FED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x10AE
L_78057:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78058
L_78084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78085
.p2align 0x4
.long 0x10B8
L_78085:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78058:
	movslq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78060:
	movq 0x0(%r14,%r15,8),%r13
L_78061:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78062:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x10C0
L_78129:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78130
L_78145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78146
.p2align 0x4
.long 0x10C2
L_78146:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78130:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78132:
	movq 0x0(%r14,%r15,8),%r13
L_78133:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78134:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x1094
L_77917:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77918
L_77932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_77933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77933
.p2align 0x4
.long 0x1097
L_77933:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_77918:
	movslq 0x30(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_77755
L_77920:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_77921:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_77922:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_77923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10D1
L_78271:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78272
L_78274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_78275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78275
.p2align 0x4
.long 0x10D2
L_78275:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_78272:
	movq 0x70(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x98(%rbp),%r15
	movl 0x94(%rbp),%ecx
L_78273:
	movq $0x3E29,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq %r11,%r15
	jmp L_78159
.p2align 0x4
.long 0x10D0
L_78303:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_78304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1431
.p2align 0x4
.long 0x10CD
L_78327:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78328
L_78329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_78330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78330
.p2align 0x4
.long 0x10C8
L_78330:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_78328:
	movq 0x80(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_78159
.p2align 0x4
.long 0x10A1
L_78008:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78009
L_78031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78032
.p2align 0x4
.long 0x10A6
L_78032:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78009:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_77755
L_78011:
	movq 0x0(%r15,%r13,8),%r14
L_78012:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_77758
L_78013:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x48(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10A8
L_78041:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78042
L_78052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78053
.p2align 0x4
.long 0x10AC
L_78053:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78042:
	movq $0x3A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
.long 0x10B9
L_78097:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10AF
L_78063:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_78064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x10C1
L_78135:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
.long 0x1095
L_77923:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77924
L_77930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_77931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77931
.p2align 0x4
.long 0x1096
L_77931:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_77924:
	movslq 0x30(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_77926:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r13
	movq %r13,%r15
	jmp L_77927
.p2align 0x4
.long 0xF46
L_78304:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movb 0x98(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78305
L_78314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_78315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78315
.p2align 0x4
.long 0x10D3
L_78315:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_78305:
	cmpb $0x0,0x90(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x94(%rbp)
	movq $0xA13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_405828
L_78306:
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_78307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_405828:
L_78311:
	movl 0x94(%rbp),%r11d
	testl %r11d,%r11d
	jz L_78167
L_78313:
	movq 0x88(%rbp),%r13
	movq 0x80(%rbp),%r14
	movq 0x78(%rbp),%r11
	xchgq %r11,%r15
	jmp L_78279
.p2align 0x4
.long 0x10A1
L_78014:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_77755
L_78016:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10A9
L_78043:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_78044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x713
L_78098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78099
L_78121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78122
.p2align 0x4
.long 0xA9F
L_78122:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78099:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_77755
L_78101:
	movq 0x0(%r15,%r13,8),%r14
L_78102:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_77758
L_78103:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x50(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10B0
L_78064:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78065
L_78082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_78083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78083
.p2align 0x4
.long 0x10B7
L_78083:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_78065:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27ED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x18(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x8E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x8(%r11)
	movq %r14,0x18(%r11)
	addq $0x30,%r12
	movq %r13,0x0(%r11)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r15,0x20(%r11)
	movq $0x3A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_78066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
.long 0x10C1
L_78136:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10D1
L_78307:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78308
L_78309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_78310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78310
.p2align 0x4
.long 0x10D2
L_78310:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_78308:
	movq 0x70(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x98(%rbp),%r15
	movl 0x94(%rbp),%ecx
	jmp L_78273
.p2align 0x4
.long 0x10A2
L_78017:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78018
L_78029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78030
.p2align 0x4
.long 0x10A5
L_78030:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78018:
	movslq 0x30(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnb L_77755
L_78020:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_78021:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78022:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10AA
L_78044:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78045
L_78050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78051
.p2align 0x4
.long 0x10AB
L_78051:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78045:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78047:
	movq 0x0(%r14,%r15,8),%r13
L_78048:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78049:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_77882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x1026
L_78104:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_77755
L_78106:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10B1
L_78066:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_78067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x10AA
L_78137:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78138
L_78143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78144
.p2align 0x4
.long 0x10AB
L_78144:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78138:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78140:
	movq 0x0(%r14,%r15,8),%r13
L_78141:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78142:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_77882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x10A3
L_78023:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78024
L_78027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78028
.p2align 0x4
.long 0x10A4
L_78028:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78024:
	movslq 0x20(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_77755
L_78026:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_77764
.p2align 0x4
.long 0x10BA
L_78107:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78108
L_78119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78120
.p2align 0x4
.long 0x10BD
L_78120:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78108:
	movslq 0x30(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_77755
L_78110:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_78111:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78112:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_78113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10B2
L_78067:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78068
L_78080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78081
.p2align 0x4
.long 0x10B6
L_78081:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78068:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_77755
L_78070:
	movq 0x0(%r14,%r15,8),%r13
L_78071:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_77758
L_78072:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_78073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x10BB
L_78113:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78114
L_78117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78118
.p2align 0x4
.long 0x10BC
L_78118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78114:
	movslq 0x30(%rbp),%r15
	cmpq 0x68(%rbp),%r15
	jnb L_77755
L_78116:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_77764
.p2align 0x4
.long 0x10B3
L_78073:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_405857
L_78074:
	jmp L_77764
.p2align 0x4
L_405857:
L_78075:
	movq 0x18(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
.long 0x10B4
L_78076:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78077
L_78078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78079
.p2align 0x4
.long 0x10B5
L_78079:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78077:
	movq $0x1D77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_77764
