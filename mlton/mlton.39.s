/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:52 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl foreach_6
.hidden foreach_6
foreach_6:
L_124911:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_124912
L_125193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_125194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125194
.p2align 0x4
.long 0x460
L_125194:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_124912:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_425587
L_124913:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425587:
L_124914:
	cmpl $0x0,0x10(%rbp)
	jl L_425671
L_124915:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1307:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425670
.p2align 0x4,,0x7
L_124916:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_425669
L_124918:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_425668
	cmpq $0x2,%r15
	je L_425667
L_124919:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1983,%rax
	cmpq $0xE,%rax
	ja L_425588
	jmp *jumpTable_265(,%rax,8)
.data
.p2align 0x4
jumpTable_265:
.quad L_425666,L_425653,L_425652,L_425651,L_425638,L_425637,L_425636,L_425623,L_425622,L_425621,L_425619,L_425618,L_425605,L_425604,L_425603
.text
.p2align 0x4
L_425588:
L_124920:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_425602
L_124921:
	movq $0x21B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_124922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425601
.p2align 0x4,,0x7
L_124923:
	movq $0x1301,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_425600
L_124925:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_425599
L_124926:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_124928:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425598
L_124944:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA1,%r11
	jne L_425597
L_124945:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_425594
L_124929:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_425593
L_124931:
	cmpq $0x1,%r15
	je L_425589
L_124932:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_124928
.p2align 0x4
L_425589:
L_124933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425592
.p2align 0x4,,0x7
L_124934:
	movl 0x18(%rbp),%ecx
L_124935:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_425591
L_124937:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_124939
L_124941:
	movl %ecx,0x0(%r15)
L_124939:
	movq $0x1B43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_124940:
	incl 0x14(%rbp)
	jmp loop_1307
.p2align 0x4
L_425591:
L_124936:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425592:
L_124942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_124943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_124943
.p2align 0x4
.long 0x1119
L_124943:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_124934
.p2align 0x4
L_425593:
L_124930:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425594:
L_124947:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_124948:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_124950
L_124951:
	movl %ecx,0x0(%r15)
L_124950:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425597:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_124929
.p2align 0x4
L_425598:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_124929
.p2align 0x4
L_425599:
L_124952:
	xorl %ecx,%ecx
	jmp L_124935
.p2align 0x4
L_425600:
L_124924:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425601:
L_124953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_124954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_124954
.p2align 0x4
.long 0x555
L_124954:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_124923
.p2align 0x4
L_425602:
L_124955:
	movq %r11,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_124956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_29
.p2align 0x4
L_425603:
L_125135:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_125136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_425604:
L_125134:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1553
.p2align 0x4
L_425605:
L_125108:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_124924
L_125109:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_425616
L_125110:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_125112:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125113
L_125126:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD72,%r13
	jne L_125113
L_125127:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_425611
L_125113:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_124930
L_125114:
	cmpq $0x1,%r15
	je L_425606
L_125115:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125112
.p2align 0x4
L_425606:
L_125116:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425609
.p2align 0x4,,0x7
L_125117:
	movl 0x28(%rbp),%ecx
L_125118:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125119:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125121
L_125123:
	movl %ecx,0x0(%r15)
L_125121:
	movq $0x1343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_125122:
	movb $0x1,0x0(%r15)
	jmp L_124940
.p2align 0x4
L_425609:
L_125124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_125125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125125
.p2align 0x4
.long 0x5E1
L_125125:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_125117
.p2align 0x4
L_425611:
L_125129:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125130:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_425612
L_125132:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_125122
.p2align 0x4
L_425612:
L_125131:
	movq %r13,%r15
	jmp L_125122
.p2align 0x4
L_425616:
L_125133:
	xorl %ecx,%ecx
	jmp L_125118
.p2align 0x4
L_425618:
L_125107:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1552
.p2align 0x4
L_425619:
L_125097:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_425620
L_125103:
	movq %r14,0x28(%rbp)
	movq 0x58(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x50(%r11),%r13
	movq 0x48(%r11),%r10
	movq 0x40(%r11),%r9
	movq 0x38(%r11),%r8
	movq 0x30(%r11),%rsp
	movq 0x28(%r11),%rsi
	movq 0x20(%r11),%rdi
	movq 0x18(%r11),%rdx
	movq 0x10(%r11),%rcx
	movq 0x8(%r11),%rbx
	movq $0x8C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	movq %r9,0x20(%r11)
	movq %r8,0x28(%r11)
	movq %rsp,0x30(%r11)
	movq %rsi,0x38(%r11)
	movq %rdi,0x40(%r11)
	movq %rdx,0x48(%r11)
	movq %rcx,0x50(%r11)
	movq %rbx,0x58(%r11)
	addq $0x68,%r12
	movl $0x0,0x4(%r11)
	movq %r11,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_125104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_425620:
L_125098:
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_125099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_425621:
L_125096:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_425622:
L_125095:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_425623:
L_125070:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq $0x1143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq $0x2115,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x18(%rbp)
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_124924
L_125071:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_425634
L_125072:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_125074:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425633
L_125087:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6A,%r11
	jne L_425632
L_125088:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x28)(%rip)
	je L_425629
L_125075:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_124930
L_125076:
	cmpq $0x1,%r15
	je L_425624
L_125077:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x28)(%rip),%r14
	jmp L_125074
.p2align 0x4
L_425624:
L_125078:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425627
.p2align 0x4,,0x7
L_125079:
	movl 0x30(%rbp),%ecx
L_125080:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125081:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125083
L_125084:
	movl %ecx,0x0(%r15)
L_125083:
	movq $0x1AD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_124940
.p2align 0x4
L_425627:
L_125085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_125086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125086
.p2align 0x4
.long 0xC57
L_125086:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_125079
.p2align 0x4
L_425629:
L_125090:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125091:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_124950
L_125093:
	movl %ecx,0x0(%r15)
	jmp L_124950
.p2align 0x4
L_425632:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_125075
.p2align 0x4
L_425633:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_125075
.p2align 0x4
L_425634:
L_125094:
	xorl %ecx,%ecx
	jmp L_125080
.p2align 0x4
L_425636:
L_125069:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_425637:
L_125068:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_425638:
L_125043:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x0(%r9),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_124924
L_125044:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_425649
L_125045:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_125047:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425648
L_125060:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6E,%r11
	jne L_425647
L_125061:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_425644
L_125048:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_124930
L_125049:
	cmpq $0x1,%r15
	je L_425639
L_125050:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_125047
.p2align 0x4
L_425639:
L_125051:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425642
.p2align 0x4,,0x7
L_125052:
	movl 0x30(%rbp),%ecx
L_125053:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125054:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125056
L_125057:
	movl %ecx,0x0(%r15)
L_125056:
	movq $0x1ADD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_124940
.p2align 0x4
L_425642:
L_125058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_125059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125059
.p2align 0x4
.long 0xC57
L_125059:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_125052
.p2align 0x4
L_425644:
L_125063:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125064:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_124950
L_125066:
	movl %ecx,0x0(%r15)
	jmp L_124950
.p2align 0x4
L_425647:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_125048
.p2align 0x4
L_425648:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_125048
.p2align 0x4
L_425649:
L_125067:
	xorl %ecx,%ecx
	jmp L_125053
.p2align 0x4
L_425651:
L_125042:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1552
.p2align 0x4
L_425652:
L_125040:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq $0x3D8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	addq $0x28,%rbp
	leaq (L_125041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425653:
L_125014:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_124924
L_125015:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_425664
L_125016:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_125018:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125019
L_125032:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD72,%r13
	jne L_125019
L_125033:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_425659
L_125019:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_124930
L_125020:
	cmpq $0x1,%r15
	je L_425654
L_125021:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125018
.p2align 0x4
L_425654:
L_125022:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425657
.p2align 0x4,,0x7
L_125023:
	movl 0x28(%rbp),%ecx
L_125024:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125025:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125027
L_125029:
	movl %ecx,0x0(%r15)
L_125027:
	movq $0x1343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_125028:
	movb $0x1,0x0(%r15)
	jmp L_124940
.p2align 0x4
L_425657:
L_125030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_125031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125031
.p2align 0x4
.long 0x5E1
L_125031:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_125023
.p2align 0x4
L_425659:
L_125035:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_124936
L_125036:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_425660
L_125038:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_125028
.p2align 0x4
L_425660:
L_125037:
	movq %r13,%r15
	jmp L_125028
.p2align 0x4
L_425664:
L_125039:
	xorl %ecx,%ecx
	jmp L_125024
.p2align 0x4
L_425666:
L_124960:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_124961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_425667:
L_125189:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_124940
.p2align 0x4
L_425668:
L_125188:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_124940
.p2align 0x4
L_425669:
L_124917:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425670:
L_125190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_125191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125191
.p2align 0x4
.long 0x45E
L_125191:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_124916
.p2align 0x4
L_425671:
L_125192:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_124956:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124957
L_124958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_124959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_124959
.p2align 0x4
.long 0xC59
L_124959:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_124957:
	movq $0xFB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	jmp L_124922
.p2align 0x4
.long 0x527
L_125136:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_125137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
L_124976:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_124940
.p2align 0x4
.long 0x556
L_125104:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_124940
L_125101:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_124930
L_125102:
	movl %r14d,0x0(%r15)
	jmp L_124940
.p2align 0x4
.long 0x556
L_125099:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10DC,%r13
	je L_125101
	jmp L_124940
.p2align 0x4
.long 0x556
L_125041:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_124940
.p2align 0x4
.long 0x527
L_124961:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_124962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x527
L_125137:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_125138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x527
L_124962:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_124963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x541
L_125138:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_125139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
.long 0x541
L_124963:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_124964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
.long 0x572
L_125139:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	je L_425677
L_125140:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_425677:
L_125156:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B4
L_124964:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	je L_425678
L_124965:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_124966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_425678:
L_124982:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_124983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x543
L_125141:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125142
L_125154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125155
.p2align 0x4
.long 0x547
L_125155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125142:
	movq 0x18(%rbp),%r15
L_125143:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125144:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_124930
L_125145:
	cmpq $0x1,%r15
	je L_425679
L_125146:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125144
.p2align 0x4
L_425679:
L_125147:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125148
L_125152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_125153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125153
.p2align 0x4
.long 0x56A
L_125153:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_125148:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_425680
L_125149:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
x_425:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_125150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_425680:
L_125151:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_425
.p2align 0x4
.long 0x529
L_125157:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_425684
L_125158:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_425684:
L_125183:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1AFD
L_124966:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124967
L_124980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_124981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_124981
.p2align 0x4
.long 0x1AFE
L_124981:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_124967:
	movq 0x20(%rbp),%r15
L_124968:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_124969:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_124930
L_124970:
	cmpq $0x1,%r15
	je L_425685
L_124971:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_124969
.p2align 0x4
L_425685:
L_124972:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124973
L_124978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_124979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_124979
.p2align 0x4
.long 0x5E1
L_124979:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_124973:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_425686
L_124974:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_424:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_124975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_425686:
L_124977:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_424
.p2align 0x4
.long 0x585
L_124983:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_425690
L_124984:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_124985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_425690:
L_125009:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x569
L_125150:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x57F
L_125159:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_125160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x124E
L_125184:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125185
L_125186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125187
.p2align 0x4
.long 0x590
L_125187:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125185:
	movq 0x20(%rbp),%r15
L_125168:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_125169:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_124930
L_125170:
	cmpq $0x1,%r15
	je L_425691
L_125171:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125169
.p2align 0x4
L_425691:
L_125172:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125173
L_125176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125177
.p2align 0x4
.long 0xF39
L_125177:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125173:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_425692
L_125174:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_125143
.p2align 0x4
L_425692:
L_125175:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_125143
.p2align 0x4
.long 0x556
L_124975:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_124976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x57F
L_124985:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_124986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x5AA
L_125010:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125011
L_125012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125013
.p2align 0x4
.long 0x548
L_125013:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125011:
	movq 0x20(%rbp),%r15
L_124994:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_124995:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_124930
L_124996:
	cmpq $0x1,%r15
	je L_425696
L_124997:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_124995
.p2align 0x4
L_425696:
L_124998:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124999
L_125002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125003
.p2align 0x4
.long 0x1AFE
L_125003:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_124999:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_425697
L_125000:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_124968
.p2align 0x4
L_425697:
L_125001:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_124968
.p2align 0x4
.long 0x5BA
L_125160:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125161
L_125181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125182
.p2align 0x4
.long 0x530
L_125182:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_125161:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125162:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_124930
L_125163:
	cmpq $0x1,%r14
	je L_425701
L_125164:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125162
.p2align 0x4
L_425701:
L_125165:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125166
L_125179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125180
.p2align 0x4
.long 0x573
L_125180:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125166:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_425702
L_125167:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_125168
.p2align 0x4
L_425702:
L_125178:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_125168
.p2align 0x4
.long 0x599
L_124986:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124987
L_125007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125008
.p2align 0x4
.long 0x5BB
L_125008:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_124987:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_124988:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_124930
L_124989:
	cmpq $0x1,%r14
	je L_425706
L_124990:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_124988
.p2align 0x4
L_425706:
L_124991:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_124992
L_125005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125006
.p2align 0x4
.long 0x573
L_125006:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_124992:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_425707
L_124993:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_124994
.p2align 0x4
L_425707:
L_125004:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_124994
.text
.p2align 0x4
.globl visit_12
.hidden visit_12
visit_12:
L_125195:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_125196
L_125264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_125265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125265
.p2align 0x4
.long 0x4DF
L_125265:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_125196:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_125197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x4E4
L_125197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125198
L_125262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_125263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125263
.p2align 0x4
.long 0xBC1
L_125263:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_125198:
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_125200
L_125201:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_425714
L_125202:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_425713
L_125204:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	imulq $0x30,%r13
	movq 0x0(%r14,%r13,1),%rsp
	movq %rsp,0x30(%rbp)
	imulq $0x30,%r11
	movq 0x8(%r14,%r11,1),%r13
	movq %r13,0x38(%rbp)
	imulq $0x30,%r10
	movq 0x10(%r14,%r10,1),%r13
	movq %r13,0x40(%rbp)
	imulq $0x30,%r9
	movq 0x18(%r14,%r9,1),%r13
	movq %r13,0x48(%rbp)
	imulq $0x30,%r8
	movq 0x20(%r14,%r8,1),%r13
	movq %r13,0x50(%rbp)
	imulq $0x30,%r15
	movq 0x28(%r14,%r15,1),%r11
	movq %r11,0x58(%rbp)
	movq $0x7C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x3653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r15,%r11
	jne L_425712
L_125207:
	movq $0x437B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x341F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_125208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_425712:
L_125206:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425713:
L_125200:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425714:
L_125261:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1236
L_125208:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x70(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_425718
L_125209:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_125210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125210
.p2align 0x4
.long 0x1238
L_125210:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1308:
	cmpq 0x70(%rbp),%r15
	jnl L_425717
L_125259:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1308
.p2align 0x4
L_425717:
L_125211:
	movq %r14,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_125212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
L_425718:
L_125249:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1AFF
L_125212:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125213
L_125257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_125258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125258
.p2align 0x4
.long 0x1B07
L_125258:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_125213:
	movq $0x341D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_125214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x1B00
L_125214:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r13
	je L_425733
L_125215:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125216:
	incl %ecx
	jo L_125217
L_125218:
	cmpq $0x1,%r15
	je L_425720
L_125219:
	movq 0x8(%r15),%r15
	jmp L_125216
.p2align 0x4
L_425720:
L_125220:
L_125221:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_425731
L_125222:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125249
L_125223:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_125224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125224
.p2align 0x4
.long 0x1B01
L_125224:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
L_125225:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1309:
	cmpq 0x60(%rbp),%r15
	jnl L_425722
L_125251:
	cmpq $0x1,%r14
	je L_425721
L_125252:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x80(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1309
.p2align 0x4
L_425721:
L_125253:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425722:
L_125226:
	movq 0x80(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r14,%rdx
	jne L_125206
L_125228:
	decl %r13d
	movl %r13d,0x68(%rbp)
	jo L_125217
L_125229:
	testq %rdx,%rdx
	jz L_425727
L_125230:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125249
L_125231:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_125232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125232
.p2align 0x4
.long 0x1B02
L_125232:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_125233:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1310:
	cmpq 0x60(%rbp),%r15
	jnl L_425724
L_125246:
	movl %r15d,%r14d
	movl 0x68(%rbp),%r13d
	subl %r14d,%r13d
	jo L_425723
L_125247:
	movslq %r13d,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1310
.p2align 0x4
L_425723:
L_125217:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425724:
L_125234:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125235
L_125244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_125245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125245
.p2align 0x4
.long 0x1B06
L_125245:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_125235:
	movq 0x88(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x23A5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x364D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x341F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_125236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_425727:
L_125250:
	movq (globalObjptr+0xF90)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_125233
.p2align 0x4
L_425731:
L_125255:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_125225
.p2align 0x4
L_425733:
L_125256:
	xorl %ecx,%ecx
	jmp L_125221
.p2align 0x4
.long 0x1B03
L_125236:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x70(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_125237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125237
.p2align 0x4
.long 0x1B04
L_125237:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1311:
	cmpq 0x70(%rbp),%r15
	jnl L_425734
L_125243:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1311
.p2align 0x4
L_425734:
L_125238:
	movq %r14,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_125239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
.long 0x16CA
L_125239:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125240
L_125241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125242
.p2align 0x4
.long 0x1B05
L_125242:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125240:
	movq $0x341D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_0
.text
.p2align 0x4
.globl foreachi_0
.hidden foreachi_0
foreachi_0:
L_125266:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_125267
L_128110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128111
.p2align 0x4
.long 0x45D
L_128111:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_125267:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_125270:
	cmpl $0x0,%r13d
	jl L_125431
L_125271:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_1312:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425929
.p2align 0x4,,0x7
L_125272:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_425928
L_125274:
	movslq %r15d,%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_128103
	cmpq $0x2,%r15
	je L_425926
L_125275:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19FA,%rax
	cmpq $0x2B,%rax
	ja L_425736
	jmp *jumpTable_266(,%rax,8)
.data
.p2align 0x4
jumpTable_266:
.quad L_425925,L_425904,L_425878,L_425877,L_425864,L_425863,L_425861,L_425860,L_425859,L_425858,L_425857,L_425856,L_425855,L_425854,L_425827,L_425826,L_425825,L_425824,L_425823,L_425822,L_425821,L_425820,L_425807,L_425805,L_425804,L_425800,L_425799,L_425798,L_425785,L_425784,L_425783,L_425782,L_425781,L_425780,L_425769,L_425768,L_425767,L_425763,L_425762,L_425749,L_425748,L_425745,L_425744,L_425742
.text
.p2align 0x4
L_425736:
L_125276:
	movq 0x0(%rbp),%r15
	movq 0x78(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0xA8(%rbp)
	cmpq $0x1,%r11
	je L_125367
	cmpq $0x2,%r11
	je L_425740
L_125277:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	jne L_425739
L_125278:
	movl 0xC(%r11),%r15d
	testl %r15d,%r15d
	jnz L_425738
L_125279:
	cmpb $0x7,0x0(%r13)
	jne L_425737
.p2align 0x4,,0x7
L_125367:
	incl 0x24(%rbp)
	jmp loop_1312
.p2align 0x4
L_425737:
	movq %r14,%r15
L_125281:
	movl $0x0,0x30(%rbp)
doit_24:
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_125282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
L_425738:
L_125573:
	movl $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp doit_24
.p2align 0x4
L_425739:
L_125574:
	movl $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp doit_24
.p2align 0x4
L_425740:
	movq %r14,%r15
	jmp L_125281
.p2align 0x4
L_425742:
L_126780:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xD8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xC8(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0xC0(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0xB8(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0xB0(%r14),%r10
	movq %r10,0x58(%rbp)
	movq 0xA8(%r14),%r10
	movq %r10,0x60(%rbp)
	movq 0xA0(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x90(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x58(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x50(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x48(%r14),%r10
	movq %r10,0x88(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0x90(%rbp)
	movq 0x38(%r14),%r10
	movq %r10,0x98(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0xA0(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0xB0(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0xB8(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0xC0(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0xC8(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0xF0(%rbp)
	movq 0x20(%r15),%r10
	movq %r10,0xF8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x100(%rbp)
	cmpq %r15,0x10(%r13)
	jne L_425743
L_128065:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x110(%rbp)
	movq %r11,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_128066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
L_425743:
L_126782:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
L_425744:
L_126778:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_126779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425745:
L_126712:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x109A,%r15
	je L_425747
	cmpq $0x109D,%r15
	je L_425746
	jmp L_125367
.p2align 0x4
L_425746:
L_126723:
	movq %r11,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_126724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_425747:
L_126713:
	movq %r11,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_126714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_425748:
L_126693:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_126694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_425749:
L_126668:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1303,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x38(%rbp)
	movq %r10,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x20,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_425761
L_126669:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_425760
L_126670:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_126672:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425759
L_126685:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD9D,%r11
	jne L_425758
L_126686:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_425755
L_126673:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_425754
L_126674:
	cmpq $0x1,%r15
	je L_425750
L_126675:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_126672
.p2align 0x4
L_425750:
L_126676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425753
.p2align 0x4,,0x7
L_126677:
	movl 0x30(%rbp),%ecx
L_126678:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_425752
L_126679:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126681
L_126682:
	movl %ecx,0x0(%r15)
L_126681:
	movq $0x1B3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_425752:
L_125363:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425753:
L_126683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126684
.p2align 0x4
.long 0x184D
L_126684:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_126677
.p2align 0x4
L_425754:
L_125327:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425755:
L_126688:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126689:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_126691:
	movl %ecx,0x0(%r15)
L_125377:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425758:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126673
.p2align 0x4
L_425759:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126673
.p2align 0x4
L_425760:
L_126692:
	xorl %ecx,%ecx
	jmp L_126678
.p2align 0x4
L_425761:
L_125352:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425762:
L_126621:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_126622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_425763:
L_126614:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_425766
L_126616:
	movq 0x0(%r15,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109E,%r15
	jne L_425765
L_126618:
	movq 0x8(%r14),%r11
	movl 0x14(%r11),%r9d
	testl %r9d,%r9d
	jnz L_125367
	movq %r10,%r15
L_126617:
	movq %r14,0x38(%rbp)
	movq $0x3647,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x14B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq $0x16,0x0(%r15)
	movq $0xD,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_425765:
	movq %r10,%r15
	jmp L_126617
.p2align 0x4
L_425766:
L_125307:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425767:
L_126593:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_425768:
L_126586:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_126587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_425769:
L_126291:
	movq 0x0(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x98(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xA0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109E,%r15
	je L_425770
L_126292:
	movq %r14,0x30(%rbp)
L_126293:
	movq 0xF0(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	movq $0x174B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	addq $0x68,%r12
	movl 0xA0(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x90(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x88(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x80(%rbp),%r10
	movq %r10,0x30(%r14)
	movq 0x78(%rbp),%r9
	movq %r9,0x38(%r14)
	movq 0x70(%rbp),%r8
	movq %r8,0x40(%r14)
	movq 0x68(%rbp),%r8
	movq %r8,0x48(%r14)
	movq 0x60(%rbp),%rsp
	movq %rsp,0x50(%r14)
	movq 0x58(%rbp),%rsp
	movq %rsp,0x58(%r14)
	movq $0x174D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x30,%r12
	movq %r11,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x174F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r8,0x10(%r15)
	movq $0x1751,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x120(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x1753,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x128(%rbp)
	addq $0x28,%r12
	movl %eax,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x138(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_425770:
L_126548:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x110(%rbp)
	movl 0x1C(%r15),%r13d
	testl %r13d,%r13d
	jnz L_425771
L_126549:
	movq %r14,0x30(%rbp)
	jmp L_126293
.p2align 0x4
L_425771:
L_126550:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x118(%rbp)
	cmpq %r14,%rdx
	jne L_425779
L_126552:
	testq %rdx,%rdx
	jz L_425778
L_126553:
	cmpq $0x7FFFFFFF,%rdx
	ja L_425777
L_126554:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126555
.p2align 0x4
.long 0x1BB1
L_126555:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
L_126556:
	movq $0x0,0x128(%rbp)
.p2align 0x4,,0x7
loop_1324:
	movq 0x128(%rbp),%r14
	cmpq 0x118(%rbp),%r14
	jnl L_425775
L_126561:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x110(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_425773
L_126562:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_425772
L_126565:
	movq %r13,%r15
.p2align 0x4,,0x7
L_126564:
	movq 0x120(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x128(%rbp)
	jmp loop_1324
.p2align 0x4
L_425772:
	movq %r13,%r15
	jmp L_126564
.p2align 0x4
L_425773:
L_126566:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_425774
L_126567:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_126568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_425774:
L_126583:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425775:
L_126557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126558
L_126559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_126560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126560
.p2align 0x4
.long 0x1BB2
L_126560:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_126558:
	movq 0x120(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x108(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	jmp L_126293
.p2align 0x4
L_425777:
L_125434:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425778:
L_126585:
	movq (globalObjptr+0xE40)(%rip),%r15
	movq %r15,0x120(%rbp)
	jmp L_126556
.p2align 0x4
L_425779:
L_125269:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425780:
L_126228:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_126229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_425781:
L_126189:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_126190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_104
.p2align 0x4
L_425782:
L_126187:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0xCC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x38(%rbp)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_126188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_104
.p2align 0x4
L_425783:
L_126149:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_126150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_425784:
L_126140:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x60(%rbp)
	movq $0x331B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_126141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_425785:
L_126107:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_125352
L_126108:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_425796
L_126109:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_126111:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425795
L_126132:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB5,%r11
	jne L_425794
L_126133:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_425791
L_126112:
	incl %ecx
	movl %ecx,0x60(%rbp)
	jo L_125327
L_126113:
	cmpq $0x1,%r15
	je L_425786
L_126114:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_126111
.p2align 0x4
L_425786:
L_126115:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126116
L_126130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126131
.p2align 0x4
.long 0x1B51
L_126131:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126116:
	movl 0x60(%rbp),%ecx
L_126117:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126118:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126120
L_126129:
	movl %ecx,0x0(%r15)
L_126120:
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x330F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_126121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_425791:
L_126135:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126136:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_126138:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_425794:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126112
.p2align 0x4
L_425795:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126112
.p2align 0x4
L_425796:
L_126139:
	xorl %ecx,%ecx
	jmp L_126117
.p2align 0x4
L_425798:
L_126099:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq $0xC93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x10(%r15)
	movq %r11,0x68(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_425799:
L_126098:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x3643,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0xF,0x0(%r14)
	movq $0x9,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_425800:
L_126093:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r11
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_125327
L_126094:
	movl %r15d,0x0(%r14)
	movl 0x0(%r13),%r15d
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r14
	jne L_125269
L_126096:
	addl %r15d,%r10d
	jo L_125327
L_126097:
	movl %r10d,0x0(%r13)
	jmp L_125367
.p2align 0x4
L_425804:
L_126084:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_23
.p2align 0x4
L_425805:
L_126079:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x109C,%r15
	jne L_125367
L_126080:
	movq %r14,0x38(%rbp)
	movq %r13,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_126081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_425807:
L_126054:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1351,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x38(%rbp)
	movq %r10,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x20,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_125352
L_126055:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_425818
L_126056:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_126058:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425817
L_126071:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD69,%r11
	jne L_425816
L_126072:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_425813
L_126059:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_125327
L_126060:
	cmpq $0x1,%r15
	je L_425808
L_126061:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_126058
.p2align 0x4
L_425808:
L_126062:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425811
.p2align 0x4,,0x7
L_126063:
	movl 0x30(%rbp),%ecx
L_126064:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126065:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126067
L_126068:
	movl %ecx,0x0(%r15)
L_126067:
	movq $0x1AD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_425811:
L_126069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126070
.p2align 0x4
.long 0x184D
L_126070:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_126063
.p2align 0x4
L_425813:
L_126074:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126075:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_126077:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_425816:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126059
.p2align 0x4
L_425817:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_126059
.p2align 0x4
L_425818:
L_126078:
	xorl %ecx,%ecx
	jmp L_126064
.p2align 0x4
L_425820:
L_126047:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_126048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_425821:
L_126045:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_126046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425822:
L_126044:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq $0x3641,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0xE,0x0(%r14)
	movq $0x7,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_425823:
L_126042:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3DEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_126043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425824:
L_126033:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_23
.p2align 0x4
L_425825:
L_126032:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_425826:
L_126000:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_425827:
L_125944:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x38(%rbp)
	movq 0x0(%r9),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_125352
L_125945:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_425852
L_125946:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x30(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_125948:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425851
L_125989:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_425850
L_125990:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_425846
L_125949:
	movl 0x30(%rbp),%r11d
	incl %r11d
	movl %r11d,0x34(%rbp)
	jo L_125327
L_125950:
	cmpq $0x1,%r15
	je L_425828
L_125951:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x30(%rbp)
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_125948
.p2align 0x4
L_425828:
L_125952:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425844
.p2align 0x4,,0x7
L_125953:
	movl 0x34(%rbp),%ecx
L_125954:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125955:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125957
L_125986:
	movl %ecx,0x0(%r15)
L_125957:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_125958:
	cmpb $0x2,0x0(%r15)
	je L_125367
L_125959:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_125352
L_125960:
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_425839
L_125961:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_125963:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425838
L_125976:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_425837
L_125977:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_425834
L_125964:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_125965:
	cmpq $0x1,%r15
	je L_425829
L_125966:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_125963
.p2align 0x4
L_425829:
L_125967:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425832
.p2align 0x4,,0x7
L_125968:
	movl 0x28(%rbp),%ecx
L_125969:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125970:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125972
L_125973:
	movl %ecx,0x0(%r15)
L_125972:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_125367
.p2align 0x4
L_425832:
L_125974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125975
.p2align 0x4
.long 0x1B4D
L_125975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_125968
.p2align 0x4
L_425834:
L_125979:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125980:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_425835
L_125983:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_125982:
	movb $0x3,0x0(%r15)
	jmp L_125367
.p2align 0x4
L_425835:
L_125981:
	movq %r11,%r15
	jmp L_125982
.p2align 0x4
L_425837:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_125964
.p2align 0x4
L_425838:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_125964
.p2align 0x4
L_425839:
L_125984:
	xorl %ecx,%ecx
	jmp L_125969
.p2align 0x4
L_425844:
L_125987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125988
.p2align 0x4
.long 0x184D
L_125988:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_125953
.p2align 0x4
L_425846:
L_125992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425849
.p2align 0x4,,0x7
L_125993:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_125994:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_425847
L_125995:
	movq 0x48(%rbp),%r15
	jmp L_125958
.p2align 0x4
L_425847:
L_125996:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_125958
.p2align 0x4
L_425849:
L_125997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125998
.p2align 0x4
.long 0xFAB
L_125998:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_125993
.p2align 0x4
L_425850:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_125949
.p2align 0x4
L_425851:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_125949
.p2align 0x4
L_425852:
L_125999:
	xorl %ecx,%ecx
	jmp L_125954
.p2align 0x4
L_425854:
L_125943:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x307B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq $0x305B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xF1F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_425855:
L_125877:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_125878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_425856:
L_125868:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x330B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_125869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_425857:
L_125803:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_104
.p2align 0x4
L_425858:
L_125765:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
L_425859:
L_125763:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_125764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425860:
L_125752:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_125753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_425861:
L_125749:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r9
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_125307
L_125751:
	movq %r9,0x38(%rbp)
	movq 0x0(%r14,%r15,8),%r9
	movq $0x3639,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x3,0x0(%r14)
	movq $0x2,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_425863:
L_125742:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_125743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_425864:
L_125717:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x7B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r10w
	movzwl %r10w,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x7B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movw $0x0,%r9w
	movzwl %r9w,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x7B7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x20,%r12
	movq $0x1,0x10(%r9)
	movq $0xA4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0xA51,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x2,0x0(%r8)
	movq $0xA53,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r10,0x8(%rsp)
	movq %r14,0x10(%rsp)
	addq $0x20,%r12
	movq $0x7B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r10w
	movzwl %r10w,%r8d
	movl %r8d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x7B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movw $0x0,%r8w
	movzwl %r8w,%esi
	movl %esi,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x7B7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r14,0x8(%r8)
	addq $0x20,%r12
	movq $0x1,0x10(%r8)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA55,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	movq %r14,0x0(%r10)
	movq %r8,0x8(%r10)
	movq %rsp,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x30,%r12
	movq %r11,0x20(%r10)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_125352
L_125718:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_425875
L_125719:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_125721:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_425874
L_125734:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD9C,%r11
	jne L_425873
L_125735:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_425870
L_125722:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_125327
L_125723:
	cmpq $0x1,%r15
	je L_425865
L_125724:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_125721
.p2align 0x4
L_425865:
L_125725:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425868
.p2align 0x4,,0x7
L_125726:
	movl 0x30(%rbp),%ecx
L_125727:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125728:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125730
L_125731:
	movl %ecx,0x0(%r15)
L_125730:
	movq $0x1B39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_425868:
L_125732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125733
.p2align 0x4
.long 0x184D
L_125733:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_125726
.p2align 0x4
L_425870:
L_125737:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125738:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_125740:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_425873:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_125722
.p2align 0x4
L_425874:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_125722
.p2align 0x4
L_425875:
L_125741:
	xorl %ecx,%ecx
	jmp L_125727
.p2align 0x4
L_425877:
L_125715:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_125716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_425878:
L_125663:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1099,%r13
	jne L_425903
L_125711:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_125269
L_125713:
	incl %r9d
	jo L_125327
L_125714:
	movl %r9d,0x30(%rbp)
	movq %r11,%r15
L_125665:
	cmpb $0x7,0x0(%r14)
	je L_425899
L_125666:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_125269
L_125668:
	cmpl $0x0,%ecx
	jl L_425897
L_125669:
	movl $0x0,0x34(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1318:
	cmpl %ecx,%ebx
	jnl L_425882
L_125700:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
L_125701:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_125702
L_125705:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1091,%r14
	jne L_425879
L_125706:
	movl 0x34(%rbp),%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
L_125704:
	movl %ecx,0x34(%rbp)
	incl %ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1318
.p2align 0x4
L_425879:
L_125702:
	movl 0x34(%rbp),%r14d
	incl %r14d
	jo L_125327
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_125704
.p2align 0x4
L_425882:
L_125670:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425896
.p2align 0x4,,0x7
L_125671:
	movl 0x34(%rbp),%ecx
L_125672:
	addl 0x30(%rbp),%ecx
	jo L_125327
L_125673:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	addq $0x10,%r12
	movl $0x0,0x4(%r14)
	movq $0xFE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xD09,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x23C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_125674:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_425893
L_125675:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_125677:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125678
L_125690:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC2,%r13
	jne L_125678
L_125691:
	movq 0x0(%r14),%r13
	cmpq %r13,0x38(%rbp)
	je L_425888
L_125678:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_125679:
	cmpq $0x1,%r15
	je L_425883
L_125680:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125677
.p2align 0x4
L_425883:
L_125681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425886
.p2align 0x4,,0x7
L_125682:
	movl 0x28(%rbp),%ecx
L_125683:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125684:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125686
L_125687:
	movl %ecx,0x0(%r15)
L_125686:
	movq $0x1985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_425886:
L_125688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_125689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125689
.p2align 0x4
.long 0x1B25
L_125689:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_125682
.p2align 0x4
L_425888:
L_125693:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125694:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_125696:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_425893:
L_125697:
	xorl %ecx,%ecx
	jmp L_125683
.p2align 0x4
L_425896:
L_125698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125699
.p2align 0x4
.long 0xF38
L_125699:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_125671
.p2align 0x4
L_425897:
L_125431:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425899:
L_125708:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_125269
	jmp L_125672
.p2align 0x4
L_425903:
L_125664:
	movl $0x1,0x30(%rbp)
	movq %r11,%r15
	jmp L_125665
.p2align 0x4
L_425904:
L_125612:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	jne L_125367
L_125613:
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
L_125614:
	movq %r14,%r11
	andq $0x3,%r11
	jz L_425923
L_125615:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_125352
L_125616:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_425921
L_125617:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movl $0x0,0x48(%rbp)
	movq %r9,%r15
	movq %r14,%r13
	movq %r11,%r14
.p2align 0x4,,0x7
L_125619:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_425920
L_125650:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA1,%r11
	jne L_425919
L_125651:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_425915
L_125620:
	movl 0x48(%rbp),%r11d
	incl %r11d
	movl %r11d,0x4C(%rbp)
	jo L_125327
L_125621:
	cmpq $0x1,%r15
	je L_425905
L_125622:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x48(%rbp)
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_125619
.p2align 0x4
L_425905:
L_125623:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425913
.p2align 0x4,,0x7
L_125624:
	movl 0x4C(%rbp),%ecx
L_125625:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125626:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125628
L_125647:
	movl %ecx,0x0(%r15)
L_125628:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_125629:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_125636
L_125630:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_125631:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_125367
L_125632:
	cmpq $0x1,%r14
	je L_425906
L_125633:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125631
.p2align 0x4
L_425906:
L_125634:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425908
.p2align 0x4,,0x7
L_125636:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_125367
L_125637:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_125638:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_125639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp returnTo_0
.p2align 0x4
L_425908:
L_125643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125644
.p2align 0x4
.long 0x5AC
L_125644:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_125636
.p2align 0x4
L_425913:
L_125648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125649
.p2align 0x4
.long 0x1B23
L_125649:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_125624
.p2align 0x4
L_425915:
L_125653:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425918
.p2align 0x4,,0x7
L_125654:
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_125655:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_425916
L_125656:
	movq 0x50(%rbp),%r15
	jmp L_125629
.p2align 0x4
L_425916:
L_125657:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_125629
.p2align 0x4
L_425918:
L_125658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_125659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125659
.p2align 0x4
.long 0x1B24
L_125659:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_125654
.p2align 0x4
L_425919:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_125620
.p2align 0x4
L_425920:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_125620
.p2align 0x4
L_425921:
L_125660:
	xorl %ecx,%ecx
	jmp L_125625
.p2align 0x4
L_425923:
L_125661:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp returnTo_0
.p2align 0x4
L_425925:
L_125577:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (x_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_425926:
L_128103:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x2,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_128104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_425928:
L_125273:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_425929:
L_128107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128108
.p2align 0x4
.long 0x496
L_128108:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_125272
.p2align 0x4
.long 0x1B08
L_125282:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_425974
L_125284:
	movq 0xA8(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_125285
L_125527:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	jne L_425972
L_125528:
	movl $0x1,0x30(%rbp)
	movq $0x1,%r15
L_125529:
	cmpq $0x1,%r15
	je L_425971
L_125530:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_125531:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425970
.p2align 0x4,,0x7
L_125532:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_425933
L_125533:
	movq %r15,0xB0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_125531
.p2align 0x4
L_425933:
L_125286:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	cmpq $0x1,%r15
	je L_425969
L_125287:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_125288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425968
.p2align 0x4,,0x7
L_125289:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_125296
L_125290:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
.p2align 0x4,,0x7
L_125291:
	cmpl 0xB0(%rbp),%ecx
	je L_425965
L_125292:
	cmpq $0x1,%r15
	je L_425934
L_125293:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_125291
.p2align 0x4
L_425934:
L_125294:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425964
.p2align 0x4,,0x7
L_125296:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_425935
L_125297:
	movq %r15,0xC0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_125288
.p2align 0x4
L_425935:
L_125298:
	movq %r15,0x28(%rbp)
L_125299:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_425963
L_125300:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_125301:
	xorl %ecx,%ebx
	cmpq $0x1,%r15
	je L_425936
L_125302:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_125301
.p2align 0x4
L_425936:
L_125303:
	movl %ebx,%ecx
L_125304:
	andl 0x34(%rbp),%ecx
	cmpl $0x0,%ecx
	jl L_125327
L_125305:
	movslq %ecx,%r15
	movq 0xA8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_125307
L_125308:
	movq 0x0(%r14,%r15,8),%r14
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
loop_1313:
	movq 0xA8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0xB0(%rbp)
	cmpq $0x1,%r10
	je L_425959
L_125309:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10DD,%r15
	je L_425940
L_125503:
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r15
	movl 0x0(%r10),%ecx
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_425939
L_125504:
	movq 0x8(%r11),%r13
	movl 0x0(%r11),%ebx
.p2align 0x4,,0x7
L_125505:
	cmpl %ebx,%ecx
	je L_425938
L_125506:
	cmpq $0x1,%r13
	je L_425937
L_125507:
	movl 0x0(%r13),%ebx
	movq 0x8(%r13),%r13
	jmp L_125505
.p2align 0x4
L_425937:
	movq %r14,%r15
L_125509:
	movq %r15,0xA8(%rbp)
	jmp loop_1313
.p2align 0x4
L_425938:
L_125510:
	movq %r15,0xA8(%rbp)
	jmp loop_1313
.p2align 0x4
L_425939:
	movq %r14,%r15
	jmp L_125509
.p2align 0x4
L_425940:
L_125310:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125311
L_125501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125502
.p2align 0x4
.long 0x1B1B
L_125502:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125311:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_125478
L_125312:
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
.p2align 0x4,,0x7
L_125313:
	cmpq $0x1,%r15
	je L_425955
L_125314:
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
L_125315:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425954
.p2align 0x4,,0x7
L_125316:
	movl 0xD8(%rbp),%r15d
	cmpl 0x34(%rbp),%r15d
	je L_425942
L_125317:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_425941
L_125318:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
	movl %r14d,0xD8(%rbp)
	jmp L_125315
.p2align 0x4
L_425941:
L_125320:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x126F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC8(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0xC0(%rbp),%r10
	movq %r10,0x8(%r14)
	movq $0x126F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x21BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	addq $0x20,%r12
	movl 0x34(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0xA8(%rbp)
	movq %r15,0x28(%rbp)
L_125321:
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_125322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_425942:
L_125463:
	cmpq $0x1,0xD0(%rbp)
	je L_425951
L_125464:
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_125474
L_125465:
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq $0x1,0xE0(%rbp)
L_125466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425949
.p2align 0x4,,0x7
L_125467:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_425943
L_125468:
	movq %r15,0xE0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_125466
.p2align 0x4
L_425943:
L_125469:
	movq 0xD0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
L_125470:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425948
.p2align 0x4,,0x7
L_125471:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_425944
L_125472:
	movq %r15,0xD8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_125470
.p2align 0x4
L_425944:
L_125473:
	movq %r15,0xD0(%rbp)
L_125474:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_425945
L_125475:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl %r13d,0x34(%rbp)
	movq 0xD0(%rbp),%r15
	jmp L_125313
.p2align 0x4
L_425945:
L_125476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125477
L_125481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_125482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125482
.p2align 0x4
.long 0x1B15
L_125482:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_125477:
	movq 0xD0(%rbp),%r15
L_125478:
	cmpq $0x1,%r15
	je L_425946
L_125479:
	movl 0x0(%r15),%r14d
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xC8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x126F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x21BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x126F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	addq $0x10,%r12
	movq $0x21BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r9,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0xA8(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r13,0x0(%r14)
	movq %r10,0xA8(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_125321
.p2align 0x4
L_425946:
L_125480:
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_125321
.p2align 0x4
L_425948:
L_125483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_125484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125484
.p2align 0x4
.long 0x1B16
L_125484:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_125471
.p2align 0x4
L_425949:
L_125485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_125486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125486
.p2align 0x4
.long 0x1B17
L_125486:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_125467
.p2align 0x4
L_425951:
L_125488:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_425952
L_125489:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl %r13d,0x34(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,%r15
	jmp L_125313
.p2align 0x4
L_425952:
L_125490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125491
L_125492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_125493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125493
.p2align 0x4
.long 0x1B18
L_125493:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_125491:
	movq 0xE0(%rbp),%r15
	jmp L_125478
.p2align 0x4
L_425954:
L_125494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_125495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125495
.p2align 0x4
.long 0x1B19
L_125495:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_125316
.p2align 0x4
L_425955:
L_125496:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125320
L_125498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_125499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125499
.p2align 0x4
.long 0x1B1A
L_125499:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_125320
.p2align 0x4
L_425959:
L_125512:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125513
L_125514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125515
.p2align 0x4
.long 0x1B1C
L_125515:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125513:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0xA8(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_125321
.p2align 0x4
L_425963:
L_125517:
	xorl %ecx,%ecx
	jmp L_125304
.p2align 0x4
L_425964:
L_125518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_125519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125519
.p2align 0x4
.long 0x1B1D
L_125519:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_125296
.p2align 0x4
L_425965:
L_125520:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_425966
L_125521:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0xB0(%rbp)
	jmp L_125288
.p2align 0x4
L_425966:
L_125522:
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_125299
.p2align 0x4
L_425968:
L_125524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_125525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125525
.p2align 0x4
.long 0x1B1D
L_125525:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_125289
.p2align 0x4
L_425969:
L_125526:
	movq $0x1,0x28(%rbp)
	jmp L_125299
.p2align 0x4
L_425970:
L_125535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125536
.p2align 0x4
.long 0x1B1B
L_125536:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_125532
.p2align 0x4
L_425971:
L_125537:
	movq $0x1,%r15
	jmp L_125286
.p2align 0x4
L_425972:
L_125285:
	movl $0x0,0x30(%rbp)
	movq $0x1,%r15
	jmp L_125286
.p2align 0x4
L_425974:
L_125538:
	movq 0xC0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_125540:
	cmpl $0x0,%r13d
	jl L_125431
L_125541:
	movq $0x1,0xB0(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_1317:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425984
.p2align 0x4,,0x7
L_125542:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_425979
L_125559:
	movslq %r15d,%r14
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
L_125560:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_125561
L_125563:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	jne L_425977
L_125564:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r10
L_125565:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_125566
L_125567:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_425975
L_125568:
	movq $0x1BC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
L_125562:
	movq %r15,0xB0(%rbp)
	incl 0x34(%rbp)
	jmp loop_1317
.p2align 0x4
L_425975:
L_125566:
	movq 0xB0(%rbp),%r15
	jmp L_125562
.p2align 0x4
L_425977:
L_125561:
	movq 0xB0(%rbp),%r15
	jmp L_125562
.p2align 0x4
L_425979:
L_125544:
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125545
L_125555:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	jne L_425981
L_125556:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_425980
L_125557:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movl $0x1,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r13,%r15
L_125547:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_125548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_425980:
L_125558:
	movl $0x1,0x30(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_125529
.p2align 0x4
L_425981:
L_125545:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_425982
L_125546:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r14,%r15
	jmp L_125547
.p2align 0x4
L_425982:
L_125554:
	movl $0x0,0x30(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_125529
.p2align 0x4
L_425984:
L_125569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_125570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125570
.p2align 0x4
.long 0x1B20
L_125570:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_125542
.p2align 0x4
.long 0x1C78
L_128066:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%rdx
	movq 0x10(%rdx),%r15
	movq %r15,0x108(%rbp)
	movq %rdx,0x30(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_426001
L_128067:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_128069:
	testq %rdx,%rdx
	jz L_425999
L_128070:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_128071:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_128072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128072
.p2align 0x4
.long 0x1C79
L_128072:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x110(%rbp)
L_128073:
	movq $0x0,0x118(%rbp)
.p2align 0x4,,0x7
loop_1363:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425997
.p2align 0x4,,0x7
L_128074:
	movq 0x118(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_425987
L_128096:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x110(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x118(%rbp)
	jmp loop_1363
.p2align 0x4
L_425987:
L_128075:
	movq 0x110(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
L_128076:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x110(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_128078:
	testq %rdx,%rdx
	jz L_425995
L_128079:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_128080:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_128081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128081
.p2align 0x4
.long 0x1C7A
L_128081:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq %rax,0x118(%rbp)
L_128082:
	movq $0x0,0x120(%rbp)
.p2align 0x4,,0x7
loop_1364:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_425993
.p2align 0x4,,0x7
L_128083:
	movq 0x120(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnl L_425992
L_128085:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_128086:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_126583
L_128087:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_425990
	cmpq $0xF5A,%r15
	je L_425989
	cmpq $0xF5D,%r15
	je L_425988
	jmp L_126583
.p2align 0x4
L_425988:
L_128091:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128089:
	movq 0x118(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x120(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x120(%rbp)
	jmp loop_1364
.p2align 0x4
L_425989:
L_128090:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_128089
.p2align 0x4
L_425990:
L_128088:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128089
.p2align 0x4
L_425992:
L_128084:
	movq 0x118(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF20)(%rip),%r13
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0xECD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x40,%r12
	movq %r13,0x8(%r10)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r10)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r10)
	movq %r14,0x20(%r10)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r10)
	movq $0x2,0x30(%r10)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq $0x23AF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r13)
	jmp L_126782
.p2align 0x4
L_425993:
L_128092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_128093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128093
.p2align 0x4
.long 0x1C7B
L_128093:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_128083
.p2align 0x4
L_425995:
L_128095:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0x118(%rbp)
	jmp L_128082
.p2align 0x4
L_425997:
L_128097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_128098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128098
.p2align 0x4
.long 0x1C7C
L_128098:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_128074
.p2align 0x4
L_425999:
L_128100:
	movq (globalObjptr+0x7570)(%rip),%r15
	movq %r15,0x110(%rbp)
	jmp L_128073
.p2align 0x4
L_426001:
L_128101:
	movq $0x1,0x30(%rbp)
	jmp L_128076
.p2align 0x4
.long 0x1BC5
L_126783:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x60(%rbp),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_125352
L_126784:
	movq %r15,0x0(%r10)
	movq 0x100(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426167
L_126785:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_126787:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_426166
L_126826:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCBE,%r10
	jne L_426165
L_126827:
	movq 0x8(%r11),%r10
	cmpq 0x0(%r11),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_426005
L_126788:
	incl %ecx
	jo L_125327
L_126789:
	cmpq $0x1,%r15
	je L_426002
L_126790:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_126787
.p2align 0x4
L_426002:
L_126791:
L_126792:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_126793:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_432
L_126825:
	movl %ecx,0x0(%r15)
x_432:
	movq %r14,0x30(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_126795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426005:
L_126829:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126830:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_426163
L_128063:
	movl %ecx,0x0(%r15)
	movq %r10,0x28(%rbp)
L_126832:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_126834:
	testq %rdx,%rdx
	jz L_426161
L_126835:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_126836:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126837
.p2align 0x4
.long 0x1BC6
L_126837:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x60(%rbp)
L_126838:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_1325:
	movq 0x108(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_426030
L_127734:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x110(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq 0xA0(%r15),%r11
	movq 0x98(%r15),%r10
	movq %r10,0x118(%rbp)
	movq 0x90(%r15),%r10
	movq %r10,0x120(%rbp)
	movq 0x88(%r15),%r10
	movq %r10,0x128(%rbp)
	movq 0x80(%r15),%r10
	movq %r10,0x130(%rbp)
	movq 0x78(%r15),%r10
	movq %r10,0x138(%rbp)
	movq 0x70(%r15),%r10
	movq %r10,0x140(%rbp)
	movq 0x68(%r15),%r10
	movq %r10,0x148(%rbp)
	movq 0x60(%r15),%r10
	movq %r10,0x150(%rbp)
	movq 0x58(%r15),%r10
	movq %r10,0x158(%rbp)
	movq 0x50(%r15),%r10
	movq %r10,0x160(%rbp)
	movq 0x48(%r15),%r10
	movq %r10,0x168(%rbp)
	movq 0x40(%r15),%r10
	movq %r10,0x170(%rbp)
	movq 0x38(%r15),%r10
	movq %r10,0x178(%rbp)
	movq 0x30(%r15),%r10
	movq %r10,0x180(%rbp)
	movq 0x28(%r15),%r10
	movq %r10,0x188(%rbp)
	movq 0x20(%r15),%r10
	movq %r10,0x190(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x198(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x1A0(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x1A8(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x1B0(%rbp)
	cmpq $0x1,%r13
	je L_426027
	cmpq $0x2,%r13
	je L_426024
	cmpq $0x3,%r13
	je L_426022
L_127735:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1090,%r15
	je L_426018
	cmpq $0x1091,%r15
	je L_426015
	cmpq $0x1093,%r15
	je L_426010
	cmpq $0x1094,%r15
	je L_426009
	cmpq $0x1095,%r15
	je L_426008
	cmpq $0x1096,%r15
	je L_426006
L_127736:
	movq %r14,0x30(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (toString_212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_22
.p2align 0x4
L_426006:
L_127918:
	movq 0x10(%r13),%r15
	movq %r15,0x130(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jnz L_426007
L_127919:
	movq %r11,0x150(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_127920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_426007:
L_127921:
	movq 0x138(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_127922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_426008:
L_127903:
	movq 0x8(%r13),%r15
	movq %r15,0x118(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_127904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_426009:
L_127816:
	movq 0x10(%r13),%r15
	movq %r15,0x120(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_127817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_426010:
L_127787:
	movq 0x10(%r13),%r14
	movq %r14,0x120(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	andq $0xFF,%r14
	cmpq $0x43,%r14
	jne L_426011
L_127815:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
.p2align 0x4,,0x7
L_127765:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x108(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x108(%rbp)
	jmp loop_1325
.p2align 0x4
L_426011:
L_127788:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127789
L_127813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_127814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127814
.p2align 0x4
.long 0x1C40
L_127814:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_127789:
	movq 0x120(%rbp),%r15
	andq $0x3,%r15
	jnz L_127790
L_127812:
L_127790:
	movq 0x130(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127792:
	movq %r11,0x140(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_127793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426015:
L_127780:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127781
L_127785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127786
.p2align 0x4
.long 0x1C37
L_127786:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_127781:
	movq 0x110(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x4(%r15)
	movq %r15,0x118(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_127782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127782
.p2align 0x4
.long 0x1C3B
L_127782:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1355:
	cmpq $0x1,%r15
	jnl L_426016
L_127784:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1355
.p2align 0x4
L_426016:
L_127783:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426018:
L_127754:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127755
L_127778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_127779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127779
.p2align 0x4
.long 0x1C3A
L_127779:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_127755:
	movq 0x110(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_126583
L_127756:
	movq 0x8(%r15),%r13
	movq %r13,0x110(%rbp)
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426019
L_127757:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_127758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426019:
L_127772:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426022:
L_127987:
	movq 0x140(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_426023
L_127988:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_127989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426023:
L_128056:
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426024:
L_127965:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_126583
L_127966:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426025
L_127967:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426025:
L_127981:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426027:
L_127943:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_126583
L_127944:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426028
L_127945:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_127946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426028:
L_127959:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426030:
L_126839:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126840
L_127732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127733
.p2align 0x4
.long 0x1C34
L_127733:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126840:
	movq 0x60(%rbp),%r15
	movq $0x1749,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_125269
L_126842:
	testl %r15d,%r15d
	jz L_426157
L_126843:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_125431
L_126844:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1326:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_426033
L_127726:
	movslq %ebx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_125269
L_127728:
	addl %ecx,%r10d
	jo L_125327
L_127729:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_1326
.p2align 0x4
L_426033:
L_126845:
	cmpq $0x0,0x58(%rbp)
	jna L_125307
L_126847:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_426154
L_126848:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_126849:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126850
.p2align 0x4
.long 0x1BC7
L_126850:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xE0(%rbp)
L_126851:
	xorl %ecx,%ecx
	movq 0x68(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1327:
	cmpq 0x70(%rbp),%r15
	jnl L_426039
.p2align 0x4,,0x7
loop_1353:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_125269
L_127716:
	cmpl %r11d,%ecx
	jl L_426036
L_127717:
	incl %ebx
	jo L_125327
L_127718:
	movslq %ebx,%r13
	cmpq 0x58(%rbp),%r13
	jnb L_125307
L_127720:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_1353
.p2align 0x4
L_426036:
L_127721:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_125307
L_127723:
	movq 0x0(%r14,%r11,8),%r13
	incl %ecx
	movq 0xE0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1327
.p2align 0x4
L_426039:
L_126852:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126853
L_127712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127713
.p2align 0x4
.long 0x1C33
L_127713:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126853:
	movq 0xE0(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x58(%rbp)
L_126854:
	movq 0x78(%rbp),%r14
	movq 0x90(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x80(%r14),%r13
	movq 0x78(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x70(%r14),%r10
	movq %r10,0xE0(%rbp)
	movq 0x68(%r14),%r10
	movq %r10,0x108(%rbp)
	movq 0x60(%r14),%r10
	movq %r10,0x110(%rbp)
	movq 0x58(%r14),%r10
	movq %r10,0x118(%rbp)
	movq 0x50(%r14),%r10
	movq 0x48(%r14),%r9
	movq %r9,0x120(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r9
	movq 0x30(%r14),%r8
	movq %r8,0x128(%rbp)
	movq 0x28(%r14),%r8
	movq %r8,0x130(%rbp)
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq %rsp,0x138(%rbp)
	movq 0x10(%r14),%rsp
	movq %rsp,0x140(%rbp)
	movq 0x8(%r14),%rsp
	movq %rsp,0x148(%rbp)
	movq 0x0(%r14),%rsp
	movq %rsp,0x150(%rbp)
	movq 0xD8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x109A,%r11
	je L_426149
	cmpq $0x109B,%r11
	je L_426146
	cmpq $0x109C,%r11
	je L_426144
	cmpq $0x109D,%r11
	je L_426141
	cmpq $0x109E,%r11
	je L_426139
	cmpq $0x109F,%r11
	je L_426137
L_126855:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x0(%r14),%rsp
	movq %rsp,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r14
	movl %r14d,%esp
	movslq %esp,%r11
	cmpq %r14,%r11
	jne L_125269
L_126857:
	cmpl $0x0,%esp
	je L_426132
	cmpl $0x1,%esp
	je L_426040
	movq %r13,%r11
x_433:
	movq %r11,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_426040:
L_127303:
	cmpq $0x1,0x60(%rbp)
	jne x_1592
L_127304:
	cmpq $0x0,%r14
	jna L_125307
L_127306:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x10,%r12
simple_15:
	movq (globalObjptr+0xF20)(%rip),%r14
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xF0(%rbp),%r13
	cmpq $0x1,%r13
	je L_426130
	cmpq $0x2,%r13
	je L_426128
L_126860:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1097,%r11
	je L_426064
L_127032:
	movq %r15,0x48(%rbp)
	movq %r14,0x60(%rbp)
L_127033:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_127035:
	testq %rdx,%rdx
	jz L_426062
L_127036:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127037:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127038
.p2align 0x4
.long 0x1BD3
L_127038:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x70(%rbp)
L_127039:
	movq $0x1,%r15
	movq $0x0,0x78(%rbp)
loop_1335:
	movq 0x78(%rbp),%r14
	cmpq 0x68(%rbp),%r14
	jnl L_426041
L_127091:
	movq %r15,0x110(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r14
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq %r11,0x118(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_127092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
L_426041:
L_127040:
	movq 0x70(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r13,%rdx
	jne L_125269
L_127042:
	testq %rdx,%rdx
	jz L_426059
L_127043:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127044:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127045
.p2align 0x4
.long 0x1BD4
L_127045:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_127046:
	movq $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_1336:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426057
.p2align 0x4,,0x7
L_127047:
	movq 0x80(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_426042
L_127086:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x80(%rbp)
	jmp loop_1336
.p2align 0x4
L_426042:
L_127048:
	movq 0x78(%rbp),%r13
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_125352
L_127049:
	movq %r14,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426055
L_127050:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x80(%rbp)
	xchgq %r11,%r15
.p2align 0x4,,0x7
L_127052:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127053
L_127061:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_127053
L_127062:
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x98(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_426047
L_127053:
	movl 0x80(%rbp),%r13d
	incl %r13d
	jo L_125327
L_127054:
	cmpq $0x1,%r15
	je L_426043
L_127055:
	movl %r13d,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_127052
.p2align 0x4
L_426043:
	movl %r13d,%ecx
L_127057:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_127058:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126583
L_127060:
	movl %ecx,0x0(%r15)
	jmp L_126583
.p2align 0x4
L_426047:
L_127064:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127065
L_127083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_127084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127084
.p2align 0x4
.long 0x1BDA
L_127084:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_127065:
	movl 0x80(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_125363
L_127066:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_426049
L_127067:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_126583
L_127069:
	shrq $0x1,%r15
	movl %r15d,%ecx
L_127070:
	movq $0x1ED3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x4099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_127071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426049:
L_127080:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_126583
L_127082:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_127070
.p2align 0x4
L_426055:
L_127085:
	xorl %ecx,%ecx
	jmp L_127057
.p2align 0x4
L_426057:
L_127087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127088
.p2align 0x4
.long 0x1BDB
L_127088:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_127047
.p2align 0x4
L_426059:
L_127090:
	movq (globalObjptr+0x7598)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_127046
.p2align 0x4
L_426062:
L_127110:
	movq (globalObjptr+0x7590)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_127039
.p2align 0x4
L_426064:
L_126861:
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r8
	movq 0x28(%r9),%r13
	movq %r14,0x48(%rbp)
	movq %r8,%r14
L_126862:
	movq $0x1243,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r14,0x0(%r9)
	movl (localWord32+0x0)(%rip),%r14d
	movl %r14d,0x8(%r9)
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,0xC(%r9)
	movl (localWord32+0x8)(%rip),%r14d
	movl %r14d,0x10(%r9)
	movl (localWord32+0xC)(%rip),%r14d
	movl %r14d,0x14(%r9)
	movl %ebx,0x18(%r9)
	movl %ecx,0x1C(%r9)
	movq %r15,0x28(%r9)
	movq %r10,0x30(%r9)
	movq %r11,0x38(%r9)
	movq %r13,0x40(%r9)
	addq $0x50,%r12
	movzbl (localWord8+0x0)(%rip),%r15d
	movzbl %dl,%r14d
	shll $0x8,%r14d
	orl %r14d,%r15d
	movl %r15d,0x20(%r9)
	movl $0x0,0x24(%r9)
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_125269
L_126864:
	cmpl $0x0,%r15d
	je L_426067
	cmpl $0x1,%r15d
	je L_426065
L_126865:
	movq (globalObjptr+0x7588)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426065:
L_127015:
	cmpq $0x0,%r14
	jna L_125307
L_127017:
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_426067:
L_126866:
	movq $0x1,0x68(%rbp)
L_126867:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_126868:
	movq %r15,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426125
L_126869:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x70(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_126871:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_126872
L_127004:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_126872
L_127005:
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x98(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_426119
L_126872:
	movl 0x70(%rbp),%r13d
	incl %r13d
	movl %r13d,0x74(%rbp)
	jo L_125327
L_126873:
	cmpq $0x1,%r15
	je L_426068
L_126874:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x70(%rbp)
	jmp L_126871
.p2align 0x4
L_426068:
L_126875:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126876
L_127002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127003
.p2align 0x4
.long 0x1BD0
L_127003:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_126876:
	movl 0x74(%rbp),%ecx
L_126877:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126878:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_426115
L_127001:
	movl %ecx,0x0(%r14)
	xorq %r15,%r15
L_126880:
	movq $0x1ED1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
L_126881:
	movq 0xC8(%rbp),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_426101
L_126882:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r14
L_126883:
	movq %r15,0x58(%rbp)
	movq $0x23B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x23B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x23B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_126884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426100
.p2align 0x4,,0x7
L_126885:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_426069
L_126886:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_126884
.p2align 0x4
L_426069:
L_126887:
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_126888:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426099
.p2align 0x4,,0x7
L_126889:
	movq $0x2975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_426070
L_126890:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_126888
.p2align 0x4
L_426070:
L_126891:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_426092
L_126892:
	movq 0x58(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_126893:
	addq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r13
	je L_426071
L_126894:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_126893
.p2align 0x4
L_426071:
L_126895:
	testq %r15,%r15
	jz L_426091
L_126896:
	cmpq $0x7FFFFFFF,%r15
	ja L_125434
L_126897:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126898
.p2align 0x4
.long 0x1BC9
L_126898:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,%r15
L_126899:
	movq 0x68(%rbp),%r10
	movq 0x58(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1328:
	cmpq 0x30(%rbp),%r14
	jnl L_426074
.p2align 0x4,,0x7
loop_1331:
	cmpq 0x0(%r11),%r13
	jl L_426073
L_126938:
	cmpq $0x1,%r10
	je L_426072
L_126939:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_1331
.p2align 0x4
L_426072:
L_126941:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426073:
L_126942:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1328
.p2align 0x4
L_426074:
L_126900:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_426089
L_126901:
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
L_126902:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_126904:
	testq %rdx,%rdx
	jz L_426087
L_126905:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_126906:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126907
.p2align 0x4
.long 0x1BCA
L_126907:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_126908:
	movq $0x0,0x70(%rbp)
.p2align 0x4,,0x7
loop_1329:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426085
.p2align 0x4,,0x7
L_126909:
	movq 0x70(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_426075
L_126931:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x70(%rbp)
	jmp loop_1329
.p2align 0x4
L_426075:
L_126910:
	movq 0x68(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
L_126911:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_125269
L_126913:
	testq %rdx,%rdx
	jz L_426083
L_126914:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_126915:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126916
.p2align 0x4
.long 0x1BCA
L_126916:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_126917:
	movq $0x0,0x70(%rbp)
.p2align 0x4,,0x7
loop_1330:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426081
.p2align 0x4,,0x7
L_126918:
	movq 0x70(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_426080
L_126920:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_126921:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_126583
L_126922:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_426078
	cmpq $0xF5A,%r15
	je L_426077
	cmpq $0xF5D,%r15
	je L_426076
	jmp L_126583
.p2align 0x4
L_426076:
L_126926:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_126924:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1330
.p2align 0x4
L_426077:
L_126925:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_126924
.p2align 0x4
L_426078:
L_126923:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_126924
.p2align 0x4
L_426080:
L_126919:
	movq 0x68(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xECD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x40,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq 0xE8(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%r13)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r14
	movq $0x23AF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	jmp L_125367
.p2align 0x4
L_426081:
L_126927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126928
.p2align 0x4
.long 0x1BCB
L_126928:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_126918
.p2align 0x4
L_426083:
L_126930:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_126917
.p2align 0x4
L_426085:
L_126932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126933
.p2align 0x4
.long 0x1BCB
L_126933:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_126909
.p2align 0x4
L_426087:
L_126935:
	movq (globalObjptr+0x75B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_126908
.p2align 0x4
L_426089:
L_126936:
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_126911
.p2align 0x4
L_426091:
L_126944:
	movq (globalObjptr+0x75A8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_126899
.p2align 0x4
L_426092:
L_126945:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x30(%rbp)
	je L_426097
L_126946:
	testq %r13,%r13
	jz L_426096
L_126947:
	cmpq $0x7FFFFFFF,%r13
	ja L_125434
L_126948:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126949
.p2align 0x4
.long 0x1BCA
L_126949:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,%r15
L_126950:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1332:
	cmpq 0x68(%rbp),%r14
	jnl L_426093
L_126954:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1332
.p2align 0x4
L_426093:
L_126951:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_426094
L_126952:
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_126902
.p2align 0x4
L_426094:
L_126953:
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_126911
.p2align 0x4
L_426096:
L_126956:
	movq (globalObjptr+0x75B0)(%rip),%r15
	jmp L_126950
.p2align 0x4
L_426097:
L_126957:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_426098
L_126958:
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_126902
.p2align 0x4
L_426098:
L_126959:
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_126911
.p2align 0x4
L_426099:
L_126960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126961
.p2align 0x4
.long 0x1BCC
L_126961:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_126889
.p2align 0x4
L_426100:
L_126962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126963
.p2align 0x4
.long 0x1BCC
L_126963:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_126885
.p2align 0x4
L_426101:
L_126964:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x70(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x78(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_126966:
	testl %r13d,%r13d
	jz L_126971
L_126967:
	cmpq $0x0,%r14
	jna L_125307
L_126969:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
L_126970:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_126971
L_126980:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF61,%r15
	jne L_426110
L_126981:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126982
.p2align 0x4
.long 0x1BCD
L_126982:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1333:
	cmpq $0x1,%r15
	jnl L_426102
L_126999:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1333
.p2align 0x4
L_426102:
L_126983:
	movq 0x88(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x78(%rbp),%r15d
	decl %r15d
	jo L_125327
L_126984:
	movslq %r15d,%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_426108
L_126985:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_126986:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126987
.p2align 0x4
.long 0x1BCE
L_126987:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x80(%rbp)
L_126988:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1334:
	cmpq 0x78(%rbp),%r15
	jnl L_426105
L_126993:
	movl %r15d,%r14d
	incl %r14d
	jo L_125327
L_126994:
	movslq %r14d,%r13
	cmpq 0x70(%rbp),%r13
	jnb L_125307
L_126996:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1334
.p2align 0x4
L_426105:
L_126989:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126990
L_126991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_126992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126992
.p2align 0x4
.long 0x1BCF
L_126992:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_126990:
	movq 0x80(%rbp),%r14
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r15
	jmp L_126883
.p2align 0x4
L_426108:
L_126998:
	movq (globalObjptr+0x75A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_126988
.p2align 0x4
L_426110:
L_126971:
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426115:
L_126879:
	xorq %r15,%r15
	jmp L_126880
.p2align 0x4
L_426119:
L_127007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127008
L_127012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127013
.p2align 0x4
.long 0x1BD0
L_127013:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127008:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_127009:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426120
L_127010:
	movq 0x78(%rbp),%r15
	jmp L_126880
.p2align 0x4
L_426120:
L_127011:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_126880
.p2align 0x4
L_426125:
L_127014:
	xorl %ecx,%ecx
	jmp L_126877
.p2align 0x4
L_426128:
L_127113:
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
L_127114:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127116:
	movq %r11,0x118(%rbp)
	movq $0x409B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_127117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426130:
L_127111:
L_127112:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_126881
.p2align 0x4
x_1592:
	movq %r13,%r11
	jmp x_433
.p2align 0x4
L_426132:
L_127257:
	cmpq $0x1,0x60(%rbp)
	jne L_426135
L_127259:
	movq 0x10(%r9),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq $0x2C,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127260
.p2align 0x4
.long 0x1BF5
L_127260:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq %rax,0x70(%rbp)
	movq $0x0,0x78(%rbp)
loop_1342:
	cmpq $0x2C,0x78(%rbp)
	jl L_426133
L_127261:
	movq 0x70(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_127262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_100
.p2align 0x4
L_426133:
L_127294:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq $0x2C,%r15
	jnb L_125307
L_127296:
	movq (globalObjptr+0xF360)(%rip),%r14
	movzbq 0x0(%r14,%r15,1),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_127297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_426135:
L_127258:
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp simple_15
.p2align 0x4
L_426137:
L_127699:
	movq 0x20(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_127701:
	movq %r11,0x120(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_127702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426139:
L_127662:
	movq 0x10(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127664:
	movq %r11,0x168(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_127665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426141:
L_127518:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x78(%rbp)
	cmpq $0x1,%r15
	je L_426143
	cmpq $0x2,%r15
	je L_426142
L_127519:
	movq %r13,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
L_426142:
L_127657:
	movq $0x1,0x128(%rbp)
	movq $0x0,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_127658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426143:
L_127652:
	movq $0x1,0x128(%rbp)
	movq $0x0,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_127653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426144:
L_127397:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127399:
	movq %r11,0x160(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_127400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426146:
L_127328:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r10
	je L_126583
L_127329:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_125269
L_127331:
	movq %r13,0x138(%rbp)
	movq $0x4095,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	addq $0x130,%rbp
	leaq (L_127332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426149:
L_127307:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r8
	je L_126583
L_127308:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_125269
L_127310:
	movq %r13,0x130(%rbp)
	movq $0x4097,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	addq $0x128,%rbp
	leaq (L_127311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426154:
L_127725:
	movq (globalObjptr+0x7580)(%rip),%r15
	movq %r15,0xE0(%rbp)
	jmp L_126851
.p2align 0x4
L_426157:
L_127731:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x58(%rbp)
	jmp L_126854
.p2align 0x4
L_426161:
L_128062:
	movq (globalObjptr+0x7578)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_126838
.p2align 0x4
L_426163:
L_126831:
	movq %r10,0x28(%rbp)
	jmp L_126832
.p2align 0x4
L_426165:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_126788
.p2align 0x4
L_426166:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_126788
.p2align 0x4
L_426167:
L_128064:
	xorl %ecx,%ecx
	jmp L_126792
.p2align 0x4
.long 0x56D
L_126779:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x5C0
L_126724:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x30(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_125352
L_126725:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_426178
L_126726:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x28(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_126728:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_426177
L_126766:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCC2,%r10
	jne L_426176
L_126767:
	movq 0x8(%r15),%r10
	movq %r10,0x48(%rbp)
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_426172
L_126729:
	movl 0x28(%rbp),%r10d
	incl %r10d
	jo L_125327
L_126730:
	cmpq $0x1,%r14
	je L_426169
L_126731:
	movl %r10d,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_126728
.p2align 0x4
L_426169:
	movl %r10d,%ecx
L_126733:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126734:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_431
L_126765:
	movl %ecx,0x0(%r15)
x_431:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426172:
L_126769:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126770
L_126775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126776
.p2align 0x4
.long 0x1119
L_126776:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126770:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_126771:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426173
L_126772:
	movq 0x48(%rbp),%r15
L_126773:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%r13),%r15
	movq $0x23C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	jmp L_125367
.p2align 0x4
L_426173:
L_126774:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_126773
.p2align 0x4
L_426176:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_126729
.p2align 0x4
L_426177:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_126729
.p2align 0x4
L_426178:
L_126777:
	xorl %ecx,%ecx
	jmp L_126733
.p2align 0x4
.long 0x544
L_126714:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_125367
L_126715:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_126716:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426181
.p2align 0x4,,0x7
L_126717:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x11F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x23C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_125367
L_126718:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_126716
.p2align 0x4
L_426181:
L_126720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126721
.p2align 0x4
.long 0x5AC
L_126721:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_126717
.p2align 0x4
.long 0xC7D
L_126694:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126695
L_126710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_126711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126711
.p2align 0x4
.long 0x5AB
L_126711:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_126695:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1099,%r14
	je L_426187
	cmpq $0x109C,%r14
	je L_426186
	cmpq $0x109E,%r14
	je L_426184
	cmpq $0x109F,%r14
	je L_426183
	jmp L_125367
.p2align 0x4
L_426183:
L_126708:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_126709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_426184:
L_126705:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_125367
L_126706:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_426186:
L_126704:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_426187:
L_126696:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r14
	je L_426188
L_126697:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_126698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_426188:
L_126700:
	movq $0x3603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x5FA
L_126622:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_126623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE59
L_125662:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_125367
.p2align 0x4
.long 0x1B4F
L_126594:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC7D
L_126587:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126588
L_126591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_126592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126592
.p2align 0x4
.long 0x539
L_126592:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_126588:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_125377
L_126589:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x1B6D
L_126294:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126295
L_126546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126547
.p2align 0x4
.long 0x1BB0
L_126547:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126295:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_426204
L_126406:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_125307
L_126408:
	movl 0x0(%r14,%r15,4),%r11d
	testl %r11d,%r11d
	jz L_426192
L_126537:
	movq %r13,0x140(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_126538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_426192:
L_126409:
L_126410:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_126411
L_126486:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x108D,%r15
	jne L_426201
L_126487:
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_126489:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_126490
L_126491:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_426199
L_126492:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r13,%r15
	andq $0x1,%r15
	andq $0x1,%r15
	jz L_426196
L_126493:
	cmpq $0x1,%r13
	jl L_426195
L_126495:
	movq 0x30(%rbp),%r15
	movq $0x1,0x30(%rbp)
L_126496:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r15
	je L_426193
L_126497:
	movq %r15,0x50(%rbp)
	movq $0x3,0x78(%rbp)
	movq $0x1,0x80(%rbp)
next_12:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x5,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_426193:
L_126521:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_426194
L_126522:
	movq $0x1,%r15
L_126509:
	movq %r15,0x138(%rbp)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_426194:
L_126523:
	movq $0x1,%r15
L_126512:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x138(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (heapCheckNonZero_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_426195:
L_126525:
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_426196:
L_126530:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126531
L_126535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126536
.p2align 0x4
.long 0x1BAD
L_126536:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126531:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_126532:
	cmpl $0x0,%eax
	jl L_126525
	jmp L_126495
.p2align 0x4
L_426199:
L_126490:
	movq (globalObjptr+0xE48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426201:
L_126411:
	movq $0x1,0x28(%rbp)
L_126412:
	movq 0x68(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_126413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_426204:
L_126296:
	movq 0xD0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_125307
L_126298:
	movl 0x0(%r13,%r14,4),%r10d
	testl %r10d,%r10d
	jz L_426205
L_126401:
	movq %r11,0x140(%rbp)
	movl 0x24(%rbp),%r14d
	movl %r14d,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_126402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_426205:
L_126299:
	movq $0x1,%r14
	xchgq %r14,%r15
L_126300:
	cmpq $0x1,%r15
	je L_426209
L_126301:
	movq %r15,0x28(%rbp)
heapCheckNonZero_0:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x401,%r14
	andq $0x1,%r14
	jz L_426208
L_126302:
	cmpq $0x401,%r15
	jg csize_2
csize_0:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426206
L_126304:
	movq %r14,0x130(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_126305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426206:
L_126333:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
csize_2:
csize_1:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426207
L_126339:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	leaq L_126348(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_126340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426207:
L_126368:
	movq %r11,0x110(%rbp)
	leaq L_126348(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426208:
L_126373:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x401,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_126374:
	cmpl $0x0,%eax
	jg csize_1
	jmp csize_0
.p2align 0x4
L_426209:
L_126377:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426210
L_126378:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426210:
L_126379:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426211
L_126380:
	movq %r14,0x130(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_126381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426211:
L_126396:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BB3
L_126568:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl %r15d,0x138(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (toIntInf_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
.long 0x4BB
L_126229:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126230
L_126289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126290
.p2align 0x4
.long 0x1B4C
L_126290:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126230:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_426217
L_126231:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_426216
L_126233:
	movq 0x10(%r14),%r15
L_126234:
	cmpq $0x1,%r15
	je L_125367
	cmpq $0x2,%r15
	je L_125367
L_126235:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_126236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_426216:
L_126232:
	movq $0x3645,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x15,0x0(%r14)
	movq $0xB,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_426217:
L_126280:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x262D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x10(%r15)
	movw 0x0(%r14),%r15w
	movw %r15w,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_126281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
.long 0x1B4F
L_126190:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126191
L_126226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_126227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126227
.p2align 0x4
.long 0x123B
L_126227:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_126191:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_126196
	cmpq $0x2,%r14
	je L_126196
L_126192:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	jne L_126218
L_126193:
	movl 0xC(%r14),%r13d
	testl %r13d,%r13d
	jz L_426219
L_126218:
	movq %r15,0x68(%rbp)
	movq $0x34FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_426219:
L_126196:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_126197
L_126214:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1098,%r14
	jne L_426220
L_126215:
	movq $0x3309,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_426220:
L_126197:
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_125367
L_126198:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_125269
L_126200:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1322:
	cmpl %ecx,%ebx
	je L_125367
L_126201:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_125307
L_126203:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_126208
	cmpq $0x2,%r11
	je L_126208
	cmpq $0x3,%r11
	je L_126208
L_126204:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1090,%r14
	je L_426222
L_126205:
	incl %ebx
	jo L_125327
L_126206:
	jmp loop_1322
.p2align 0x4
L_426222:
L_126208:
	movq 0x38(%rbp),%r15
	movl $0x1,0x0(%r15)
	jmp L_125367
.p2align 0x4
.long 0xE59
L_126188:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_125367
.p2align 0x4
.long 0x1B52
L_126150:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126151
L_126185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_126186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126186
.p2align 0x4
.long 0x1B4B
L_126186:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_126151:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq $0x331D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_126152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x5FA
L_126141:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126142
L_126147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126148
.p2align 0x4
.long 0xF38
L_126148:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126142:
	movq $0x32AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_126143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0xCEC
L_126121:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126122
L_126127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126128
.p2align 0x4
.long 0x1119
L_126128:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126122:
	movq $0x32AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_126123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x1B4F
L_126100:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126101
L_126105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_126106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126106
.p2align 0x4
.long 0x123B
L_126106:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_126101:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_426238
L_126102:
L_126103:
	movq $0x363D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq $0x9,0x0(%r15)
	movq $0x3,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_426238:
L_126104:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_126103
.p2align 0x4
.long 0x56D
L_126085:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126086
L_126091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126092
.p2align 0x4
.long 0x579
L_126092:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126086:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A26,%r13
	je L_426240
L_126089:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426240:
L_126087:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xE59
L_126081:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpl $0x1,0x0(%r13)
	jne L_125367
L_126083:
	movl $0x1,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0xC7D
L_126048:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126049
L_126052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_126053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126053
.p2align 0x4
.long 0x539
L_126053:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_126049:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_125377
L_126050:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x56D
L_126046:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x56D
L_126043:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x56D
L_126034:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126035
L_126040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126041
.p2align 0x4
.long 0x579
L_126041:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126035:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A26,%r13
	je L_426245
L_126038:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426245:
L_126036:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1053
L_126001:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126002
L_126030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126031
.p2align 0x4
.long 0x1B46
L_126031:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126002:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_426259
L_126003:
L_126004:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_125352
L_126005:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426257
L_126006:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_126008:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_126009
L_126021:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB5,%r13
	jne L_126009
L_126022:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_426252
L_126009:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_125327
L_126010:
	cmpq $0x1,%r15
	je L_426247
L_126011:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_126008
.p2align 0x4
L_426247:
L_126012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126013
L_126019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126020
.p2align 0x4
.long 0x1B4E
L_126020:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126013:
	movl 0x48(%rbp),%ecx
L_126014:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126015:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126017
L_126018:
	movl %ecx,0x0(%r15)
L_126017:
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426252:
L_126024:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_126025:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_126027:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_426257:
L_126028:
	xorl %ecx,%ecx
	jmp L_126014
.p2align 0x4
L_426259:
L_126029:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_126004
.p2align 0x4
.long 0x1053
L_125878:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_125269
L_125880:
	testl %r11d,%r11d
	jz L_426261
L_125881:
	movq (globalObjptr+0xE808)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_125882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426261:
L_125935:
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD38)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_125936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xC5A
L_125869:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125870
L_125875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125876
.p2align 0x4
.long 0x184D
L_125876:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125870:
	movq $0x32A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_125871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0xC5A
L_125804:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_125805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1B29
L_125766:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_125767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x56D
L_125764:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x132C
L_125753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125754
L_125761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125762
.p2align 0x4
.long 0x1B28
L_125762:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125754:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_426264
L_125756:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_125757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_426264:
L_125755:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_125367
.p2align 0x4
.long 0xC7D
L_125743:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125744
L_125747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_125748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125748
.p2align 0x4
.long 0x539
L_125748:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_125744:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_125377
L_125745:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x56D
L_125716:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x5C0
L_125639:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_125367
L_125640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_125638
.p2align 0x4
.long 0x5FA
x_426:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_125578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0xC5A
L_128104:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_128105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x1B09
L_125322:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125323
L_125461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125462
.p2align 0x4
.long 0x1B14
L_125462:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125323:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_426273
L_125324:
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_426272
L_125325:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125326:
	incl %ecx
	movl %ecx,0x34(%rbp)
	jo L_125327
L_125328:
	cmpq $0x1,%r15
	je L_426269
L_125329:
	movq 0x8(%r15),%r15
	jmp L_125326
.p2align 0x4
L_426269:
L_125330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125331
L_125457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125458
.p2align 0x4
.long 0x1B0B
L_125458:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125331:
	movl 0x34(%rbp),%ecx
L_125332:
	movl %ecx,0xD0(%rbp)
	movq $0x37D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_125333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
L_426272:
L_125459:
	xorl %ecx,%ecx
	jmp L_125332
.p2align 0x4
L_426273:
L_125460:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
L_125346:
	movq 0x70(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	je L_125349
L_125347:
	movq 0x78(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	jne L_426315
L_125380:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r13
	incq %r13
	jo L_426314
L_125382:
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%r15
	movl 0x0(%r15),%r13d
	andl 0x28(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_125327
L_125383:
	movslq %r13d,%r15
	movq %r15,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_125307
L_125385:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_125395
L_125386:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_125387:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_426310
L_125389:
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl 0x28(%rbp),%r13d
	cmpl %r13d,0x4(%r15)
	jne L_125391
L_125437:
	cmpl 0x30(%rbp),%r14d
	jne L_125391
L_125439:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426307
.p2align 0x4,,0x7
L_125440:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_125441:
	testl %eax,%eax
	jnz L_426306
L_125391:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_426274
L_125392:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_125387
.p2align 0x4
L_426274:
L_125393:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125395
L_125435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125436
.p2align 0x4
.long 0x1B11
L_125436:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125395:
	movq $0x11FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x28(%rbp),%r13d
	movl %r13d,0x4(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x58(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x23A9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r8,0x0(%r10)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r10
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r10
	movq %r10,0x0(%r8)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r15)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r10d
	movl %r10d,%r8d
	movl %r8d,0x2C(%rbp)
	incl %r10d
	jo L_125327
L_125396:
	movl %r10d,0x0(%r15)
	movq $0xF99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movl %r8d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r11,0x10(%r15)
	movq 0x90(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_125327
L_125397:
	movl %r13d,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2909,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x38(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_125307
L_125399:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r9,%r8,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_125269
L_125401:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_125327
L_125402:
	cmpl %r15d,%r10d
	jnl L_426299
L_125404:
	addl %r10d,%r10d
	jo L_125327
L_125405:
	movq 0x88(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_125406:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD7D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_125407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125407
.p2align 0x4
.long 0x1B0E
L_125407:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1315:
	cmpq 0x30(%rbp),%r15
	jnl L_426275
L_125432:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1315
.p2align 0x4
L_426275:
L_125408:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_125269
L_125410:
	cmpl $0x0,%r13d
	jl L_125431
L_125411:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_1316:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_426281
L_125416:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_125425
L_125417:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_125418:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426279
.p2align 0x4,,0x7
L_125419:
	movq 0x58(%rbp),%r15
	movl 0x4(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_125327
L_125420:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_125307
L_125422:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2909,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_426276
L_125423:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_125418
.p2align 0x4
L_426276:
L_125425:
	incl 0x4C(%rbp)
	jmp loop_1316
.p2align 0x4
L_426279:
L_125427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_125428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125428
.p2align 0x4
.long 0x1B10
L_125428:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_125419
.p2align 0x4
L_426281:
L_125412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125413
L_125414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_125415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125415
.p2align 0x4
.long 0x1B0F
L_125415:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_125413:
	movq 0x80(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x2C(%rbp),%ebx
L_125351:
	movl %ebx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0x98(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0xA0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_125352
L_125353:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_426292
L_125354:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_125356:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_426291
L_125371:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA0,%r11
	jne L_426290
L_125372:
	cmpq %r14,0x8(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_426287
L_125357:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_125327
L_125358:
	cmpq $0x1,%r15
	je L_426282
L_125359:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_125356
.p2align 0x4
L_426282:
L_125360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125361
L_125369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125370
.p2align 0x4
.long 0x1B0D
L_125370:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125361:
	movl 0x40(%rbp),%ecx
L_125362:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125364:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125366
L_125368:
	movl %ecx,0x0(%r15)
L_125366:
	movq $0x1B41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426287:
L_125374:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125375:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_125378:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_426290:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_125357
.p2align 0x4
L_426291:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_125357
.p2align 0x4
L_426292:
L_125379:
	xorl %ecx,%ecx
	jmp L_125362
.p2align 0x4
L_426299:
L_125403:
	movl 0x2C(%rbp),%ebx
	jmp L_125351
.p2align 0x4
L_426306:
L_125443:
	movq 0x50(%rbp),%r15
	movl 0x8(%r15),%ebx
	jmp L_125351
.p2align 0x4
L_426307:
L_125444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125445
.p2align 0x4
.long 0x1B12
L_125445:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_125440
.p2align 0x4
L_426310:
L_125388:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426314:
L_125381:
	movq (globalObjptr+0xAF8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426315:
L_125349:
	movq $0x11FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x28(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x23A9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl %ebx,%r14d
	incl %ebx
	jo L_125327
L_125350:
	movl %ebx,0x0(%r15)
	movl %r14d,%ebx
	jmp L_125351
.p2align 0x4
.long 0x1B1E
L_125548:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125549
L_125552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125553
.p2align 0x4
.long 0x1B1F
L_125553:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125549:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xAC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_426319
L_125550:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_125547
.p2align 0x4
L_426319:
L_125551:
	movl 0xA8(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	jmp L_125529
.p2align 0x4
.long 0x474
L_126795:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_126796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
toString_212:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1C5F
L_127920:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	jne L_127921
L_127941:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_127765
.p2align 0x4
.long 0x1C60
L_127922:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_426323
L_127938:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_126583
L_127939:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
L_127924:
	movq 0x130(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_127925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_426323:
L_127923:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	jmp L_127924
.p2align 0x4
.long 0x1C3C
L_127904:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_127905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
.long 0x1C41
L_127817:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_426326
L_127900:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_126583
L_127901:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
L_127819:
	movq 0x140(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426324
L_127820:
	movq %r14,0x178(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_127821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426324:
L_127895:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426326:
L_127818:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	jmp L_127819
.p2align 0x4
.long 0x1C3C
L_127793:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_426327
L_127794:
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_127795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_426327:
L_127811:
	movq $0x1,0x118(%rbp)
L_127799:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127800
L_127804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127805
.p2align 0x4
.long 0x1C3F
L_127805:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127800:
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x128(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_127801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127801
.p2align 0x4
.long 0x1C3E
L_127801:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1356:
	cmpq $0x1,%r15
	jnl L_426328
L_127803:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1356
.p2align 0x4
L_426328:
L_127802:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
.long 0x1C35
L_127758:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127759
L_127770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127771
.p2align 0x4
.long 0x1C39
L_127771:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_127759:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1EB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x150(%rbp)
	movq %r13,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_127760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x474
L_127773:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C63
L_127989:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127990
L_128054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_128055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128055
.p2align 0x4
.long 0x1C77
L_128055:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_127990:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x180(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426331
L_127991:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (word_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426331:
L_128049:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_128057:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C61
L_127968:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127969
L_127979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_127980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127980
.p2align 0x4
.long 0x1C62
L_127980:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_127969:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x474
L_127982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C61
L_127946:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127947
L_127957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_127958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127958
.p2align 0x4
.long 0x1C62
L_127958:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_127947:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x474
L_127960:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BC8
L_126858:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126859
L_127255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127256
.p2align 0x4
.long 0x1BF4
L_127256:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126859:
	movq $0x1ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp simple_15
.p2align 0x4
.long 0x1BDC
L_127092:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127093
L_127107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127108
.p2align 0x4
.long 0x1BE3
L_127108:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127093:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1BD5
L_127071:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127072
L_127078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127079
.p2align 0x4
.long 0x1BD9
L_127079:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127072:
	movq $0x407D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_127073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1BD1
L_127018:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127019
L_127030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127031
.p2align 0x4
.long 0x1BD2
L_127031:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127019:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_426343
L_127027:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_126583
L_127028:
	movq 0x0(%r14),%r15
L_127021:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_126583
L_127022:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_426340
	cmpq $0xF5A,%r14
	je L_426339
	cmpq $0xF5D,%r14
	je L_426338
	jmp L_126583
.p2align 0x4
L_426338:
L_127026:
	movq 0x0(%r15),%r14
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_127024:
	movq %r15,0x68(%rbp)
	jmp L_126867
.p2align 0x4
L_426339:
L_127025:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_127024
.p2align 0x4
L_426340:
L_127023:
	movq 0x0(%r15),%r14
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_127024
.p2align 0x4
L_426343:
L_127020:
	movq 0x0(%r15),%r15
	jmp L_127021
.p2align 0x4
.long 0x474
L_126972:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126973
L_126978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126979
.p2align 0x4
.long 0x49E
L_126979:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126973:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF350)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF358)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_126974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1BE4
L_127117:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127118
L_127253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127254
.p2align 0x4
.long 0x1BF3
L_127254:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127118:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127120:
	movq $0x3999,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	movl %r13d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1BF6
L_127262:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127263
L_127292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127293
.p2align 0x4
.long 0x1BFB
L_127293:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_127263:
	movq $0x4081,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movq $0x1,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_127264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1BFC
L_127297:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	movl %r15d,0x140(%rbp)
	movq $0x3,0x148(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_127298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C30
L_127702:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
.long 0x1C2E
L_127665:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127666
L_127697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_127698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127698
.p2align 0x4
.long 0x1C2F
L_127698:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_127666:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_127680
L_127667:
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_125352
L_127668:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_426360
L_127669:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_127671:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_127672
L_127685:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_127672
L_127686:
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x150(%rbp),%r13
	cmpq %r13,0x8(%r15)
	je L_426354
L_127672:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x7C(%rbp)
	jo L_125327
L_127673:
	cmpq $0x1,%r14
	je L_426349
L_127674:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x78(%rbp)
	jmp L_127671
.p2align 0x4
L_426349:
L_127675:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127676
L_127683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127684
.p2align 0x4
.long 0x1BF4
L_127684:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127676:
	movl 0x7C(%rbp),%ecx
L_127677:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_127678:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_426350
L_127682:
	movl %ecx,0x0(%r14)
	xorq %r15,%r15
L_127681:
	movq $0x1EDB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r14,%r15
	jmp simple_15
.p2align 0x4
L_426350:
L_127680:
	xorq %r15,%r15
	jmp L_127681
.p2align 0x4
L_426354:
L_127688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127689
L_127693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127694
.p2align 0x4
.long 0x1BF4
L_127694:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127689:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_127690:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426355
L_127691:
	movq 0xD8(%rbp),%r15
	jmp L_127681
.p2align 0x4
L_426355:
L_127692:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_127681
.p2align 0x4
L_426360:
L_127695:
	xorl %ecx,%ecx
	jmp L_127677
.p2align 0x4
.long 0x1C12
L_127520:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127521
L_127650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_127651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127651
.p2align 0x4
.long 0x1C2B
L_127651:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_127521:
	movq 0x128(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0xD8(%rbp),%r13
	cmpq $0x1,%r13
	je L_127648
	cmpq $0x2,%r13
	je L_426370
L_127522:
L_127523:
	movq %r15,0x128(%rbp)
	movq $0x23A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq %r14,0x120(%rbp)
L_127524:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x130(%rbp)
	cmpq %r14,%r11
	jne L_125269
L_127526:
	testq %r11,%r11
	jz L_426368
L_127527:
	cmpq $0x7FFFFFFF,%r11
	ja L_125434
L_127528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127529
L_127643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127644
.p2align 0x4
.long 0x1C13
L_127644:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_127529:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	movq 0x130(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127530
.p2align 0x4
.long 0x1C13
L_127530:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq %rax,0x138(%rbp)
L_127531:
	movq $0x1,0x140(%rbp)
	movq $0x0,0x148(%rbp)
loop_1347:
	movq 0x130(%rbp),%r15
	cmpq %r15,0x148(%rbp)
	jl L_426365
L_127532:
	movq 0x138(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r11,%r14
	jne L_125269
L_127534:
	movq $0x4083,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x148(%rbp)
	movq %r11,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_127535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426365:
L_127622:
	movq 0x148(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_127623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_426368:
L_127646:
	movq (globalObjptr+0x7550)(%rip),%r15
	movq %r15,0x138(%rbp)
	jmp L_127531
.p2align 0x4
L_426370:
L_127648:
	movq $0x1,%r13
	jmp L_127523
.p2align 0x4
.long 0x1C2C
L_127658:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127659
L_127660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_127661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127661
.p2align 0x4
.long 0x1C2D
L_127661:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_127659:
	movq $0x1,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xD8(%rbp)
	jmp L_127524
.p2align 0x4
.long 0x1C2C
L_127653:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127654
L_127655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_127656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127656
.p2align 0x4
.long 0x1C2D
L_127656:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_127654:
	movq $0x1,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xD8(%rbp)
	jmp L_127524
.p2align 0x4
.long 0x1C0D
L_127400:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x70(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_127401:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_426385
L_127402:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xD8(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_127404:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127405
L_127443:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA2,%r13
	jne L_127405
L_127444:
	movq 0x8(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x138(%rbp)
	je L_426378
L_127405:
	movl 0xD8(%rbp),%r13d
	incl %r13d
	jo L_125327
L_127406:
	cmpq $0x1,%r15
	je L_426375
L_127407:
	movl %r13d,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_127404
.p2align 0x4
L_426375:
	movl %r13d,%ecx
L_127409:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_127410:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_435
L_127442:
	movl %ecx,0x0(%r15)
x_435:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426378:
L_127446:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127447
L_127515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_127516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127516
.p2align 0x4
.long 0x1C11
L_127516:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_127447:
	movl 0xD8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_127448:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426380
L_127449:
	movq 0xE0(%rbp),%r15
L_127450:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_127452:
	movq %r11,0x160(%rbp)
	movq $0x407F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_127453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426380:
L_127514:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xD8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xE0(%rbp),%r15
	jmp L_127450
.p2align 0x4
L_426385:
L_127517:
	xorl %ecx,%ecx
	jmp L_127409
.p2align 0x4
.long 0x1C05
L_127332:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127333
L_127394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127395
.p2align 0x4
.long 0x1C0C
L_127395:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127333:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127335:
	movq %r11,0x138(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1C00
L_127311:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127312
L_127325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_127326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127326
.p2align 0x4
.long 0x1C04
L_127326:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_127312:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_127314:
	movq %r11,0x130(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_127315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x474
L_126736:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_126737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5C5
L_126709:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
.long 0x5C5
L_126698:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126700
L_126701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126702
.p2align 0x4
.long 0x1BC4
L_126702:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_126700
.p2align 0x4
.long 0x5FA
L_126623:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_126624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B4F
L_126595:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BAE
L_126538:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126539
L_126544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126545
.p2align 0x4
.long 0x1BAF
L_126545:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126539:
L_126540:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_126412
L_126542:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x108D,%r15
	jne L_126412
L_126543:
	movq 0x0(%r14),%r15
	jmp L_126489
.p2align 0x4
.long 0x1BA3
L_126498:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x5,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_126499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BA7
L_126510:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126511
L_126513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126514
.p2align 0x4
.long 0x1BA9
L_126514:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126511:
	movq 0x30(%rbp),%r15
	jmp L_126512
.p2align 0x4
.long 0x1BA8
heapCheckNonZero_1:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp heapCheckNonZero_0
.p2align 0x4
.long 0x1BAC
L_126526:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126527
L_126528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126529
.p2align 0x4
.long 0x1BAD
L_126529:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126527:
	movq 0x30(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_126496
.p2align 0x4
.long 0x1B8F
L_126413:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126414
L_126484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126485
.p2align 0x4
.long 0x1BA2
L_126485:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126414:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_426397
L_126415:
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	leaq L_126471(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426397:
L_126479:
	leaq L_126471(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B8D
L_126402:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126403
L_126404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126405
.p2align 0x4
.long 0x1B8E
L_126405:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126403:
	movq 0x28(%rbp),%r15
	jmp L_126300
.p2align 0x4
.long 0x1B6E
L_126305:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_126306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_126334:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B7B
L_126340:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_126341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x25
L_126348:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126349
L_126366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126367
.p2align 0x4
.long 0x1B84
L_126367:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126349:
	movq 0x28(%rbp),%r15
	cmpq $0x3,%r15
	je gotoHeapCheckTooLarge_1
L_126350:
	andq $0x3,%r15
	jnz L_126351
L_126352:
L_126351:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
gotoHeapCheckTooLarge_1:
gotoHeapCheckTooLarge_0:
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xA8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_426401
L_126354:
L_126355:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426401:
L_126356:
	movq %r11,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x110,%rbp
	leaq (L_126357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1B85
L_126369:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bug_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B86
L_126381:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_126382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_126397:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BB4
toIntInf_0:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426403
L_126569:
	movq %r14,0x148(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_126570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426403:
L_126577:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B5C
L_126236:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126237
L_126276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_126277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126277
.p2align 0x4
.long 0x1B6A
L_126277:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126237:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_426405
	cmpq $0x2,%r15
	je L_426404
L_126238:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_126239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_426404:
L_126270:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x10(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,0x78(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_126271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
L_426405:
L_126264:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x10(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,0x78(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_126265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
.long 0x1B6B
L_126281:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126282
L_126287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_126288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126288
.p2align 0x4
.long 0x1B6C
L_126288:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126282:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_426408
L_126285:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_126232
L_126286:
	movq 0x10(%r14),%r15
	jmp L_126234
.p2align 0x4
L_426408:
L_126283:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_126232
L_126284:
	movq 0x10(%r14),%r15
	jmp L_126234
.p2align 0x4
.long 0x1B4F
L_126219:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126196
L_126221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_126222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126222
.p2align 0x4
.long 0x1B5B
L_126222:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_126196
.p2align 0x4
.long 0x544
L_126216:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_126197
.p2align 0x4
.long 0x1B53
L_126152:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126153
L_126183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_126184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126184
.p2align 0x4
.long 0x1B5A
L_126184:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_126153:
	movq $0xCFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
L_126154:
	movq 0x78(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_126155
L_126160:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1098,%r13
	jne L_126155
L_126161:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_126155
	cmpq $0x2,%r13
	je L_426412
L_126162:
	movq %r13,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_126163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_426412:
L_126155:
	movq $0xDB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq 0x30(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0x90(%rbp)
	movq 0x38(%r13),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x98(%rbp)
	movq $0x3D61,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x20,%r12
	movq 0x40(%rbp),%r8
	movq %r8,0x0(%r13)
	movq 0x48(%rbp),%r8
	movq %r8,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0xC9F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x30,%r12
	movq %rsp,0x0(%r8)
	movq %r13,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq $0x32B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_126156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0xC5A
L_126143:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126144
L_126145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126146
.p2align 0x4
.long 0x184D
L_126146:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126144:
	movq $0x2A35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x12,0x0(%r14)
	movq $0xB,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x544
L_126123:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126124
L_126125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126126
.p2align 0x4
.long 0x1B50
L_126126:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126124:
	movq $0x2A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x6,0x0(%r14)
	movq $0x3,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x569
L_126090:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x569
L_126088:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x569
L_126039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x569
L_126037:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1B45
L_125882:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_125883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125883
.p2align 0x4
.long 0x1B46
L_125883:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1319:
	cmpq $0x1,%r15
	jnl L_426419
L_125934:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1319
.p2align 0x4
L_426419:
L_125884:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125885
L_125932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_125933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125933
.p2align 0x4
.long 0x1B4C
L_125933:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_125885:
	movq $0xA3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA41,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0xA43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0xA47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xA49,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x80(%rbp)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq (globalObjptr+0xD540)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_125886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1052
L_125936:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_125937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125937
.p2align 0x4
.long 0x123B
L_125937:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1321:
	cmpq $0x1,%r15
	jnl L_426421
L_125942:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1321
.p2align 0x4
L_426421:
L_125938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125939
L_125940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_125941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125941
.p2align 0x4
.long 0x1B46
L_125941:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_125939:
	movq $0xA3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA41,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0xA43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA45,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %r13,%r15
	addq $0x18,%r12
	movq $0x1,0x8(%rsi)
	movq %rsi,%r9
	movq $0xA47,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%rsp
	movq 0x50(%rbp),%r10
	movq %r10,%rdi
	movq %rsi,%r11
	movq %r13,%r8
	movq %r15,%r13
	movq %rdi,%r15
	movq %r9,%rsi
	movq %r14,%r9
	movq %rsp,%r14
L_125897:
	movq $0xA49,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r14,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r13,0x18(%rsp)
	addq $0x28,%r12
	movq $0xA49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %r8,0x18(%r15)
	addq $0x28,%r12
	movq $0x134B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %rsp,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_125898:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_426432
L_125899:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_125901:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125902
L_125914:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6F,%r13
	jne L_125902
L_125915:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_426427
L_125902:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_125327
L_125903:
	cmpq $0x1,%r15
	je L_426422
L_125904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_125901
.p2align 0x4
L_426422:
L_125905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125906
L_125912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_125913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125913
.p2align 0x4
.long 0x1449
L_125913:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_125906:
	movl 0x30(%rbp),%ecx
L_125907:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125908:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125910
L_125911:
	movl %ecx,0x0(%r15)
L_125910:
	movq $0x1ADF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426427:
L_125917:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125918:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125377
L_125920:
	movl %ecx,0x0(%r15)
	jmp L_125377
.p2align 0x4
L_426432:
L_125921:
	xorl %ecx,%ecx
	jmp L_125907
.p2align 0x4
.long 0xC7D
L_125871:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125872
L_125873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_125874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125874
.p2align 0x4
.long 0x539
L_125874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_125872:
	movq $0x2A37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x13,0x0(%r14)
	movq $0xD,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1B36
L_125805:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_125806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B2A
L_125767:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_125768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B26
L_125757:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125758
L_125759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_125760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125760
.p2align 0x4
.long 0x1B27
L_125760:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_125758:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r10
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x35,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x10(%r9)
	addq $0x30,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	movq $0x1,0x18(%r9)
	movq %r15,0x20(%r9)
	movq 0x0(%r14),%r15
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x5FA
L_125578:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125579
L_125610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125611
.p2align 0x4
.long 0x583
L_125611:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_125579:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_426450
L_125581:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_125582:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_426448
L_125583:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_125585:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_125586
L_125599:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA1,%r13
	jne L_125586
L_125600:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_426442
L_125586:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_125327
L_125587:
	cmpq $0x1,%r15
	je L_426437
L_125588:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x50(%rbp)
	jmp L_125585
.p2align 0x4
L_426437:
L_125589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125590
L_125597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_125598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125598
.p2align 0x4
.long 0x1B21
L_125598:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_125590:
	movl 0x54(%rbp),%ecx
L_125591:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_125592:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_125594
L_125596:
	movl %ecx,0x0(%r15)
L_125594:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x23C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r14)
	movq %r13,%r15
L_125595:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_125367
.p2align 0x4
L_426442:
L_125602:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125603
L_125607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_125608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125608
.p2align 0x4
.long 0x1B22
L_125608:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_125603:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_125604:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426443
L_125605:
	movq 0x58(%rbp),%r15
	jmp L_125595
.p2align 0x4
L_426443:
L_125606:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_125595
.p2align 0x4
L_426448:
L_125609:
	xorl %ecx,%ecx
	jmp L_125591
.p2align 0x4
L_426450:
L_125580:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x56D
L_128105:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0xE38)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1B0A
L_125333:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r15,0x38(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r14,%rdx
	movq %r14,0xA8(%rbp)
	jne L_125269
L_125335:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_125336:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125337
.p2align 0x4
.long 0x1B0B
L_125337:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xC0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1314:
	cmpq 0xB0(%rbp),%r15
	jnl L_426453
L_125453:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xA8(%rbp),%r13
	jnb L_125307
L_125455:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1314
.p2align 0x4
L_426453:
L_125338:
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_125339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sortArray_1
.p2align 0x4
.long 0x474
L_126796:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_126797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
rev_210:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_426458
L_127737:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_127738:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426457
.p2align 0x4,,0x7
L_127739:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426456
L_127740:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_127738
.p2align 0x4
L_426456:
L_127742:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426457:
L_127751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127752
.p2align 0x4
.long 0x4FD
L_127752:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_127739
.p2align 0x4
L_426458:
L_127753:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_127742
.p2align 0x4
.long 0x1C5B
L_127925:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127926
L_127936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_127937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127937
.p2align 0x4
.long 0x1C5E
L_127937:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_127926:
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x1C5B
L_127905:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127906
L_127916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_127917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127917
.p2align 0x4
.long 0x1C5E
L_127917:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_127906:
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x1C42
L_127821:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127822
L_127893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_127894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127894
.p2align 0x4
.long 0x1C5A
L_127894:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_127822:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x140(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426461
L_127823:
	movq %r14,0x178(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (word_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426461:
L_127888:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_127896:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C3D
L_127795:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127796
L_127809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127810
.p2align 0x4
.long 0x1C3F
L_127810:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127796:
	movq 0x118(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_426464
L_127806:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_126583
L_127807:
	movq 0x0(%r14),%r15
L_127798:
	movq $0x2141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	addq $0x10,%r12
	jmp L_127799
.p2align 0x4
L_426464:
L_127797:
	movq 0x0(%r15),%r15
	jmp L_127798
.p2align 0x4
.long 0x1C36
L_127760:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127761
L_127768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127769
.p2align 0x4
.long 0x1C38
L_127769:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_127761:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426467
L_127762:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_16:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127763
.p2align 0x4
.long 0x1C37
L_127763:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1354:
	cmpq $0x1,%r15
	jnl L_426466
L_127766:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1354
.p2align 0x4
L_426466:
L_127764:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426467:
L_127767:
	movq $0x1,0x110(%rbp)
	jmp new1_16
.p2align 0x4
.long 0x474
bug_373:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127774
L_127775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127776
.p2align 0x4
.long 0x49E
L_127776:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127774:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C64
word_42:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127992
L_128047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_128048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128048
.p2align 0x4
.long 0x1C76
L_128048:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_127992:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_126583
L_127993:
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_127994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1586
.p2align 0x4
.long 0x474
L_128050:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
bug_384:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128058
L_128059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128060
.p2align 0x4
.long 0x49E
L_128060:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128058:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C5C
L_127970:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127971
L_127977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127978
.p2align 0x4
.long 0x1C5D
L_127978:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127971:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426474
L_127972:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_20:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127973
.p2align 0x4
.long 0x1C37
L_127973:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1361:
	cmpq $0x1,%r15
	jnl L_426473
L_127975:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1361
.p2align 0x4
L_426473:
L_127974:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426474:
L_127976:
	movq $0x1,0x110(%rbp)
	jmp new1_20
.p2align 0x4
.long 0x474
bug_380:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127983
L_127984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127985
.p2align 0x4
.long 0x49E
L_127985:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127983:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C5C
L_127948:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127949
L_127955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127956
.p2align 0x4
.long 0x1C5D
L_127956:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127949:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426478
L_127950:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_19:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127951
.p2align 0x4
.long 0x1C37
L_127951:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1360:
	cmpq $0x1,%r15
	jnl L_426477
L_127953:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1360
.p2align 0x4
L_426477:
L_127952:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426478:
L_127954:
	movq $0x1,0x110(%rbp)
	jmp new1_19
.p2align 0x4
.long 0x474
bug_379:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127961
L_127962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127963
.p2align 0x4
.long 0x49E
L_127963:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127961:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BDD
L_127094:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127095
L_127105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127106
.p2align 0x4
.long 0x1BE2
L_127106:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127095:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq $0x11,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1BD6
L_127073:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_127074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0x474
L_126974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126975
L_126976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126977
.p2align 0x4
.long 0x49E
L_126977:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126975:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BE5
L_127121:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127122
L_127251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127252
.p2align 0x4
.long 0x1BF2
L_127252:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127122:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_127133
L_127123:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
.p2align 0x4,,0x7
L_127124:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movl %r13d,%r15d
	movl %r15d,0x6C(%rbp)
	movslq %r15d,%r11
	cmpq %r11,%r13
	jne L_125269
L_127126:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_125269
L_127128:
	cmpl %r11d,%r15d
	je L_426505
L_127129:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_426483
L_127130:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_127124
.p2align 0x4
L_426483:
L_127131:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127133
L_127235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127236
.p2align 0x4
.long 0x1BE6
L_127236:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127133:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r14,%r11
	jne L_125269
L_127135:
	testq %r11,%r11
	jz L_426502
L_127136:
	cmpq $0x7FFFFFFF,%r11
	ja L_125434
L_127137:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127138
L_127231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127232
.p2align 0x4
.long 0x1BE6
L_127232:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127138:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127139
.p2align 0x4
.long 0x1BE6
L_127139:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x90(%rbp)
L_127140:
	movq $0x0,0xA0(%rbp)
loop_1337:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_426499
L_127141:
	movq 0x90(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x11FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x23AD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x70(%rbp)
L_127142:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_125352
L_127143:
	movq %r15,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426497
L_127144:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x6C(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_127146:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127147
L_127155:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_127147
L_127156:
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x98(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_426488
L_127147:
	movl 0x6C(%rbp),%r13d
	incl %r13d
	jo L_125327
L_127148:
	cmpq $0x1,%r15
	je L_426484
L_127149:
	movl %r13d,0x6C(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_127146
.p2align 0x4
L_426484:
	movl %r13d,%ecx
L_127151:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_127152:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_126583
L_127154:
	movl %ecx,0x0(%r15)
	jmp L_126583
.p2align 0x4
L_426488:
L_127158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127159
L_127223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127224
.p2align 0x4
.long 0x1BED
L_127224:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127159:
	movl 0x6C(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_125363
L_127160:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_426491
L_127161:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_126583
L_127163:
	shrq $0x1,%r15
	movl %r15d,%ecx
L_127164:
	movq $0x1ECF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_125269
L_127166:
	movq %r11,0x100(%rbp)
	movq $0x407B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_127167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_426491:
L_127220:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x6C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_126583
L_127222:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_127164
.p2align 0x4
L_426497:
L_127225:
	xorl %ecx,%ecx
	jmp L_127151
.p2align 0x4
L_426499:
L_127226:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_127227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_29
.p2align 0x4
L_426502:
L_127234:
	movq (globalObjptr+0x7530)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_127140
.p2align 0x4
L_426505:
L_127237:
	movl $0x0,0xB0(%rbp)
loop_1341:
	movl 0xB0(%rbp),%r15d
	cmpl %r15d,0x6C(%rbp)
	je L_426507
L_127238:
	movslq %r15d,%r14
	cmpq 0xA8(%rbp),%r14
	jnb L_125307
L_127240:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x118(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x110(%rbp)
	addq $0x110,%rbp
	leaq (not_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_426507:
L_127249:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	jmp L_127142
.p2align 0x4
.long 0x1BF6
L_127264:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x130(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	addq $0x110,%rbp
	leaq (L_127265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1BFD
L_127298:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_127299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C31
L_127703:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127704
L_127710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127711
.p2align 0x4
.long 0x1C32
L_127711:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127704:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_426513
L_127707:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_126583
L_127708:
	movq 0x0(%r14),%r15
L_127706:
	movq $0x1EDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r14,%r15
	jmp simple_15
.p2align 0x4
L_426513:
L_127705:
	movq 0x0(%r15),%r15
	jmp L_127706
.p2align 0x4
.long 0x1C14
L_127535:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127536
L_127620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127621
.p2align 0x4
.long 0x1C20
L_127621:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_127536:
	movq $0x4085,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_127537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1C21
L_127623:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_127624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
.long 0x474
L_127412:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1C0E
L_127453:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r10
	movq %r10,0x68(%rbp)
	movq 0x148(%rbp),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_125352
L_127454:
	movq %r15,0x0(%r10)
	movq 0x78(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426524
L_127455:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_127457:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_426523
L_127496:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCBE,%r10
	jne L_426522
L_127497:
	cmpq 0x0(%r11),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_426519
L_127458:
	incl %ecx
	jo L_125327
L_127459:
	cmpq $0x1,%r15
	je L_426516
L_127460:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_127457
.p2align 0x4
L_426516:
L_127461:
L_127462:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_125363
L_127463:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_436
L_127495:
	movl %ecx,0x0(%r15)
x_436:
	movq %r14,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426519:
L_127499:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_125363
L_127500:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_127502
L_127512:
	movl %ecx,0x0(%r15)
L_127502:
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
L_426522:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_127458
.p2align 0x4
L_426523:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_127458
.p2align 0x4
L_426524:
L_127513:
	xorl %ecx,%ecx
	jmp L_127462
.p2align 0x4
.long 0x1C06
L_127336:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127337
L_127392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127393
.p2align 0x4
.long 0x1C0B
L_127393:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127337:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127339:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_125269
L_127341:
	cmpl %ecx,%r13d
	jne L_127172
L_127343:
	cmpl $0x0,%r13d
	jl L_426544
L_127344:
	movq $0x1,0x78(%rbp)
	xorl %ecx,%ecx
loop_1344:
	cmpl 0x68(%rbp),%ecx
	jnl L_426526
L_127383:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x6C(%rbp)
	movslq %ecx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_127384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_426526:
L_127345:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_426543
L_127346:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127347:
	incl %ecx
	jo L_125327
L_127348:
	cmpq $0x1,%r15
	je L_426527
L_127349:
	movq 0x8(%r15),%r15
	jmp L_127347
.p2align 0x4
L_426527:
L_127350:
L_127351:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_426541
L_127352:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127353:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127354
.p2align 0x4
.long 0x1C07
L_127354:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x68(%rbp)
L_127355:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1345:
	cmpq 0x60(%rbp),%r15
	jnl L_426529
L_127377:
	cmpq $0x1,%r14
	je L_426528
L_127378:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1345
.p2align 0x4
L_426528:
L_127205:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426529:
L_127356:
	movq 0x68(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %rdx,%r14
	jne L_125269
L_127358:
	decl %r13d
	movl %r13d,0x70(%rbp)
	jo L_125327
L_127359:
	testq %rdx,%rdx
	jz L_426537
L_127360:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127361:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127362
.p2align 0x4
.long 0x1C08
L_127362:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_127363:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1346:
	cmpq 0x60(%rbp),%r15
	jnl L_426531
L_127373:
	movl %r15d,%r14d
	movl 0x70(%rbp),%r13d
	subl %r14d,%r13d
	jo L_125327
L_127374:
	movslq %r13d,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1346
.p2align 0x4
L_426531:
L_127364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127365
L_127371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127372
.p2align 0x4
.long 0x1C07
L_127372:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127365:
	movq 0x78(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_426534
	cmpq $0x2,%r14
	je L_426533
L_127366:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_426532
L_127368:
	movq $0x2,0x48(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_127033
.p2align 0x4
L_426532:
L_127367:
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r8
	movb 0x21(%r9),%spl
	movb %spl,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%esp
	movl %esp,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%esp
	movl %esp,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%esp
	movl %esp,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq $0x2,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq %r8,%r15
	jmp L_126862
.p2align 0x4
L_426533:
L_127370:
	movq $0x2,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_127114
.p2align 0x4
L_426534:
L_127369:
	movq $0x2,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_127112
.p2align 0x4
L_426537:
L_127376:
	movq (globalObjptr+0x2560)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_127363
.p2align 0x4
L_426541:
L_127381:
	movq (globalObjptr+0xD38)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_127355
.p2align 0x4
L_426543:
L_127382:
	xorl %ecx,%ecx
	jmp L_127351
.p2align 0x4
L_426544:
L_127172:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C01
L_127315:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0x474
L_126737:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_126738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1052
L_126624:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_126625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_21
.p2align 0x4
.long 0x1053
L_126596:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_126597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x1BA4
L_126499:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126500
L_126519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126520
.p2align 0x4
.long 0x1BAB
L_126520:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126500:
	cmpq $0x1,0x50(%rbp)
	je L_426549
L_126501:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_426549:
L_126518:
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
L_126504:
	cmpq $0x1,0x98(%rbp)
	je L_426550
L_126505:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_426550:
L_126507:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_426551
L_126508:
	movq 0x50(%rbp),%r15
	jmp L_126509
.p2align 0x4
L_426551:
L_126515:
	movq 0x50(%rbp),%r15
	jmp L_126512
.p2align 0x4
.long 0x1B90
L_126416:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_126417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x25
L_126471:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126472
L_126477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126478
.p2align 0x4
.long 0x1B84
L_126478:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126472:
	movq 0x28(%rbp),%r15
	cmpq $0x3,%r15
	je gotoHeapCheckTooLarge_0
L_126473:
	andq $0x3,%r15
	jnz L_126474
L_126475:
L_126474:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B85
L_126480:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bug_369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B6F
L_126306:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x128(%rbp)
	movq $0x3,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_126307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_363:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126335
L_126336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126337
.p2align 0x4
.long 0x49E
L_126337:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126335:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B7C
L_126341:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x138(%rbp)
	movq $0x3,0x140(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_126342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1B80
L_126357:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126358
L_126364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126365
.p2align 0x4
.long 0x1B75
L_126365:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126358:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1B85
bug_364:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126370
L_126371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126372
.p2align 0x4
.long 0x505
L_126372:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126370:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B87
L_126382:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x128(%rbp)
	movq $0x3,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_126383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_365:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126398
L_126399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126400
.p2align 0x4
.long 0x49E
L_126400:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126398:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BB3
L_126570:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_126571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_126578:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B5D
L_126239:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126240
L_126262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126263
.p2align 0x4
.long 0x1B67
L_126263:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126240:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x10(%r15)
	movw 0x0(%r13),%r15w
	movw %r15w,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
.long 0x1B68
L_126271:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126272
L_126274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_126275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126275
.p2align 0x4
.long 0x1B69
L_126275:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_126272:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x262B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_126273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
.long 0x1B68
L_126265:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126266
L_126268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_126269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126269
.p2align 0x4
.long 0x1B69
L_126269:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_126266:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x262B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_126267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
.long 0x1B56
L_126163:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126164
L_126179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_126180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126180
.p2align 0x4
.long 0x1B59
L_126180:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_126164:
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_126171
L_126165:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_126166:
	movq 0x88(%rbp),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x0(%r13)
	je L_426564
L_126167:
	cmpq $0x1,%r14
	je L_426562
L_126168:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126166
.p2align 0x4
L_426562:
L_126169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126171
L_126172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_126173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126173
.p2align 0x4
.long 0x1B57
L_126173:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_126171:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2637,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_126155
.p2align 0x4
L_426564:
L_126174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126155
L_126176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_126177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126177
.p2align 0x4
.long 0x1B58
L_126177:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_126155
.p2align 0x4
.long 0x1B54
L_126156:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126157
L_126158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_126159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126159
.p2align 0x4
.long 0x1B55
L_126159:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_126157:
	movq $0x2A2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x363B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r13)
	movq $0x2A4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x20(%r14)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x30(%rbp)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1B47
L_125886:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_125887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125887
.p2align 0x4
.long 0x1B48
L_125887:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1320:
	cmpq $0x1,%r15
	jnl L_426569
L_125931:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1320
.p2align 0x4
L_426569:
L_125888:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125889
L_125929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_125930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125930
.p2align 0x4
.long 0x1B4B
L_125930:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_125889:
	movq $0xA3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA41,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x10(%r13)
	movq $0xA43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0xA47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,%r11
	movq %r11,0x0(%r13)
	cmpq $0x1,%r11
	je L_125896
L_125890:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_125891:
	movq 0x0(%r15),%r13
	cmpq %r13,0x78(%rbp)
	je L_426572
L_125892:
	cmpq $0x1,%r14
	je L_426570
L_125893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125891
.p2align 0x4
L_426570:
L_125894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125896
L_125922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_125923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125923
.p2align 0x4
.long 0x1B49
L_125923:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_125896:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x2637,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%rsp
	movq %rsp,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x90(%rbp),%r11
	movq 0x88(%rbp),%r13
	movq 0x78(%rbp),%r9
	movq 0x50(%rbp),%r10
	movq 0x70(%rbp),%rsi
	movq 0x68(%rbp),%r8
	jmp L_125897
.p2align 0x4
L_426572:
L_125924:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125925
L_125926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_125927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125927
.p2align 0x4
.long 0x1B4A
L_125927:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_125925:
	movq 0x98(%rbp),%r14
	movq 0x58(%rbp),%r15
	movq 0x90(%rbp),%r11
	movq 0x88(%rbp),%r13
	movq 0x78(%rbp),%r9
	movq 0x50(%rbp),%r10
	movq 0x70(%rbp),%rsi
	movq 0x68(%rbp),%r8
	jmp L_125897
.p2align 0x4
.long 0x1B36
L_125806:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_125807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B2A
L_125768:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125769
L_125801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_125802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125802
.p2align 0x4
.long 0x1B35
L_125802:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_125769:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_125770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1B0C
L_125339:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125340
L_125451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_125452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125452
.p2align 0x4
.long 0x1B13
L_125452:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_125340:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_125269
L_125342:
	movl %r14d,0xD0(%rbp)
	movq $0x37EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_125343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
.long 0x45A
L_126797:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xF348)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_127743:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127744
L_127749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127750
.p2align 0x4
.long 0x49E
L_127750:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127744:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF370)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1C5C
L_127927:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127928
L_127934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127935
.p2align 0x4
.long 0x1C5D
L_127935:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127928:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426581
L_127929:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_18:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127930
.p2align 0x4
.long 0x1C37
L_127930:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1359:
	cmpq $0x1,%r15
	jnl L_426580
L_127932:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1359
.p2align 0x4
L_426580:
L_127931:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426581:
L_127933:
	movq $0x1,0x110(%rbp)
	jmp new1_18
.p2align 0x4
.long 0x1C5C
L_127907:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127908
L_127914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127915
.p2align 0x4
.long 0x1C5D
L_127915:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127908:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426584
L_127909:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_17:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_127910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127910
.p2align 0x4
.long 0x1C37
L_127910:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1358:
	cmpq $0x1,%r15
	jnl L_426583
L_127912:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1358
.p2align 0x4
L_426583:
L_127911:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426584:
L_127913:
	movq $0x1,0x110(%rbp)
	jmp new1_17
.p2align 0x4
.long 0x1C43
word_41:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127824
L_127886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_127887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127887
.p2align 0x4
.long 0x1C59
L_127887:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_127824:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movl 0x128(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426586
L_127825:
	movq %r14,0x180(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_127826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426586:
L_127881:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_127889:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
bug_378:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127897
L_127898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127899
.p2align 0x4
.long 0x49E
L_127899:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127897:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C65
L_127994:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127995
L_128044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_128045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128045
.p2align 0x4
.long 0x1C75
L_128045:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_127995:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_127996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x474
bug_383:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128051
L_128052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128053
.p2align 0x4
.long 0x49E
L_128053:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128051:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BDE
L_127096:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	jne L_426591
L_127099:
	movq $0x11,0x110(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_127100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_426591:
L_127098:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BD7
L_127074:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127075
L_127076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127077
.p2align 0x4
.long 0x1BD8
L_127077:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127075:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_126881
.p2align 0x4
.long 0x1BE7
L_127167:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127168
L_127218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127219
.p2align 0x4
.long 0x1BEC
L_127219:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127168:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x6C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_127170:
	cmpl 0x68(%rbp),%r13d
	jne L_127172
L_127173:
	cmpl $0x0,%r13d
	jl L_127172
L_127174:
	movq $0x1,0x80(%rbp)
	xorl %ecx,%ecx
loop_1338:
	cmpl 0x6C(%rbp),%ecx
	jnl L_426593
L_127209:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x68(%rbp)
	movslq %ecx,%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_127210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_426593:
L_127175:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_426607
L_127176:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127177:
	incl %ecx
	jo L_125327
L_127178:
	cmpq $0x1,%r15
	je L_426594
L_127179:
	movq 0x8(%r15),%r15
	jmp L_127177
.p2align 0x4
L_426594:
L_127180:
L_127181:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_426605
L_127182:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127183:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127184
.p2align 0x4
.long 0x1BE8
L_127184:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_127185:
	movq 0x80(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1339:
	cmpq 0x60(%rbp),%r15
	jnl L_426596
L_127202:
	cmpq $0x1,%r14
	je L_127205
L_127203:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1339
.p2align 0x4
L_426596:
L_127186:
	movq 0x68(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r14,%rdx
	jne L_125269
L_127188:
	decl %r13d
	movl %r13d,0x70(%rbp)
	jo L_125327
L_127189:
	testq %rdx,%rdx
	jz L_426601
L_127190:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127191:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127192
.p2align 0x4
.long 0x1BE9
L_127192:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x80(%rbp)
L_127193:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1340:
	cmpq 0x60(%rbp),%r15
	jnl L_426598
L_127198:
	movl %r15d,%r14d
	movl 0x70(%rbp),%r13d
	subl %r14d,%r13d
	jo L_125327
L_127199:
	movslq %r13d,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1340
.p2align 0x4
L_426598:
L_127194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127195
L_127196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127197
.p2align 0x4
.long 0x1BE8
L_127197:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127195:
	movq 0x80(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_126881
.p2align 0x4
L_426601:
L_127201:
	movq (globalObjptr+0x2560)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_127193
.p2align 0x4
L_426605:
L_127207:
	movq (globalObjptr+0xD38)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_127185
.p2align 0x4
L_426607:
L_127208:
	xorl %ecx,%ecx
	jmp L_127181
.p2align 0x4
.long 0x1BEE
L_127227:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movl 0x118(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movl 0x11C(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127228
L_127229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127230
.p2align 0x4
.long 0x1BEF
L_127230:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127228:
	movq $0xFB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x6C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x90(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_1337
.p2align 0x4
.long 0x1BF0
not_45:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127241
L_127247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127248
.p2align 0x4
.long 0x1BF1
L_127248:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127241:
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426614
L_127242:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_127133
L_127243:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_127124
.p2align 0x4
L_426614:
L_127245:
	movl 0xB0(%rbp),%r15d
	incl %r15d
	jo L_125327
L_127246:
	movl %r15d,0xB0(%rbp)
	jmp loop_1341
.p2align 0x4
.long 0x1BF7
L_127265:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	cmpl $0x8,%r15d
	je objptr_5
	cmpl $0x10,%r15d
	je L_426622
	cmpl $0x20,%r15d
	je L_426621
	cmpl $0x40,%r15d
	je L_426617
L_127266:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426617:
L_127291:
	movq 0xD8(%rbp),%r15
	movq %r15,0x70(%rbp)
objptr_5:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127268
.p2align 0x4
.long 0x1BF4
L_127268:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1343:
	cmpq $0x1,%r15
	jnl L_426618
L_127288:
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1343
.p2align 0x4
L_426618:
L_127269:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127270
L_127286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127287
.p2align 0x4
.long 0x1BFA
L_127287:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127270:
	movq 0x78(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426619
L_127271:
	movq %r14,0x118(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_127272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426619:
L_127281:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426621:
L_127290:
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp objptr_5
.p2align 0x4
L_426622:
L_127289:
	movq 0xE0(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp objptr_5
.p2align 0x4
.long 0x1BFE
L_127299:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127300
L_127301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_127302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127302
.p2align 0x4
.long 0x1BFF
L_127302:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_127300:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1342
.p2align 0x4
.long 0x1C15
L_127537:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x148(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_127538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0x1C22
L_127624:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127625
L_127641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_127642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127642
.p2align 0x4
.long 0x1C2A
L_127642:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_127625:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_127626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x474
L_127413:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_127465:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1C0F
L_127503:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127504
L_127510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127511
.p2align 0x4
.long 0x1C10
L_127511:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127504:
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_426627
	cmpq $0x2,%r14
	je L_426626
L_127505:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_426625
L_127507:
	movq %r15,0x48(%rbp)
	jmp L_127033
.p2align 0x4
L_426625:
L_127506:
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_126862
.p2align 0x4
L_426626:
L_127509:
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_127114
.p2align 0x4
L_426627:
L_127508:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r14
	jmp L_127112
.p2align 0x4
.long 0x1C09
L_127384:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127385
L_127389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_127390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127390
.p2align 0x4
.long 0x1C0A
L_127390:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_127385:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_426629
L_127386:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
L_127387:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	movl 0x6C(%rbp),%ecx
	jmp loop_1344
.p2align 0x4
L_426629:
L_127388:
	movq $0x1,%r15
	jmp L_127387
.p2align 0x4
.long 0x1C02
L_127316:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127317
L_127323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127324
.p2align 0x4
.long 0x1C03
L_127324:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127317:
	movq 0xF0(%rbp),%r15
	cmpq $0x1,%r15
	je L_426633
	cmpq $0x2,%r15
	je L_426632
L_127318:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_426631
L_127320:
	movq $0x1,0x48(%rbp)
	jmp L_127033
.p2align 0x4
L_426631:
L_127319:
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq $0x1,0x30(%rbp)
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_126862
.p2align 0x4
L_426632:
L_127322:
	movq $0x1,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_127114
.p2align 0x4
L_426633:
L_127321:
	movq $0x1,%r13
	movq 0x60(%rbp),%r14
	xchgq %r13,%r15
	jmp L_127112
.p2align 0x4
.long 0x45A
L_126738:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xEF28)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BBD
L_126625:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je L_426637
	cmpw $0x2,%r15w
	je L_426635
L_126626:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_126627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426635:
L_126664:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	testb %r14b,%r14b
	jnz L_426636
L_126665:
	movq (globalObjptr+0xDE30)(%rip),%r15
L_126666:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_126627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426636:
L_126667:
	movq (globalObjptr+0xDE38)(%rip),%r15
	jmp L_126666
.p2align 0x4
L_426637:
L_126663:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_126627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BB9
L_126597:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_126598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
.long 0x1BA5
L_126502:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126504
L_126516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126517
.p2align 0x4
.long 0x1BAA
L_126517:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_126504
.p2align 0x4
.long 0x1BA6
L_126506:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp next_12
.p2align 0x4
.long 0x1B91
L_126417:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x138(%rbp)
	movq $0x3,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_126418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1B85
bug_369:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126481
L_126482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126483
.p2align 0x4
.long 0x505
L_126483:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126481:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B70
L_126307:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_126308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B7D
L_126342:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_126343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B81
L_126359:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x1B88
L_126383:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_126384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BB5
L_126571:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movl 0x158(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl %r15d,0x158(%rbp)
	movq $0x3,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_126572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_370:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126579
L_126580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126581
.p2align 0x4
.long 0x49E
L_126581:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126579:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B5E
L_126241:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126242
L_126260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126261
.p2align 0x4
.long 0x1B66
L_126261:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126242:
	movq $0xCF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCF7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x10,%r12
	movq $0x2,0x0(%r13)
	movq $0xCF9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_126243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1596
.p2align 0x4
.long 0xE59
L_126273:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_125367
.p2align 0x4
.long 0xE59
L_126267:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_125367
.p2align 0x4
.long 0x1B37
L_125807:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125808
L_125866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_125867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125867
.p2align 0x4
.long 0x1B44
L_125867:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_125808:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_125810:
	movl %r13d,0x70(%rbp)
	movq $0x3CAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_125811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B2B
L_125770:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_125771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1B0A
L_125343:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125344
L_125449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_125450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125450
.p2align 0x4
.long 0x1B0B
L_125450:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_125344:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_125327
L_125345:
	movl %r14d,0x0(%r15)
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r9,0x0(%r14)
	movl %r13d,0x28(%rbp)
	jmp L_125346
.p2align 0x4
.long 0x5EE
L_126798:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_127745:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127746
L_127747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127748
.p2align 0x4
.long 0x49E
L_127748:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127746:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C44
L_127826:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x150(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_127827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_127882:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
bug_377:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127890
L_127891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127892
.p2align 0x4
.long 0x49E
L_127892:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127890:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C66
L_127996:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_127997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1BDF
L_127100:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127101
L_127103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127104
.p2align 0x4
.long 0x1BE1
L_127104:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127101:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1BEA
L_127210:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127211
L_127215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_127216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127216
.p2align 0x4
.long 0x1BEB
L_127216:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_127211:
	movl 0x90(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_426649
L_127212:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_127213:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movl 0x68(%rbp),%ecx
	jmp loop_1338
.p2align 0x4
L_426649:
L_127214:
	movq $0x1,%r15
	jmp L_127213
.p2align 0x4
.long 0x1BF8
L_127272:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127273
L_127279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127280
.p2align 0x4
.long 0x1BF4
L_127280:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127273:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movl $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_127282:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C16
L_127538:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x128(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r14
	jne L_125269
L_127540:
	testq %rdx,%rdx
	jz L_426683
L_127541:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127542:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127543
.p2align 0x4
.long 0x1C17
L_127543:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq %rax,0xE0(%rbp)
L_127544:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_1348:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426681
.p2align 0x4,,0x7
L_127545:
	movq 0x108(%rbp),%r15
	cmpq 0x78(%rbp),%r15
	jnl L_426656
L_127609:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x128(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_127610:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_126583
L_127611:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_426654
	cmpq $0xF5A,%r15
	je L_426653
	cmpq $0xF5D,%r15
	je L_426652
	jmp L_126583
.p2align 0x4
L_426652:
L_127615:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_127613:
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x108(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x108(%rbp)
	jmp loop_1348
.p2align 0x4
L_426653:
L_127614:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_127613
.p2align 0x4
L_426654:
L_127612:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_127613
.p2align 0x4
L_426656:
L_127546:
	movq 0xE0(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz L_426680
L_127547:
	cmpq $0x7FFFFFFF,%rdx
	ja L_125434
L_127548:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127549
.p2align 0x4
.long 0x1C18
L_127549:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq %rax,0x78(%rbp)
L_127550:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_1349:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426678
.p2align 0x4,,0x7
L_127551:
	movq 0x108(%rbp),%r15
	cmpq 0x70(%rbp),%r15
	jnl L_426657
L_127604:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x138(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x108(%rbp)
	jmp loop_1349
.p2align 0x4
L_426657:
L_127552:
	movq 0x78(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x70(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0xE0(%rbp)
.p2align 0x4,,0x7
L_127553:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426677
.p2align 0x4,,0x7
L_127554:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF5D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x297F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_426658
L_127555:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_127553
.p2align 0x4
L_426658:
L_127556:
	movq %r13,0x78(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0xE0(%rbp)
.p2align 0x4,,0x7
L_127557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426676
.p2align 0x4,,0x7
L_127558:
	movq $0x297F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_426659
L_127559:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_127557
.p2align 0x4
L_426659:
L_127560:
	movq 0xE0(%rbp),%r13
	cmpq $0x1,%r13
	je L_426670
L_127561:
	movq 0x78(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_127562:
	addq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r13
	je L_426660
L_127563:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_127562
.p2align 0x4
L_426660:
L_127564:
	testq %r15,%r15
	jz L_426669
L_127565:
	cmpq $0x7FFFFFFF,%r15
	ja L_125434
L_127566:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127567
.p2align 0x4
.long 0x1C19
L_127567:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x108(%rbp)
L_127568:
	movq 0xE0(%rbp),%r11
	movq 0x78(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1350:
	cmpq 0x70(%rbp),%r15
	jnl L_426663
.p2align 0x4,,0x7
loop_1351:
	cmpq 0x0(%r13),%r14
	jl L_426662
L_127580:
	cmpq $0x1,%r11
	je L_126941
L_127581:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_1351
.p2align 0x4
L_426662:
L_127583:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x108(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_1350
.p2align 0x4
L_426663:
L_127569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127570
L_127577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_127578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127578
.p2align 0x4
.long 0x1C1A
L_127578:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_127570:
	movq 0x108(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
L_127571:
	movq $0x1ED9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xF0(%rbp),%r15
	cmpq $0x1,%r15
	je L_426666
	cmpq $0x2,%r15
	je L_426665
L_127572:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_426664
L_127574:
	movq %r14,0x48(%rbp)
	jmp L_127033
.p2align 0x4
L_426664:
L_127573:
	movq %r14,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_126862
.p2align 0x4
L_426665:
L_127576:
	movq %r14,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_127114
.p2align 0x4
L_426666:
L_127575:
	movq 0x60(%rbp),%r13
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_127112
.p2align 0x4
L_426669:
L_127585:
	movq (globalObjptr+0x7560)(%rip),%r14
	movq %r14,0x108(%rbp)
	jmp L_127568
.p2align 0x4
L_426670:
L_127586:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x70(%rbp)
	je L_426675
L_127587:
	testq %r13,%r13
	jz L_426674
L_127588:
	cmpq $0x7FFFFFFF,%r13
	ja L_125434
L_127589:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127590
.p2align 0x4
.long 0x1C1B
L_127590:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_127591:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1352:
	cmpq 0xE0(%rbp),%r15
	jnl L_426671
L_127596:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x78(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1352
.p2align 0x4
L_426671:
L_127592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127593
L_127594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127595
.p2align 0x4
.long 0x1C1C
L_127595:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127593:
	movq 0x78(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_127571
.p2align 0x4
L_426674:
L_127598:
	movq (globalObjptr+0x7568)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_127591
.p2align 0x4
L_426675:
L_127599:
	movq 0x70(%rbp),%r15
	jmp L_127571
.p2align 0x4
L_426676:
L_127600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127601
.p2align 0x4
.long 0x1C1D
L_127601:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_127558
.p2align 0x4
L_426677:
L_127602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127603
.p2align 0x4
.long 0x1C1D
L_127603:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_127554
.p2align 0x4
L_426678:
L_127605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127606
.p2align 0x4
.long 0x1C1E
L_127606:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_127551
.p2align 0x4
L_426680:
L_127608:
	movq (globalObjptr+0x7558)(%rip),%r14
	movq %r14,0x78(%rbp)
	jmp L_127550
.p2align 0x4
L_426681:
L_127616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_127617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127617
.p2align 0x4
.long 0x1C1F
L_127617:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_127545
.p2align 0x4
L_426683:
L_127619:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0xE0(%rbp)
	jmp L_127544
.p2align 0x4
.long 0x1C23
L_127626:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127627
L_127639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_127640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127640
.p2align 0x4
.long 0x1C29
L_127640:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_127627:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x11,0x180(%rbp)
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_127628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x45A
L_127414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_127415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_127466:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_126739:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_126740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BBE
L_126627:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126628
L_126661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126662
.p2align 0x4
.long 0x1B46
L_126662:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126628:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD208)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movw 0x0(%r14),%r13w
	movw %r13w,%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je L_426688
	cmpw $0x2,%r15w
	je L_426686
L_126629:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426686:
L_126657:
	shrw $0x2,%r13w
	movb %r13b,%r14b
	testb %r14b,%r14b
	jnz L_426687
L_126658:
	movq (globalObjptr+0xDE30)(%rip),%r15
L_126659:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426687:
L_126660:
	movq (globalObjptr+0xDE38)(%rip),%r15
	jmp L_126659
.p2align 0x4
L_426688:
L_126656:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BBA
L_126598:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_126599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x1B92
L_126418:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_126419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B71
L_126308:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126309
L_126331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126332
.p2align 0x4
.long 0x1B7A
L_126332:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126309:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_126310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0x1B7E
L_126343:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126344
L_126346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126347
.p2align 0x4
.long 0x1B7F
L_126347:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126344:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x120(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_126345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp heapCheck_0
.p2align 0x4
.long 0x1B82
L_126360:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126361
L_126362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126363
.p2align 0x4
.long 0x1B83
L_126363:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126361:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF340)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x40(%r14)
	movq (globalObjptr+0xF58)(%rip),%r13
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0xF08)(%rip),%r11
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r11)
	movq (globalObjptr+0xEF8)(%rip),%r10
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq $0x1,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq %r11,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_126355
.p2align 0x4
.long 0x1B89
L_126384:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126385
L_126394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126395
.p2align 0x4
.long 0x1B8C
L_126395:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126385:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_126386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0x1BB6
L_126572:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x130(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x158(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_126573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B5F
L_126243:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126244
L_126258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_126259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126259
.p2align 0x4
.long 0x1B28
L_126259:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_126244:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x262B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_126245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
.long 0x1B38
L_125811:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_125812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B2B
L_125771:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (globalObjptr+0xF320)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_125772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x700
L_126799:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126800
L_126823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_126824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126824
.p2align 0x4
.long 0x5EF
L_126824:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_126800:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_126801:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_125327
L_126802:
	cmpq $0x1,%r14
	je L_426695
L_126803:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126801
.p2align 0x4
L_426695:
L_126804:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126805
L_126821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126822
.p2align 0x4
.long 0x48D
L_126822:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126805:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426696
L_126806:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_209:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426696:
L_126820:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_209
.p2align 0x4
.long 0x1C45
L_127827:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_127828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_376:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127883
L_127884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127885
.p2align 0x4
.long 0x49E
L_127885:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127883:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C66
L_127997:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x130(%rbp)
	movq 0x198(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426701
L_127998:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_127999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426701:
L_128039:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BE0
L_127102:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1335
.p2align 0x4
.long 0x1BF9
L_127274:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x110(%rbp)
	movl $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_127275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x474
bug_372:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127283
L_127284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127285
.p2align 0x4
.long 0x49E
L_127285:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127283:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C24
L_127628:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq $0x1,%r15
	jne L_127098
L_127630:
	movq 0x168(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq $0x11,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_127631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x5EE
L_127415:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_127416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_127467:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xF348)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_127468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x700
L_126740:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126741
L_126763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_126764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126764
.p2align 0x4
.long 0x5EF
L_126764:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_126741:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_126742:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_125327
L_126743:
	cmpq $0x1,%r14
	je L_426704
L_126744:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126742
.p2align 0x4
L_426704:
L_126745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126746
L_126761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126762
.p2align 0x4
.long 0x48D
L_126762:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126746:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426705
L_126747:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_208:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426705:
L_126760:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_208
.p2align 0x4
.long 0x1BBF
L_126630:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126631
L_126654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126655
.p2align 0x4
.long 0x1B44
L_126655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126631:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_426710
	cmpq $0x2,%r13
	je L_426709
L_126632:
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_126633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426709:
L_126653:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426710:
L_126652:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BBB
L_126599:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_126600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B93
L_126419:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126420
L_126469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126470
.p2align 0x4
.long 0x1BA1
L_126470:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126420:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126421
.p2align 0x4
.long 0x1B94
L_126421:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1323:
	cmpq $0x2,%r15
	jnl L_426714
L_126464:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_426713
	cmpl $0x1,%r14d
	je L_426712
L_126465:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4A8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426712:
L_126468:
	movq 0x30(%rbp),%r14
L_126467:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1323
.p2align 0x4
L_426713:
L_126466:
	movq 0x48(%rbp),%r14
	jmp L_126467
.p2align 0x4
L_426714:
L_126422:
	movq 0x28(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xA8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r15
	je L_426716
L_126423:
	movq %r15,0x30(%rbp)
L_126424:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_426715
L_126425:
	movq 0x0(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426715:
L_126449:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426716:
L_126454:
	movq %r13,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_126455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1B72
L_126310:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126311
L_126329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126330
.p2align 0x4
.long 0x1B79
L_126330:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126311:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movq (globalWord64+0x138)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0x120)(%rip),%r15
	movq %r15,0x138(%rbp)
	movq $0x11,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x128,%rbp
	leaq (L_126312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0xE59
L_126345:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_125367
.p2align 0x4
.long 0x1B8A
L_126386:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126387
L_126392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126393
.p2align 0x4
.long 0x1B8B
L_126393:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126387:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq (globalWord64+0xFA8)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq $0x11,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0xFC0)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0x1BB7
L_126573:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126574
L_126575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_126576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126576
.p2align 0x4
.long 0x1BB8
L_126576:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_126574:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_126564
.p2align 0x4
.long 0x1B60
L_126245:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126246
L_126256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126257
.p2align 0x4
.long 0x1B65
L_126257:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126246:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x262D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x10(%r15)
	movq 0x40(%rbp),%r15
	movw 0x0(%r15),%r13w
	movw %r13w,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_126247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
.long 0x1B38
L_125812:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125813
L_125864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_125865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125865
.p2align 0x4
.long 0x1B44
L_125865:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_125813:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF328)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_125269
L_125815:
	movl %r13d,0x80(%rbp)
	movq $0x3B2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B2B
L_125772:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125773
L_125799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_125800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125800
.p2align 0x4
.long 0x1B34
L_125800:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_125773:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_125269
L_125775:
	movl %r13d,0x80(%rbp)
	movq $0x3CAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x474
rev_207:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_426728
L_126807:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_126808:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426727
.p2align 0x4,,0x7
L_126809:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426726
L_126810:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_126808
.p2align 0x4
L_426726:
L_126812:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_126813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426727:
L_126817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126818
.p2align 0x4
.long 0x4FD
L_126818:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_126809
.p2align 0x4
L_426728:
L_126819:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_126812
.p2align 0x4
.long 0x1C45
L_127828:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_127829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C67
L_127999:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_128000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_128040:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BC8
L_127275:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127276
L_127277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_127278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127278
.p2align 0x4
.long 0x1BF4
L_127278:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_127276:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xDA18)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x40(%r14)
	movq $0x1EDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x18(%r15)
	jmp simple_15
.p2align 0x4
.long 0x1C25
L_127631:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127632
L_127637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_127638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127638
.p2align 0x4
.long 0x1C28
L_127638:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_127632:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_127633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x700
L_127416:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127417
L_127440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127441
.p2align 0x4
.long 0x5EF
L_127441:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127417:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_127418:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_125327
L_127419:
	cmpq $0x1,%r14
	je L_426731
L_127420:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127418
.p2align 0x4
L_426731:
L_127421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127422
L_127438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127439
.p2align 0x4
.long 0x48D
L_127439:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127422:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426732
L_127423:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_210:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426732:
L_127437:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_210
.p2align 0x4
.long 0x5EE
L_127468:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_127469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
rev_206:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_426738
L_126748:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_126749:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426737
.p2align 0x4,,0x7
L_126750:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426736
L_126751:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_126749
.p2align 0x4
L_426736:
L_126753:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426737:
L_126757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126758
.p2align 0x4
.long 0x4FD
L_126758:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_126750
.p2align 0x4
L_426738:
L_126759:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_126753
.p2align 0x4
.long 0x1BC0
L_126633:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1BC0
L_126634:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126635
L_126650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_126651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126651
.p2align 0x4
.long 0x1BC3
L_126651:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_126635:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE20)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_126636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1BBB
L_126600:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126601
L_126612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126613
.p2align 0x4
.long 0x1BBC
L_126613:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126601:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126602:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_126603:
	cmpq $0x1,%r14
	je L_426740
L_126604:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126602
.p2align 0x4
L_426740:
L_126605:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126606
L_126610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126611
.p2align 0x4
.long 0x1B3D
L_126611:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126606:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426741
L_126607:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_429:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_126608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426741:
L_126609:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_429
.p2align 0x4
.long 0x1B95
L_126426:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126427
L_126447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126448
.p2align 0x4
.long 0x1B9B
L_126448:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126427:
	movq $0x217B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_426745
L_126428:
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (word_39+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426745:
L_126442:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_126450:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B9C
L_126455:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126456
L_126462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126463
.p2align 0x4
.long 0x1BA0
L_126463:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126456:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1,0x138(%rbp)
	movl $0x0,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1B73
L_126312:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126313
L_126327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126328
.p2align 0x4
.long 0x1B78
L_126328:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126313:
	movl 0x38(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_426749
L_126314:
	movq 0xF0(%rbp),%r13
	movq 0xF8(%rbp),%r14
	movq 0x100(%rbp),%r15
L_126315:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_125367
L_126317:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq (globalWord64+0xFA8)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq $0x11,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0xFC0)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
L_426749:
L_126322:
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_126323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1B74
L_126388:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126389
L_126390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126391
.p2align 0x4
.long 0x1B75
L_126391:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126389:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x1B61
L_126247:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126248
L_126254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126255
.p2align 0x4
.long 0x1B64
L_126255:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126248:
	movq $0xCF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCF7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq $0x2,0x0(%r13)
	movq $0xCF9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_126249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1596
.p2align 0x4
.long 0x1B39
L_125816:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_125817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B2C
L_125776:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_125777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x474
L_126813:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126814
L_126815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126816
.p2align 0x4
.long 0x49E
L_126816:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126814:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C46
L_127829:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127830
L_127879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_127880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127880
.p2align 0x4
.long 0x1C58
L_127880:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_127830:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_127831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0x1C68
L_128000:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movl %r15d,0x1B8(%rbp)
	movq $0x3,0x1C0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_128001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_382:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128041
L_128042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128043
.p2align 0x4
.long 0x49E
L_128043:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128041:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C26
L_127633:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127634
L_127635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_127636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127636
.p2align 0x4
.long 0x1C27
L_127636:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_127634:
	movq 0x138(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x148(%rbp),%r14
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x148(%rbp)
	jmp loop_1347
.p2align 0x4
.long 0x474
rev_208:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_426759
L_127424:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_127425:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426758
.p2align 0x4,,0x7
L_127426:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426757
L_127427:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_127425
.p2align 0x4
L_426757:
L_127429:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426758:
L_127434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127435
.p2align 0x4
.long 0x4FD
L_127435:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_127426
.p2align 0x4
L_426759:
L_127436:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_127429
.p2align 0x4
.long 0x700
L_127469:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127470
L_127493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127494
.p2align 0x4
.long 0x5EF
L_127494:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127470:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_127471:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_125327
L_127472:
	cmpq $0x1,%r14
	je L_426760
L_127473:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127471
.p2align 0x4
L_426760:
L_127474:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127475
L_127491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127492
.p2align 0x4
.long 0x48D
L_127492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127475:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426761
L_127476:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_211:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426761:
L_127490:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_211
.p2align 0x4
.long 0x474
bug_371:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126754
L_126755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126756
.p2align 0x4
.long 0x49E
L_126756:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126754:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BC1
L_126636:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126637
L_126648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_126649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126649
.p2align 0x4
.long 0x1BC2
L_126649:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_126637:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126638:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_126639:
	cmpq $0x1,%r14
	je L_426766
L_126640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126638
.p2align 0x4
L_426766:
L_126641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126642
L_126646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126647
.p2align 0x4
.long 0x1B50
L_126647:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126642:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426767
L_126643:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_430:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426767:
L_126645:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_430
.p2align 0x4
.long 0x5CD
L_126608:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1B96
word_39:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126429
L_126440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126441
.p2align 0x4
.long 0x1B9A
L_126441:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126429:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r14,0x110(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_126430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp heapCheck_0
.p2align 0x4
.long 0x474
L_126443:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
bug_368:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126451
L_126452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126453
.p2align 0x4
.long 0x49E
L_126453:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126451:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B9D
L_126457:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x138(%rbp)
	movl $0x0,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_126458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x1B74
L_126318:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126319
L_126320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126321
.p2align 0x4
.long 0x1B75
L_126321:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126319:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_125367
.p2align 0x4
.long 0x1B76
L_126323:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126324
L_126325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_126326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126326
.p2align 0x4
.long 0x1B77
L_126326:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_126324:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r13)
	movq $0x1,%r14
	movq (globalObjptr+0xF58)(%rip),%r15
	jmp L_126315
.p2align 0x4
.long 0x1B62
L_126249:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126250
L_126252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126253
.p2align 0x4
.long 0x1B63
L_126253:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126250:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x262B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_126251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
.long 0x1B39
L_125817:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125818
L_125862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125863
.p2align 0x4
.long 0x1B43
L_125863:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125818:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF330)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x50(%rbp)
	je L_426776
L_125819:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426776:
L_125857:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B2C
L_125777:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125778
L_125797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125798
.p2align 0x4
.long 0x1B33
L_125798:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125778:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125779:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_125780:
	cmpq $0x1,%r14
	je L_426778
L_125781:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125779
.p2align 0x4
L_426778:
L_125782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125783
L_125795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125796
.p2align 0x4
.long 0x1B32
L_125796:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125783:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426779
L_125784:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
x_427:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_125785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426779:
L_125794:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_427
.p2align 0x4
.long 0x1C47
L_127831:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x130(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x158(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_426783
L_127832:
	movq 0x0(%r15),%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_127833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426783:
L_127874:
	movq 0x158(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C69
L_128001:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_128002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x474
L_127430:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127431
L_127432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127433
.p2align 0x4
.long 0x49E
L_127433:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127431:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
rev_209:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_426787
L_127477:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_127478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426786
.p2align 0x4,,0x7
L_127479:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426785
L_127480:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_127478
.p2align 0x4
L_426785:
L_127482:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426786:
L_127487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127488
.p2align 0x4
.long 0x4FD
L_127488:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_127479
.p2align 0x4
L_426787:
L_127489:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_127482
.p2align 0x4
.long 0x59C
L_126644:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1B97
L_126430:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_426788
L_126431:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (word_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426788:
L_126435:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_126436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
bug_367:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126444
L_126445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126446
.p2align 0x4
.long 0x49E
L_126446:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126444:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B9E
L_126458:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126459
L_126460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_126461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126461
.p2align 0x4
.long 0x1B9F
L_126461:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_126459:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r15b
	movzbl %r15b,%r13d
	movb $0x1,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF340)(%rip),%r15
	movq %r15,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x30(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%r14)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r13
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0xEF8)(%rip),%r11
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x213D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x20,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x10(%r10)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x30,%r12
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movq %r13,0x30(%rbp)
	jmp L_126424
.p2align 0x4
.long 0xE59
L_126251:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_125367
.p2align 0x4
.long 0x1B3A
L_125820:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_125821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1B41
L_125858:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125859
L_125860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125861
.p2align 0x4
.long 0x1B42
L_125861:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125859:
	movq 0x28(%rbp),%r15
L_125830:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_426791
L_125831:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_125832:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426791:
L_125851:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_125832
.p2align 0x4
.long 0x1B2D
L_125785:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_125786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1C48
L_127833:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_127834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_127875:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C6A
L_128002:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128003
L_128037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_128038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128038
.p2align 0x4
.long 0x1C74
L_128038:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_128003:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1B8(%rbp)
	movq $0x2,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_128004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x474
L_127483:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127484
L_127485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127486
.p2align 0x4
.long 0x49E
L_127486:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127484:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B98
word_40:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126432
L_126433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_126434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126434
.p2align 0x4
.long 0x1B99
L_126434:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_126432:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x213F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x28(%r15)
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xF0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_125367
.p2align 0x4
.long 0x474
L_126436:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B3B
L_125821:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_125822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B3C
L_125833:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125834
L_125849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125850
.p2align 0x4
.long 0x1B3E
L_125850:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125834:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF338)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_125835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B2E
L_125786:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125787
L_125792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125793
.p2align 0x4
.long 0x1B31
L_125793:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125787:
	movq $0x3323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_125788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x1C49
L_127834:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x170(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_127835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127876
L_127877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127878
.p2align 0x4
.long 0x49E
L_127878:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127876:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C6B
L_128004:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128005
L_128035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_128036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128036
.p2align 0x4
.long 0x1C73
L_128036:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_128005:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x9,0x10(%r13)
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq $0x2,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_128006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x474
bug_366:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126437
L_126438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_126439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126439
.p2align 0x4
.long 0x49E
L_126439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_126437:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B3B
L_125822:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125823
L_125855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125856
.p2align 0x4
.long 0x1B40
L_125856:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125823:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125824:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_125825:
	cmpq $0x1,%r14
	je L_426801
L_125826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125824
.p2align 0x4
L_426801:
L_125827:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125828
L_125853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_125854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125854
.p2align 0x4
.long 0x1B3F
L_125854:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_125828:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426802
L_125829:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_125830
.p2align 0x4
L_426802:
L_125852:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_125830
.p2align 0x4
.long 0x543
L_125835:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125836
L_125847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_125848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125848
.p2align 0x4
.long 0x5AC
L_125848:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_125836:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_125837:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_125327
L_125838:
	cmpq $0x1,%r14
	je L_426806
L_125839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_125837
.p2align 0x4
L_426806:
L_125840:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125841
L_125845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_125846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125846
.p2align 0x4
.long 0x1B3D
L_125846:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_125841:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426807
L_125842:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
x_428:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_125843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_426807:
L_125844:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_428
.p2align 0x4
.long 0x1B2F
L_125788:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_125789
L_125790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_125791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_125791
.p2align 0x4
.long 0x1B30
L_125791:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_125789:
	movq $0x32A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x1C49
L_127835:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_127836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C6C
L_128006:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128007
L_128033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_128034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128034
.p2align 0x4
.long 0x1C72
L_128034:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_128007:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0xA,0x10(%r14)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426812
L_128008:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_128009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426812:
L_128028:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5C1
L_125843:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_125662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1C4A
L_127836:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127837
L_127872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127873
.p2align 0x4
.long 0x1C57
L_127873:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_127837:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x5,0x8(%r15)
	movq %r15,0x178(%rbp)
	movq $0x2,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_127838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1C6D
L_128009:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128010
L_128026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_128027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128027
.p2align 0x4
.long 0x1C71
L_128027:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_128010:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_128011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x474
L_128029:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C4B
L_127838:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127839
L_127870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127871
.p2align 0x4
.long 0x1C56
L_127871:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_127839:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x9,0x10(%r14)
	movq 0x110(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_127840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x1C6E
L_128011:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128012
L_128024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_128025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128025
.p2align 0x4
.long 0x1C70
L_128025:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_128012:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_426821
L_128013:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
L_128014:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_128015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128015
.p2align 0x4
.long 0x1C6F
L_128015:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1362:
	cmpq $0x3,%r15
	jnl L_426820
L_128017:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_426819
	cmpl $0x1,%r13d
	je L_426818
	cmpl $0x2,%r13d
	je L_426817
L_128018:
	movq (globalObjptr+0x4D0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426817:
L_128022:
	movq 0x110(%rbp),%r13
L_128020:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1362
.p2align 0x4
L_426818:
L_128021:
	movq 0x118(%rbp),%r13
	jmp L_128020
.p2align 0x4
L_426819:
L_128019:
	movq 0x130(%rbp),%r13
	jmp L_128020
.p2align 0x4
L_426820:
L_128016:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
.p2align 0x4
L_426821:
L_128023:
	movq $0x1,0x110(%rbp)
	jmp L_128014
.p2align 0x4
.long 0x474
bug_381:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128030
L_128031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128032
.p2align 0x4
.long 0x49E
L_128032:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128030:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C4C
L_127840:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127841
L_127868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127869
.p2align 0x4
.long 0x1C55
L_127869:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_127841:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x148(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_426824
L_127842:
	movq 0x0(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_127843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426824:
L_127863:
	movq 0x158(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C4D
L_127843:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_127844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_127864:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C4E
L_127844:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_127845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_374:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127865
L_127866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127867
.p2align 0x4
.long 0x49E
L_127867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127865:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C4F
L_127845:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r15,0x178(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_127846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C50
L_127846:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127847
L_127861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127862
.p2align 0x4
.long 0x1C54
L_127862:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_127847:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x5,0x8(%r15)
	movq %r15,0x178(%rbp)
	movq $0x2,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_127848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1C51
L_127848:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127849
L_127859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127860
.p2align 0x4
.long 0x1C53
L_127860:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_127849:
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x9,0x10(%r15)
	movq %r15,0x118(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	movq $0x4,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_127850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127850
.p2align 0x4
.long 0x1C52
L_127850:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1357:
	cmpq $0x4,%r15
	jnl L_426832
L_127852:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_426831
	cmpl $0x1,%r13d
	je L_426830
	cmpl $0x2,%r13d
	je L_426829
	cmpl $0x3,%r13d
	je L_426828
L_127853:
	movq (globalObjptr+0x508)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426828:
L_127858:
	movq 0x118(%rbp),%r13
L_127855:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1357
.p2align 0x4
L_426829:
L_127857:
	movq 0x160(%rbp),%r13
	jmp L_127855
.p2align 0x4
L_426830:
L_127856:
	movq 0x130(%rbp),%r13
	jmp L_127855
.p2align 0x4
L_426831:
L_127854:
	movq 0x168(%rbp),%r13
	jmp L_127855
.p2align 0x4
L_426832:
L_127851:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_127765
