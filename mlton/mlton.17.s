/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:17 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1317
.hidden x_1317
x_1317:
L_54395:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_54540
L_54396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_395896
L_54397:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_395895
L_54398:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x18E1,%rax
	cmpq $0x1F,%rax
	ja L_395848
	jmp *jumpTable_127(,%rax,8)
.data
.p2align 0x4
jumpTable_127:
.quad L_395893,L_395892,L_395891,L_395890,L_395888,L_395886,L_395885,L_395883,L_395882,L_395881,L_395880,L_395879,L_395876,L_395875,L_395874,L_395871,L_395870,L_395869,L_395868,L_395867,L_395866,L_395864,L_395863,L_395861,L_395859,L_395858,L_395857,L_395855,L_395854,L_395853,L_395851,L_395849
.text
.p2align 0x4
L_395848:
L_54399:
	movq 0x0(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x68(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_1339
.p2align 0x4
L_395849:
L_54536:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395850
L_54537:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x1,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395850:
L_54538:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395851:
L_54533:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_395852
L_54534:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395852:
L_54535:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395853:
L_54529:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_54530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_395854:
L_54528:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp visitExp_0
.p2align 0x4
L_395855:
L_54525:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395856
L_54526:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395856:
L_54527:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395857:
L_54524:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp x_1340
.p2align 0x4
L_395858:
L_54514:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_54515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_395859:
L_54511:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395860
L_54512:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x5,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395860:
L_54513:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395861:
L_54508:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_395862
L_54509:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395862:
L_54510:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395863:
L_54507:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1341
.p2align 0x4
L_395864:
L_54504:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395865
L_54505:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395865:
L_54506:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395866:
L_54499:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395867:
L_54494:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395868:
L_54484:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_54485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_395869:
L_54479:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395870:
L_54474:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395871:
L_54467:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_395872
L_54468:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movb $0xA,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_54469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395872:
L_54470:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395873
L_54471:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0xA,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395873:
L_54472:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395874:
L_54462:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395875:
L_54457:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395876:
L_54450:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_395877
L_54451:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movb $0xE,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_54452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395877:
L_54453:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395878
L_54454:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0xE,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395878:
L_54455:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395879:
L_54445:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395880:
L_54440:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x28(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_54441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_395881:
L_54439:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp visitType_0
.p2align 0x4
L_395882:
L_54436:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (x_109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_395883:
L_54433:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395884
L_54434:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x10,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395884:
L_54435:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395885:
L_54432:
	movq 0x0(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x68(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_1342
.p2align 0x4
L_395886:
L_54411:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_395887
L_54412:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
L_54413:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_54414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_395887:
L_54425:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395888:
L_54408:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395889
L_54409:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x13,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395889:
L_54410:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395890:
L_54407:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp visitType_1
.p2align 0x4
L_395891:
L_54406:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x18(%rbp)
	jmp x_1343
.p2align 0x4
L_395892:
L_54403:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (x_108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395893:
L_54400:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395894
L_54401:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x14,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395894:
L_54402:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395895:
L_54539:
	movq (globalObjptr+0xEC8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395896:
L_54540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_54541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54541
.p2align 0x4
.long 0x452
L_54541:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_54397
.p2align 0x4
.long 0x1
L_54530:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395898
L_54531:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395898:
L_54532:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_54515:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1454,%r15
	jne L_395900
L_54516:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_395899
L_54517:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_395899:
L_54523:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395900:
L_54415:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_54500:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54501
L_54502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54503
.p2align 0x4
.long 0x4E9
L_54503:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54501:
	movq $0x35D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x4E6
L_54495:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54496
L_54497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54498
.p2align 0x4
.long 0x4E9
L_54498:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54496:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x522
L_54485:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_54415
L_54486:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_395903
L_54487:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_395903:
L_54493:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_54480:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54481
L_54482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54483
.p2align 0x4
.long 0x4E9
L_54483:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54481:
	movq $0x35BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x4E6
L_54475:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54476
L_54477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54478
.p2align 0x4
.long 0x4E9
L_54478:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54476:
	movq $0x357D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x522
L_54469:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_54470
.p2align 0x4
.long 0x4E6
L_54463:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54464
L_54465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54466
.p2align 0x4
.long 0x4E9
L_54466:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54464:
	movq $0x357D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x4E6
L_54458:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54459
L_54460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54461
.p2align 0x4
.long 0x4E9
L_54461:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54459:
	movq $0x35BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x522
L_54452:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_54453
.p2align 0x4
.long 0x4E6
L_54446:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54447
L_54448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54449
.p2align 0x4
.long 0x4E9
L_54449:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54447:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x4E6
L_54441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54442
L_54443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54444
.p2align 0x4
.long 0x4E9
L_54444:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54442:
	movq $0x35D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x1
x_109:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395911
L_54437:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395911:
L_54438:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_54414:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_54415
L_54416:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_395912
L_54417:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_395912:
L_54428:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_54425
L_54429:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_54413
.p2align 0x4
.long 0x1
x_108:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395915
L_54404:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395915:
L_54405:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_54518:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54519
L_54521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_54522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54522
.p2align 0x4
.long 0x2C
L_54522:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_54519:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1454,%r13
	jne L_395916
L_54520:
	movl 0x0(%r14),%r13d
	movq $0x28A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395916:
L_54420:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_54488:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54489
L_54491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_54492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54492
.p2align 0x4
.long 0x2C
L_54492:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_54489:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_54420
L_54490:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0xD,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x789
L_54418:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54419
L_54426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_54427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54427
.p2align 0x4
.long 0x45C
L_54427:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_54419:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1442,%r13
	jne L_54420
L_54421:
	movl 0x0(%r14),%r13d
	movq $0x2885,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movb $0x12,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_54422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x4B0
L_54422:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_54425
L_54423:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_54413
.text
.p2align 0x4
.globl x_1339
.hidden x_1339
x_1339:
L_54542:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_54871
L_54543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_395923
L_54544:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x3329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_54545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_395923:
L_54871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54872
.p2align 0x4
.long 0x678
L_54872:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_54544
.p2align 0x4
.long 0xC5F
L_54545:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54546
L_54869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_54870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54870
.p2align 0x4
.long 0xC75
L_54870:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_54546:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_395939
L_54547:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_395936
	cmpq $0xF32,%r14
	je L_395933
	cmpq $0xF33,%r14
	je L_395932
	cmpq $0xF34,%r14
	je L_395931
	cmpq $0xF35,%r14
	je L_395926
	cmpq $0xF36,%r14
	je L_395925
L_54548:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x3533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_54549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_395925:
L_54858:
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_54859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_395926:
L_54637:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r14
	je L_395930
	cmpq $0x2,%r14
	je L_395929
L_54638:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	cmpq $0x1,%r15
	je L_395928
	cmpq $0x2,%r15
	je L_395927
L_54639:
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,%r15
L_54640:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_54641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
L_395927:
L_54855:
	movq %r11,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	movq %r13,%r15
	jmp L_54640
.p2align 0x4
L_395928:
L_54854:
	movq %r11,0x58(%rbp)
	movq $0x2,0x50(%rbp)
	movq %r13,%r15
	jmp L_54640
.p2align 0x4
L_395929:
L_54857:
	movq $0x2,0x50(%rbp)
	movq $0x2,0x58(%rbp)
	movq %r13,%r15
	jmp L_54640
.p2align 0x4
L_395930:
L_54856:
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r13,%r15
	jmp L_54640
.p2align 0x4
L_395931:
L_54572:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_54573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_395932:
L_54567:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_54568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395933:
L_54560:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395934
L_54561:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_54562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395934:
L_54563:
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	cmpq $0x1,%r14
	je L_395935
L_54564:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_0
.p2align 0x4
L_395935:
L_54558:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395936:
L_54552:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395937
L_54553:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_54554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395937:
L_54555:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_54558
L_54556:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_0
.p2align 0x4
L_395939:
L_54868:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_54549:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0x5F1
L_54859:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (x_114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0x76C
L_54641:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_54642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVars_0
.p2align 0x4
.long 0xC60
L_54573:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54574
L_54635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54636
.p2align 0x4
.long 0xC67
L_54636:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_54574:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395941
L_54575:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_54576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395941:
L_54578:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_395945
L_54585:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_395944
L_54588:
	testl %r13d,%r13d
	jz L_395942
L_54589:
	movq $0x3657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0x80(%rbp)
	movb $0x0,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_54590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_395942:
L_54627:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_395943
L_54628:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395943:
L_54631:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395944:
L_54587:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395945:
L_54579:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3607,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x2,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_54580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x869
L_54568:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_54569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVars_0
.p2align 0x4
.long 0x513
L_54562:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_54563
.p2align 0x4
.long 0x513
L_54554:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_54555
.p2align 0x4
.long 0x1
x_110:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395947
L_54550:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395947:
L_54551:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
x_114:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395948
L_54860:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movb $0x2,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_54861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395948:
L_54862:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0xC68
L_54642:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54643
L_54852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_54853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54853
.p2align 0x4
.long 0xC74
L_54853:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_54643:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_395973
	cmpq $0x2,%r15
	je L_395949
L_54644:
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395949:
L_54769:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_395952
	cmpq $0x2,%r15
	je L_395950
L_54770:
L_54664:
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395950:
L_54682:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395951
L_54683:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395951:
L_54684:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395952:
L_54714:
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
L_54715:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_54716
L_54732:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_54716
L_54733:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movl %r11d,0x58(%rbp)
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_54587
L_54735:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r10,%r15
	jne L_54587
L_54737:
	cmpl %r14d,%r11d
	jne L_54653
L_54739:
	cmpl $0x0,%r11d
	jl L_395967
L_54740:
	movl $0x0,0x5C(%rbp)
.p2align 0x4,,0x7
loop_650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_395966
.p2align 0x4,,0x7
L_54741:
	movl 0x5C(%rbp),%r15d
	cmpl 0x58(%rbp),%r15d
	jnl L_395959
L_54743:
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0x68(%rbp)
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x48(%rbp),%r11
	movq 0x8(%r11,%r15,1),%r10
	movq 0x0(%r10),%r13
	movq 0x50(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r11
	movq 0x0(%r11),%r10
	cmpq %r10,%r13
	je L_54750
L_54744:
	movq 0x8(%r13),%r15
	movq 0x8(%r10),%r14
	cmpq $0x1,%r15
	je L_395955
L_54745:
	cmpq $0x1,%r14
	je L_54750
L_54746:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_395953
L_54747:
L_54748:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	movq %r11,%r15
L_54749:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
.p2align 0x4,,0x7
L_54750:
	movl 0x68(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	jmp loop_650
.p2align 0x4
L_395953:
L_54751:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54749
.p2align 0x4
L_395955:
L_54753:
	cmpq $0x1,%r14
	je L_54750
L_54754:
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_54750
L_54755:
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r10)
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_54756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395959:
L_54716:
	movq 0x60(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r13
	cmpq %r13,%r14
	je L_54682
L_54717:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r15
	je L_395962
L_54718:
	cmpq $0x1,%r14
	je L_54682
L_54719:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_395960
L_54720:
L_54721:
	movq $0x41F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	xchgq %r13,%r15
L_54722:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	jmp L_54682
.p2align 0x4
L_395960:
L_54723:
	movq $0x41F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54722
.p2align 0x4
L_395962:
L_54725:
	cmpq $0x1,%r14
	je L_54682
L_54726:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_54682
L_54727:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395966:
L_54760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_54761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54761
.p2align 0x4
.long 0x772
L_54761:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_54741
.p2align 0x4
L_395967:
L_54653:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_395973:
L_54799:
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x10(%r14),%r15
	movq %r15,0x58(%rbp)
L_54800:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_54801
L_54820:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_54801
L_54821:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x68(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_54587
L_54823:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_54587
L_54825:
	cmpl %r13d,%r11d
	jne L_54653
L_54827:
	cmpl $0x0,%r11d
	jl L_54653
L_54828:
	movl $0x0,0x6C(%rbp)
.p2align 0x4,,0x7
loop_651:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_395989
.p2align 0x4,,0x7
L_54829:
	movl 0x6C(%rbp),%r15d
	cmpl 0x68(%rbp),%r15d
	jnl L_395980
L_54831:
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0x70(%rbp)
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x48(%rbp),%r11
	movq 0x8(%r11,%r15,1),%r10
	movq 0x0(%r10),%r13
	movq 0x58(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r11
	movq 0x0(%r11),%r10
	cmpq %r13,%r10
	je L_54838
L_54832:
	movq 0x8(%r13),%r15
	movq 0x8(%r10),%r14
	cmpq $0x1,%r15
	je L_395976
L_54833:
	cmpq $0x1,%r14
	je L_54838
L_54834:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_395974
L_54835:
L_54836:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	movq %r11,%r15
L_54837:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
.p2align 0x4,,0x7
L_54838:
	movl 0x70(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	jmp loop_651
.p2align 0x4
L_395974:
L_54839:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54837
.p2align 0x4
L_395976:
L_54841:
	cmpq $0x1,%r14
	je L_54838
L_54842:
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_54838
L_54843:
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r10)
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movb $0x2,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_54844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395980:
L_54801:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x40(%rbp),%r15
	movq 0x30(%r15),%r13
	cmpq %r13,%r14
	je L_54769
L_54802:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r15
	je L_395985
L_54803:
	cmpq $0x1,%r14
	je L_54769
L_54804:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_395983
L_54805:
L_54806:
	movq $0x41B7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	xchgq %r13,%r15
L_54807:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_54714
	cmpq $0x2,%r15
	je L_54682
L_54808:
	jmp L_54664
.p2align 0x4
L_395983:
L_54811:
	movq $0x41B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54807
.p2align 0x4
L_395985:
L_54813:
	cmpq $0x1,%r14
	je L_54769
L_54814:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_54769
L_54815:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395989:
L_54848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54849
.p2align 0x4
.long 0xC73
L_54849:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_54829
.p2align 0x4
.long 0xC60
L_54576:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54578
L_54632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54633
.p2align 0x4
.long 0xC66
L_54633:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_54578
.p2align 0x4
.long 0xC61
L_54590:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_54591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x1
x_113:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_395998
L_54629:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_395998:
L_54630:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71F
L_54580:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_395999
L_54581:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_395999:
L_54584:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_54569:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396000
L_54570:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396000:
L_54571:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_54861:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_54862
.p2align 0x4
.long 0x5EE
x_115:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396001
L_54863:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x2,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_54864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396001:
L_54865:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp visitType_1
.p2align 0x4
.long 0xC69
L_54645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54646
L_54797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_54798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54798
.p2align 0x4
.long 0xC71
L_54798:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_54646:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_54658
L_54647:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movl %r11d,0x70(%rbp)
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_54587
L_54649:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r15,%r10
	jne L_54587
L_54651:
	cmpl %r11d,%r13d
	jne L_54653
L_54654:
	cmpl $0x0,%r11d
	jl L_54653
L_54655:
	movl $0x0,0x74(%rbp)
.p2align 0x4,,0x7
loop_648:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396014
.p2align 0x4,,0x7
L_54656:
	movl 0x74(%rbp),%r15d
	cmpl 0x70(%rbp),%r15d
	jnl L_396008
L_54776:
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0x78(%rbp)
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x68(%rbp),%r11
	movq 0x8(%r11,%r15,1),%r10
	movq 0x0(%r10),%r13
	movq 0x58(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r11
	movq 0x0(%r11),%r10
	cmpq %r13,%r10
	je L_54783
L_54777:
	movq 0x8(%r13),%r15
	movq 0x8(%r10),%r14
	cmpq $0x1,%r15
	je L_396004
L_54778:
	cmpq $0x1,%r14
	je L_54783
L_54779:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396002
L_54780:
L_54781:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	movq %r11,%r15
L_54782:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
.p2align 0x4,,0x7
L_54783:
	movl 0x78(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	jmp loop_648
.p2align 0x4
L_396002:
L_54784:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54782
.p2align 0x4
L_396004:
L_54786:
	cmpq $0x1,%r14
	je L_54783
L_54787:
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_54783
L_54788:
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r10)
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movb $0x2,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_54789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396008:
L_54658:
	movq 0x60(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396012
L_54659:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396011
L_54660:
L_54661:
	movq $0x41F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_54662:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_54714
	cmpq $0x2,%r15
	je L_54682
L_54663:
	jmp L_54664
.p2align 0x4
L_396011:
L_54764:
	movq $0x41F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_54662
.p2align 0x4
L_396012:
L_54765:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_54769
L_54766:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396014:
L_54793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_54794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54794
.p2align 0x4
.long 0xC70
L_54794:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_54656
.p2align 0x4
.long 0x79B
L_54665:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54666
L_54711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54712
.p2align 0x4
.long 0xC6C
L_54712:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_54666:
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	cmpq $0x1,%r14
	je L_54677
L_54667:
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movl %r11d,0x80(%rbp)
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_54587
L_54669:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r15,%r10
	jne L_54587
L_54671:
	cmpl %r13d,%r11d
	jne L_54653
L_54673:
	cmpl $0x0,%r11d
	jl L_54653
L_54674:
	movl $0x0,0x84(%rbp)
.p2align 0x4,,0x7
loop_649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396031
.p2align 0x4,,0x7
L_54675:
	movl 0x84(%rbp),%r15d
	cmpl 0x80(%rbp),%r15d
	jnl L_396027
L_54690:
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0x88(%rbp)
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x78(%rbp),%r11
	movq 0x8(%r11,%r15,1),%r10
	movq 0x0(%r10),%r13
	movq 0x70(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r11
	movq 0x0(%r11),%r10
	cmpq %r13,%r10
	je L_54697
L_54691:
	movq 0x8(%r13),%r15
	movq 0x8(%r10),%r14
	cmpq $0x1,%r15
	je L_396023
L_54692:
	cmpq $0x1,%r14
	je L_54697
L_54693:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396021
L_54694:
L_54695:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	movq %r11,%r15
L_54696:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
.p2align 0x4,,0x7
L_54697:
	movl 0x88(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	jmp loop_649
.p2align 0x4
L_396021:
L_54698:
	movq $0x41ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	xchgq %r13,%r15
	jmp L_54696
.p2align 0x4
L_396023:
L_54700:
	cmpq $0x1,%r14
	je L_54697
L_54701:
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_54697
L_54702:
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r10)
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movb $0x2,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_54703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396027:
L_54677:
	movq 0x60(%rbp),%r14
	movq 0x38(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396029
L_54678:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396028
L_54679:
L_54680:
	movq $0x41F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_54681:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_54682
.p2align 0x4
L_396028:
L_54685:
	movq $0x41F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_54681
.p2align 0x4
L_396029:
L_54686:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_54682
L_54687:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396031:
L_54707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_54708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54708
.p2align 0x4
.long 0xC6B
L_54708:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_54675
.p2align 0x4
.long 0xC6D
L_54756:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_54750
.p2align 0x4
.long 0x79B
L_54688:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_54682
.p2align 0x4
.long 0xC72
L_54844:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_54838
.p2align 0x4
.long 0xC69
L_54767:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54769
L_54773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_54774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54774
.p2align 0x4
.long 0xC6E
L_54774:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_54769
.p2align 0x4
.long 0xC62
L_54591:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_54592:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_54593
L_54594:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_396039
L_54595:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_54596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_396039:
L_54593:
	movq (globalObjptr+0x23A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_111:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396041
L_54582:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396041:
L_54583:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EE
L_54864:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_54865
.p2align 0x4
.long 0xC6F
L_54789:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_54783
.p2align 0x4
.long 0xC6A
L_54703:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_54697
.p2align 0x4
.long 0xC63
L_54596:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_396049
L_54597:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_54587
L_54599:
	cmpl $0x0,%r13d
	jl L_396047
L_54600:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_646:
	movl 0x34(%rbp),%r14d
	cmpl 0x30(%rbp),%r14d
	jnl L_396046
L_54602:
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_647:
	cmpl 0x48(%rbp),%ecx
	je L_396045
L_54603:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_396044
L_54605:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r15)
	je L_396043
L_54606:
	incl %ecx
	jo L_396042
L_54608:
	jmp loop_647
.p2align 0x4
L_396042:
L_54607:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396043:
.p2align 0x4,,0x7
L_54610:
	incl 0x34(%rbp)
	jmp loop_646
.p2align 0x4
L_396044:
L_54604:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396045:
L_54611:
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_396046:
L_54601:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396047:
L_54625:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396049:
L_54626:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC64
L_54612:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54613
L_54623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_54624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54624
.p2align 0x4
.long 0xC65
L_54624:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_54613:
	movq 0x68(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396051
L_54614:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396050
L_54615:
L_54616:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_54617:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_54610
.p2align 0x4
L_396050:
L_54618:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_54617
.p2align 0x4
L_396051:
L_54619:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0xC64
x_112:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_54610
L_54620:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_54621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0xC64
L_54621:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_54610
.text
.p2align 0x4
.globl foreach_3
.hidden foreach_3
foreach_3:
L_54873:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_54874
L_56354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_56355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56355
.p2align 0x4
.long 0x460
L_56355:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_54874:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_54876
L_54877:
	cmpl $0x0,%r13d
	jl L_396347
L_54878:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_652:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396346
.p2align 0x4,,0x7
L_54879:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_396345
L_54881:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_396342
L_54882:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1993,%rax
	cmpq $0x16,%rax
	ja L_396054
	jmp *jumpTable_128(,%rax,8)
.data
.p2align 0x4
jumpTable_128:
.quad L_396339,L_396312,L_396309,L_396306,L_396302,L_396293,L_396290,L_396278,L_396263,L_396260,L_396259,L_396234,L_396230,L_396190,L_396110,L_396100,L_396097,L_396093,L_396083,L_396080,L_396077,L_396074,L_396069
.text
.p2align 0x4
L_396054:
L_54883:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF2F,%r14
	jne L_54884
L_54885:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	cmpq $0x1,%r14
	je L_54884
L_54886:
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_396066
L_54888:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_396065
L_54889:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_54891:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396064
L_54906:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_396063
L_54907:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396060
L_54892:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_396059
L_54894:
	cmpq $0x1,%r15
	je L_396055
L_54895:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_54891
.p2align 0x4
L_396055:
L_54896:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396058
.p2align 0x4,,0x7
L_54897:
	movl 0x30(%rbp),%ecx
L_54898:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_396057
L_54900:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54902
L_54903:
	movl %ecx,0x0(%r15)
L_54902:
	movq $0x1949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_54884:
	incl 0x14(%rbp)
	jmp loop_652
.p2align 0x4
L_396057:
L_54899:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396058:
L_54904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_54905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54905
.p2align 0x4
.long 0xC57
L_54905:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_54897
.p2align 0x4
L_396059:
L_54893:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396060:
L_54909:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_54910:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54912
L_54913:
	movl %ecx,0x0(%r15)
L_54912:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396063:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_54892
.p2align 0x4
L_396064:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_54892
.p2align 0x4
L_396065:
L_54914:
	xorl %ecx,%ecx
	jmp L_54898
.p2align 0x4
L_396066:
L_54887:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396069:
L_56341:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56342:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF29,%r13
	jne L_54884
L_56343:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x3E,%r15
	je L_396071
L_56344:
	andq $0x3,%r13
	jnz L_54884
L_56345:
	jmp L_54884
.p2align 0x4
L_396071:
L_56346:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396074:
L_56336:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56337:
	movq 0x8(%r13),%r15
	cmpq $0x1,0x10(%r13)
	je L_54884
L_56338:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_396077:
L_56332:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56333:
	movq 0x10(%r13),%r15
	cmpq $0x1,%r15
	je L_54884
L_56334:
	movq %r14,0x28(%rbp)
	movq %r11,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movq %r9,0x40(%rbp)
	movq %r8,0x48(%rbp)
	movq %rsp,0x50(%rbp)
	movq $0x16ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1345
.p2align 0x4
L_396080:
L_56321:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56322:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_54884
L_56323:
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_396083:
L_56304:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_54884
	cmpq $0xF2F,%r15
	je L_396085
L_56305:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396084
L_56309:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r11,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_56308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396084:
L_56306:
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r10,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_56307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396085:
L_56311:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_396090
	cmpq $0xF29,%r13
	je L_396089
	cmpq $0xF2A,%r13
	je L_396088
	cmpq $0xF2B,%r13
	je L_396087
	cmpq $0xF2C,%r13
	je L_54884
L_56312:
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r10,0x38(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396087:
L_56319:
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r10,0x38(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396088:
L_56318:
	movq 0x0(%r15),%r13
	movq %r13,%r15
vs_1:
	movq $0x3503,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396089:
L_56317:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_1
.p2align 0x4
L_396090:
L_56313:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_396091
L_56316:
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r10,0x38(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396091:
L_56314:
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r11,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_56315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396093:
L_56280:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56281:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xF2A,%r10
	jne L_54884
L_56282:
	cmpq $0x1,%r15
	je L_54884
L_56283:
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396097:
L_56258:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_56259:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_54884
L_56260:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_56261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_396100:
L_56226:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_54884
	cmpq $0xF2F,%r15
	je L_396102
L_56227:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396101
L_56235:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396101:
L_56228:
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396102:
L_56239:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_396107
	cmpq $0xF29,%r13
	je L_396106
	cmpq $0xF2A,%r13
	je L_396105
	cmpq $0xF2B,%r13
	je L_396104
	cmpq $0xF2C,%r13
	je L_54884
L_56240:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396104:
L_56254:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396105:
L_56253:
	movq 0x0(%r15),%r13
	movq %r13,%r15
vs_0:
	movq %r15,0x28(%rbp)
	movq $0x352D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396106:
L_56252:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_0
.p2align 0x4
L_396107:
L_56243:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_396108
L_56249:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396108:
L_56244:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396110:
L_55409:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1EA9,%r15
	je L_396166
	cmpq $0x1EAA,%r15
	je L_396138
L_55410:
	movq 0x48(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r11),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r11),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF2E,%r11
	je L_54884
	cmpq $0xF2F,%r11
	je L_396112
L_55411:
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396111
L_55440:
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_55414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396111:
L_55412:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_55413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396112:
L_55442:
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_396135
	cmpq $0xF29,%r13
	je L_396130
	cmpq $0xF2A,%r13
	je L_396121
	cmpq $0xF2B,%r13
	je L_396120
	cmpq $0xF2C,%r13
	je L_396113
L_55443:
	movq 0x0(%r11),%r13
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r13
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396113:
L_55625:
	movq 0x0(%r11),%r13
	movq 0x20(%r14),%r11
	movq 0x18(%r14),%r10
	movq 0x10(%r14),%r9
	movq 0x8(%r14),%r8
	movq %r8,0x20(%rbp)
	movq 0x0(%r14),%r8
	cmpq $0x1,%r13
	je L_396119
L_55626:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_396118
	cmpq $0xE4B,%r14
	je L_396115
	cmpq $0xE4C,%r14
	je L_396114
L_55627:
	movq 0x0(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r9),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396114:
L_55665:
	xchgq %r11,%r15
x_119:
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_396115:
L_55659:
	movq 0x0(%r13),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_396117
L_55660:
	xorb %dl,%dl
	movq %r10,%r11
real_7:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	testb %dl,%dl
	jnz L_396116
L_55661:
L_55662:
	movq %r14,0x80(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (x_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_396116:
L_55663:
	movq %r10,%r15
	jmp L_55662
.p2align 0x4
L_396117:
L_55664:
	movb $0x1,%dl
	movq %r10,%r11
	jmp real_7
.p2align 0x4
L_396118:
L_55650:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r9),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r9),%r14
	movq %r14,0x30(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396119:
L_55666:
	xchgq %r8,%r15
	jmp x_119
.p2align 0x4
L_396120:
L_55607:
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396121:
L_55521:
	movq 0x8(%r11),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r11
L_55522:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_55523
L_55524:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF25,%r13
	jne L_396128
L_55525:
	movq 0x0(%r11),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %r11,%rdx
	jne L_54876
L_55527:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r9
	cmpq %r14,%r9
	jne L_396126
L_55529:
	cmpl %r10d,%r11d
	jne L_396125
L_55532:
	testq %rdx,%rdx
	jz L_396124
L_55533:
	cmpq $0x7FFFFFFF,%rdx
	ja L_396123
L_55534:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1561,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55535
.p2align 0x4
.long 0xC85
L_55535:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x40(%rbp)
L_55536:
	movq $0x0,0x58(%rbp)
loop_654:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_396122
L_55537:
	movq 0x40(%rbp),%r15
	movq $0xC4F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_396122:
L_55603:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x80(%rbp)
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movl 0x0(%r15,%r14,1),%r13d
	movl %r13d,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_55604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396123:
L_55519:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396124:
L_55606:
	movq (globalObjptr+0x2388)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_55536
.p2align 0x4
L_396125:
L_55531:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396126:
L_54876:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396128:
L_55523:
	movq (globalObjptr+0x2208)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396130:
L_55508:
	movq 0x8(%r11),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r15
	movq %r15,0x40(%rbp)
	cmpq %r15,%r13
	movq %r14,0x38(%rbp)
	jne L_54876
L_55510:
	testq %r15,%r15
	jz L_396133
L_55511:
	cmpq $0x7FFFFFFF,%r15
	ja L_55519
L_55512:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55513
.p2align 0x4
.long 0xC83
L_55513:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x48(%rbp)
L_55514:
	movq $0x0,0x50(%rbp)
loop_653:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_396131
L_55515:
	movq 0x48(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_55444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
L_396131:
L_55516:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396133:
L_55520:
	movq (globalObjptr+0x2378)(%rip),%r14
	movq %r14,0x48(%rbp)
	jmp L_55514
.p2align 0x4
L_396135:
L_55476:
	movl 0x0(%r11),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396136
L_55507:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396136:
L_55477:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396138:
L_56019:
	movq 0x50(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x30(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r11),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF2E,%r11
	je L_54884
	cmpq $0xF2F,%r11
	je L_396140
L_56020:
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396139
L_56046:
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_56023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396139:
L_56021:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_56022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396140:
L_56048:
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_396163
	cmpq $0xF29,%r13
	je L_396158
	cmpq $0xF2A,%r13
	je L_396149
	cmpq $0xF2B,%r13
	je L_396148
	cmpq $0xF2C,%r13
	je L_396141
L_56049:
	movq 0x0(%r11),%r13
	movq %r13,0x30(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396141:
L_56188:
	movq 0x0(%r11),%r13
	movq 0x20(%r14),%r11
	movq 0x18(%r14),%r10
	movq 0x10(%r14),%r9
	movq 0x8(%r14),%r8
	movq %r8,0x28(%rbp)
	movq 0x0(%r14),%r8
	cmpq $0x1,%r13
	je L_396147
L_56189:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_396146
	cmpq $0xE4B,%r14
	je L_396143
	cmpq $0xE4C,%r14
	je L_396142
L_56190:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r9),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_56191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396142:
L_56224:
	xchgq %r11,%r15
x_124:
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (makeValue_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_396143:
L_56218:
	movq 0x0(%r13),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_396145
L_56219:
	xorb %dl,%dl
	movq %r10,%r11
real_9:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	testb %dl,%dl
	jnz L_396144
L_56220:
L_56221:
	movq %r14,0x80(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (x_123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_396144:
L_56222:
	movq %r10,%r15
	jmp L_56221
.p2align 0x4
L_396145:
L_56223:
	movb $0x1,%dl
	movq %r10,%r11
	jmp real_9
.p2align 0x4
L_396146:
L_56209:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r9),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r9),%r14
	movq %r14,0x38(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_56210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396147:
L_56225:
	xchgq %r8,%r15
	jmp x_124
.p2align 0x4
L_396148:
L_56173:
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_56174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396149:
L_56127:
	movq 0x8(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r11
L_56128:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_55523
L_56129:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF25,%r13
	jne L_55523
L_56130:
	movq 0x0(%r11),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r11
	jne L_54876
L_56132:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r9
	cmpq %r9,%r14
	jne L_54876
L_56134:
	cmpl %r11d,%r10d
	jne L_55531
L_56136:
	testq %rdx,%rdx
	jz L_396152
L_56137:
	cmpq $0x7FFFFFFF,%rdx
	ja L_55519
L_56138:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56139
.p2align 0x4
.long 0xCCC
L_56139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x48(%rbp)
L_56140:
	movq $0x0,0x60(%rbp)
loop_659:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_396150
L_56141:
	movq 0x48(%rbp),%r15
	movq $0xB65,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_56142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_396150:
L_56169:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x80(%rbp)
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movl 0x0(%r15,%r14,1),%r13d
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_56170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396152:
L_56172:
	movq (globalObjptr+0x22F0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_56140
.p2align 0x4
L_396158:
L_56115:
	movq 0x8(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r15
	movq %r15,0x48(%rbp)
	cmpq %r13,%r15
	movq %r14,0x40(%rbp)
	jne L_54876
L_56117:
	testq %r15,%r15
	jz L_396161
L_56118:
	cmpq $0x7FFFFFFF,%r15
	ja L_55519
L_56119:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56120
.p2align 0x4
.long 0x53B
L_56120:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x50(%rbp)
L_56121:
	movq $0x0,0x58(%rbp)
loop_658:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_396159
L_56122:
	movq 0x50(%rbp),%r15
	movq $0xB8F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_1
.p2align 0x4
L_396159:
L_56123:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_56124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396161:
L_56126:
	movq (globalObjptr+0x22E0)(%rip),%r14
	movq %r14,0x50(%rbp)
	jmp L_56121
.p2align 0x4
L_396163:
L_56082:
	movl 0x0(%r11),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_396164
L_56114:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_56085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396164:
L_56083:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_56084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_396166:
L_55667:
	movq 0x60(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x38(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%r11),%r15
	movq 0x20(%r11),%r14
	movq 0x18(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF2E,%r11
	je L_54884
	cmpq $0xF2F,%r11
	je L_396168
L_55668:
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_396167
L_55744:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396167:
L_55669:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396168:
L_55747:
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_396187
	cmpq $0xF29,%r13
	je L_396185
	cmpq $0xF2A,%r13
	je L_396179
	cmpq $0xF2B,%r13
	je L_396178
	cmpq $0xF2C,%r13
	je L_396169
L_55748:
	movq 0x0(%r11),%r13
	movq %r13,0x78(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396169:
L_55986:
	movq 0x0(%r11),%r15
	movq 0x20(%r10),%r14
	movq 0x18(%r10),%r13
	movq 0x10(%r10),%r11
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r15
	je L_396176
L_55987:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xE4A,%r10
	je L_396175
	cmpq $0xE4B,%r10
	je L_396172
	cmpq $0xE4C,%r10
	je L_396170
L_55988:
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq %r10,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396170:
L_56013:
	cmpq $0x1,0x18(%rbp)
	je L_54884
L_56014:
	movq %r14,%r15
L_55751:
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_55752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1351
.p2align 0x4
L_396172:
L_56007:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_396174
L_56008:
	xorb %dl,%dl
	movq %r13,%r11
real_8:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	testb %dl,%dl
	jnz L_396173
L_56009:
L_56010:
	movq %r14,0x88(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x80(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_396173:
L_56011:
	movq %r10,%r15
	jmp L_56010
.p2align 0x4
L_396174:
L_56012:
	movb $0x1,%dl
	movq %r13,%r11
	jmp real_8
.p2align 0x4
L_396175:
L_55998:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_396176:
L_56016:
	cmpq $0x1,0x18(%rbp)
	je L_54884
L_56017:
	movq %r9,%r15
	jmp L_55751
.p2align 0x4
L_396178:
L_55892:
	movq 0x8(%r11),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396179:
L_55851:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
L_55852:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_55523
L_55853:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_55523
L_55854:
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_54876
L_55856:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_54876
L_55858:
	cmpl %r10d,%r11d
	jne L_55531
L_55860:
	movl %r11d,0x80(%rbp)
	movq $0x38B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (x_120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_396185:
L_55847:
	movq 0x8(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_54876
L_55849:
	movl %r11d,0x80(%rbp)
	movq $0x3A41,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_55850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_396187:
L_55781:
	movl 0x0(%r11),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_396188
L_55842:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396188:
L_55782:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_55783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_396190:
L_55285:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r14),%r9
	movq 0x8(%r14),%r8
	movq %r8,0x28(%rbp)
	movq 0x0(%r14),%r8
	movq %r8,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_54884
	cmpq $0xF2F,%r15
	je L_396192
L_55286:
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_396191
L_55290:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_55289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396191:
L_55287:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r10,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396192:
L_55292:
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_396227
	cmpq $0xF29,%r14
	je L_396226
	cmpq $0xF2A,%r14
	je L_396209
	cmpq $0xF2B,%r14
	je L_396194
	cmpq $0xF2C,%r14
	je L_396193
L_55293:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396193:
L_55295:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
L_396194:
L_55360:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r9),%r8
	movq %r8,0x50(%rbp)
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x58(%rbp)
	movq 0x0(%r8),%r14
	movq 0x10(%r11),%r9
	movq %r9,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_54887
L_55361:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_396207
L_55362:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_55364:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396206
L_55400:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD39,%r11
	jne L_396205
L_55401:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_396202
L_55365:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_54893
L_55366:
	cmpq $0x1,%r15
	je L_396195
L_55367:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_55364
.p2align 0x4
L_396195:
L_55368:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55369
L_55398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55399
.p2align 0x4
.long 0xC79
L_55399:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55369:
	movl 0x68(%rbp),%ecx
L_55370:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55371:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55373
L_55397:
	movl %ecx,0x0(%r15)
L_55373:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_55374:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_396197
L_55375:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_396196
L_55394:
	movq %r11,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_55395+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396196:
L_55376:
L_55377:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_396197:
L_55396:
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396202:
L_55403:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55404:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_396203
L_55406:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_55374
.p2align 0x4
L_396203:
L_55405:
	movq %r11,%r15
	jmp L_55374
.p2align 0x4
L_396205:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_55365
.p2align 0x4
L_396206:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_55365
.p2align 0x4
L_396207:
L_55407:
	xorl %ecx,%ecx
	jmp L_55370
.p2align 0x4
L_396209:
L_55307:
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x48(%rbp)
	cmpq $0x1,%r10
	je L_55344
L_55308:
	movq 0x8(%r11),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x58(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_54887
L_55309:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_396223
L_55310:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x68(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_55312:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396222
L_55348:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA0,%r11
	jne L_396221
L_55349:
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_396217
L_55313:
	movl 0x68(%rbp),%r11d
	incl %r11d
	movl %r11d,0x6C(%rbp)
	jo L_54893
L_55314:
	cmpq $0x1,%r15
	je L_396210
L_55315:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x68(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_55312
.p2align 0x4
L_396210:
L_55316:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55317
L_55346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55347
.p2align 0x4
.long 0xC79
L_55347:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55317:
	movl 0x6C(%rbp),%ecx
L_55318:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55319:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55321
L_55345:
	movl %ecx,0x0(%r15)
L_55321:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_117:
	cmpb $0x1,0x0(%r15)
	je L_396212
L_55322:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_396211
L_55341:
	movq %r11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55342+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396211:
L_55323:
L_55324:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_396212:
L_55344:
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396217:
L_55351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55352
L_55356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55357
.p2align 0x4
.long 0xC7A
L_55357:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55352:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_54899
L_55353:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_396218
L_55354:
	movq 0x70(%rbp),%r15
	jmp x_117
.p2align 0x4
L_396218:
L_55355:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp x_117
.p2align 0x4
L_396221:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_55313
.p2align 0x4
L_396222:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_55313
.p2align 0x4
L_396223:
L_55358:
	xorl %ecx,%ecx
	jmp L_55318
.p2align 0x4
L_396226:
L_55306:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396227:
L_55302:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_396228
L_55305:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396228:
L_55303:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396230:
L_55280:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55281:
	cmpq $0x1,0x10(%r13)
	je L_54884
L_55282:
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_55283:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
L_396234:
L_55211:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55212:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r10
	cmpq $0x1,%r15
	je L_54884
L_55213:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xF2A,%r15
	je L_396236
	cmpq $0xF2C,%r15
	je L_396235
	jmp L_54884
.p2align 0x4
L_396235:
L_55269:
	movq %r14,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (toString_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_396236:
L_55214:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	cmpq $0x1,%r15
	je L_54884
L_55215:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_54876
L_55217:
	testl %r10d,%r10d
	jnz L_396253
L_55264:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_396252
L_55265:
.p2align 0x4,,0x7
set_1:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_54876
L_55222:
	cmpl $0xA,%r13d
	jg L_396250
L_55223:
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_55224:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396249
.p2align 0x4,,0x7
L_55225:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_54887
L_55226:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_396247
L_55227:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_55229:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_55230
L_55242:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC7,%r13
	jne L_55230
L_55243:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_396242
L_55230:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_54893
L_55231:
	cmpq $0x1,%r15
	je L_396237
L_55232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_55229
.p2align 0x4
L_396237:
L_55233:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396240
.p2align 0x4,,0x7
L_55234:
	movl 0x28(%rbp),%ecx
L_55235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55236:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55238
L_55239:
	movl %ecx,0x0(%r15)
L_55238:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x198F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396240:
L_55240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_55241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55241
.p2align 0x4
.long 0x597
L_55241:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_55234
.p2align 0x4
L_396242:
L_55245:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55246:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_396243
L_55249:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_55248:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396243:
L_55247:
	movq %r13,%r15
	jmp L_55248
.p2align 0x4
L_396247:
L_55250:
	xorl %ecx,%ecx
	jmp L_55235
.p2align 0x4
L_396249:
L_55251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55252
.p2align 0x4
.long 0x555
L_55252:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_55225
.p2align 0x4
L_396250:
L_55253:
	movq %r15,0x48(%rbp)
	movq $0xA,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_396252:
L_55266:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_55267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396253:
L_55218:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_396254
L_55259:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_55260+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396254:
L_55219:
L_55220:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE68)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396259:
L_55205:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_55206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_19
.p2align 0x4
L_396260:
L_55202:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_55203:
	movl %r15d,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55204:
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_396263:
L_55173:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF2F,%r14
	jne L_54884
L_55174:
	movq 0x10(%r13),%r14
	cmpq $0x1,%r14
	je L_54884
L_55175:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_54887
L_55176:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_396274
L_55177:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_55179:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396273
L_55192:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_396272
L_55193:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396269
L_55180:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_54893
L_55181:
	cmpq $0x1,%r15
	je L_396264
L_55182:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_55179
.p2align 0x4
L_396264:
L_55183:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396267
.p2align 0x4,,0x7
L_55184:
	movl 0x28(%rbp),%ecx
L_55185:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55186:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55188
L_55189:
	movl %ecx,0x0(%r15)
L_55188:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396267:
L_55190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55191
.p2align 0x4
.long 0x5E1
L_55191:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_55184
.p2align 0x4
L_396269:
L_55195:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55196:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_396270
L_55199:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_55198:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396270:
L_55197:
	movq %r11,%r15
	jmp L_55198
.p2align 0x4
L_396272:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_55180
.p2align 0x4
L_396273:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_55180
.p2align 0x4
L_396274:
L_55200:
	xorl %ecx,%ecx
	jmp L_55185
.p2align 0x4
L_396278:
L_55138:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55139:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_396288
.p2align 0x4,,0x7
L_55142:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396287
.p2align 0x4,,0x7
L_55143:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF27,%r14
	je L_396285
	cmpq $0xF28,%r14
	je L_396283
	cmpq $0xF2A,%r14
	je L_396281
	cmpq $0xF2C,%r14
	je L_396279
	jmp L_54884
.p2align 0x4
L_396279:
L_55167:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x274F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55168:
	movq %r14,0x18(%rbp)
L_55153:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_55154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396281:
L_55158:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_54876
L_55160:
	movl %r13d,0x40(%rbp)
	movq $0x3ACB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_396283:
L_55148:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3D,%r15
	jne L_54884
L_55149:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396285:
L_55144:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x28(%rbp)
	je L_54884
L_55145:
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396287:
L_55170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55171
.p2align 0x4
.long 0x555
L_55171:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_55143
.p2align 0x4
L_396288:
L_55140:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x8FB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r15,0x20(%r10)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r10)
	movq %r10,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_55141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1353
.p2align 0x4
L_396290:
L_55116:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55117:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_54884
L_55118:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_55119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_396293:
L_55081:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq %r9,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_54884
	cmpq $0xF2F,%r15
	je L_396294
L_55082:
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_55083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396294:
L_55095:
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_396299
	cmpq $0xF29,%r14
	je L_396298
	cmpq $0xF2A,%r14
	je L_396297
	cmpq $0xF2B,%r14
	je L_396296
	cmpq $0xF2C,%r14
	je L_54884
L_55096:
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396296:
L_55114:
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396297:
L_55102:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je uses_3
L_55103:
	movq %r10,0x50(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (deObject_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
uses_3:
uses_0:
	movq $0x3507,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396298:
L_55101:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x352F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396299:
L_55097:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_396300
L_55100:
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396300:
L_55098:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_55099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396302:
L_55068:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55069:
	movq 0x10(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF2A,%r13
	jne L_54884
L_55070:
	movq 0x0(%r11),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_54884
L_55071:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396306:
L_55057:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55058:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_54884
L_55059:
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_55060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_396309:
L_55053:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_55054:
	movq 0x10(%r13),%r15
	cmpq $0x1,%r15
	je L_54884
L_55055:
	movq %r14,0x28(%rbp)
	movq %r11,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movq %r9,0x40(%rbp)
	movq %r8,0x48(%rbp)
	movq %rsp,0x50(%rbp)
	movq $0x16ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1345
.p2align 0x4
L_396312:
L_54921:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%r14),%r11
	movq 0x28(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_54884
	cmpq $0xF2F,%r15
	je L_396314
L_54922:
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_396313
L_54938:
	movq %r10,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_54939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396313:
L_54923:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396314:
L_54969:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	jne L_396325
.p2align 0x4,,0x7
L_55032:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_396323
	cmpq $0xF29,%r14
	je L_396322
	cmpq $0xF2A,%r14
	je L_396320
	cmpq $0xF2B,%r14
	je L_396318
	cmpq $0xF2C,%r14
	je L_396316
.p2align 0x4,,0x7
L_54991:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_54992:
L_54993:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_54994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396316:
.p2align 0x4,,0x7
L_55026:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55027:
	jmp L_54993
.p2align 0x4
L_396318:
.p2align 0x4,,0x7
L_55022:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55023:
	jmp L_54993
.p2align 0x4
L_396320:
.p2align 0x4,,0x7
L_55018:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55019:
	jmp L_54993
.p2align 0x4
L_396322:
L_55035:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
L_55010:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_55011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maySideEffect_0
.p2align 0x4
L_396323:
.p2align 0x4,,0x7
L_55006:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55007:
	jmp L_54993
.p2align 0x4
L_396325:
L_54970:
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x135F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_54887
L_54971:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_396336
L_54972:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_54974:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396335
L_55044:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD51,%r11
	jne L_396334
L_55045:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396331
L_54975:
	incl %ecx
	movl %ecx,0x70(%rbp)
	jo L_54893
L_54976:
	cmpq $0x1,%r15
	je L_396326
L_54977:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_54974
.p2align 0x4
L_396326:
L_54978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54979
L_55042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55043
.p2align 0x4
.long 0xC78
L_55043:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_54979:
	movl 0x70(%rbp),%ecx
L_54980:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_54981:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54983
L_55041:
	movl %ecx,0x0(%r15)
L_54983:
	movq $0x1AA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_54984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396331:
L_55047:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55048:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54912
L_55050:
	movl %ecx,0x0(%r15)
	jmp L_54912
.p2align 0x4
L_396334:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_54975
.p2align 0x4
L_396335:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_54975
.p2align 0x4
L_396336:
L_55051:
	xorl %ecx,%ecx
	jmp L_54980
.p2align 0x4
L_396339:
L_54916:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2F,%r15
	jne L_54884
L_54917:
	movq 0x8(%r13),%r15
	cmpq $0x1,0x10(%r13)
	je L_54884
L_54918:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_396342:
L_56347:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF2F,%r14
	jne L_54884
L_56348:
	movq 0x10(%r13),%r14
	cmpq $0x1,%r14
	je L_54884
L_56349:
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	jmp L_54884
.p2align 0x4
L_396345:
L_54880:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396346:
L_56351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_56352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56352
.p2align 0x4
.long 0x45E
L_56352:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_54879
.p2align 0x4
L_396347:
L_56353:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x524
L_56339:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_54884
.p2align 0x4
.long 0x524
L_54934:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_54884
.p2align 0x4
.long 0x557
L_56324:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x0(%r15)
	je L_54884
L_56325:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (deObject_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x527
L_56308:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
.long 0x541
L_56307:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_56308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
.long 0x527
L_56315:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
.long 0x557
L_56284:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x527
L_56261:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_56262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
L_56236:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56237:
	movl %r15d,0x0(%r14)
incVar_0:
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
.long 0x526
L_56229:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56230:
	movl %r15d,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
.long 0x524
L_56241:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56242:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x524
L_56255:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56256:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x524
L_56250:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56251:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x557
L_56245:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56246:
	movl %r15d,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
.long 0xC7C
L_55414:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_55415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0xC7B
L_55413:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_55414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0xC7E
L_55444:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55445
L_55474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55475
.p2align 0x4
.long 0xC7F
L_55475:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55445:
	movq 0x20(%rbp),%r15
L_55446:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_55447:
	movq %r15,0x20(%rbp)
	movq %r14,%r15
L_55448:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_54887
L_55449:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_396367
L_55450:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_55452:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396366
L_55465:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD4A,%r11
	jne L_396365
L_55466:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_396362
L_55453:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_54893
L_55454:
	cmpq $0x1,%r15
	je L_396357
L_55455:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_55452
.p2align 0x4
L_396357:
L_55456:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55457
L_55463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55464
.p2align 0x4
.long 0x576
L_55464:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_55457:
	movl 0x18(%rbp),%ecx
L_55458:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55459:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55461
L_55462:
	movl %ecx,0x0(%r15)
L_55461:
	movq $0x1A95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_54884
.p2align 0x4
L_396362:
L_55468:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55469:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54912
L_55471:
	movl %ecx,0x0(%r15)
	jmp L_54912
.p2align 0x4
L_396365:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_55453
.p2align 0x4
L_396366:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_55453
.p2align 0x4
L_396367:
L_55472:
	xorl %ecx,%ecx
	jmp L_55458
.p2align 0x4
.long 0x54C
L_55628:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55629
L_55648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55649
.p2align 0x4
.long 0xC92
L_55649:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55629:
	movslq 0x40(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_396372
L_55631:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_396371
L_55632:
	movl 0x0(%r13),%r15d
	movl %r15d,0x78(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_55633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_396371:
L_55647:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396372:
L_54948:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC7E
L_55634:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55635
L_55644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55645
.p2align 0x4
.long 0xC7F
L_55645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55635:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_396374
L_55643:
	movq 0x0(%r14),%r15
	jmp L_55446
.p2align 0x4
L_396374:
L_55636:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_396376
L_55640:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55641:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
L_396376:
L_55637:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55638:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
.long 0xC8F
x_118:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp x_119
.p2align 0x4
.long 0xC93
L_55651:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55652
L_55657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55658
.p2align 0x4
.long 0xC94
L_55658:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55652:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_55654:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_55655:
	movl 0x0(%r13),%r15d
	movl %r15d,0x78(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (x_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xC8E
L_55608:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55609
L_55623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55624
.p2align 0x4
.long 0xC90
L_55624:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55609:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_55610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xC86
L_55538:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55539
L_55601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55602
.p2align 0x4
.long 0xC8C
L_55602:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55539:
	cmpq $0x1,0x20(%rbp)
	je L_396384
L_55540:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139B,%r14
	je L_396383
L_55541:
	movq (globalObjptr+0x2350)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396383:
L_55542:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_396384:
L_55568:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_396385
L_55600:
	movq 0x0(%r14),%r15
	jmp L_55446
.p2align 0x4
L_396385:
L_55569:
	movq 0x40(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_54876
L_55571:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_656:
	cmpl %ecx,%ebx
	je L_396397
L_55572:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_54948
L_55574:
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x40(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movl 0x0(%r11,%r13,1),%r14d
	testl %r14d,%r14d
	jz L_55576
L_55578:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF46,%r14
	jne L_55579
L_55586:
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r13
L_55587:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_55579
L_55588:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_55579
L_55589:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x2,%r14
	jne L_55579
L_55591:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_54876
L_55593:
	testl %r13d,%r13d
	jnz L_396387
L_55576:
	incl %ebx
	jo L_54893
L_55577:
	jmp loop_656
.p2align 0x4
L_396387:
L_55579:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55580
L_55584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55585
.p2align 0x4
.long 0xC8B
L_55585:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55580:
	movq $0x1,%r15
L_55581:
	movq $0xD33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xD2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xD2F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD31,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1E97,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r11,0x20(%r10)
	movq %r14,0x28(%r10)
	addq $0x40,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r10)
	movq $0x2,0x8(%r10)
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%r10)
	movq $0x2879,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_55582:
	movq %r15,0x20(%rbp)
	movq %r14,%r15
	jmp L_55448
.p2align 0x4
L_396397:
L_55596:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55597
L_55598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55599
.p2align 0x4
.long 0xC8B
L_55599:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55597:
	movq $0x2,%r15
	jmp L_55581
.p2align 0x4
.long 0xC8D
L_55604:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x40(%rbp),%r11
	movl 0x70(%rbp),%r10d
	movl %r10d,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq %r15,0x8(%r11,%r13,1)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_654
.p2align 0x4
.long 0xC84
L_55517:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_653
.p2align 0x4
.long 0xC81
L_55479:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0xC80
L_55478:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0xCC8
L_56023:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_56024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0xCC7
L_56022:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_56023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0x557
L_56050:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56051
L_56080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56081
.p2align 0x4
.long 0x45B
L_56081:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56051:
	movq 0x28(%rbp),%r15
L_56052:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_56053:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
L_56054:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_54887
L_56055:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_396411
L_56056:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_56058:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396410
L_56071:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD44,%r11
	jne L_396409
L_56072:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_396406
L_56059:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_54893
L_56060:
	cmpq $0x1,%r15
	je L_396401
L_56061:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_56058
.p2align 0x4
L_396401:
L_56062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56063
L_56069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56070
.p2align 0x4
.long 0x570
L_56070:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56063:
	movl 0x20(%rbp),%ecx
L_56064:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_56065:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56067
L_56068:
	movl %ecx,0x0(%r15)
L_56067:
	movq $0x1A89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_54884
.p2align 0x4
L_396406:
L_56074:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_56075:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54912
L_56077:
	movl %ecx,0x0(%r15)
	jmp L_54912
.p2align 0x4
L_396409:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_56059
.p2align 0x4
L_396410:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_56059
.p2align 0x4
L_396411:
L_56078:
	xorl %ecx,%ecx
	jmp L_56064
.p2align 0x4
.long 0xCD1
L_56191:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56192
L_56207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56208
.p2align 0x4
.long 0xCD3
L_56208:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_56192:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_56194:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_56195:
	movl 0x0(%r13),%r15d
	movl %r15d,0x78(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_56196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x557
makeValue_3:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56197
L_56204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56205
.p2align 0x4
.long 0x45B
L_56205:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56197:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_396418
L_56203:
	movq 0x0(%r14),%r15
	jmp L_56052
.p2align 0x4
L_396418:
L_56198:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_396420
L_56200:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56201:
	movq %r14,0x18(%rbp)
	jmp L_56054
.p2align 0x4
L_396420:
L_56199:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0xCCF
x_123:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp x_124
.p2align 0x4
.long 0xCD4
L_56210:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56211
L_56216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56217
.p2align 0x4
.long 0xCD5
L_56217:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_56211:
	movslq 0x40(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_56213:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_56214:
	movl 0x0(%r13),%r15d
	movl %r15d,0x78(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (x_123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xCCE
L_56174:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56175
L_56186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56187
.p2align 0x4
.long 0xCD0
L_56187:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_56175:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_56176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x594
L_56142:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56143
L_56167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_56168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56168
.p2align 0x4
.long 0x591
L_56168:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_56143:
	cmpq $0x1,0x28(%rbp)
	je L_396429
L_56144:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A2,%r14
	je L_396426
L_56145:
	movq (globalObjptr+0x22B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396426:
L_56146:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF40,%r15
	je L_396428
L_56147:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56148:
	movq %r13,0x18(%rbp)
	jmp L_56054
.p2align 0x4
L_396428:
L_56150:
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_56151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
L_396429:
L_56158:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_396430
L_56166:
	movq 0x0(%r14),%r15
	jmp L_56052
.p2align 0x4
L_396430:
L_56159:
	movq $0x2,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFields_0
.p2align 0x4
.long 0xCCD
L_56170:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x48(%rbp),%r11
	movl 0x70(%rbp),%r10d
	movl %r10d,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq %r15,0x8(%r11,%r13,1)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_659
.p2align 0x4
.long 0xCC2
L_56124:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_658
.p2align 0x4
.long 0xCCB
L_56085:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_396436
	cmpq $0xF41,%r14
	je L_396432
L_56025:
	movq (globalObjptr+0x22D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396432:
L_56095:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
L_56096:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_56033
L_56097:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396434
L_56098:
	movq 0x0(%r13),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_56100:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (makeValue_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_396434:
L_56033:
	movq (globalObjptr+0x22D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396436:
L_56086:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xCCA
L_56084:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_56085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0xCA2
L_55745:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
L_55703:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_55704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
.long 0xC95
L_55670:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_55671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
.long 0xCA3
L_55749:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x18(%rbp)
	je L_54884
L_55750:
	jmp L_55751
.p2align 0x4
.long 0xCC2
L_55989:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55990
L_55996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55997
.p2align 0x4
.long 0xCC4
L_55997:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55990:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_55992:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_55993:
	movl 0x0(%r13),%r15d
	movl %r15d,0x80(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_55994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xCA4
L_55752:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55753
L_55778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55779
.p2align 0x4
.long 0xCA6
L_55779:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55753:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_54887
L_55754:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_396451
L_55755:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_55757:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396450
L_55770:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_396449
L_55771:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396446
L_55758:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_54893
L_55759:
	cmpq $0x1,%r15
	je L_396441
L_55760:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_55757
.p2align 0x4
L_396441:
L_55761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55762
L_55768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55769
.p2align 0x4
.long 0xCA5
L_55769:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55762:
	movl 0x18(%rbp),%ecx
L_55763:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55764:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_55766
L_55767:
	movl %ecx,0x0(%r15)
L_55766:
	movq $0x1949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_54884
.p2align 0x4
L_396446:
L_55773:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_54899
L_55774:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54912
L_55776:
	movl %ecx,0x0(%r15)
	jmp L_54912
.p2align 0x4
L_396449:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_55758
.p2align 0x4
L_396450:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_55758
.p2align 0x4
L_396451:
L_55777:
	xorl %ecx,%ecx
	jmp L_55763
.p2align 0x4
.long 0xCC5
L_55999:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56000
L_56005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56006
.p2align 0x4
.long 0xCC6
L_56006:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_56000:
	movslq 0x40(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_56002:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_56003:
	movl 0x0(%r13),%r15d
	movl %r15d,0x80(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xCB8
L_55893:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55894
L_55984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55985
.p2align 0x4
.long 0xA02
L_55985:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55894:
	movq 0x60(%rbp),%r9
	movq 0x8(%r9),%r15
L_55895:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_55896
L_55920:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_396471
L_55921:
	movq 0x8(%r15),%r9
L_55922:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_396470
L_55924:
	movq 0x30(%rbp),%r8
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r11
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_54887
L_55925:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_396468
L_55926:
	movq 0x8(%r8),%r13
	movq 0x0(%r8),%r8
	movl $0x0,0x30(%rbp)
	movq %r9,%r15
	movq %r8,%r14
.p2align 0x4,,0x7
L_55928:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_396467
L_55970:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD3C,%r9
	jne L_396466
L_55971:
	movq 0x8(%r14),%r9
	movq %r9,0x70(%rbp)
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x0)(%rip)
	je L_396461
L_55929:
	movl 0x30(%rbp),%r9d
	incl %r9d
	jo L_54893
L_55930:
	cmpq $0x1,%r13
	je L_396457
L_55931:
	movl %r9d,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq (localObjptr+0x0)(%rip),%r10
	jmp L_55928
.p2align 0x4
L_396457:
	movl %r9d,%ecx
L_55933:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_54899
L_55934:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl x_122
L_55969:
	movl %ecx,0x0(%r14)
x_122:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_396458
L_55967:
	movq %r11,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_55968+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396458:
L_55936:
L_55937:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_55938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_396461:
L_55973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55974
L_55981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55982
.p2align 0x4
.long 0xCC1
L_55982:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55974:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_54899
L_55975:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_396463
L_55976:
	movq 0x70(%rbp),%r15
L_55977:
	movq 0x48(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_396462
L_55978:
	movq (globalObjptr+0xED68)(%rip),%r15
x_121:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xED40)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396462:
L_55979:
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x80(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_396463:
L_55980:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp L_55977
.p2align 0x4
L_396466:
	movq %r10,(localObjptr+0x0)(%rip)
	jmp L_55929
.p2align 0x4
L_396467:
	movq %r10,(localObjptr+0x0)(%rip)
	jmp L_55929
.p2align 0x4
L_396468:
L_55983:
	xorl %ecx,%ecx
	movq %r9,%r15
	jmp L_55933
.p2align 0x4
L_396470:
L_55923:
	movq (globalObjptr+0xED58)(%rip),%r15
	jmp x_121
.p2align 0x4
L_396471:
L_55896:
	movq (globalObjptr+0xED38)(%rip),%r15
	jmp x_121
.p2align 0x4
.long 0xCB5
x_120:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55861
L_55890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55891
.p2align 0x4
.long 0xCB7
L_55891:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55861:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_396481
L_55863:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz error_1
L_55870:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_396474
error_1:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED30)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396474:
L_55873:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_54876
L_55875:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_54876
L_55877:
	cmpl %r13d,%ecx
	jne L_55554
L_55879:
	cmpl $0x0,%r13d
	jl L_396477
L_55880:
	xorl %ecx,%ecx
loop_657:
	cmpl 0x28(%rbp),%ecx
	jnl L_396475
L_55884:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x80(%rbp)
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_55885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1351
.p2align 0x4
L_396475:
L_55881:
	cmpq $0x1,0x18(%rbp)
	je L_54884
L_55882:
	movq 0x68(%rbp),%r15
	jmp L_55751
.p2align 0x4
L_396477:
L_55554:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396481:
L_55887:
	cmpq $0x2,0x30(%rbp)
	je L_55873
L_55888:
	jmp error_1
.p2align 0x4
.long 0xCB4
L_55850:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_2
.p2align 0x4
.long 0xCB2
L_55843:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55844
L_55845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55846
.p2align 0x4
.long 0xCB3
L_55846:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55844:
	movq 0x30(%rbp),%r15
L_55815:
	movq 0x8(%r15),%r14
L_55816:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_55817
L_55824:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396486
L_55825:
	movq 0x0(%r14),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_55827:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	cmpq $0x1,0x18(%rbp)
	je L_54884
L_55828:
	movq %r13,%r15
	jmp L_55751
.p2align 0x4
L_396486:
L_55817:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED28)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xCA7
L_55783:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_55784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
.long 0x557
L_55289:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
.long 0x526
L_55288:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_55289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
.long 0x572
L_55294:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_55295
.p2align 0x4
.long 0x543
L_55296:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55297
L_55300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55301
.p2align 0x4
.long 0x5B5
L_55301:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_55297:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55298:
	movq $0x16ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
.long 0x907
L_55395:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_55377
.p2align 0x4
.long 0x1
toString_44:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x51B
L_55342:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_55324
.p2align 0x4
.long 0x1
toString_43:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x57F
L_55304:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
.long 0x526
toString_42:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (rev_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x526
L_55254:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55255
L_55257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55258
.p2align 0x4
.long 0x555
L_55258:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_55255:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x527
L_55267:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp set_1
.p2align 0x4
.long 0x527
L_55260:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55261
L_55262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_55263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55263
.p2align 0x4
.long 0x564
L_55263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_55261:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_55220
.p2align 0x4
.long 0x526
set_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp set_1
.p2align 0x4
.long 0x556
L_55206:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55207
L_55209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_55210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55210
.p2align 0x4
.long 0x562
L_55210:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_55207:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_55208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_55154:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x526
L_55161:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55162
L_55165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55166
.p2align 0x4
.long 0x555
L_55166:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_55162:
	movq $0x274B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_55163:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_55153
.p2align 0x4
.long 0x558
L_55150:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55151
L_55156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55157
.p2align 0x4
.long 0x576
L_55157:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_55151:
	movq $0x2749,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_55152:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_55153
.p2align 0x4
.long 0x559
L_55146:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1353
.p2align 0x4
.long 0x527
L_55141:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_55142
.p2align 0x4
.long 0x527
L_55119:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_55120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x55C
L_55083:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_54884
L_55085:
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_55086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0x541
deObject_1:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_55104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x557
L_55099:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
.long 0x526
L_55072:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x557
L_55060:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x0(%r15)
	je L_54884
L_55061:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (deObject_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x580
L_54939:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_54940:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_54941
L_54942:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396502
L_54943:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396501
	cmpq $0x2,%r15
	je L_396500
L_54944:
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_396500:
L_54959:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396501:
L_54958:
	movq (globalObjptr+0xE58)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396502:
L_54941:
	movq (globalObjptr+0xE50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5BE
L_54924:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396504
L_54925:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396504:
L_54927:
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0xC5D
L_54994:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54995
L_55002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55003
.p2align 0x4
.long 0x59E
L_55003:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_54995:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396506
L_54996:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396505
L_54997:
L_54998:
	movq $0x41EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_54999:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396505:
L_55000:
	movq $0x41EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_54999
.p2align 0x4
L_396506:
L_55001:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitExp_0
.p2align 0x4
.long 0x57F
L_55011:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	testl %r14d,%r14d
	jnz L_396509
L_55012:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55013:
	jmp L_54993
.p2align 0x4
L_396509:
L_55015:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_1
.p2align 0x4
.long 0xC77
L_54984:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54985
L_55039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_55040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55040
.p2align 0x4
.long 0x567
L_55040:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_54985:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396516
L_54986:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396515
L_54987:
L_54988:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_54989:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_55006
	cmpq $0xF29,%r14
	je L_396513
	cmpq $0xF2A,%r14
	je L_55018
	cmpq $0xF2B,%r14
	je L_55022
	cmpq $0xF2C,%r14
	je L_55026
	jmp L_54991
.p2align 0x4
L_396513:
L_55009:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_55010
.p2align 0x4
L_396515:
L_55029:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_54989
.p2align 0x4
L_396516:
L_55030:
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_55031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_1
.p2align 0x4
.long 0x524
L_54919:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_54884
.p2align 0x4
.long 0x56D
deObject_2:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x557
L_56285:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_396519
	cmpq $0xF49,%r14
	je L_54884
L_55075:
	movq (globalObjptr+0xE60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396519:
L_56286:
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (x_126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0x527
L_56262:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_56263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
L_56233:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56234:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x557
L_56231:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56232:
	movl %r15d,0x0(%r14)
	jmp incVar_0
.p2align 0x4
.long 0x524
L_56247:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_54893
L_56248:
	movl %r15d,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0xC7D
L_55415:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_55416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0xC91
L_55633:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0xC8F
L_55610:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0xC87
L_55543:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55544
L_55566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55567
.p2align 0x4
.long 0xC8A
L_55567:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55544:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	je L_396524
L_55545:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55546:
	jmp L_55448
.p2align 0x4
L_396524:
L_55548:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_54876
L_55550:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_54876
L_55552:
	cmpl %ecx,%r11d
	jne L_55554
L_55555:
	cmpl $0x0,%r11d
	jl L_55554
L_55556:
	xorl %ecx,%ecx
loop_655:
	cmpl 0x38(%rbp),%ecx
	jnl L_396525
L_55560:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
L_396525:
L_55557:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55558:
	jmp L_55448
.p2align 0x4
.long 0xC81
L_55480:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55481
L_55505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55506
.p2align 0x4
.long 0xC82
L_55506:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55481:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_396536
	cmpq $0xF49,%r14
	je L_396532
L_55417:
	movq (globalObjptr+0x2368)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396532:
L_55487:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
L_55488:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_55427
L_55489:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396534
L_55490:
	movq 0x0(%r13),%r15
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_55492:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_396534:
L_55427:
	movq (globalObjptr+0x2370)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396536:
L_55482:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_55484:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55485:
	movq %r13,0x20(%rbp)
	jmp L_55448
.p2align 0x4
.long 0xCC9
L_56024:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_396544
	cmpq $0xF41,%r14
	je L_396540
	jmp L_56025
.p2align 0x4
L_396540:
L_56031:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
L_56032:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_56033
L_56034:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_56033
L_56035:
	movq 0x0(%r13),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_56037:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (makeValue_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_396544:
L_56026:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xCD2
L_56196:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0x557
L_56104:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56105
L_56106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56107
.p2align 0x4
.long 0x45B
L_56107:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56105:
	movq 0x28(%rbp),%r15
	jmp L_56052
.p2align 0x4
.long 0xCCF
L_56176:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (makeValue_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x594
L_56151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_56152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerceProd_0
.p2align 0x4
.long 0x557
L_56160:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56161
L_56164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56165
.p2align 0x4
.long 0x53E
L_56165:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_56161:
	movq $0x286F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%r15)
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_54884
L_56162:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_56054
.p2align 0x4
.long 0x557
makeValue_1:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56101
L_56112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56113
.p2align 0x4
.long 0x45B
L_56113:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56101:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_396548
L_56111:
	movq 0x0(%r14),%r15
	jmp L_56052
.p2align 0x4
L_396548:
L_56102:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_396550
L_56108:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56109:
	movq %r14,0x18(%rbp)
	jmp L_56054
.p2align 0x4
L_396550:
L_56103:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x5BD
L_56087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56088
L_56093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56094
.p2align 0x4
.long 0xCA6
L_56094:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_56088:
	movslq 0x28(%rbp),%r15
	movq 0x68(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_56090:
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56091:
	movq %r13,0x18(%rbp)
	jmp L_56054
.p2align 0x4
.long 0xC9C
L_55704:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55705
L_55730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_55731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55731
.p2align 0x4
.long 0xC9E
L_55731:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_55705:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
L_55706:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_55707
L_55714:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396556
L_55715:
	movq 0x0(%r14),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_55717:
	movq %r14,%r13
	salq $0x4,%r13
	movl 0x0(%r15,%r13,1),%r11d
	movl %r11d,0x28(%rbp)
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_55718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1351
.p2align 0x4
L_396556:
L_55707:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED18)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xC96
L_55671:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55672
L_55742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55743
.p2align 0x4
.long 0xCA1
L_55743:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55672:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
L_55673:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_55674
L_55682:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_55674
L_55683:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396559
L_55684:
L_55674:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED08)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_55675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396559:
L_55685:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_396560
L_55686:
	movq %r14,0x88(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_55687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_396560:
L_55737:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCC3
L_55994:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0x4B0
L_55968:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_55937
.p2align 0x4
.long 0x1
L_55938:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_55939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCB9
L_55897:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_396564
L_55918:
	movq %r11,0x78(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55919+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_396564:
L_55898:
L_55899:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_55900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC97
L_55864:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCB6
L_55885:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_657
.p2align 0x4
.long 0xC97
L_55818:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCA8
L_55784:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55785
L_55840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_55841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55841
.p2align 0x4
.long 0xCB1
L_55841:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_55785:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
L_55786:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_55787
L_55794:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_55787
L_55795:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396565
L_55796:
L_55787:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED08)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_55788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396565:
L_55797:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_396566
L_55798:
	movq %r14,0x90(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_55799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_396566:
L_55835:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
rev_45:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_396572
L_55378:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_55379:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396571
.p2align 0x4,,0x7
L_55380:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_396570
L_55381:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_55379
.p2align 0x4
L_396570:
L_55383:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_55384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396571:
L_55391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_55392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55392
.p2align 0x4
.long 0x45C
L_55392:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_55380
.p2align 0x4
L_396572:
L_55393:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_55383
.p2align 0x4
.long 0x1
rev_44:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_396575
L_55325:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_55326:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396574
.p2align 0x4,,0x7
L_55327:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_396573
L_55328:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_55326
.p2align 0x4
L_396573:
L_55330:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_55331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396574:
L_55338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_55339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55339
.p2align 0x4
.long 0x45C
L_55339:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_55327
.p2align 0x4
L_396575:
L_55340:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_55330
.p2align 0x4
.long 0x526
rev_43:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_396578
L_55270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_55271:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396577
.p2align 0x4,,0x7
L_55272:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_396576
L_55273:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_55271
.p2align 0x4
L_396576:
L_55275:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396577:
L_55276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55277
.p2align 0x4
.long 0x531
L_55277:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_55272
.p2align 0x4
L_396578:
L_55278:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_55275
.p2align 0x4
.long 0x526
L_55256:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_55224
.p2align 0x4
.long 0x556
L_55208:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x527
L_55120:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_55121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x556
L_55086:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_54884
L_55087:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_55089
L_55090:
	cmpq $0x1,0x0(%r15)
	jne L_54884
L_55089:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_54884
.p2align 0x4
.long 0x541
L_55104:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55105
L_55111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55112
.p2align 0x4
.long 0x531
L_55112:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_55105:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne uses_0
L_55106:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_55107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0x526
L_55073:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55074
L_55078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_55079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55079
.p2align 0x4
.long 0x555
L_55079:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_55074:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_396584
	cmpq $0xF49,%r14
	je L_54884
	jmp L_55075
.p2align 0x4
L_396584:
L_55076:
	movq 0x30(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq $0x3531,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x56D
deObject_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x533
L_54945:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54946
L_54956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_54957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54957
.p2align 0x4
.long 0x5C4
L_54957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_54946:
	movq 0x30(%rbp),%r14
	movq 0x20(%r14),%r15
	movslq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_54948
L_54949:
	salq $0x4,%r13
	movq 0x8(%r15,%r13,1),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq $0x1,%r8
	je L_396587
L_54950:
	movq 0x0(%r8),%r15
	cmpq $0x1,%r15
	je L_396586
L_54951:
L_54952:
	movq $0x41BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r8,%r15
L_54953:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396586:
L_54954:
	movq $0x41BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r8,%r15
	jmp L_54953
.p2align 0x4
L_396587:
L_54955:
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1343
.p2align 0x4
.long 0xC76
L_54960:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396590
L_54961:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396590:
L_54963:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x5BE
L_54926:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_54927
.p2align 0x4
.long 0xC76
L_54928:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396591
L_54929:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_54930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396591:
L_54931:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0xC5D
L_55016:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitExp_0
.p2align 0x4
.long 0x57F
L_55031:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_55032
.p2align 0x4
.long 0x56D
L_56326:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_54884
L_56327:
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x2,%r13
	je L_396592
L_56328:
	jmp L_54884
.p2align 0x4
L_396592:
L_56329:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_54884
.p2align 0x4
.long 0x569
x_126:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56287
L_56300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56301
.p2align 0x4
.long 0x56A
L_56301:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56287:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_396599
L_56288:
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_396598
L_56289:
	movl 0x0(%r13),%r15d
	movq 0x8(%r13),%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_396597
	cmpq $0x2,%r11
	je L_54884
L_56290:
	movq 0x8(%r11),%r13
	cmpl %r15d,0x0(%r11)
	jne L_56292
L_56293:
	movq 0x8(%r13),%r15
	cmpq %r15,0x8(%r14)
	je L_54884
L_56292:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396597:
L_56296:
	movq $0x273B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396598:
L_56298:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_54884
.p2align 0x4
L_396599:
L_56299:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_54884
.p2align 0x4
.long 0x541
L_56263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_56264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0xC76
L_55416:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_396605
	cmpq $0xF49,%r14
	je L_396601
	jmp L_55417
.p2align 0x4
L_396601:
L_55425:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
L_55426:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_55427
L_55428:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_55427
L_55429:
	movq 0x0(%r13),%r15
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_54948
L_55431:
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_55432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_396605:
L_55418:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_54948
L_55420:
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r13
	movq %r13,%r14
L_55421:
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_55422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_4
.p2align 0x4
.long 0xC7E
L_55611:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55612
L_55621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55622
.p2align 0x4
.long 0xC7F
L_55622:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55612:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_396607
L_55620:
	movq 0x0(%r14),%r15
	jmp L_55446
.p2align 0x4
L_396607:
L_55613:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_396609
L_55617:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55618:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
L_396609:
L_55614:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55615:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
.long 0xC88
L_55561:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55562
L_55563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55564
.p2align 0x4
.long 0xC89
L_55564:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55562:
	movl 0x28(%rbp),%ecx
	jmp loop_655
.p2align 0x4
.long 0xC7E
L_55493:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55494
L_55503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55504
.p2align 0x4
.long 0xC7F
L_55504:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55494:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_396613
L_55502:
	movq 0x0(%r14),%r15
	jmp L_55446
.p2align 0x4
L_396613:
L_55495:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_396615
L_55499:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55500:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
L_396615:
L_55496:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_55497:
	movq %r14,0x20(%rbp)
	jmp L_55448
.p2align 0x4
.long 0x557
makeValue_0:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56038
L_56044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56045
.p2align 0x4
.long 0x45B
L_56045:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56038:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_396618
L_56043:
	movq 0x0(%r14),%r15
L_56030:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_1
.p2align 0x4
L_396618:
L_56039:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_396619
L_56042:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_56030
.p2align 0x4
L_396619:
L_56040:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x5BD
L_56027:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movslq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_56029:
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,%r15
	jmp L_56030
.p2align 0x4
.long 0x557
makeValue_2:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56177
L_56184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56185
.p2align 0x4
.long 0x45B
L_56185:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56177:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_396622
L_56183:
	movq 0x0(%r14),%r15
	jmp L_56052
.p2align 0x4
L_396622:
L_56178:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_396624
L_56180:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56181:
	movq %r14,0x18(%rbp)
	jmp L_56054
.p2align 0x4
L_396624:
L_56179:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x526
L_56152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56153
L_56156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56157
.p2align 0x4
.long 0x45B
L_56157:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56153:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_54884
L_56154:
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_56054
.p2align 0x4
.long 0x5E0
L_55718:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55719
L_55728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55729
.p2align 0x4
.long 0xC9D
L_55729:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_55719:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_54884
L_55720:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED20)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5EE
L_55708:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC97
L_55675:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC98
L_55687:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_55688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_55738:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_90+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4B0
L_55939:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED60)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_55940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCC0
L_55919:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_55899
.p2align 0x4
.long 0xCBA
L_55900:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55901
L_55916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55917
.p2align 0x4
.long 0x6FB
L_55917:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55901:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xED48)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
.long 0xC97
L_55865:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55866
L_55868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55869
.p2align 0x4
.long 0xC6C
L_55869:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55866:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC97
L_55819:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55820
L_55822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55823
.p2align 0x4
.long 0xC6C
L_55823:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55820:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xCA9
L_55788:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_55789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCAC
L_55799:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_55800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_55836:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_91+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_55384:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55385
L_55389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55390
.p2align 0x4
.long 0x452
L_55390:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55385:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_89+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_55331:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55332
L_55336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55337
.p2align 0x4
.long 0x452
L_55337:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55332:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_88+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x541
L_55121:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0x541
L_55107:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55108
L_55109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55110
.p2align 0x4
.long 0x531
L_55110:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_55108:
	movq $0x10AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq $0x3505,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x56D
L_55062:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_54884
L_55063:
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x2,%r13
	je L_396636
L_55064:
	jmp L_54884
.p2align 0x4
L_396636:
L_55065:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_54884
.p2align 0x4
.long 0xC76
L_54962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_54963
.p2align 0x4
.long 0x524
L_54964:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_54884
L_54965:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0xC76
L_54930:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_54931
.p2align 0x4
.long 0x524
L_54932:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_54884
L_54933:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x542
L_56264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_56265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0x556
L_55432:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55433
L_55438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_55439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55439
.p2align 0x4
.long 0x562
L_55439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_55433:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_396640
L_55437:
	movq 0x0(%r15),%r14
	jmp L_55421
.p2align 0x4
L_396640:
L_55434:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_396641
L_55436:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,%r14
	jmp L_55421
.p2align 0x4
L_396641:
L_55435:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,%r14
	jmp L_55421
.p2align 0x4
.long 0x556
L_55422:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_55423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x557
L_56041:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_56030
.p2align 0x4
.long 0x5EE
L_55721:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_55722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5EE
L_55709:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55710
L_55712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55713
.p2align 0x4
.long 0x509
L_55713:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_55710:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_55711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC97
L_55676:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55677
L_55680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55681
.p2align 0x4
.long 0xC6C
L_55681:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55677:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_55678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC99
L_55688:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55689
L_55735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55736
.p2align 0x4
.long 0xCA0
L_55736:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55689:
	movslq 0x2C(%rbp),%r15
	movq 0x68(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_55691:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_55692:
	movl 0x0(%r13),%r15d
	movl %r15d,0x88(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_55693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x1
bug_90:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55739
L_55740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55741
.p2align 0x4
.long 0x452
L_55741:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55739:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_55940:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_55941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCBB
L_55902:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55903
L_55914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_55915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55915
.p2align 0x4
.long 0xCBF
L_55915:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_55903:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xED50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_55904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x79B
L_55867:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79B
L_55821:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCA9
L_55789:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55790
L_55792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55793
.p2align 0x4
.long 0xCAB
L_55793:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55790:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xCAD
L_55800:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55801
L_55833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_55834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55834
.p2align 0x4
.long 0xCB0
L_55834:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_55801:
	movslq 0x2C(%rbp),%r15
	movq 0x70(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_54948
L_55803:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_55647
L_55804:
	movl 0x0(%r13),%r15d
	movl %r15d,0x90(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_55805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x1
bug_91:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55837
L_55838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55839
.p2align 0x4
.long 0x452
L_55839:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55837:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_89:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55386
L_55387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55388
.p2align 0x4
.long 0x452
L_55388:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55386:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_88:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55333
L_55334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55335
.p2align 0x4
.long 0x452
L_55335:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55333:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x542
L_55122:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_55123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0xC5A
L_56265:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56266
L_56277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56278
.p2align 0x4
.long 0xC5B
L_56278:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_56266:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_56267:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_54893
L_56268:
	cmpq $0x1,%r14
	je L_396657
L_56269:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_56267
.p2align 0x4
L_396657:
L_56270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56271
L_56275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56276
.p2align 0x4
.long 0x57A
L_56276:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56271:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_396658
L_56272:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_125:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_396658:
L_56274:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_125
.p2align 0x4
.long 0x524
L_55423:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_54884
L_55424:
	movq 0x28(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x2,0x0(%r14)
	jmp L_54884
.p2align 0x4
.long 0x5EE
L_55722:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55723
L_55725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55726
.p2align 0x4
.long 0x509
L_55726:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_55723:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_55724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x45A
L_55711:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79B
L_55678:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC9A
L_55693:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55694
L_55732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55733
.p2align 0x4
.long 0xC9F
L_55733:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55694:
	movq 0x70(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_55703
L_55695:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_55696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x51F
L_55941:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55942
L_55965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_55966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55966
.p2align 0x4
.long 0x4AF
L_55966:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_55942:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_55943:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_54893
L_55944:
	cmpq $0x1,%r14
	je L_396666
L_55945:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_55943
.p2align 0x4
L_396666:
L_55946:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55947
L_55963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55964
.p2align 0x4
.long 0x4E7
L_55964:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_55947:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_396667
L_55948:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_45:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_396667:
L_55962:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_45
.p2align 0x4
.long 0xC9B
L_55904:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55905
L_55912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_55913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55913
.p2align 0x4
.long 0xCBE
L_55913:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_55905:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_55906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_55679:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x17,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCAA
L_55791:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCAE
L_55805:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55806
L_55830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_55831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55831
.p2align 0x4
.long 0xCAF
L_55831:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_55806:
	movq 0x78(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_396672
L_55807:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xED10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_55808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396672:
L_55814:
	movq 0x30(%rbp),%r15
	jmp L_55815
.p2align 0x4
.long 0xC5A
L_55123:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55124
L_55135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_55136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55136
.p2align 0x4
.long 0xC5B
L_55136:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_55124:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_55125:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_54893
L_55126:
	cmpq $0x1,%r14
	je L_396674
L_55127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_55125
.p2align 0x4
L_396674:
L_55128:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55129
L_55133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_55134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55134
.p2align 0x4
.long 0x57A
L_55134:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_55129:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_396675
L_55130:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_116:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_55131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_396675:
L_55132:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_116
.p2align 0x4
.long 0x56D
L_56273:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x45A
L_55724:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC9B
L_55696:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_55697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
rev_46:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_396681
L_55949:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_55950:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396680
.p2align 0x4,,0x7
L_55951:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_396679
L_55952:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_55950
.p2align 0x4
L_396679:
L_55954:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_55955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396680:
L_55959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_55960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55960
.p2align 0x4
.long 0x45C
L_55960:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_55951
.p2align 0x4
L_396681:
L_55961:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_55954
.p2align 0x4
.long 0xCBC
L_55906:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_55907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC9B
L_55808:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_55809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x56D
L_55131:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_54934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC9B
L_55697:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55698
L_55700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_55701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55701
.p2align 0x4
.long 0x61D
L_55701:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_55698:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_55699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1
L_55955:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55956
L_55957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_55958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55958
.p2align 0x4
.long 0x452
L_55958:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_55956:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCBC
L_55907:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55908
L_55910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_55911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55911
.p2align 0x4
.long 0xCBD
L_55911:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_55908:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_55909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC9B
L_55809:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_55810
L_55812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_55813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_55813
.p2align 0x4
.long 0x61D
L_55813:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_55810:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_55811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x61C
L_55699:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCAA
L_55909:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x61C
L_55811:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_55679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl get_41
.hidden get_41
get_41:
L_56356:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_56357
L_56411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_56412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56412
.p2align 0x4
.long 0x460
L_56412:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_56357:
	movq 0x8(%rbp),%r10
	movq 0x10(%r10),%r11
	movq 0x8(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_396695
L_56359:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_396694
L_56360:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_56362:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_396693
L_56403:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD51,%r10
	jne L_396692
L_56404:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_396689
L_56363:
	incl %ecx
	jo L_396688
L_56365:
	cmpq $0x1,%r14
	je L_396686
L_56366:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_56362
.p2align 0x4
L_396686:
L_56367:
L_56368:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_396687
L_56370:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_127
L_56402:
	movl %ecx,0x0(%r15)
x_127:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_56372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_396687:
L_56369:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396688:
L_56364:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396689:
L_56406:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56369
L_56407:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_396690
L_56409:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396690:
L_56408:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396692:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_56363
.p2align 0x4
L_396693:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_56363
.p2align 0x4
L_396694:
L_56410:
	xorl %ecx,%ecx
	jmp L_56368
.p2align 0x4
L_396695:
L_56358:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_56372:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_56373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_56373:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_56374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_56374:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED70)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_56375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_56375:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_56376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56377
L_56400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_56401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56401
.p2align 0x4
.long 0x4AF
L_56401:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_56377:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_56378:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_56364
L_56379:
	cmpq $0x1,%r14
	je L_396697
L_56380:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_56378
.p2align 0x4
L_396697:
L_56381:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56382
L_56398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56399
.p2align 0x4
.long 0x4E7
L_56399:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_56382:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_396698
L_56383:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_46:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_396698:
L_56397:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_46
.p2align 0x4
.long 0x1
rev_47:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_396704
L_56384:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_56385:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396703
.p2align 0x4,,0x7
L_56386:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_396702
L_56387:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_56385
.p2align 0x4
L_396702:
L_56389:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_56390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_396703:
L_56394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_56395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56395
.p2align 0x4
.long 0x45C
L_56395:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_56386
.p2align 0x4
L_396704:
L_56396:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_56389
.p2align 0x4
.long 0x1
L_56390:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56391
L_56392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_56393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56393
.p2align 0x4
.long 0x452
L_56393:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_56391:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1343
.hidden x_1343
x_1343:
L_56413:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_56414
L_56427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_56428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56428
.p2align 0x4
.long 0x4AF
L_56428:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_56414:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_396706
L_56425:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396706:
L_56416:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x5F0
L_56426:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_56416
.p2align 0x4
.long 0x4E1
L_56417:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396708
L_56418:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x2,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396708:
L_56420:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_56421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x4E1
L_56419:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_56420
.p2align 0x4
.long 0x1
L_56421:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396709
L_56422:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396709:
L_56423:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl visitExp_0
.hidden visitExp_0
visitExp_0:
L_56429:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_56514
L_56430:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396717
L_56431:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xF28,%r10
	je L_396715
	cmpq $0xF29,%r10
	je L_396714
	cmpq $0xF2A,%r10
	je L_396712
	cmpq $0xF2B,%r10
	je L_396711
	cmpq $0xF2C,%r10
	je L_396710
L_56432:
	movq 0x0(%r15),%r10
	movq %r10,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_56433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396710:
L_56513:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396711:
L_56504:
	movq %r11,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_396712:
L_56487:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x8(%rbp)
	cmpq $0x1,%r11
	je L_396713
L_56488:
	movq %r11,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_396713:
L_56503:
	movq $0x3533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp foreachi_5
.p2align 0x4
L_396714:
L_56470:
	movq 0x8(%r15),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq $0x3533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r11,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_56471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_396715:
L_56436:
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_396716
L_56446:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396716:
L_56437:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396717:
L_56514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_56515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56515
.p2align 0x4
.long 0x460
L_56515:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_56431
.p2align 0x4
.long 0x1
L_56433:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396719
L_56434:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396719:
L_56435:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x497
L_56505:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396720
L_56506:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movb $0x2,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396720:
L_56508:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_56509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x4E1
L_56489:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56490
L_56501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_56502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56502
.p2align 0x4
.long 0x4E8
L_56502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_56490:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396721
L_56491:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396721:
L_56494:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_396722
L_56496:
	movl %r13d,0x30(%rbp)
	movq $0x3847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	addq $0x28,%rbp
	leaq (L_56497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_396722:
L_56495:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB63
L_56471:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je L_396729
	cmpq $0x3A,%r14
	je L_396727
	cmpq $0x3D,%r14
	je L_396725
L_56472:
	andq $0x3,%r15
	jnz L_56473
L_56474:
L_56473:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396725:
L_56483:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_396726
L_56485:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_56486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396726:
L_56459:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396727:
L_56479:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_56459
L_56481:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_56482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396729:
L_56475:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_56459
L_56477:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_56478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x4E3
L_56447:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396731
L_56448:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x2,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396731:
L_56450:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x5EE
L_56438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396732
L_56439:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x2,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396732:
L_56441:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_56442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x497
L_56507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_56508
.p2align 0x4
.long 0x1
L_56509:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396733
L_56510:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396733:
L_56511:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_56492:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56494
L_56498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_56499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56499
.p2align 0x4
.long 0x4E8
L_56499:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_56494
.p2align 0x4
.long 0x4E1
L_56497:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_0
.p2align 0x4
.long 0x735
L_56486:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_0
.p2align 0x4
.long 0x735
L_56482:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_0
.p2align 0x4
.long 0x735
L_56478:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_0
.p2align 0x4
.long 0x4E3
L_56449:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_56450
.p2align 0x4
.long 0x2B
L_56451:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r15,0x18(%rbp)
L_56452:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_56453
L_56454:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_396737
L_56455:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_396736
	cmpq $0x2,%r15
	je L_396735
L_56456:
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_56457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_396735:
L_56468:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396736:
L_56467:
	movq (globalObjptr+0x23A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396737:
L_56453:
	movq (globalObjptr+0x2398)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EE
L_56440:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_56441
.p2align 0x4
.long 0x1
L_56442:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396739
L_56443:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396739:
L_56444:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_56457:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%r15),%r14
	movslq 0x8(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_56459
L_56460:
	salq $0x4,%r13
	movq 0x8(%r14,%r13,1),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_396740
L_56465:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396740:
L_56462:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_396741
L_56463:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_396741:
L_56464:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_56466:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_56462
.text
.p2align 0x4
.globl foreachi_5
.hidden foreachi_5
foreachi_5:
L_56516:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_56517
L_57846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_57847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57847
.p2align 0x4
.long 0x460
L_57847:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_56517:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_396896
L_56520:
	cmpl $0x0,%r13d
	jl L_396895
L_56521:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_660:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396894
.p2align 0x4,,0x7
L_56522:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_396893
L_56524:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1A78,%rax
	cmpq $0x2A,%rax
	ja L_396743
	jmp *jumpTable_129(,%rax,8)
.data
.p2align 0x4
jumpTable_129:
.quad L_396892,L_396891,L_396890,L_396889,L_396888,L_396887,L_396874,L_396873,L_396872,L_396871,L_396870,L_396869,L_396868,L_396851,L_396850,L_396849,L_396848,L_396847,L_396846,L_396845,L_396844,L_396803,L_396802,L_396801,L_396800,L_396799,L_396784,L_396783,L_396782,L_396781,L_396780,L_396779,L_396778,L_396777,L_396776,L_396775,L_396774,L_396773,L_396772,L_396771,L_396770,L_396769,L_396756
.text
.p2align 0x4
L_396743:
L_56525:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_396755
L_56527:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_396754
L_56528:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_56530:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396753
L_56546:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBE,%r11
	jne L_396752
L_56547:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396749
L_56531:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_396748
L_56533:
	cmpq $0x1,%r15
	je L_396744
L_56534:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_56530
.p2align 0x4
L_396744:
L_56535:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396747
.p2align 0x4,,0x7
L_56536:
	movl 0x18(%rbp),%ecx
L_56537:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_396746
L_56539:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56541
L_56543:
	movl %ecx,0x0(%r15)
L_56541:
	movq $0x197D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_56542:
	incl 0x14(%rbp)
	jmp loop_660
.p2align 0x4
L_396746:
L_56538:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396747:
L_56544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56545
.p2align 0x4
.long 0x576
L_56545:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_56536
.p2align 0x4
L_396748:
L_56532:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396749:
L_56549:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_56550:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56552
L_56553:
	movl %ecx,0x0(%r15)
L_56552:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396752:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_56531
.p2align 0x4
L_396753:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_56531
.p2align 0x4
L_396754:
L_56554:
	xorl %ecx,%ecx
	jmp L_56537
.p2align 0x4
L_396755:
L_56526:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396756:
L_57818:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_56526
L_57819:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_396767
L_57820:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_57822:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396766
L_57835:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBE,%r11
	jne L_396765
L_57836:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_396762
L_57823:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_56532
L_57824:
	cmpq $0x1,%r15
	je L_396757
L_57825:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_57822
.p2align 0x4
L_396757:
L_57826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396760
.p2align 0x4,,0x7
L_57827:
	movl 0x18(%rbp),%ecx
L_57828:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_57829:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_57831
L_57832:
	movl %ecx,0x0(%r15)
L_57831:
	movq $0x197D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_56542
.p2align 0x4
L_396760:
L_57833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57834
.p2align 0x4
.long 0x576
L_57834:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_57827
.p2align 0x4
L_396762:
L_57838:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_57839:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56552
L_57841:
	movl %ecx,0x0(%r15)
	jmp L_56552
.p2align 0x4
L_396765:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_57823
.p2align 0x4
L_396766:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_57823
.p2align 0x4
L_396767:
L_57842:
	xorl %ecx,%ecx
	jmp L_57828
.p2align 0x4
L_396769:
L_57817:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_49
.p2align 0x4
L_396770:
L_57584:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_57585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_396771:
L_57491:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_57492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396772:
L_57490:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xE20)(%rip),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp L_56542
.p2align 0x4
L_396773:
L_57439:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0xD27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_57440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396774:
L_57432:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_57433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_396775:
L_57417:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_396776:
L_57402:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_396777:
L_57398:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_396778:
L_57388:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_57389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_396779:
L_57387:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396780:
L_57384:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396781:
L_57383:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_396782:
L_57379:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_396783:
L_57375:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_57376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_396784:
L_57346:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r13
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_56526
L_57347:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_396797
L_57348:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movl $0x0,0x18(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_57350:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_396796
L_57359:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_396795
L_57360:
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	cmpq 0x0(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_396789
L_57351:
	movl 0x18(%rbp),%r11d
	incl %r11d
	jo L_56532
L_57352:
	cmpq $0x1,%r14
	je L_396785
L_57353:
	movl %r11d,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_57350
.p2align 0x4
L_396785:
	movl %r11d,%ecx
L_57355:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_57356:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56542
L_57358:
	movl %ecx,0x0(%r15)
	jmp L_56542
.p2align 0x4
L_396789:
L_57362:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396794
.p2align 0x4,,0x7
L_57363:
	movl 0x18(%rbp),%r10d
	movslq %r10d,%r15
	movq (globalObjptr+0x1070)(%rip),%r9
	addq 0x0(%r9),%r15
	jo L_56538
L_57364:
	movq %r15,0x0(%r9)
	movq (globalObjptr+0x1078)(%rip),%r9
	cmpl %r10d,0x0(%r9)
	jl L_396791
L_57366:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_56542
L_57367:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
L_57368:
	movq $0x1097,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r10,0x20(%rbp)
	addq $0x28,%r12
	addq $0x20,%rbp
	leaq (L_57053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nonSelect_0
.p2align 0x4
L_396791:
L_57369:
	movq (globalObjptr+0x1078)(%rip),%r10
	movl 0x18(%rbp),%r9d
	movl %r9d,0x0(%r10)
L_57370:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_56542
L_57371:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
	jmp L_57368
.p2align 0x4
L_396794:
L_57372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57373
.p2align 0x4
.long 0x52D
L_57373:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_57363
.p2align 0x4
L_396795:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_57351
.p2align 0x4
L_396796:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_57351
.p2align 0x4
L_396797:
L_57374:
	xorl %ecx,%ecx
	jmp L_57355
.p2align 0x4
L_396799:
L_57325:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0xD37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_57326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_396800:
L_57277:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_57278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_396801:
L_57265:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_57266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_396802:
L_57262:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_396803:
L_57204:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rax
	movq %rax,%r15
	subq $0x1,%r15
	xchgq %r15,%rax
	cmpq $0x2E,%rax
	ja L_396804
	jmp *jumpTable_130(,%rax,8)
.data
.p2align 0x4
jumpTable_130:
.quad L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542,L_57205,L_56542,L_56542,L_56542
.text
.p2align 0x4
L_396804:
L_57205:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1AA6,%r14
	je L_396806
	cmpq $0x1AA7,%r14
	je L_396805
L_57206:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_396805:
L_57222:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_57223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_396806:
L_57209:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_57210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_396844:
L_57203:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1364
.p2align 0x4
L_396845:
L_57200:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_396846:
L_57180:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_396847:
L_57157:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_57158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_396848:
L_57054:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_57055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_396849:
L_57049:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_57050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_396850:
L_57046:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_396851:
L_57029:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rax
	movq %rax,%r15
	subq $0x1,%r15
	xchgq %r15,%rax
	cmpq $0x10,%rax
	ja L_396852
	jmp *jumpTable_131(,%rax,8)
.data
.p2align 0x4
jumpTable_131:
.quad L_56542,L_56542,L_56542,L_57030,L_56542,L_56542,L_56542,L_57030,L_56542,L_56542,L_56542,L_57030,L_56542,L_56542,L_56542,L_57030,L_56542
.text
.p2align 0x4
L_396852:
L_57030:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1AA3,%r14
	je L_396853
L_57032:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396853:
L_57031:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396868:
L_57026:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_396869:
L_57025:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
L_396870:
L_57013:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_57014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_396871:
L_57012:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_396872:
L_56997:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_56998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_396873:
L_56982:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_56983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_396874:
L_56956:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_56526
L_56957:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_396885
L_56958:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_56960:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_56961
L_56974:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD72,%r13
	jne L_56961
L_56975:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x20(%rbp)
	je L_396880
L_56961:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_56532
L_56962:
	cmpq $0x1,%r15
	je L_396875
L_56963:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_56960
.p2align 0x4
L_396875:
L_56964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396878
.p2align 0x4,,0x7
L_56965:
	movl 0x18(%rbp),%ecx
L_56966:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_56967:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56969
L_56971:
	movl %ecx,0x0(%r15)
L_56969:
	movq $0x1343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_56970:
	movb $0x1,0x0(%r15)
	jmp L_56542
.p2align 0x4
L_396878:
L_56972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_56973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56973
.p2align 0x4
.long 0x57A
L_56973:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_56965
.p2align 0x4
L_396880:
L_56977:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_56978:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_396881
L_56980:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_56970
.p2align 0x4
L_396881:
L_56979:
	movq %r13,%r15
	jmp L_56970
.p2align 0x4
L_396885:
L_56981:
	xorl %ecx,%ecx
	jmp L_56966
.p2align 0x4
L_396887:
L_56937:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
L_396888:
L_56703:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_56704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396889:
L_56701:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_50
.p2align 0x4
L_396890:
L_56650:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0xD27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_396891:
L_56649:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xDF0)(%rip),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp L_56542
.p2align 0x4
L_396892:
L_56555:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_56556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_396893:
L_56523:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396894:
L_57843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_57844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57844
.p2align 0x4
.long 0x45E
L_57844:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_56522
.p2align 0x4
L_396895:
L_56907:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_396896:
L_56519:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x524
L_56702:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_56542
.p2align 0x4
.long 0x577
L_57585:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x28(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x18(%r10),%r15
	cmpq $0x1,%r9
	je L_396904
L_57586:
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movl $0x2,%ecx
.p2align 0x4,,0x7
L_57587:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1197,%r11
	je L_396902
L_57588:
	incl %ecx
	jo L_56532
L_57589:
	cmpq $0x1,%r13
	je L_396898
L_57590:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57587
.p2align 0x4
L_396898:
L_57591:
	movl %ecx,0x18(%rbp)
L_57592:
	movl 0x18(%rbp),%r14d
	decl %r14d
	movl %r14d,0x1C(%rbp)
	jo L_56532
L_57593:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1198,%r14
	jne L_396899
L_57788:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_57789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_396899:
L_57594:
	movq $0x1,%r14
	movq $0x1,%r15
L_57595:
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_57596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_0
.p2align 0x4
L_396902:
L_57813:
	cmpq $0x1,%r13
	je L_396903
L_57814:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57587
.p2align 0x4
L_396903:
L_57815:
	movl %ecx,0x18(%rbp)
	jmp L_57592
.p2align 0x4
L_396904:
L_57816:
	movl $0x2,0x18(%rbp)
	jmp L_57592
.p2align 0x4
.long 0x559
L_57492:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57493
L_57582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57583
.p2align 0x4
.long 0x570
L_57583:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57493:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_396938
L_57494:
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_396927
L_57495:
	cmpq $0x1,%r15
	je L_396926
L_57496:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396925
.p2align 0x4,,0x7
L_57498:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x1269,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2245,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_396905
L_57499:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57497
.p2align 0x4
L_396905:
L_57500:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57501:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396924
.p2align 0x4,,0x7
L_57502:
	movq $0x2245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_396906
L_57503:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57501
.p2align 0x4
L_396906:
L_57504:
	movq %r15,0x20(%rbp)
L_57505:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_396923
L_57506:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57507:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396922
.p2align 0x4,,0x7
L_57508:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x1173,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x25BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_396907
L_57509:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57507
.p2align 0x4
L_396907:
L_57510:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57511:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396921
.p2align 0x4,,0x7
L_57512:
	movq $0x25BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_396908
L_57513:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57511
.p2align 0x4
L_396908:
L_57514:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_57515:
	movq $0x132D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_56526
L_57516:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_396919
L_57517:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_57519:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_396918
L_57532:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7A,%r11
	jne L_396917
L_57533:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_396914
L_57520:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_56532
L_57521:
	cmpq $0x1,%r15
	je L_396909
L_57522:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_57519
.p2align 0x4
L_396909:
L_57523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57524
L_57530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57531
.p2align 0x4
.long 0x597
L_57531:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57524:
	movl 0x18(%rbp),%ecx
L_57525:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_57526:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_57528
L_57529:
	movl %ecx,0x0(%r15)
L_57528:
	movq $0x1AF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_56542
.p2align 0x4
L_396914:
L_57535:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_57536:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_396915
L_57539:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_57538:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_56542
.p2align 0x4
L_396915:
L_57537:
	movq %r13,%r15
	jmp L_57538
.p2align 0x4
L_396917:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_57520
.p2align 0x4
L_396918:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_57520
.p2align 0x4
L_396919:
L_57540:
	xorl %ecx,%ecx
	jmp L_57525
.p2align 0x4
L_396921:
L_57541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57542
.p2align 0x4
.long 0x531
L_57542:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57512
.p2align 0x4
L_396922:
L_57543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57544
.p2align 0x4
.long 0x531
L_57544:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57508
.p2align 0x4
L_396923:
L_57545:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_57515
.p2align 0x4
L_396924:
L_57546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57547
.p2align 0x4
.long 0x531
L_57547:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57502
.p2align 0x4
L_396925:
L_57548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57549
.p2align 0x4
.long 0x531
L_57549:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57498
.p2align 0x4
L_396926:
L_57550:
	movq $0x1,0x20(%rbp)
	jmp L_57505
.p2align 0x4
L_396927:
L_57551:
	cmpq $0x1,%r15
	je L_396937
L_57552:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57553:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396936
.p2align 0x4,,0x7
L_57554:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	movq $0x1269,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2245,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_396928
L_57555:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_57553
.p2align 0x4
L_396928:
L_57556:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396935
.p2align 0x4,,0x7
L_57558:
	movq $0x2245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_396929
L_57559:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57557
.p2align 0x4
L_396929:
L_57560:
	movq %r15,0x20(%rbp)
L_57561:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_396934
L_57562:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57563:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396933
.p2align 0x4,,0x7
L_57564:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movq $0x1173,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x25BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_396930
L_57565:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_57563
.p2align 0x4
L_396930:
L_57566:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_57567:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_396932
.p2align 0x4,,0x7
L_57568:
	movq $0x25BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_396931
L_57569:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_57567
.p2align 0x4
L_396931:
L_57570:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_57515
.p2align 0x4
L_396932:
L_57571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57572
.p2align 0x4
.long 0x531
L_57572:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57568
.p2align 0x4
L_396933:
L_57573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57574
.p2align 0x4
.long 0x531
L_57574:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57564
.p2align 0x4
L_396934:
L_57575:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_57515
.p2align 0x4
L_396935:
L_57576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57577
.p2align 0x4
.long 0x531
L_57577:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57558
.p2align 0x4
L_396936:
L_57578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57579
.p2align 0x4
.long 0x531
L_57579:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_57554
.p2align 0x4
L_396937:
L_57580:
	movq $0x1,0x20(%rbp)
	jmp L_57561
.p2align 0x4
L_396938:
L_56646:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_57440:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1135,%r15
	je L_56542
	cmpq $0x1136,%r15
	je L_56542
	cmpq $0x1137,%r15
	je L_396945
	cmpq $0x1138,%r15
	je L_56542
	cmpq $0x1139,%r15
	je L_396943
	cmpq $0x113A,%r15
	je L_396942
	cmpq $0x113B,%r15
	je L_396941
L_57441:
	movq 0x18(%r13),%r15
	cmpq $0x1,%r15
	je L_56542
L_57442:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_57443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396941:
L_57485:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_57486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396942:
L_57476:
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_57477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396943:
L_57462:
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_57463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_396945:
L_57450:
	movq 0x18(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_57451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
.long 0x558
L_57433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57434
L_57437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_57438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57438
.p2align 0x4
.long 0x57A
L_57438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_57434:
	movq 0x18(%rbp),%r15
	andq $0x1,%r15
	jnz L_56552
L_57435:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x541
L_57418:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57419
L_57430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57431
.p2align 0x4
.long 0x531
L_57431:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_57419:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_136
L_57420:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_136:
	cmpb $0x1,0x0(%r15)
	jne L_56542
L_57421:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x541
L_57403:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57404
L_57415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57416
.p2align 0x4
.long 0x531
L_57416:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_57404:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	cmpq %r11,%r14
	je x_135
L_57405:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_135:
	cmpb $0x1,0x0(%r15)
	jne L_56542
L_57406:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x524
L_57399:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_56542
L_57400:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x526
L_57389:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_57390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x524
L_57385:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_56532
L_57386:
	movl %r15d,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x524
L_57380:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_56542
L_57381:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x6,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x457
L_57376:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_56542
L_57378:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_57053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x524
L_57053:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_56542
.p2align 0x4
.long 0x526
L_57326:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r15
	je loop_3817
L_57327:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_57328:
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_57329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
loop_3817:
loop_671:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_56542
L_57334:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl $0x0,0x0(%r15)
	movq 0x38(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp force_0
.p2align 0x4
.long 0x457
L_57278:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq 0x18(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r15
	je L_56542
L_57279:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
L_57280:
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_57281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
.long 0xCF6
L_57266:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x30(%rbp)
	jl L_396961
L_57267:
	cmpl $0x2,%r11d
	jne L_56542
L_57269:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_57270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_396961:
L_57221:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x524
L_57263:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_56532
L_57264:
	movl %r15d,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x524
x_133:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_56542
L_57208:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x457
L_57223:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_56542
L_57225:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_57053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0xCF6
L_57210:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x30(%rbp)
	jl L_57221
L_57211:
	cmpl $0x2,%r11d
	jne L_56542
L_57213:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_57214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x524
L_57201:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_56532
L_57202:
	movl %r15d,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x559
x_132:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57181
L_57198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57199
.p2align 0x4
.long 0x570
L_57199:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57181:
	movq 0x30(%rbp),%r15
	movq 0x30(%r15),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x20(%rbp)
	jnl L_57183
L_57195:
	cmpl %r13d,0x24(%rbp)
	jnl L_56542
L_57183:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_57190
L_57184:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_57185:
	movq 0x18(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_56542
L_57186:
	cmpq $0x1,%r15
	je L_396968
L_57187:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_57185
.p2align 0x4
L_396968:
L_57188:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57190
L_57191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_57192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57192
.p2align 0x4
.long 0x56E
L_57192:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_57190:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x56F
L_57158:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57159
L_57178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57179
.p2align 0x4
.long 0x570
L_57179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57159:
	movq 0x18(%rbp),%r13
	movq 0x28(%r13),%r11
	movq 0x0(%r11),%r15
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_396981
L_57162:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jz L_56542
L_57164:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_57171
L_57165:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_57166:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_56542
L_57167:
	cmpq $0x1,%r15
	je L_396975
L_57168:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_57166
.p2align 0x4
L_396975:
L_57169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57171
L_57174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57175
.p2align 0x4
.long 0x5C4
L_57175:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57171:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_56542
L_57172:
	movl $0x1,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp L_56542
.p2align 0x4
L_396981:
L_57161:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x541
L_57055:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x457
L_57050:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_56542
L_57052:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_57053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x524
x_130:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_56542
L_57048:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x524
L_57027:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_56532
L_57028:
	movl %r15d,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x577
L_57014:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57015
L_57023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57024
.p2align 0x4
.long 0x555
L_57024:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57015:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_56542
L_57016:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_57018
L_57019:
	cmpq $0x1,0x0(%r15)
	jne L_396986
L_57021:
	movq $0x273D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_56542
.p2align 0x4
L_396986:
L_57018:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x541
L_56998:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56999
L_57010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57011
.p2align 0x4
.long 0x531
L_57011:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_56999:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_129
L_57000:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_129:
	cmpb $0x1,0x0(%r15)
	jne L_56542
L_57001:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x541
L_56983:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56984
L_56995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56996
.p2align 0x4
.long 0x531
L_56996:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_56984:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	cmpq %r11,%r14
	je x_128
L_56985:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_128:
	cmpb $0x1,0x0(%r15)
	jne L_56542
L_56986:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_56987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x558
L_56938:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_396994
L_56955:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_56940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_396994:
L_56939:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_56940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x560
L_56704:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x18(%r10),%r15
	cmpq $0x1,%r9
	je L_397001
L_56705:
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movl $0x2,%ecx
.p2align 0x4,,0x7
L_56706:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x112E,%r11
	je L_396999
L_56707:
	incl %ecx
	jo L_56532
L_56708:
	cmpq $0x1,%r13
	je L_396995
L_56709:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56706
.p2align 0x4
L_396995:
L_56710:
	movl %ecx,0x18(%rbp)
L_56711:
	movl 0x18(%rbp),%r14d
	decl %r14d
	movl %r14d,0x1C(%rbp)
	jo L_56532
L_56712:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112F,%r14
	jne L_396996
L_56908:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_56909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_396996:
L_56713:
	movq $0x1,%r14
	movq $0x1,%r15
L_56714:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_56715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_1
.p2align 0x4
L_396999:
L_56933:
	cmpq $0x1,%r13
	je L_397000
L_56934:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56706
.p2align 0x4
L_397000:
L_56935:
	movl %ecx,0x18(%rbp)
	jmp L_56711
.p2align 0x4
L_397001:
L_56936:
	movl $0x2,0x18(%rbp)
	jmp L_56711
.p2align 0x4
.long 0x557
L_56651:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x119E,%r15
	je L_56542
	cmpq $0x119F,%r15
	je L_56542
	cmpq $0x11A0,%r15
	je L_397007
	cmpq $0x11A1,%r15
	je L_56542
	cmpq $0x11A2,%r15
	je L_397005
	cmpq $0x11A3,%r15
	je L_397004
	cmpq $0x11A4,%r15
	je L_397003
L_56652:
	movq 0x18(%r13),%r15
	cmpq $0x1,%r15
	je L_56542
L_56653:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_397003:
L_56696:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_397004:
L_56687:
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_397005:
L_56673:
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_397007:
L_56661:
	movq 0x18(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0x559
L_56556:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56557
L_56647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56648
.p2align 0x4
.long 0x570
L_56648:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56557:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_56646
L_56558:
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_397032
L_56559:
	cmpq $0x1,%r15
	je L_397031
L_56560:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56561:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397030
.p2align 0x4,,0x7
L_56562:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_397010
L_56563:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56561
.p2align 0x4
L_397010:
L_56564:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56565:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397029
.p2align 0x4,,0x7
L_56566:
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397011
L_56567:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56565
.p2align 0x4
L_397011:
L_56568:
	movq %r15,0x20(%rbp)
L_56569:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_397028
L_56570:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56571:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397027
.p2align 0x4,,0x7
L_56572:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x1247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2317,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_397012
L_56573:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56571
.p2align 0x4
L_397012:
L_56574:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56575:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397026
.p2align 0x4,,0x7
L_56576:
	movq $0x2317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_397013
L_56577:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56575
.p2align 0x4
L_397013:
L_56578:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_56579:
	movq $0x131B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_56526
L_56580:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_397024
L_56581:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_56583:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_397023
L_56596:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD83,%r11
	jne L_397022
L_56597:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_397019
L_56584:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_56532
L_56585:
	cmpq $0x1,%r15
	je L_397014
L_56586:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_56583
.p2align 0x4
L_397014:
L_56587:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56588
L_56594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_56595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56595
.p2align 0x4
.long 0x597
L_56595:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_56588:
	movl 0x18(%rbp),%ecx
L_56589:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_56590:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_56592
L_56593:
	movl %ecx,0x0(%r15)
L_56592:
	movq $0x1B07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_56542
.p2align 0x4
L_397019:
L_56599:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_56538
L_56600:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_397020
L_56603:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_56602:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_56542
.p2align 0x4
L_397020:
L_56601:
	movq %r13,%r15
	jmp L_56602
.p2align 0x4
L_397022:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_56584
.p2align 0x4
L_397023:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_56584
.p2align 0x4
L_397024:
L_56604:
	xorl %ecx,%ecx
	jmp L_56589
.p2align 0x4
L_397026:
L_56605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56606
.p2align 0x4
.long 0x531
L_56606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56576
.p2align 0x4
L_397027:
L_56607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56608
.p2align 0x4
.long 0x531
L_56608:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56572
.p2align 0x4
L_397028:
L_56609:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_56579
.p2align 0x4
L_397029:
L_56610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56611
.p2align 0x4
.long 0x531
L_56611:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56566
.p2align 0x4
L_397030:
L_56612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56613
.p2align 0x4
.long 0x531
L_56613:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56562
.p2align 0x4
L_397031:
L_56614:
	movq $0x1,0x20(%rbp)
	jmp L_56569
.p2align 0x4
L_397032:
L_56615:
	cmpq $0x1,%r15
	je L_397042
L_56616:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397041
.p2align 0x4,,0x7
L_56618:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_397033
L_56619:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_56617
.p2align 0x4
L_397033:
L_56620:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56621:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397040
.p2align 0x4,,0x7
L_56622:
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397034
L_56623:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56621
.p2align 0x4
L_397034:
L_56624:
	movq %r15,0x20(%rbp)
L_56625:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_397039
L_56626:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56627:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397038
.p2align 0x4,,0x7
L_56628:
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	movq $0x1247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2317,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_397035
L_56629:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_56627
.p2align 0x4
L_397035:
L_56630:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_56631:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397037
.p2align 0x4,,0x7
L_56632:
	movq $0x2317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_397036
L_56633:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_56631
.p2align 0x4
L_397036:
L_56634:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_56579
.p2align 0x4
L_397037:
L_56635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56636
.p2align 0x4
.long 0x531
L_56636:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56632
.p2align 0x4
L_397038:
L_56637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56638
.p2align 0x4
.long 0x531
L_56638:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56628
.p2align 0x4
L_397039:
L_56639:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_56579
.p2align 0x4
L_397040:
L_56640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56641
.p2align 0x4
.long 0x531
L_56641:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56622
.p2align 0x4
L_397041:
L_56642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_56643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56643
.p2align 0x4
.long 0x531
L_56643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_56618
.p2align 0x4
L_397042:
L_56644:
	movq $0x1,0x20(%rbp)
	jmp L_56625
.p2align 0x4
.long 0xD06
L_57789:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_397053
L_57790:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57791:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397052
.p2align 0x4,,0x7
L_57792:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_397045
L_57793:
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57791
.p2align 0x4
L_397045:
L_57794:
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57795:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397051
.p2align 0x4,,0x7
L_57796:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_397046
L_57797:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57795
.p2align 0x4
L_397046:
L_57798:
	movq %r15,0x30(%rbp)
L_57799:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_56519
L_57801:
	decl %r13d
	jo L_56532
L_57802:
	movl %r13d,0x60(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
loop_679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397048
.p2align 0x4,,0x7
L_57803:
	movl 0x60(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_397047
L_57804:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	jmp loop_679
.p2align 0x4
L_397047:
L_57805:
	movq 0x30(%rbp),%r14
	movq 0x58(%rbp),%r13
	movq %r13,%r15
	jmp L_57595
.p2align 0x4
L_397048:
L_57806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_57807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57807
.p2align 0x4
.long 0xCE2
L_57807:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_57803
.p2align 0x4
L_397051:
L_57808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_57809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57809
.p2align 0x4
.long 0xD07
L_57809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_57796
.p2align 0x4
L_397052:
L_57810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_57811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57811
.p2align 0x4
.long 0xD07
L_57811:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_57792
.p2align 0x4
L_397053:
L_57812:
	movq $0x1,0x30(%rbp)
	jmp L_57799
.p2align 0x4
.long 0x58B
L_57596:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_56519
L_57598:
	cmpl $0x0,%r13d
	jl L_56907
L_57599:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_673:
	cmpl 0x58(%rbp),%ecx
	jnl L_397058
L_57777:
	movslq %ecx,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	imulq $0x28,%r15
	movq 0x8(%r10,%r15,1),%r8
	cmpq $0x1,0x0(%r8)
	jne L_57778
L_57779:
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_57778
L_57780:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq %r8,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_57781:
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_397055
L_57782:
	cmpq $0x1,%r11
	je L_397054
L_57783:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_57781
.p2align 0x4
L_397054:
L_57778:
	incl %ecx
	jmp loop_673
.p2align 0x4
L_397055:
L_57785:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0xE30)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_57778
.p2align 0x4
L_397058:
L_57600:
	movl $0x0,0x5C(%rbp)
.p2align 0x4,,0x7
loop_674:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397077
.p2align 0x4,,0x7
L_57601:
	movl 0x5C(%rbp),%r13d
	cmpl 0x58(%rbp),%r13d
	jnl L_397069
L_57744:
	movslq %r13d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	imulq $0x28,%r15
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x68(%rbp)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_57751
L_57745:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_57746:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_397066
L_57747:
	cmpq $0x1,%r14
	je L_397059
L_57748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57746
.p2align 0x4
L_397059:
L_57749:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397065
.p2align 0x4,,0x7
L_57751:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_57758
L_57752:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_57753:
	movq 0x60(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397062
L_57754:
	cmpq $0x1,%r14
	je L_397060
L_57755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57753
.p2align 0x4
L_397060:
L_57756:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397061
.p2align 0x4,,0x7
L_57758:
	movl 0x18(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x2579,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_57759:
	incl 0x5C(%rbp)
	jmp loop_674
.p2align 0x4
L_397061:
L_57760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57761
.p2align 0x4
.long 0xD03
L_57761:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57758
.p2align 0x4
L_397062:
L_57762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397063
.p2align 0x4,,0x7
L_57764:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x2577,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2579,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_57759
.p2align 0x4
L_397063:
L_57765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57766
.p2align 0x4
.long 0xD03
L_57766:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57764
.p2align 0x4
L_397065:
L_57768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57769
.p2align 0x4
.long 0xD04
L_57769:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57751
.p2align 0x4
L_397066:
L_57770:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57764
L_57772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57773
.p2align 0x4
.long 0xD03
L_57773:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57764
.p2align 0x4
L_397069:
L_57602:
	movl 0x1C(%rbp),%r14d
	decl %r14d
	jo L_56532
L_57603:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_397075
L_57604:
	movl %r14d,0x1C(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r11),%r15
	movl $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_57605:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1197,%r14
	jne L_397074
L_57737:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_397070
L_57738:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp L_57605
.p2align 0x4
L_397070:
L_57739:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57740
L_57741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57742
.p2align 0x4
.long 0xCFD
L_57742:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_57740:
	movl 0x48(%rbp),%r15d
	movl %r15d,0x30(%rbp)
L_57616:
	movq 0x40(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x119D,%r15
	je L_397072
	cmpq $0x11A2,%r15
	je L_397071
L_57617:
	movq $0x1,%r14
	movq $0x1,%r15
L_57618:
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_57619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_0
.p2align 0x4
L_397071:
L_57697:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_57618
.p2align 0x4
L_397072:
L_57666:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_57667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_397074:
L_57606:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_57607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1366
.p2align 0x4
L_397075:
L_57743:
	movl %r14d,0x1C(%rbp)
	movl $0x1,0x30(%rbp)
	jmp L_57616
.p2align 0x4
L_397077:
L_57775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57776
.p2align 0x4
.long 0xD05
L_57776:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57601
.p2align 0x4
.long 0x556
L_57443:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57444
L_57445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57446
.p2align 0x4
.long 0x562
L_57446:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_57444:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x556
L_57486:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57487
L_57488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57489
.p2align 0x4
.long 0x562
L_57489:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_57487:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x526
L_57477:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57478
L_57483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57484
.p2align 0x4
.long 0x555
L_57484:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57478:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_57479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
.long 0x526
L_57463:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57464
L_57474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57475
.p2align 0x4
.long 0x555
L_57475:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57464:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_56542
L_57465:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
L_57466:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_57467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
.long 0x526
L_57451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57452
L_57459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57460
.p2align 0x4
.long 0x555
L_57460:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57452:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	cmpq $0x1,0x28(%rbp)
	je L_56542
L_57453:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_57454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
.long 0x580
L_57422:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57423
L_57427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57428
.p2align 0x4
.long 0x564
L_57428:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57423:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_57425
L_57424:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_57425:
	movb $0x0,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x580
L_57407:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57408
L_57412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57413
.p2align 0x4
.long 0x564
L_57413:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57408:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_57410
L_57409:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_57410:
	movb $0x0,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x526
L_57390:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_56542
L_57391:
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r14),%r15
L_57392:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_56542
L_57393:
	movq 0x8(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r14)
	jne L_56542
L_57395:
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (x_134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0xCF8
L_57329:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57330
L_57343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_57344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57344
.p2align 0x4
.long 0x574
L_57344:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_57330:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_397094
L_57331:
	movl $0x1,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x27E5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je loop_671
L_57332:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_57328
.p2align 0x4
L_397094:
L_57340:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je loop_671
L_57341:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_57328
.p2align 0x4
.long 0xCF9
L_57335:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57336
L_57337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57338
.p2align 0x4
.long 0xC59
L_57338:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57336:
	movq $0x3513,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (loop_672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x55B
L_57281:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57282
L_57322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57323
.p2align 0x4
.long 0x56B
L_57323:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57282:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_397105
L_57283:
	movl $0x1,0x0(%r15)
	movq $0x27E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397097
L_57284:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_57280
.p2align 0x4
L_397097:
L_57285:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_57286:
	movq 0x8(%r15),%r10
	movl $0x0,0x0(%r10)
	movq 0x0(%r15),%r10
	movq 0x0(%r10),%r13
	movq 0x40(%r15),%r10
	movq 0x0(%r10),%r11
	movq 0x28(%r15),%r10
	movq 0x0(%r10),%r9
	movslq 0x28(%rbp),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	jnb L_57161
L_57288:
	movl 0x0(%r9,%r10,4),%r8d
	testl %r8d,%r8d
	jnz loop_670
L_57289:
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_57161
L_57291:
	movl 0x0(%r11,%r10,4),%r8d
	testl %r8d,%r8d
	jz L_397102
L_57309:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	jnb L_57161
L_57311:
	movl 0x0(%r13,%r10,4),%r8d
	testl %r8d,%r8d
	jz loop_3820
	movq %r10,%r13
	movq %r9,%r11
L_57293:
	movl $0x1,0x0(%r11,%r13,4)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_397099
.p2align 0x4,,0x7
loop_669:
	cmpq $0x1,%r14
	je L_56542
L_57304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57286
.p2align 0x4
L_397099:
L_57294:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r14
L_57295:
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_57296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
loop_3820:
loop_670:
	cmpq $0x1,%r14
	je L_56542
L_57313:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57286
.p2align 0x4
L_397102:
	movq %r10,%r13
	movq %r9,%r11
	jmp L_57293
.p2align 0x4
L_397105:
L_57317:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397106
L_57318:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_57280
.p2align 0x4
L_397106:
L_57319:
	movq 0x30(%rbp),%r11
	cmpq $0x1,%r11
	je L_56542
L_57320:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r15
	xchgq %r10,%r14
	jmp L_57286
.p2align 0x4
.long 0xCF7
L_57270:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57271
L_57274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57275
.p2align 0x4
.long 0xC57
L_57275:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57271:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_57161
L_57273:
	movl $0x1,0x0(%r14,%r15,4)
	jmp L_56542
.p2align 0x4
.long 0xCF7
L_57214:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57215
L_57218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57219
.p2align 0x4
.long 0xC57
L_57219:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57215:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_57161
L_57217:
	movl $0x1,0x0(%r14,%r15,4)
	jmp L_56542
.p2align 0x4
.long 0x541
L_57056:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_57057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x580
L_57002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57003
L_57007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57008
.p2align 0x4
.long 0x564
L_57008:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57003:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	cmpq %r11,%r14
	je L_57005
L_57004:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_57005:
	movb $0x0,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x580
L_56987:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56988
L_56992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_56993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56993
.p2align 0x4
.long 0x564
L_56993:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_56988:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_56990
L_56989:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_56990:
	movb $0x0,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0x577
L_56940:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_56941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1367
.p2align 0x4
.long 0xCE3
L_56909:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_397125
L_56910:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_56911:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397124
.p2align 0x4,,0x7
L_56912:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_397117
L_56913:
	movq %r14,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_56911
.p2align 0x4
L_397117:
L_56914:
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_56915:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397123
.p2align 0x4,,0x7
L_56916:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_397118
L_56917:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_56915
.p2align 0x4
L_397118:
L_56918:
	movq %r15,0x38(%rbp)
L_56919:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_56519
L_56921:
	decl %r13d
	jo L_56532
L_56922:
	movl %r13d,0x68(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
loop_667:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397120
.p2align 0x4,,0x7
L_56923:
	movl 0x68(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_397119
L_56924:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	jmp loop_667
.p2align 0x4
L_397119:
L_56925:
	movq 0x38(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq %r13,%r15
	jmp L_56714
.p2align 0x4
L_397120:
L_56926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56927
.p2align 0x4
.long 0xCE4
L_56927:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_56923
.p2align 0x4
L_397123:
L_56928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56929
.p2align 0x4
.long 0xCE5
L_56929:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_56916
.p2align 0x4
L_397124:
L_56930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56931
.p2align 0x4
.long 0xCE5
L_56931:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_56912
.p2align 0x4
L_397125:
L_56932:
	movq $0x1,0x38(%rbp)
	jmp L_56919
.p2align 0x4
.long 0x5D6
L_56715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_56519
L_56717:
	cmpl $0x0,%r13d
	jl L_56907
L_56718:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_661:
	cmpl 0x60(%rbp),%ecx
	jnl L_397130
L_56896:
	movslq %ecx,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	imulq $0x28,%r15
	movq 0x8(%r10,%r15,1),%r8
	cmpq $0x1,0x0(%r8)
	jne L_56897
L_56898:
	movq 0x38(%rbp),%r10
	cmpq $0x1,%r10
	je L_56897
L_56899:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq %r8,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_56900:
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r13)
	je L_397127
L_56901:
	cmpq $0x1,%r11
	je L_397126
L_56902:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_56900
.p2align 0x4
L_397126:
L_56897:
	incl %ecx
	jmp loop_661
.p2align 0x4
L_397127:
L_56904:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0xE00)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_56897
.p2align 0x4
L_397130:
L_56719:
	movl $0x0,0x64(%rbp)
.p2align 0x4,,0x7
loop_662:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397149
.p2align 0x4,,0x7
L_56720:
	movl 0x64(%rbp),%r13d
	cmpl 0x60(%rbp),%r13d
	jnl L_397141
L_56863:
	movslq %r13d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x68(%rbp)
	imulq $0x28,%r15
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x70(%rbp)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_56870
L_56864:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_56865:
	movq 0x68(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397138
L_56866:
	cmpq $0x1,%r14
	je L_397131
L_56867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_56865
.p2align 0x4
L_397131:
L_56868:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397137
.p2align 0x4,,0x7
L_56870:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_56877
L_56871:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_56872:
	movq 0x68(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_397134
L_56873:
	cmpq $0x1,%r14
	je L_397132
L_56874:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_56872
.p2align 0x4
L_397132:
L_56875:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397133
.p2align 0x4,,0x7
L_56877:
	movl 0x18(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x25C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_56878:
	incl 0x64(%rbp)
	jmp loop_662
.p2align 0x4
L_397133:
L_56879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56880
.p2align 0x4
.long 0xCE0
L_56880:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56877
.p2align 0x4
L_397134:
L_56881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397135
.p2align 0x4,,0x7
L_56883:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x25C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_56878
.p2align 0x4
L_397135:
L_56884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56885
.p2align 0x4
.long 0xCE0
L_56885:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56883
.p2align 0x4
L_397137:
L_56887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56888
.p2align 0x4
.long 0xCE1
L_56888:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56870
.p2align 0x4
L_397138:
L_56889:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56883
L_56891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56892
.p2align 0x4
.long 0xCE0
L_56892:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56883
.p2align 0x4
L_397141:
L_56721:
	movl 0x1C(%rbp),%r14d
	decl %r14d
	jo L_56532
L_56722:
	movq 0x50(%rbp),%r11
	cmpq $0x1,%r11
	je L_397147
L_56723:
	movl %r14d,0x1C(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r11),%r15
	movl $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_56724:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	jne L_397146
L_56856:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_397142
L_56857:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r13,%r15
	jmp L_56724
.p2align 0x4
L_397142:
L_56858:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56859
L_56860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56861
.p2align 0x4
.long 0xCDF
L_56861:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_56859:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x30(%rbp)
L_56735:
	movq 0x48(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1134,%r15
	je L_397144
	cmpq $0x1139,%r15
	je L_397143
L_56736:
	movq $0x1,%r14
	movq $0x1,%r15
L_56737:
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_56738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_1
.p2align 0x4
L_397143:
L_56816:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_56737
.p2align 0x4
L_397144:
L_56785:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_56786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_397146:
L_56725:
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_56726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_0
.p2align 0x4
L_397147:
L_56862:
	movl %r14d,0x1C(%rbp)
	movl $0x1,0x30(%rbp)
	jmp L_56735
.p2align 0x4
L_397149:
L_56894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56895
.p2align 0x4
.long 0xCE2
L_56895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56720
.p2align 0x4
.long 0x556
L_56654:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56655
L_56656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_56657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56657
.p2align 0x4
.long 0x562
L_56657:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_56655:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x556
L_56697:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56698
L_56699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_56700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56700
.p2align 0x4
.long 0x562
L_56700:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_56698:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x526
L_56688:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56689
L_56694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56695
.p2align 0x4
.long 0x555
L_56695:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56689:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0x526
L_56674:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56675
L_56685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56686
.p2align 0x4
.long 0x555
L_56686:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56675:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_56542
L_56676:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
L_56677:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_56678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0x526
L_56662:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56663
L_56670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56671
.p2align 0x4
.long 0x555
L_56671:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56663:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	cmpq $0x1,0x28(%rbp)
	je L_56542
L_56664:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_56665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0xCFB
L_57619:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_677:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397175
.p2align 0x4,,0x7
L_57620:
	movl 0x34(%rbp),%r11d
	cmpl 0x58(%rbp),%r11d
	jnl L_397165
L_57647:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x8(%r11,%r15,1),%r9
	movq %r9,0x40(%rbp)
	cmpq $0x1,0x0(%r9)
	jne L_57648
L_57649:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_57656
L_57650:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_57651:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397161
L_57652:
	cmpq $0x1,%r13
	je L_397159
L_57653:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57651
.p2align 0x4
L_397159:
L_57654:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397160
.p2align 0x4,,0x7
L_57656:
	movl 0x18(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x2579,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_57648:
	incl 0x34(%rbp)
	jmp loop_677
.p2align 0x4
L_397160:
L_57657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57658
.p2align 0x4
.long 0xCFD
L_57658:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57656
.p2align 0x4
L_397161:
L_57659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397162
.p2align 0x4,,0x7
L_57660:
	movl 0x30(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x2577,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2579,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_57648
.p2align 0x4
L_397162:
L_57661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57662
.p2align 0x4
.long 0xCFD
L_57662:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57660
.p2align 0x4
L_397165:
L_57621:
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_678:
	movl 0x18(%rbp),%r11d
	cmpl 0x58(%rbp),%r11d
	jnl L_56542
L_57623:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x18(%r11,%r15,1),%r9
	movq %r9,0x30(%rbp)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_397173
L_57624:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_57625:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397171
L_57626:
	cmpq $0x1,%r13
	je L_397166
L_57627:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57625
.p2align 0x4
L_397166:
L_57629:
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_57635
L_57630:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_57631:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397168
L_57632:
	cmpq $0x1,%r13
	je L_397167
L_57633:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57631
.p2align 0x4
L_397167:
L_57635:
	incl 0x18(%rbp)
	jmp loop_678
.p2align 0x4
L_397168:
L_57636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397169
.p2align 0x4,,0x7
L_57638:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x2577,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2579,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_57635
.p2align 0x4
L_397169:
L_57639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57640
.p2align 0x4
.long 0xCFC
L_57640:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57638
.p2align 0x4
L_397171:
L_57642:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57638
L_57644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57645
.p2align 0x4
.long 0xCFC
L_57645:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57638
.p2align 0x4
L_397173:
	movq %r10,%r15
	jmp L_57629
.p2align 0x4
L_397175:
L_57664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57665
.p2align 0x4
.long 0xCFE
L_57665:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57620
.p2align 0x4
.long 0xCFF
L_57667:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_397185
L_57668:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_57669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397184
.p2align 0x4,,0x7
L_57670:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_397176
L_57671:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_57669
.p2align 0x4
L_397176:
L_57672:
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_57673:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397183
.p2align 0x4,,0x7
L_57674:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397177
L_57675:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_57673
.p2align 0x4
L_397177:
L_57676:
	movq %r15,0x20(%rbp)
L_57677:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_397182
L_57678:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_57679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397181
.p2align 0x4,,0x7
L_57680:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_397178
L_57681:
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_57679
.p2align 0x4
L_397178:
L_57682:
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_57683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397180
.p2align 0x4,,0x7
L_57684:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397179
L_57685:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_57683
.p2align 0x4
L_397179:
L_57686:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_57618
.p2align 0x4
L_397180:
L_57687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57688
.p2align 0x4
.long 0xD00
L_57688:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57684
.p2align 0x4
L_397181:
L_57689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57690
.p2align 0x4
.long 0xD00
L_57690:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57680
.p2align 0x4
L_397182:
L_57691:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_57618
.p2align 0x4
L_397183:
L_57692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57693
.p2align 0x4
.long 0xD00
L_57693:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57674
.p2align 0x4
L_397184:
L_57694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_57695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57695
.p2align 0x4
.long 0xD00
L_57695:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_57670
.p2align 0x4
L_397185:
L_57696:
	movq $0x1,0x20(%rbp)
	jmp L_57677
.p2align 0x4
.long 0xCFA
L_57607:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_57608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_0
.p2align 0x4
.long 0x556
L_57479:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57480
L_57481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57482
.p2align 0x4
.long 0x562
L_57482:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_57480:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x526
L_57467:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57468
L_57471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_57472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57472
.p2align 0x4
.long 0x555
L_57472:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_57468:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_56542
L_57469:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_57466
.p2align 0x4
.long 0x556
L_57454:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57455
L_57456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57457
.p2align 0x4
.long 0x562
L_57457:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_57455:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x5C1
x_134:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,0x0(%r15)
	jne L_56542
L_57397:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp L_56542
.p2align 0x4
.long 0xCF9
loop_672:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp loop_671
.p2align 0x4
.long 0x55B
L_57296:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57297
L_57306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57307
.p2align 0x4
.long 0x56B
L_57307:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57297:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_397192
L_57298:
	movl $0x1,0x0(%r14)
	movq $0x27E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_397191
L_57299:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	jmp L_57295
.p2align 0x4
L_397191:
L_57300:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	xchgq %r13,%r15
	jmp L_57286
.p2align 0x4
L_397192:
L_57301:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397193
L_57302:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_57295
.p2align 0x4
L_397193:
L_57303:
	movq 0x30(%rbp),%r14
	jmp loop_669
.p2align 0x4
.long 0x57F
L_57057:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_57058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x457
L_56941:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_397195
L_56954:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xED80)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_397195:
L_56942:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xED80)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCD7
L_56738:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_665:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397212
.p2align 0x4,,0x7
L_56739:
	movl 0x34(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_397202
L_56766:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x8(%r11,%r15,1),%r9
	movq %r9,0x38(%rbp)
	cmpq $0x1,0x0(%r9)
	jne L_56767
L_56768:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_56775
L_56769:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_56770:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397198
L_56771:
	cmpq $0x1,%r13
	je L_397196
L_56772:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56770
.p2align 0x4
L_397196:
L_56773:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397197
.p2align 0x4,,0x7
L_56775:
	movl 0x18(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x25C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_56767:
	incl 0x34(%rbp)
	jmp loop_665
.p2align 0x4
L_397197:
L_56776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56777
.p2align 0x4
.long 0xCD9
L_56777:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56775
.p2align 0x4
L_397198:
L_56778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397199
.p2align 0x4,,0x7
L_56779:
	movl 0x30(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x25C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_56767
.p2align 0x4
L_397199:
L_56780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56781
.p2align 0x4
.long 0xCD9
L_56781:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56779
.p2align 0x4
L_397202:
L_56740:
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_666:
	movl 0x18(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_56542
L_56742:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x18(%r11,%r15,1),%r9
	movq %r9,0x30(%rbp)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_397210
L_56743:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_56744:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397208
L_56745:
	cmpq $0x1,%r13
	je L_397203
L_56746:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56744
.p2align 0x4
L_397203:
L_56748:
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_56754
L_56749:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_56750:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397205
L_56751:
	cmpq $0x1,%r13
	je L_397204
L_56752:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56750
.p2align 0x4
L_397204:
L_56754:
	incl 0x18(%rbp)
	jmp loop_666
.p2align 0x4
L_397205:
L_56755:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397206
.p2align 0x4,,0x7
L_56757:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x25C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_56754
.p2align 0x4
L_397206:
L_56758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56759
.p2align 0x4
.long 0xCD8
L_56759:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56757
.p2align 0x4
L_397208:
L_56761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56757
L_56763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56764
.p2align 0x4
.long 0xCD8
L_56764:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56757
.p2align 0x4
L_397210:
	movq %r10,%r15
	jmp L_56748
.p2align 0x4
L_397212:
L_56783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56784
.p2align 0x4
.long 0xCDA
L_56784:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56739
.p2align 0x4
.long 0xCDB
L_56786:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_397222
L_56787:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_56788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397221
.p2align 0x4,,0x7
L_56789:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_397213
L_56790:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_56788
.p2align 0x4
L_397213:
L_56791:
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_56792:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397220
.p2align 0x4,,0x7
L_56793:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397214
L_56794:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_56792
.p2align 0x4
L_397214:
L_56795:
	movq %r15,0x20(%rbp)
L_56796:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_397219
L_56797:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_56798:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397218
.p2align 0x4,,0x7
L_56799:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_397215
L_56800:
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_56798
.p2align 0x4
L_397215:
L_56801:
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_56802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397217
.p2align 0x4,,0x7
L_56803:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_397216
L_56804:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_56802
.p2align 0x4
L_397216:
L_56805:
	movq 0x20(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_56737
.p2align 0x4
L_397217:
L_56806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56807
.p2align 0x4
.long 0xCDC
L_56807:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56803
.p2align 0x4
L_397218:
L_56808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56809
.p2align 0x4
.long 0xCDC
L_56809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56799
.p2align 0x4
L_397219:
L_56810:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_56737
.p2align 0x4
L_397220:
L_56811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56812
.p2align 0x4
.long 0xCDC
L_56812:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56793
.p2align 0x4
L_397221:
L_56813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_56814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56814
.p2align 0x4
.long 0xCDC
L_56814:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_56789
.p2align 0x4
L_397222:
L_56815:
	movq $0x1,0x20(%rbp)
	jmp L_56796
.p2align 0x4
.long 0xCD6
L_56726:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_56727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp temp_uses_defs_1
.p2align 0x4
.long 0x556
L_56690:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56691
L_56692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_56693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56693
.p2align 0x4
.long 0x562
L_56693:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_56691:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0x526
L_56678:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56679
L_56682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_56683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56683
.p2align 0x4
.long 0x555
L_56683:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_56679:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_56542
L_56680:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_56677
.p2align 0x4
.long 0x556
L_56665:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56666
L_56667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_56668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56668
.p2align 0x4
.long 0x562
L_56668:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_56666:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_56542
.p2align 0x4
.long 0xCFA
L_57608:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_675:
	movl 0x4C(%rbp),%r11d
	cmpl 0x58(%rbp),%r11d
	jnl L_397232
L_57724:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x8(%r11,%r15,1),%r9
	movq %r9,0x68(%rbp)
	cmpq $0x1,0x0(%r9)
	jne L_57725
L_57726:
	movq 0x50(%rbp),%r11
	cmpq $0x1,%r11
	je L_57725
L_57727:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_57728:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397228
L_57729:
	cmpq $0x1,%r13
	je L_397227
L_57730:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57728
.p2align 0x4
L_397227:
L_57725:
	incl 0x4C(%rbp)
	jmp loop_675
.p2align 0x4
L_397228:
L_57732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397229
.p2align 0x4,,0x7
L_57733:
	movl 0x48(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x2577,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2579,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_57725
.p2align 0x4
L_397229:
L_57734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57735
.p2align 0x4
.long 0xD01
L_57735:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57733
.p2align 0x4
L_397232:
L_57609:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397245
.p2align 0x4,,0x7
L_57610:
	movl 0x4C(%rbp),%r11d
	cmpl 0x58(%rbp),%r11d
	jnl L_397241
L_57698:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x18(%r11,%r15,1),%r9
	movq %r9,0x68(%rbp)
	movq 0x50(%rbp),%r11
	cmpq $0x1,%r11
	je L_397240
L_57699:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_57700:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397238
L_57701:
	cmpq $0x1,%r13
	je L_397233
L_57702:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57700
.p2align 0x4
L_397233:
L_57704:
	movq 0x60(%rbp),%r11
	cmpq $0x1,%r11
	je L_57710
L_57705:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_57706:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397235
L_57707:
	cmpq $0x1,%r13
	je L_397234
L_57708:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_57706
.p2align 0x4
L_397234:
L_57710:
	incl 0x4C(%rbp)
	jmp loop_676
.p2align 0x4
L_397235:
L_57711:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397236
.p2align 0x4,,0x7
L_57713:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x2577,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2579,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_57710
.p2align 0x4
L_397236:
L_57714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57715
.p2align 0x4
.long 0xD01
L_57715:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57713
.p2align 0x4
L_397238:
L_57717:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57713
L_57719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57720
.p2align 0x4
.long 0xD01
L_57720:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57713
.p2align 0x4
L_397240:
	movq %r10,%r15
	jmp L_57704
.p2align 0x4
L_397241:
L_57611:
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_56532
L_57612:
	movl 0x1C(%rbp),%r13d
	decl %r13d
	jo L_56532
L_57613:
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_397242
L_57614:
	movl %r13d,0x1C(%rbp)
	movl %r14d,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x30(%rbp)
	jmp L_57605
.p2align 0x4
L_397242:
L_57615:
	movl %r13d,0x1C(%rbp)
	movl %r14d,0x30(%rbp)
	jmp L_57616
.p2align 0x4
L_397245:
L_57722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_57723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57723
.p2align 0x4
.long 0xD02
L_57723:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_57610
.p2align 0x4
.long 0x52A
L_57058:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%r13),%r11
	movq 0x8(%r11),%r10
	movl 0x0(%r10),%ecx
	cmpl $0x0,%ecx
	jl L_57065
L_57059:
	movq (globalObjptr+0xE10)(%rip),%r15
	movq (globalObjptr+0xED90)(%rip),%r14
.p2align 0x4,,0x7
L_57060:
	testl %ecx,%ecx
	jz L_397248
L_57061:
	decl %ecx
	jo L_56532
L_57062:
	cmpq $0x1,%r15
	je L_397246
L_57063:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_57060
.p2align 0x4
L_397246:
L_57065:
	movq (globalObjptr+0xE18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397248:
L_57066:
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_57067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
L_56943:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_397250
L_56953:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_397250:
L_56944:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCD6
L_56727:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_663:
	movl 0x54(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_397256
L_56843:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x8(%r11,%r15,1),%r9
	movq %r9,0x70(%rbp)
	cmpq $0x1,0x0(%r9)
	jne L_56844
L_56845:
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_56844
L_56846:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_56847:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397252
L_56848:
	cmpq $0x1,%r13
	je L_397251
L_56849:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56847
.p2align 0x4
L_397251:
L_56844:
	incl 0x54(%rbp)
	jmp loop_663
.p2align 0x4
L_397252:
L_56851:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397253
.p2align 0x4,,0x7
L_56852:
	movl 0x50(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x25C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_56844
.p2align 0x4
L_397253:
L_56853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56854
.p2align 0x4
.long 0xCDD
L_56854:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56852
.p2align 0x4
L_397256:
L_56728:
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397269
.p2align 0x4,,0x7
L_56729:
	movl 0x54(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_397265
L_56817:
	movslq %r11d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	imulq $0x28,%r15
	movq 0x18(%r11,%r15,1),%r9
	movq %r9,0x70(%rbp)
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_397264
L_56818:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r10,%r15
.p2align 0x4,,0x7
L_56819:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_397262
L_56820:
	cmpq $0x1,%r13
	je L_397257
L_56821:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56819
.p2align 0x4
L_397257:
L_56823:
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je L_56829
L_56824:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_56825:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_397259
L_56826:
	cmpq $0x1,%r13
	je L_397258
L_56827:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_56825
.p2align 0x4
L_397258:
L_56829:
	incl 0x54(%rbp)
	jmp loop_664
.p2align 0x4
L_397259:
L_56830:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397260
.p2align 0x4,,0x7
L_56832:
	movl 0x1C(%rbp),%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x25C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_56829
.p2align 0x4
L_397260:
L_56833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56834
.p2align 0x4
.long 0xCDD
L_56834:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56832
.p2align 0x4
L_397262:
L_56836:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_56832
L_56838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_56839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56839
.p2align 0x4
.long 0xCDD
L_56839:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_56832
.p2align 0x4
L_397264:
	movq %r10,%r15
	jmp L_56823
.p2align 0x4
L_397265:
L_56730:
	movl 0x50(%rbp),%r14d
	incl %r14d
	jo L_56532
L_56731:
	movl 0x1C(%rbp),%r13d
	decl %r13d
	jo L_56532
L_56732:
	movq 0x38(%rbp),%r10
	cmpq $0x1,%r10
	je L_397266
L_56733:
	movl %r13d,0x1C(%rbp)
	movl %r14d,0x50(%rbp)
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x38(%rbp)
	jmp L_56724
.p2align 0x4
L_397266:
L_56734:
	movl %r13d,0x1C(%rbp)
	movl %r14d,0x30(%rbp)
	jmp L_56735
.p2align 0x4
L_397269:
L_56841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_56842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_56842
.p2align 0x4
.long 0xCDE
L_56842:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_56729
.p2align 0x4
.long 0x535
L_57067:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57068
L_57154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_57155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57155
.p2align 0x4
.long 0x53E
L_57155:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_57068:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xED98)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_57069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x557
L_56945:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_397271
L_56952:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (loop_668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_397271:
L_56946:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (loop_668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCE6
L_57069:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_57070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x457
loop_668:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_397272
L_56951:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_397272:
L_56947:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_56948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCE6
L_57070:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57071
L_57152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57153
.p2align 0x4
.long 0xCF5
L_57153:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_57071:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDEE8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_397273
L_57072:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_57073:
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_57074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397273:
L_57151:
	movq $0x1,%r15
L_57084:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_57085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x457
L_56948:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_397275
L_56950:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xAEA8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_397275:
L_56949:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xAEA8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCE7
L_57074:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_57075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCE8
L_57085:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57086
L_57145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57146
.p2align 0x4
.long 0xCF3
L_57146:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_57086:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xEDA0)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_397276
L_57087:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_57088:
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_57089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397276:
L_57144:
	movq $0x1,%r15
L_57099:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_57100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xCE7
L_57075:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57076
L_57149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_57150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57150
.p2align 0x4
.long 0xCF4
L_57150:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_57076:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x58(%rbp),%r14d
	incl %r14d
	jo L_56532
L_57077:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397278
L_57078:
	movl %r14d,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_57073
.p2align 0x4
L_397278:
L_57079:
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57080:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397280
.p2align 0x4,,0x7
L_57081:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_57084
L_57082:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57080
.p2align 0x4
L_397280:
L_57147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57148
.p2align 0x4
.long 0xA02
L_57148:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57081
.p2align 0x4
.long 0xCE9
L_57089:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_57090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCEA
L_57100:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57101
L_57138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57139
.p2align 0x4
.long 0xCF1
L_57139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_57101:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xEDA8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_397283
L_57102:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movl $0x0,0x28(%rbp)
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_57103:
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_57104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397283:
L_57137:
	movq $0x1,%r15
L_57114:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_57115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xCE9
L_57090:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57091
L_57142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_57143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57143
.p2align 0x4
.long 0xCF2
L_57143:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_57091:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x50(%rbp),%r14d
	incl %r14d
	jo L_56532
L_57092:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397285
L_57093:
	movl %r14d,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_57088
.p2align 0x4
L_397285:
L_57094:
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397287
.p2align 0x4,,0x7
L_57096:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_57099
L_57097:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_57095
.p2align 0x4
L_397287:
L_57140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57141
.p2align 0x4
.long 0xA02
L_57141:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57096
.p2align 0x4
.long 0xC95
L_57104:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_57105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCEB
L_57115:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57116
L_57131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57132
.p2align 0x4
.long 0xCEE
L_57132:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_57116:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEDB0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_57117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xC95
L_57105:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57106
L_57135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_57136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57136
.p2align 0x4
.long 0xCF0
L_57136:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_57106:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x28(%rbp),%r14d
	incl %r14d
	jo L_56532
L_57107:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397291
L_57108:
	movl %r14d,0x28(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_57103
.p2align 0x4
L_397291:
L_57109:
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_57110:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397293
.p2align 0x4,,0x7
L_57111:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_57114
L_57112:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_57110
.p2align 0x4
L_397293:
L_57133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_57134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57134
.p2align 0x4
.long 0xCEF
L_57134:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_57111
.p2align 0x4
.long 0xCEC
L_57117:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57118
L_57129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_57130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57130
.p2align 0x4
.long 0xCED
L_57130:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_57118:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_57119:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_56532
L_57120:
	cmpq $0x1,%r14
	je L_397296
L_57121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57119
.p2align 0x4
L_397296:
L_57122:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57123
L_57127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_57128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57128
.p2align 0x4
.long 0x545
L_57128:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57123:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397297
L_57124:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_131:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_57125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_397297:
L_57126:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_131
.p2align 0x4
.long 0x5C1
L_57125:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_56702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
