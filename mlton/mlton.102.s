/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:19:14 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl doit_93
.hidden doit_93
doit_93:
L_306733:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_306850
L_306734:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505058
L_306735:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_306737
L_306738:
	decl %ecx
	jo L_306739
L_306740:
	movq $0x1,0x10(%rbp)
loop_3582:
	cmpl $0x0,%ecx
	jl L_505027
L_306741:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x38(%rbp)
	movslq %ecx,%r15
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_306742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
L_505027:
L_306776:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505055
L_306777:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_306778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505054
.p2align 0x4,,0x7
L_306779:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_505028
L_306780:
	movq %r15,0x40(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x38(%rbp)
	jmp L_306778
.p2align 0x4
L_505028:
L_306781:
	movq %r15,0x28(%rbp)
L_306782:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_306812
L_306783:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
.p2align 0x4,,0x7
L_306784:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_306737
L_306786:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3583:
	cmpl %ebx,%ecx
	je L_505050
L_306787:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_505049
L_306789:
	movq 0x40(%rbp),%r13
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	je L_505030
L_306790:
	incl %ebx
	jo L_505029
L_306791:
	jmp loop_3583
.p2align 0x4
L_505029:
L_306739:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505030:
L_306792:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505048
.p2align 0x4,,0x7
L_306793:
	movl $0x1,%ecx
L_306794:
	movq $0x1409,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movl %ecx,0x0(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x40(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_505047
L_306796:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_505046
L_306797:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_306799:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_306800
L_306832:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBF,%r13
	jne L_306800
L_306833:
	movq 0x18(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_505041
L_306800:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_306739
L_306801:
	cmpq $0x1,%r15
	je L_505031
L_306802:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_306799
.p2align 0x4
L_505031:
L_306803:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505039
.p2align 0x4,,0x7
L_306804:
	movl 0x40(%rbp),%ecx
L_306805:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_505038
L_306807:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_306809
L_306829:
	movl %ecx,0x0(%r15)
L_306809:
	movq $0x197F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_505032
L_306810:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_306784
.p2align 0x4
L_505032:
L_306812:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_306737
L_306814:
	cmpl $0x0,%r13d
	jl L_505035
L_306815:
	movl $0x0,0xC(%rbp)
loop_3584:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_505033
L_306816:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505033:
L_306817:
	movslq 0xC(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_505034
L_306819:
	movl %r14d,0x48(%rbp)
	movq $0x403B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_306820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_505034:
L_306737:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505035:
L_306828:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505038:
L_306806:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505039:
L_306830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_306831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306831
.p2align 0x4
.long 0x154C
L_306831:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_306804
.p2align 0x4
L_505041:
L_306835:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_306806
L_306836:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_505042
L_306838:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505042:
L_306837:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505046:
L_306839:
	xorl %ecx,%ecx
	jmp L_306805
.p2align 0x4
L_505047:
L_306795:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505048:
L_306840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_306841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306841
.p2align 0x4
.long 0x63C
L_306841:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_306793
.p2align 0x4
L_505049:
L_306788:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505050:
L_306842:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505051
.p2align 0x4,,0x7
L_306843:
	xorl %ecx,%ecx
	jmp L_306794
.p2align 0x4
L_505051:
L_306844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_306845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306845
.p2align 0x4
.long 0x63C
L_306845:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_306843
.p2align 0x4
L_505054:
L_306847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_306848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306848
.p2align 0x4
.long 0x1258
L_306848:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_306779
.p2align 0x4
L_505055:
L_306849:
	movq $0x1,0x28(%rbp)
	jmp L_306782
.p2align 0x4
L_505058:
L_306850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_306851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306851
.p2align 0x4
.long 0x63D
L_306851:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_306735
.p2align 0x4
.long 0x4A42
L_306742:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306743
L_306774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_306775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306775
.p2align 0x4
.long 0x1258
L_306775:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_306743:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_505060
L_306744:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	movl 0x38(%rbp),%ecx
	jmp loop_3582
.p2align 0x4
L_505060:
L_306745:
	movq (globalObjptr+0xDFE0)(%rip),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_306746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A43
L_306820:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306821
L_306826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_306827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306827
.p2align 0x4
.long 0x659
L_306827:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_306821:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_306822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_93
.p2align 0x4
.long 0x1
L_306746:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_306747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x717
L_306822:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306823
L_306824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_306825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306825
.p2align 0x4
.long 0x718
L_306825:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_306823:
	incl 0xC(%rbp)
	jmp loop_3584
.p2align 0x4
.long 0x4B0
L_306747:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFE0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_306748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_306748:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_306749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_306749:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306750
L_306772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_306773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306773
.p2align 0x4
.long 0x4AF
L_306773:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_306750:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_306751:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_306739
L_306752:
	cmpq $0x1,%r14
	je L_505064
L_306753:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_306751
.p2align 0x4
L_505064:
L_306754:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306755
L_306770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_306771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306771
.p2align 0x4
.long 0x4E7
L_306771:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_306755:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_505065
L_306756:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_387:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_505065:
L_306769:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_387
.p2align 0x4
.long 0x1
rev_387:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_505071
L_306757:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_306758:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505070
.p2align 0x4,,0x7
L_306759:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505069
L_306760:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_306758
.p2align 0x4
L_505069:
L_306762:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505070:
L_306766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_306767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306767
.p2align 0x4
.long 0x45C
L_306767:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_306759
.p2align 0x4
L_505071:
L_306768:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_306762
.p2align 0x4
.long 0x1
bug_653:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306763
L_306764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_306765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306765
.p2align 0x4
.long 0x452
L_306765:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_306763:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl computeLiveTransfers_0
.hidden computeLiveTransfers_0
computeLiveTransfers_0:
L_306852:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_307650
L_306853:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505090
L_306854:
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x830)(%rip),%r15
	cmpl $0x0,0x0(%r15)
	jg L_505073
L_306855:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x43DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq $0x43D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505073:
L_306856:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq (globalObjptr+0x830)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl $0x1,%r13d
	je L_505089
	cmpl $0x2,%r13d
	je L_505088
	cmpl $0x3,%r13d
	je L_505087
	cmpl $0x4,%r13d
	je L_505086
	cmpl $0x5,%r13d
	je L_505085
	cmpl $0x6,%r13d
	je L_505084
	cmpl $0x7,%r13d
	je L_505083
L_306857:
	movl $0x1,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
L_306858:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xD27,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x70(%rbp)
	addq $0x20,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	cmpq $0x1,%r15
	je L_505078
L_306859:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq $0x1,0x90(%rbp)
L_306860:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1199,%r14
	je L_505077
	cmpq $0x119A,%r14
	je L_505076
	cmpq $0x119B,%r14
	je L_505075
	cmpq $0x119C,%r14
	je L_505074
L_306861:
	movq 0x18(%r13),%r14
	movq %r14,0xA0(%rbp)
L_306862:
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_306863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_0
.p2align 0x4
L_505074:
L_307641:
	movq 0x0(%r13),%r14
	movq %r14,0xA0(%rbp)
	jmp L_306862
.p2align 0x4
L_505075:
L_307640:
	movq 0x0(%r13),%r14
	movq %r14,0xA0(%rbp)
	jmp L_306862
.p2align 0x4
L_505076:
L_307639:
	movq 0x8(%r13),%r14
	movq %r14,0xA0(%rbp)
	jmp L_306862
.p2align 0x4
L_505077:
L_307638:
	movq 0x8(%r13),%r14
	movq %r14,0xA0(%rbp)
	jmp L_306862
.p2align 0x4
L_505078:
L_307642:
	movq $0x1,0x78(%rbp)
	movq $0x1,%r15
L_306917:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_505082
L_306918:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_306919:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_505081
L_306920:
	cmpq $0x1,%r15
	je L_505079
L_306921:
	movq 0x8(%r15),%r15
	jmp L_306919
.p2align 0x4
L_505079:
L_306922:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306923
L_307596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307597
.p2align 0x4
.long 0x4A6C
L_307597:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_306923:
	movl 0x2C(%rbp),%ecx
L_306924:
	movl %ecx,0x90(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_306925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_505081:
L_306888:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505082:
L_307598:
	xorl %ecx,%ecx
	jmp L_306924
.p2align 0x4
L_505083:
L_307649:
	movl $0x0,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505084:
L_307648:
	movl $0x1,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505085:
L_307647:
	movl $0x0,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505086:
L_307646:
	movl $0x1,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505087:
L_307645:
	movl $0x0,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505088:
L_307644:
	movl $0x1,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505089:
L_307643:
	movl $0x0,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_306858
.p2align 0x4
L_505090:
L_307650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_307651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307651
.p2align 0x4
.long 0x638
L_307651:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_306854
.p2align 0x4
.long 0x2FB3
L_306863:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_306864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x746
L_306925:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306926
L_307594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307595
.p2align 0x4
.long 0x4A6C
L_307595:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_306926:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_505095
L_306927:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_306928:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_306888
L_306929:
	cmpq $0x1,%r15
	je L_505092
L_306930:
	movq 0x8(%r15),%r15
	jmp L_306928
.p2align 0x4
L_505092:
L_306931:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306932
L_307591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_307592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307592
.p2align 0x4
.long 0x4A6E
L_307592:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_306932:
	movl 0x2C(%rbp),%ecx
L_306933:
	movl %ecx,0x98(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_306934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_505095:
L_307593:
	xorl %ecx,%ecx
	jmp L_306933
.p2align 0x4
.long 0x2FB4
L_306864:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306865
L_307636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_307637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307637
.p2align 0x4
.long 0x2FB8
L_307637:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_306865:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505097
L_306866:
	movq 0xB0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r14),%r15
L_306867:
	movq %r15,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_306868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505097:
L_306885:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505120
L_306886:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_306887:
	incl %ecx
	jo L_306888
L_306889:
	cmpq $0x1,%r15
	je L_505098
L_306890:
	movq 0x8(%r15),%r15
	jmp L_306887
.p2align 0x4
L_505098:
L_306891:
L_306892:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_505118
L_306893:
	cmpq $0x7FFFFFFF,%rdx
	ja L_505117
L_306894:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1613,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_306895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_306895
.p2align 0x4
.long 0x4A45
L_306895:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xC8(%rbp)
L_306896:
	movq $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_3585:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505116
.p2align 0x4,,0x7
L_306897:
	movq 0xD0(%rbp),%r15
	cmpq 0xA8(%rbp),%r15
	jnl L_505100
L_307613:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505099
L_307614:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq $0x176D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x190B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x176D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x190B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0xC8(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r15,%rsp
	imulq $0x28,%rsp
	movq %rsp,%rax
	movq %r13,0x0(%r8,%rax,1)
	movq %r8,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r15,%r13
	imulq $0x28,%r13
	movq %r14,0x8(%r8,%r13,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r11,0x10(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r10,0x18(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r9,0x20(%r8,%r14,1)
	incq %r15
	movq %r15,0xD0(%rbp)
	jmp loop_3585
.p2align 0x4
L_505099:
L_307615:
	movq (globalObjptr+0x4B0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505100:
L_306898:
	movq 0xC8(%rbp),%r13
	movq $0x131F,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1321,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x131D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1323,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xA8(%rbp)
	movq %r14,0x10(%r10)
	movq %r11,0x20(%r10)
	addq $0x38,%r12
	movq 0xC0(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0xB8(%rbp),%r11
	movq %r11,0x8(%r10)
	movq %r13,0x18(%r10)
	movq 0x80(%rbp),%r13
	movq %r13,0x28(%r10)
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_505115
L_306900:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_505114
L_306901:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_306903:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_306904
L_307605:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD82,%r13
	jne L_306904
L_307606:
	movq 0x0(%r14),%r13
	cmpq %r13,0x68(%rbp)
	je L_505109
L_306904:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_306888
L_306905:
	cmpq $0x1,%r15
	je L_505101
L_306906:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_306903
.p2align 0x4
L_505101:
L_306907:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306908
L_307603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_307604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307604
.p2align 0x4
.long 0x4A6F
L_307604:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_306908:
	movl 0x2C(%rbp),%ecx
L_306909:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_505106
L_306911:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_306913
L_307602:
	movl %ecx,0x0(%r15)
L_306913:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1B05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x119B,%r13
	je L_505103
L_306914:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_505102
L_306915:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_306860
.p2align 0x4
L_505102:
L_306916:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	jmp L_306917
.p2align 0x4
L_505103:
L_307599:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_505104
L_307600:
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_306860
.p2align 0x4
L_505104:
L_307601:
	movq %r14,0x78(%rbp)
	jmp L_306917
.p2align 0x4
L_505106:
L_306910:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505109:
L_307608:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_306910
L_307609:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_505110
L_307611:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505110:
L_307610:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505114:
L_307612:
	xorl %ecx,%ecx
	jmp L_306909
.p2align 0x4
L_505115:
L_306899:
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505116:
L_307616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307617
.p2align 0x4
.long 0x4A70
L_307617:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306897
.p2align 0x4
L_505117:
L_307618:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505118:
L_307619:
	movq (globalObjptr+0x66D8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_306896
.p2align 0x4
L_505120:
L_307620:
	xorl %ecx,%ecx
	jmp L_306892
.p2align 0x4
.long 0x4A46
L_306934:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306935
L_307589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307590
.p2align 0x4
.long 0x4A6C
L_307590:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_306935:
	movq $0x34F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_306936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A44
L_306868:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306869
L_307633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_307634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307634
.p2align 0x4
.long 0x4A50
L_307634:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_306869:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505132
L_306870:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
.p2align 0x4,,0x7
L_306871:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505131
.p2align 0x4,,0x7
L_306872:
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_306879
L_306873:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_306874:
	movq 0xC8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505127
L_306875:
	cmpq $0x1,%r14
	je L_505123
L_306876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_306874
.p2align 0x4
L_505123:
L_306877:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505126
.p2align 0x4,,0x7
L_306879:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505124
L_306880:
	movq %r15,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_306871
.p2align 0x4
L_505124:
L_306882:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505125
L_306883:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	jmp L_306867
.p2align 0x4
L_505125:
L_306884:
	movq %r15,0xB0(%rbp)
	jmp L_306885
.p2align 0x4
L_505126:
L_307621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307622
.p2align 0x4
.long 0x4A53
L_307622:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306879
.p2align 0x4
L_505127:
L_307623:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505129
.p2align 0x4,,0x7
L_307624:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505128
L_307625:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	jmp L_306871
.p2align 0x4
L_505128:
L_307626:
	movq 0xD0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_306882
.p2align 0x4
L_505129:
L_307627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307628
.p2align 0x4
.long 0x4A71
L_307628:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307624
.p2align 0x4
L_505131:
L_307630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307631
.p2align 0x4
.long 0x4A53
L_307631:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306872
.p2align 0x4
L_505132:
L_307632:
	movq 0xC0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_306882
.p2align 0x4
.long 0x4A47
L_306936:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306937
L_307587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307588
.p2align 0x4
.long 0x4A6C
L_307588:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_306937:
	movq $0x3541,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_306938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A48
L_306938:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306939
L_307585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307586
.p2align 0x4
.long 0x4A6D
L_307586:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_306939:
	movq $0xD39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x34F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (loop_3586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A47
loop_3586:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3587
L_307583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307584
.p2align 0x4
.long 0x4A6C
L_307584:
	addq $0xFFFFFFFFFFFFFF70,%rbp
loop_3587:
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_505136
L_306941:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movq %r10,%r15
L_306942:
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	movq %r14,0x8(%r11)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_306943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_505136:
L_307556:
	cmpq $0x1,%r13
	je L_505139
L_307557:
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_307558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505138
.p2align 0x4,,0x7
L_307559:
	movq $0x28D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505137
L_307560:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_307558
.p2align 0x4
L_505137:
L_307561:
	movq 0x98(%rbp),%r11
	movq 0x90(%rbp),%r15
	movq $0x1,%r13
	xchgq %r11,%r14
	jmp L_306942
.p2align 0x4
L_505138:
L_307562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_307563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307563
.p2align 0x4
.long 0x4A4F
L_307563:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_307559
.p2align 0x4
L_505139:
L_307564:
	movq $0x3543,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_307565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A49
L_306943:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306944
L_307554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_307555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307555
.p2align 0x4
.long 0x4A4F
L_307555:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_306944:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,0x0(%r14)
	jne loop_3587
L_306946:
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_306947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
.long 0x4A66
L_307565:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307566
L_307581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_307582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307582
.p2align 0x4
.long 0x4A6B
L_307582:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_307566:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x34F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_307567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A4A
L_306947:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (x_1032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x4A67
L_307567:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307568
L_307579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_307580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307580
.p2align 0x4
.long 0x4A6A
L_307580:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_307568:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_505142
L_307569:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_307570:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x3E01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_307571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_505142:
L_307575:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x43DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x43DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A4B
x_1032:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306948
L_307552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307553
.p2align 0x4
.long 0x4A65
L_307553:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_306948:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505281
L_306949:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505144
L_306950:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
L_306951:
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE0,%rbp
	leaq (L_306952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_0
.p2align 0x4
L_505144:
L_307416:
	movq $0x1,%r15
	movq $0x1,0x88(%rbp)
L_306990:
	cmpq $0x1,%r15
	je L_505280
L_306991:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_306992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505279
.p2align 0x4,,0x7
L_306993:
	movq 0x98(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_307000
L_306994:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
.p2align 0x4,,0x7
L_306995:
	movq 0xB8(%rbp),%r14
	movq 0x98(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_505276
L_306996:
	cmpq $0x1,%r15
	je L_505145
L_306997:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x98(%rbp)
	jmp L_306995
.p2align 0x4
L_505145:
L_306998:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505275
.p2align 0x4,,0x7
L_307000:
	xorl %ecx,%ecx
L_307001:
	movq $0x1195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2583,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_505146
L_307002:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_306992
.p2align 0x4
L_505146:
L_307003:
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_307004:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505274
.p2align 0x4,,0x7
L_307005:
	movq $0x2583,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_505147
L_307006:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_307004
.p2align 0x4
L_505147:
L_307008:
	movb 0x1(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_505268
L_307009:
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1198,%r13
	je L_505266
	cmpq $0x119C,%r13
	je L_505223
L_307010:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505222
L_307011:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r13,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_307012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505221
.p2align 0x4,,0x7
L_307013:
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_307020
L_307014:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
.p2align 0x4,,0x7
L_307015:
	movq 0xB8(%rbp),%r14
	movq 0x90(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_505218
L_307016:
	cmpq $0x1,%r15
	je L_505148
L_307017:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x90(%rbp)
	jmp L_307015
.p2align 0x4
L_505148:
L_307018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505217
.p2align 0x4,,0x7
L_307020:
	xorl %ecx,%ecx
L_307021:
	movq $0x1193,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2585,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_505149
L_307022:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_307012
.p2align 0x4
L_505149:
L_307023:
	movq 0x98(%rbp),%r13
	movq %r13,0x88(%rbp)
	movq %r14,%r15
L_307024:
	cmpq $0x1,%r15
	je L_505216
L_307025:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_307026:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505215
.p2align 0x4,,0x7
L_307027:
	movq $0x2585,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_505150
L_307028:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_307026
.p2align 0x4
L_505150:
L_307030:
	movb 0x0(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_505210
L_307031:
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1198,%r13
	je L_505208
	cmpq $0x119C,%r13
	je L_505157
L_307032:
	movq $0x1,%r15
L_307033:
	movq $0x257F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq 0xC0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x119E,%r13
	je loop_3587
	cmpq $0x119F,%r13
	je loop_3587
	cmpq $0x11A0,%r13
	je L_505156
	cmpq $0x11A1,%r13
	je loop_3587
	cmpq $0x11A2,%r13
	je L_505154
	cmpq $0x11A3,%r13
	je L_505153
	cmpq $0x11A4,%r13
	je L_505152
L_307034:
	movq 0x18(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r14),%r15
	movl 0x14(%r15),%r14d
	testl %r14d,%r14d
	jnz L_505151
L_307035:
	cmpq $0x1,%r13
	je loop_3587
L_307036:
	movq 0x30(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_307037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_505151:
L_307048:
	cmpq $0x1,%r13
	je loop_3587
L_307049:
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xDF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp loop_3587
.p2align 0x4
L_505152:
L_307067:
	movq 0x0(%r14),%r13
	movq $0xFC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp loop_3587
.p2align 0x4
L_505153:
L_307066:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0xFC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	movq $0x28D9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r8,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x8(%r13)
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq $0x28D9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x8(%r13)
	jmp loop_3587
.p2align 0x4
L_505154:
L_307057:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0xFC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq $0x28D9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x8(%r14)
	cmpq $0x1,%r11
	je loop_3587
L_307058:
	movq 0x8(%r11),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_307059:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505155
.p2align 0x4,,0x7
L_307060:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0xFC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je loop_3587
L_307061:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307059
.p2align 0x4
L_505155:
L_307063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_307064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307064
.p2align 0x4
.long 0x4A4F
L_307064:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_307060
.p2align 0x4
L_505156:
L_307053:
	movq 0x18(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0xFC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x28D9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r8,0x0(%r11)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x8(%r11)
	cmpq $0x1,%r13
	je loop_3587
L_307054:
	movq $0xFC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r13
	movq $0x28D9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x8(%r11)
	jmp loop_3587
.p2align 0x4
L_505157:
L_307211:
	cmpq $0x1,%r15
	je L_505207
L_307212:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x6838)(%rip),%r14
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
L_307070:
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq %r10,0xB0(%rbp)
	movl %r11d,%r10d
	andl $0x1,%r10d
	jz default_7
L_307194:
	shrl $0x1,%r11d
	movw %r11w,%r13w
L_307195:
	movq 0xA8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_505206
L_307197:
	movq 0x8(%r11),%r15
	movw 0x0(%r11),%r14w
.p2align 0x4,,0x7
L_307198:
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r14w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_505205
L_307202:
	movb %r13b,%r11b
	movb %r14b,%r10b
	cmpb %r10b,%r11b
	je L_505203
L_307203:
	cmpq $0x1,%r15
	je default_59
L_307204:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_307198
.p2align 0x4
default_59:
default_7:
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x2(%rbp)
L_307072:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_505202
L_307074:
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x2C(%rbp)
	movq $0x1,0xC8(%rbp)
L_307075:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505201
.p2align 0x4,,0x7
L_307076:
	movw 0x2C(%rbp),%r15w
	shrw $0x8,%r15w
	movb %r15b,%dl
	testb %dl,%dl
	jnz L_505200
L_307077:
	movb $0x1,%cl
L_307078:
	cmpb %cl,0x2(%rbp)
	jne L_505197
L_307167:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_307176
L_307168:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
L_307169:
	movl 0x0(%r15),%r13d
	movl %r13d,%r15d
	andl $0x1,%r15d
	jz L_505195
L_307182:
	shrl $0x1,%r13d
	movw %r13w,%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	cmpb %r11b,%dl
	jne L_505194
L_307184:
	movw 0x2C(%rbp),%r13w
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_505192
	movb %dl,(localWord8+0x0)(%rip)
L_307171:
	movl 0xD0(%rbp),%r13d
	incl %r13d
	jo L_306888
L_307172:
	cmpq $0x1,%r14
	je L_505158
L_307173:
	movl %r13d,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movb (localWord8+0x0)(%rip),%dl
	jmp L_307169
.p2align 0x4
L_505158:
L_307174:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505190
.p2align 0x4,,0x7
L_307176:
	xorq %r15,%r15
L_307177:
	movq $0x1191,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movzwl 0x2C(%rbp),%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq $0x2587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_505159
L_307178:
	movq %r15,0xC8(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0xB8(%rbp)
	movw %r15w,0x2C(%rbp)
	jmp L_307075
.p2align 0x4
L_505159:
L_307179:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
L_307083:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505189
.p2align 0x4,,0x7
L_307084:
	movq $0x2587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505160
L_307085:
	movq %r15,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_307083
.p2align 0x4
L_505160:
L_307086:
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xD0(%rbp)
L_307087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505188
.p2align 0x4,,0x7
L_307088:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505187
L_307089:
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
L_307090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505186
.p2align 0x4,,0x7
L_307091:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_307093
L_307148:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq 0xD8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_307150
L_307156:
	shrq $0x1,%r13
	movl %r13d,%r14d
	cmpl %r15d,%r14d
	jl L_505182
L_307150:
	movq $0x2587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505161
L_307151:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	jmp L_307090
.p2align 0x4
L_505161:
L_307153:
	movq $0x2587,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_505181
L_307154:
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
L_307095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505180
.p2align 0x4,,0x7
L_307096:
	movq $0x2587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505162
L_307097:
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	jmp L_307095
.p2align 0x4
L_505162:
L_307099:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505163
L_307100:
	movq %r15,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_307087
.p2align 0x4
L_505163:
L_307101:
	cmpq $0x1,%r15
	je L_505177
L_307102:
	movq 0x0(%r15),%r13
	movw 0x8(%r13),%r11w
L_307103:
	movq 0xA8(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_505176
L_307105:
	movw %r11w,0x2C(%rbp)
	movw 0x0(%r15),%r13w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r13w,0x2(%rbp)
	movq $0x1,0xB8(%rbp)
L_307106:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505175
.p2align 0x4,,0x7
L_307107:
	movw 0x2C(%rbp),%r15w
	movb %r15b,%r14b
	shrw $0x8,%r15w
	movb %r15b,%r13b
	movw 0x2(%rbp),%r15w
	movb %r15b,%r11b
	shrw $0x8,%r15w
	movb %r15b,%r10b
	cmpb %r14b,%r11b
	jne L_505173
L_307123:
	testb %r13b,%r13b
	jnz L_307126
L_307124:
	testb %r10b,%r10b
	jz L_505170
L_307132:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505164
L_307133:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r14w,0x2(%rbp)
	jmp L_307106
.p2align 0x4
L_505164:
L_307134:
	movq 0xB8(%rbp),%r14
	xchgq %r14,%r15
L_307129:
	cmpq $0x1,%r15
	je L_505169
L_307130:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x2(%rbp)
	movq $0x1,0xB8(%rbp)
L_307111:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505168
.p2align 0x4,,0x7
L_307112:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505165
L_307113:
	movq %r15,0xB8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_307111
.p2align 0x4
L_505165:
L_307115:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1199,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movzwl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x257D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_505167
L_307116:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_505166
L_307117:
	movq %r14,0x98(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_307070
.p2align 0x4
L_505166:
	movq %r14,%r15
L_307119:
	jmp L_307033
.p2align 0x4
L_505167:
	movq %r14,%r15
	jmp L_307119
.p2align 0x4
L_505168:
L_307121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_307122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307122
.p2align 0x4
.long 0x4A50
L_307122:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_307112
.p2align 0x4
L_505169:
L_307131:
	movq $0x1,%r15
	jmp L_307115
.p2align 0x4
L_505170:
L_307126:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505171
L_307127:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r14w,0x2(%rbp)
	jmp L_307106
.p2align 0x4
L_505171:
L_307128:
	movq 0xB8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_307129
.p2align 0x4
L_505173:
L_307108:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505174
L_307109:
	movq %r15,0xB8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_307106
.p2align 0x4
L_505174:
L_307110:
	movq 0xB8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_307111
.p2align 0x4
L_505175:
L_307136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_307137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307137
.p2align 0x4
.long 0x4A50
L_307137:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_307107
.p2align 0x4
L_505176:
L_307104:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505177:
L_307140:
	movq 0xA8(%rbp),%r15
	andq $0x3,%r15
	jnz L_505179
L_307142:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_505178
L_307143:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_307070
.p2align 0x4
L_505178:
L_307144:
	movq 0x98(%rbp),%r15
	jmp L_307033
.p2align 0x4
L_505179:
L_307141:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505180:
L_307145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_307146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307146
.p2align 0x4
.long 0x4A51
L_307146:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_307096
.p2align 0x4
L_505181:
L_307155:
	movq %r14,%r15
	jmp L_307099
.p2align 0x4
L_505182:
L_307093:
	movq $0x2587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_307099
L_307094:
	movq %r15,0xD8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xD0(%rbp)
	jmp L_307095
.p2align 0x4
L_505186:
L_307159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_307160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307160
.p2align 0x4
.long 0x4A52
L_307160:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_307091
.p2align 0x4
L_505187:
L_307161:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_307153
.p2align 0x4
L_505188:
L_307162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307163
.p2align 0x4
.long 0x4A53
L_307163:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307088
.p2align 0x4
L_505189:
L_307164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307165
.p2align 0x4
.long 0x4A53
L_307165:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307084
.p2align 0x4
L_505190:
L_307180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307181
.p2align 0x4
.long 0x4A54
L_307181:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307176
.p2align 0x4
L_505192:
L_307186:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505193
.p2align 0x4,,0x7
L_307187:
	movl 0xD0(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp L_307177
.p2align 0x4
L_505193:
L_307188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307189
.p2align 0x4
.long 0x4A55
L_307189:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307187
.p2align 0x4
L_505194:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_307171
.p2align 0x4
L_505195:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_307171
.p2align 0x4
L_505197:
L_307079:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505198
L_307080:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xB8(%rbp)
	movw %r14w,0x2C(%rbp)
	jmp L_307075
.p2align 0x4
L_505198:
L_307081:
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_307140
L_307082:
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	jmp L_307083
.p2align 0x4
L_505200:
L_307191:
	xorb %cl,%cl
	jmp L_307078
.p2align 0x4
L_505201:
L_307192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307193
.p2align 0x4
.long 0x4A54
L_307193:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307076
.p2align 0x4
L_505202:
L_307073:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505203:
L_307207:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_505204
L_307209:
	movw %r13w,0x2C(%rbp)
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r14w,0x2(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_307106
.p2align 0x4
L_505204:
L_307208:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505205:
L_307199:
	cmpq $0x1,%r15
	je default_7
L_307200:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_307198
.p2align 0x4
L_505206:
L_307196:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call MLton_bug
.p2align 0x4
L_505207:
L_307213:
	movq $0x1,%r15
	jmp L_307033
.p2align 0x4
L_505208:
L_307068:
	cmpq $0x1,%r15
	je L_505209
L_307069:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x6848)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307070
.p2align 0x4
L_505209:
L_307210:
	movq $0x1,%r15
	jmp L_307033
.p2align 0x4
L_505210:
L_307214:
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1198,%r13
	je L_505213
	cmpq $0x119C,%r13
	je L_505211
L_307215:
	movq $0x1,%r15
	jmp L_307033
.p2align 0x4
L_505211:
L_307219:
	cmpq $0x1,%r15
	je L_505212
L_307220:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x68B8)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307070
.p2align 0x4
L_505212:
L_307221:
	movq $0x1,%r15
	jmp L_307033
.p2align 0x4
L_505213:
L_307216:
	cmpq $0x1,%r15
	je L_505214
L_307217:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x68C8)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307070
.p2align 0x4
L_505214:
L_307218:
	movq $0x1,%r15
	jmp L_307033
.p2align 0x4
L_505215:
L_307222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_307223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307223
.p2align 0x4
.long 0x4A56
L_307223:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_307027
.p2align 0x4
L_505216:
L_307224:
	movq $0x1,%r15
	jmp L_307030
.p2align 0x4
L_505217:
L_307225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307226
.p2align 0x4
.long 0x4A57
L_307226:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307020
.p2align 0x4
L_505218:
L_307227:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505219
.p2align 0x4,,0x7
L_307228:
	movq 0x90(%rbp),%r15
	movzwl 0x0(%r15),%ecx
	shll $0x1,%ecx
	orl $0x1,%ecx
	jmp L_307021
.p2align 0x4
L_505219:
L_307229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307230
.p2align 0x4
.long 0x4A54
L_307230:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307228
.p2align 0x4
L_505221:
L_307232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307233
.p2align 0x4
.long 0x4A58
L_307233:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307013
.p2align 0x4
L_505222:
L_307234:
	movq $0x1,0x88(%rbp)
	movq $0x1,%r15
	jmp L_307024
.p2align 0x4
L_505223:
L_307379:
	cmpq $0x1,%r15
	je L_505265
L_307380:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x67B0)(%rip),%r14
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
L_307237:
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq %r10,0xB8(%rbp)
	movl %r11d,%r10d
	andl $0x1,%r10d
	jz default_8
L_307362:
	shrl $0x1,%r11d
	movw %r11w,%r13w
L_307363:
	movq 0xA8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_505264
L_307365:
	movq 0x8(%r11),%r15
	movw 0x0(%r11),%r14w
.p2align 0x4,,0x7
L_307366:
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r14w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_505263
L_307370:
	movb %r13b,%r11b
	movb %r14b,%r10b
	cmpb %r10b,%r11b
	je L_505261
L_307371:
	cmpq $0x1,%r15
	je default_62
L_307372:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_307366
.p2align 0x4
default_62:
default_8:
	movq 0xB8(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x2(%rbp)
L_307239:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_505260
L_307241:
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x2C(%rbp)
	movq $0x1,0xD8(%rbp)
L_307242:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505259
.p2align 0x4,,0x7
L_307243:
	movw 0x2C(%rbp),%r15w
	shrw $0x8,%r15w
	movb %r15b,%dl
	cmpb $0x1,%dl
	je L_505258
	cmpb $0x2,%dl
	je L_505257
	cmpb $0x3,%dl
	je L_505256
L_307244:
	movb $0x5,%cl
L_307245:
	cmpb 0x2(%rbp),%cl
	jne L_505253
L_307333:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_307342
L_307334:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x0,0xE0(%rbp)
.p2align 0x4,,0x7
L_307335:
	movl 0x0(%r15),%r13d
	movl %r13d,%r15d
	andl $0x1,%r15d
	jz L_505251
L_307348:
	shrl $0x1,%r13d
	movw %r13w,%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	cmpb %r11b,%dl
	jne L_505250
L_307350:
	movw 0x2C(%rbp),%r13w
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_505248
	movb %dl,(localWord8+0x0)(%rip)
L_307337:
	movl 0xE0(%rbp),%r13d
	incl %r13d
	jo L_306888
L_307338:
	cmpq $0x1,%r14
	je L_505224
L_307339:
	movl %r13d,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movb (localWord8+0x0)(%rip),%dl
	jmp L_307335
.p2align 0x4
L_505224:
L_307340:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505246
.p2align 0x4,,0x7
L_307342:
	xorq %r15,%r15
L_307343:
	movq $0x118F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movzwl 0x2C(%rbp),%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq $0x2589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_505225
L_307344:
	movq %r15,0xD8(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0xD0(%rbp)
	movw %r15w,0x2C(%rbp)
	jmp L_307242
.p2align 0x4
L_505225:
L_307345:
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
L_307250:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505245
.p2align 0x4,,0x7
L_307251:
	movq $0x2589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505226
L_307252:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_307250
.p2align 0x4
L_505226:
L_307253:
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xE0(%rbp)
L_307254:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505244
.p2align 0x4,,0x7
L_307255:
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505243
L_307256:
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
L_307257:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505242
.p2align 0x4,,0x7
L_307258:
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_307260
L_307314:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_307316
L_307322:
	shrq $0x1,%r13
	movl %r13d,%r14d
	cmpl %r15d,%r14d
	jl L_505238
L_307316:
	movq $0x2589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505227
L_307317:
	movq %r15,0xF0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0xE0(%rbp)
	jmp L_307257
.p2align 0x4
L_505227:
L_307319:
	movq $0x2589,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_505237
L_307320:
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
L_307262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505236
.p2align 0x4,,0x7
L_307263:
	movq $0x2589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505228
L_307264:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_307262
.p2align 0x4
L_505228:
L_307266:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505229
L_307267:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_307254
.p2align 0x4
L_505229:
L_307268:
	cmpq $0x1,%r15
	jne L_505234
L_307303:
	movq 0xA8(%rbp),%r15
	andq $0x3,%r15
	jnz L_505233
L_307305:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_505230
L_307306:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_307237
.p2align 0x4
L_505230:
L_307307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307308
L_307309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307310
.p2align 0x4
.long 0x4A5A
L_307310:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_307308:
	movq 0x98(%rbp),%r15
L_307288:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505231
L_307289:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	jmp L_307012
.p2align 0x4
L_505231:
L_307290:
	movq %r15,0x88(%rbp)
	movq $0x1,%r15
	jmp L_307024
.p2align 0x4
L_505233:
L_307304:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505234:
L_307269:
	movq 0x0(%r15),%r13
	movw 0x8(%r13),%r11w
L_307270:
	movq 0xA8(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_505235
L_307272:
	movw %r11w,0x2C(%rbp)
	movw 0x0(%r15),%r13w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r13w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
L_307273:
	movw 0x2(%rbp),%r15w
	movw %r15w,0xE0(%rbp)
	movw 0x2C(%rbp),%r15w
	movw %r15w,0xE2(%rbp)
	addq $0xE0,%rbp
	leaq (L_307274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_505235:
L_307271:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505236:
L_307311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_307312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307312
.p2align 0x4
.long 0x4A52
L_307312:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_307263
.p2align 0x4
L_505237:
L_307321:
	movq %r14,%r15
	jmp L_307266
.p2align 0x4
L_505238:
L_307260:
	movq $0x2589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_307266
L_307261:
	movq %r15,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
	jmp L_307262
.p2align 0x4
L_505242:
L_307325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_307326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307326
.p2align 0x4
.long 0x4A5B
L_307326:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_307258
.p2align 0x4
L_505243:
L_307327:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_307319
.p2align 0x4
L_505244:
L_307328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307329
.p2align 0x4
.long 0x4A5C
L_307329:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_307255
.p2align 0x4
L_505245:
L_307330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307331
.p2align 0x4
.long 0x4A5C
L_307331:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_307251
.p2align 0x4
L_505246:
L_307346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_307347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307347
.p2align 0x4
.long 0x4A51
L_307347:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_307342
.p2align 0x4
L_505248:
L_307352:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505249
.p2align 0x4,,0x7
L_307353:
	movl 0xE0(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp L_307343
.p2align 0x4
L_505249:
L_307354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307355
.p2align 0x4
.long 0x4A5D
L_307355:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_307353
.p2align 0x4
L_505250:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_307337
.p2align 0x4
L_505251:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_307337
.p2align 0x4
L_505253:
L_307246:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505254
L_307247:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
	movw %r14w,0x2C(%rbp)
	jmp L_307242
.p2align 0x4
L_505254:
L_307248:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_307303
L_307249:
	movq 0x8(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	jmp L_307250
.p2align 0x4
L_505256:
L_307359:
	movb $0x2,%cl
	jmp L_307245
.p2align 0x4
L_505257:
L_307358:
	movb $0x3,%cl
	jmp L_307245
.p2align 0x4
L_505258:
L_307357:
	movb $0x4,%cl
	jmp L_307245
.p2align 0x4
L_505259:
L_307360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_307361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307361
.p2align 0x4
.long 0x4A51
L_307361:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_307243
.p2align 0x4
L_505260:
L_307240:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505261:
L_307375:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_505262
L_307377:
	movw %r13w,0x2C(%rbp)
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r14w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
	jmp L_307273
.p2align 0x4
L_505262:
L_307376:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_505263:
L_307367:
	cmpq $0x1,%r15
	je default_8
L_307368:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_307366
.p2align 0x4
L_505264:
L_307364:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call MLton_bug
.p2align 0x4
L_505265:
L_307381:
	movq $0x1,%r15
	jmp L_307288
.p2align 0x4
L_505266:
L_307235:
	cmpq $0x1,%r15
	je L_505267
L_307236:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x67C8)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307237
.p2align 0x4
L_505267:
L_307378:
	movq $0x1,%r15
	jmp L_307288
.p2align 0x4
L_505268:
L_307382:
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1198,%r13
	je L_505272
	cmpq $0x119C,%r13
	je L_505270
L_307383:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505269
L_307384:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r13,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
	jmp L_307012
.p2align 0x4
L_505269:
L_307385:
	movq $0x1,0x88(%rbp)
	movq $0x1,%r15
	jmp L_307024
.p2align 0x4
L_505270:
L_307389:
	cmpq $0x1,%r15
	je L_505271
L_307390:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x67B0)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307237
.p2align 0x4
L_505271:
L_307391:
	movq $0x1,%r15
	jmp L_307288
.p2align 0x4
L_505272:
L_307386:
	cmpq $0x1,%r15
	je L_505273
L_307387:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x98(%rbp)
	movq (globalObjptr+0x67C8)(%rip),%r14
	movq %r14,0xA8(%rbp)
	jmp L_307237
.p2align 0x4
L_505273:
L_307388:
	movq $0x1,%r15
	jmp L_307288
.p2align 0x4
L_505274:
L_307392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_307393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307393
.p2align 0x4
.long 0x4A58
L_307393:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_307005
.p2align 0x4
L_505275:
L_307394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307395
.p2align 0x4
.long 0x4A5E
L_307395:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307000
.p2align 0x4
L_505276:
L_307396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505277
.p2align 0x4,,0x7
L_307397:
	movq 0x98(%rbp),%r15
	movzwl 0x0(%r15),%ecx
	shll $0x1,%ecx
	orl $0x1,%ecx
	jmp L_307001
.p2align 0x4
L_505277:
L_307398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307399
.p2align 0x4
.long 0x4A53
L_307399:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307397
.p2align 0x4
L_505279:
L_307401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307402
.p2align 0x4
.long 0x4A5F
L_307402:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306993
.p2align 0x4
L_505280:
L_307403:
	movq $0x1,%r15
	jmp L_307008
.p2align 0x4
L_505281:
L_307461:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505282
L_307462:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
L_307463:
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE0,%rbp
	leaq (L_307464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceB_0
.p2align 0x4
L_505282:
L_307551:
	movq $0x1,%r14
	movq $0x1,0x88(%rbp)
	xchgq %r14,%r15
	jmp L_306990
.p2align 0x4
.long 0x4A68
L_307571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307572
L_307576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_307577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307577
.p2align 0x4
.long 0x4A69
L_307577:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_307572:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_307575
L_307573:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_307570
.p2align 0x4
.long 0x4A4C
L_306952:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_306953
L_307458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307459
.p2align 0x4
.long 0x4A5D
L_307459:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_306953:
	movq 0xE0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_505320
	cmpq $0x2,%r15
	je L_505286
L_306954:
	movq (globalObjptr+0x66E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505286:
L_307431:
	movq 0xE0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,0x2C(%rbp)
L_307432:
	movq 0xD8(%rbp),%r15
	andq $0x3,%r15
	jnz L_306954
L_307433:
	cmpl 0x28(%rbp),%r14d
	jl L_505310
L_307434:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505287
L_307435:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_306951
.p2align 0x4
L_505287:
L_307436:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
L_306958:
	cmpq $0x1,%r15
	je L_307416
L_306959:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_306960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505308
.p2align 0x4,,0x7
L_306961:
	movq $0x2581,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505288
L_306962:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_306960
.p2align 0x4
L_505288:
L_306963:
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_306964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505307
.p2align 0x4,,0x7
L_306965:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_505306
L_306966:
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
L_306967:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505305
.p2align 0x4,,0x7
L_306968:
	movq 0xA8(%rbp),%r15
	movq 0x90(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jl L_505303
L_306969:
	movq $0x2581,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_505289
L_306970:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	jmp L_306967
.p2align 0x4
L_505289:
	xchgq %r14,%r15
L_306972:
	movq $0x2581,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_505302
L_306973:
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
L_306974:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505301
.p2align 0x4,,0x7
L_306975:
	movq $0x2581,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_505290
L_306976:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_306974
.p2align 0x4
L_505290:
L_306978:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505291
L_306979:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_306964
.p2align 0x4
L_505291:
L_306980:
	cmpq $0x1,%r15
	je L_307416
L_306981:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_306982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505299
.p2align 0x4,,0x7
L_306983:
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x18(%r13),%r11
	movb 0x0(%r11),%r15b
	cmpb $0x2,%r15b
	je L_307409
	cmpb $0x3,%r15b
	je L_307409
	cmpb $0x4,%r15b
	je L_307409
	cmpb $0x5,%r15b
	je L_505295
L_306985:
	xorb %dl,%dl
L_306986:
	cmpb $0x1,%dl
	je L_505293
L_306987:
	movq $0x2581,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505292
L_306988:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_306982
.p2align 0x4
L_505292:
L_306989:
	movq %r15,0x88(%rbp)
	movq 0x98(%rbp),%r15
	jmp L_306990
.p2align 0x4
L_505293:
L_307404:
	movq $0x2581,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505294
L_307405:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_306982
.p2align 0x4
L_505294:
L_307406:
	movq 0xA8(%rbp),%r14
	movq %r14,0x88(%rbp)
	jmp L_306990
.p2align 0x4
L_505295:
L_307409:
	movb $0x1,%dl
	jmp L_306986
.p2align 0x4
L_505299:
L_307413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307414
.p2align 0x4
.long 0x4A5F
L_307414:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306983
.p2align 0x4
L_505301:
L_307417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307418
.p2align 0x4
.long 0x4A5F
L_307418:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306975
.p2align 0x4
L_505302:
L_307419:
	movq %r14,%r15
	jmp L_306978
.p2align 0x4
L_505303:
L_307420:
	movq $0x2581,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_505304
L_307421:
	movq %r14,0xA8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x98(%rbp)
	jmp L_306974
.p2align 0x4
L_505304:
	xchgq %r14,%r15
	jmp L_306978
.p2align 0x4
L_505305:
L_307423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_307424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307424
.p2align 0x4
.long 0x4A51
L_307424:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_306968
.p2align 0x4
L_505306:
L_307425:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_306972
.p2align 0x4
L_505307:
L_307426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307427
.p2align 0x4
.long 0x4A60
L_307427:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306965
.p2align 0x4
L_505308:
L_307428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307429
.p2align 0x4
.long 0x4A60
L_307429:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_306961
.p2align 0x4
L_505310:
L_307437:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505312
L_307438:
	movl 0x2C(%rbp),%ecx
L_307439:
	movq $0x1197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2581,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_505311
L_307440:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_306951
.p2align 0x4
L_505311:
L_307441:
	movq %r15,0x90(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_306960
.p2align 0x4
L_505312:
L_307442:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_307449
L_307443:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_307444:
	movq 0xD8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505316
L_307445:
	cmpq $0x1,%r14
	je L_505313
L_307446:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_307444
.p2align 0x4
L_505313:
L_307447:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307449
L_307451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307452
.p2align 0x4
.long 0x4A53
L_307452:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_307449:
	movl 0x2C(%rbp),%ecx
	imull $0x5,%ecx
	jo L_306888
	jmp L_307439
.p2align 0x4
L_505316:
L_307453:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307454
L_307455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307456
.p2align 0x4
.long 0x4A53
L_307456:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_307454:
	movl 0x2C(%rbp),%ecx
	jmp L_307439
.p2align 0x4
L_505320:
L_306955:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505321
L_306956:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_306951
.p2align 0x4
L_505321:
L_306957:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_306958
.p2align 0x4
.long 0x4A4D
L_307037:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
loop_3588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505326
.p2align 0x4,,0x7
L_307038:
	movq $0xFC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505325
L_307039:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r11,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_505324
	cmpq $0x2,%r14
	je L_505323
L_307040:
	movq %r15,0xA0(%rbp)
L_307041:
	jmp loop_3588
.p2align 0x4
L_505323:
L_307043:
	movq %r15,0xA0(%rbp)
	shrq $0x2,%r11
	movw %r11w,%r15w
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x119B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x20,%r12
	movzwl %r15w,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x257B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	jmp loop_3588
.p2align 0x4
L_505324:
L_307042:
	movq %r15,0xA0(%rbp)
	shrq $0x2,%r11
	movw %r11w,%r15w
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1199,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x20,%r12
	movzwl %r15w,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x257D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	jmp loop_3588
.p2align 0x4
L_505325:
L_307044:
	movq $0xFC9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r10
	movq $0x28D9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r9,0x0(%r15)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x8(%r15)
	jmp loop_3587
.p2align 0x4
L_505326:
L_307045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_307046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307046
.p2align 0x4
.long 0x4A4E
L_307046:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_307038
.p2align 0x4
.long 0x4A4C
L_307274:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307275
L_307299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_307300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307300
.p2align 0x4
.long 0x4A59
L_307300:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_307275:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505332
L_307276:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505327
L_307277:
	movq %r15,0xD0(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_307273
.p2align 0x4
L_505327:
L_307278:
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq $0x1,0xD0(%rbp)
.p2align 0x4,,0x7
L_307279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505331
.p2align 0x4,,0x7
L_307280:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505328
L_307281:
	movq %r15,0xD0(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_307279
.p2align 0x4
L_505328:
L_307283:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x119B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movzwl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x257B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_505330
L_307284:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_505329
L_307285:
	movq %r14,0x98(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_307237
.p2align 0x4
L_505329:
	movq %r14,%r15
L_307287:
	jmp L_307288
.p2align 0x4
L_505330:
	movq %r14,%r15
	jmp L_307287
.p2align 0x4
L_505331:
L_307292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307293
.p2align 0x4
.long 0x4A53
L_307293:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307280
.p2align 0x4
L_505332:
L_307294:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505333
L_307295:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movw %r14w,0x2(%rbp)
	jmp L_307273
.p2align 0x4
L_505333:
L_307296:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505334
L_307297:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movw 0x0(%r14),%r15w
	movw %r15w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
	jmp L_307279
.p2align 0x4
L_505334:
L_307298:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_307283
.p2align 0x4
.long 0x4A4C
L_307464:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF0,%rbp
	leaq (L_307465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_0
.p2align 0x4
.long 0x4A61
L_307465:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307466
L_307549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_307550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307550
.p2align 0x4
.long 0x4A64
L_307550:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_307466:
	movq 0xE0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_505374
	cmpq $0x2,%r15
	je L_505341
L_307467:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	jne L_505340
L_307469:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505336
L_307470:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505336:
L_307471:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
L_307472:
	cmpq $0x1,%r15
	je L_505339
L_307473:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_307474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505338
.p2align 0x4,,0x7
L_307475:
	movq $0x2581,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_505337
L_307476:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_307474
.p2align 0x4
L_505337:
L_307477:
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_306964
.p2align 0x4
L_505338:
L_307478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_307479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307479
.p2align 0x4
.long 0x4A60
L_307479:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_307475
.p2align 0x4
L_505339:
L_307480:
	movq $0x1,%r15
	movq $0x1,0x88(%rbp)
	jmp L_306990
.p2align 0x4
L_505340:
L_307468:
	movq (globalObjptr+0x66E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505341:
L_307484:
	movq 0xE0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,0x2C(%rbp)
L_307485:
	movq 0xD8(%rbp),%r15
	andq $0x3,%r15
	jz L_505344
L_307486:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	jne L_307468
L_307487:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505342
L_307488:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505342:
L_307489:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_307472
.p2align 0x4
L_505344:
L_307490:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_505372
	cmpq $0x2,%r15
	je L_505345
	jmp L_307468
.p2align 0x4
L_505345:
L_307494:
	movq 0xF0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,0xE0(%rbp)
L_307495:
	movq 0xE8(%rbp),%r15
	andq $0x3,%r15
	jnz L_307468
L_307496:
	movl 0x2C(%rbp),%r15d
	addl %r14d,%r15d
	movl %r15d,0xE4(%rbp)
	jo L_306888
L_307497:
	cmpl 0x28(%rbp),%r15d
	jl L_505347
L_307498:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505346
L_307499:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505346:
L_307500:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_307472
.p2align 0x4
L_505347:
L_307501:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505349
L_307502:
	movl 0xE4(%rbp),%ecx
L_307503:
	movq $0x1197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2581,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_505348
L_307504:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505348:
L_307505:
	movq %r15,0x90(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_307474
.p2align 0x4
L_505349:
L_307506:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_307513
L_307507:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_307508:
	movq 0xD8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505366
L_307509:
	cmpq $0x1,%r14
	je L_505350
L_307510:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_307508
.p2align 0x4
L_505350:
L_307511:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307513
L_307540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_307541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307541
.p2align 0x4
.long 0x4A63
L_307541:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_307513:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_307521
L_307514:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
L_307515:
	movq 0xE8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505359
L_307516:
	cmpq $0x1,%r14
	je L_505351
L_307517:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_307515
.p2align 0x4
L_505351:
L_307518:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307519
L_307529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307530
.p2align 0x4
.long 0x4A62
L_307530:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_307519:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505355
L_307521:
	movl 0x2C(%rbp),%r15d
	imull $0x5,%r15d
	jo L_306888
L_307522:
	movl 0xE0(%rbp),%ecx
	imull $0x5,%ecx
	jo L_306888
L_307523:
	addl %r15d,%ecx
	jo L_306888
L_307524:
	jmp L_307503
.p2align 0x4
L_505355:
L_307526:
	movl 0xE0(%rbp),%ecx
	imull $0x5,%ecx
	jo L_306888
L_307527:
	addl 0x2C(%rbp),%ecx
	jo L_306888
L_307528:
	jmp L_307503
.p2align 0x4
L_505359:
L_307531:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307532
L_307537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_307538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307538
.p2align 0x4
.long 0x4A62
L_307538:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_307532:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505362
L_307533:
	movl 0x2C(%rbp),%ecx
	imull $0x5,%ecx
	jo L_306888
L_307534:
	addl 0xE0(%rbp),%ecx
	jo L_306888
L_307535:
	jmp L_307503
.p2align 0x4
L_505362:
L_307536:
	movl 0xE4(%rbp),%ecx
	jmp L_307503
.p2align 0x4
L_505366:
L_307542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307543
L_307546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_307547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307547
.p2align 0x4
.long 0x4A63
L_307547:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_307543:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_307526
L_307544:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1,0xD8(%rbp)
	jmp L_307515
.p2align 0x4
L_505372:
L_307491:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505373
L_307492:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505373:
L_307493:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_307472
.p2align 0x4
L_505374:
L_307481:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_505375
L_307482:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_307463
.p2align 0x4
L_505375:
L_307483:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_307472
.text
.p2align 0x4
.globl get_129
.hidden get_129
get_129:
L_307652:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_307653
L_307713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_307714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307714
.p2align 0x4
.long 0x460
L_307714:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_307653:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_505387
L_307655:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_505386
L_307656:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_307658:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_505385
L_307705:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCBF,%r10
	jne L_505384
L_307706:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_505381
L_307659:
	incl %ecx
	jo L_505380
L_307661:
	cmpq $0x1,%r14
	je L_505377
L_307662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_307658
.p2align 0x4
L_505377:
L_307663:
L_307664:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_505379
L_307666:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1033
L_307704:
	movl %ecx,0x0(%r15)
x_1033:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_505378
L_307668:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_307669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505378:
L_307699:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_307700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505379:
L_307665:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505380:
L_307660:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505381:
L_307708:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_307665
L_307709:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_505382
L_307711:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505382:
L_307710:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505384:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_307659
.p2align 0x4
L_505385:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_307659
.p2align 0x4
L_505386:
L_307712:
	xorl %ecx,%ecx
	jmp L_307664
.p2align 0x4
L_505387:
L_307654:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_307669:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_307670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_307700:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307701
L_307702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_307703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307703
.p2align 0x4
.long 0x452
L_307703:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_307701:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_307669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_307670:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_307671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_307671:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11080)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_307672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_307672:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_307673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_307673:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307674
L_307697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_307698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307698
.p2align 0x4
.long 0x4AF
L_307698:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_307674:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_307675:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_307660
L_307676:
	cmpq $0x1,%r14
	je L_505390
L_307677:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_307675
.p2align 0x4
L_505390:
L_307678:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307679
L_307695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_307696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307696
.p2align 0x4
.long 0x4E7
L_307696:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_307679:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_505391
L_307680:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_388:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_505391:
L_307694:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_388
.p2align 0x4
.long 0x1
rev_388:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_505397
L_307681:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_307682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505396
.p2align 0x4,,0x7
L_307683:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505395
L_307684:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_307682
.p2align 0x4
L_505395:
L_307686:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_307687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505396:
L_307691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_307692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307692
.p2align 0x4
.long 0x45C
L_307692:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_307683
.p2align 0x4
L_505397:
L_307693:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_307686
.p2align 0x4
.long 0x1
L_307687:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307688
L_307689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_307690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307690
.p2align 0x4
.long 0x452
L_307690:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_307688:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_distanceF_0
.hidden get_distanceF_0
get_distanceF_0:
L_307715:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_307716
L_307837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_307838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307838
.p2align 0x4
.long 0x562
L_307838:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_307716:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_307717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0x557
L_307717:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_505408
L_307719:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3589:
	cmpl %ecx,%ebx
	je L_505407
L_307720:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_505406
L_307722:
	movq %r13,%r11
	movq %r13,%r10
	imulq $0x28,%r11
	imulq $0x28,%r10
	movq 0x8(%r14,%r10,1),%r9
	movq %r9,0x28(%rbp)
	imulq $0x28,%r13
	movq 0x10(%r14,%r13,1),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14,%r11,1),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	je L_505401
L_307723:
	incl %ebx
	jo L_505400
L_307725:
	jmp loop_3589
.p2align 0x4
L_505400:
L_307724:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505401:
L_307726:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307727
L_307834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_307835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307835
.p2align 0x4
.long 0x531
L_307835:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_307727:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
L_307728:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_505402
L_307833:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505402:
L_307729:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_505404
L_307730:
	movq 0x0(%r14),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_505403
L_307731:
	movq 0x0(%r15),%r14
	movq $0x2575,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r11)
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505403:
L_307732:
	shrq $0x1,%r15
	movl %r15d,0x14(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_307733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
L_505404:
L_307832:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505406:
L_307721:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505407:
L_307836:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505408:
L_307718:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A72
L_307733:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307734
L_307830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_307831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307831
.p2align 0x4
.long 0x590
L_307831:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_307734:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x66C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x119D,%r14
	je L_505414
	cmpq $0x119E,%r14
	je L_505413
	cmpq $0x119F,%r14
	je L_505412
	cmpq $0x11A0,%r14
	je L_505411
	cmpq $0x11A1,%r14
	je L_505410
default_9:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_505409
L_307735:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r13,%r15
L_307736:
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_307737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_0
.p2align 0x4
L_505409:
L_307811:
	movq $0x1,%r14
	movq $0x1,%r15
L_307752:
	movq $0x2575,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505410:
L_307829:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
L_505411:
L_307828:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
L_505412:
L_307827:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
L_505413:
L_307826:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
L_505414:
L_307812:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x14(%r14),%r13d
	testl %r13d,%r13d
	jnz L_505419
L_307813:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_307821
	cmpb $0x3,%r15b
	je L_307821
	cmpb $0x4,%r15b
	je L_307821
	cmpb $0x5,%r15b
	je L_505415
L_307815:
	xorb %dl,%dl
L_307816:
	cmpb $0x1,%dl
	je default_9
L_307817:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
L_505415:
L_307821:
	movb $0x1,%dl
	jmp L_307816
.p2align 0x4
L_505419:
L_307825:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307752
.p2align 0x4
.long 0x5A5
L_307737:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307738
L_307809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_307810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307810
.p2align 0x4
.long 0x1DAE
L_307810:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_307738:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_307799
	cmpq $0x2,%r15
	je L_505444
L_307740:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_505443
L_307741:
	movq $0x0,0x50(%rbp)
L_307742:
	movl 0x10(%rbp),%r11d
	testl %r11d,%r11d
	jz L_307744
L_307772:
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_307779
L_307773:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_307774:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_505437
L_307775:
	cmpq $0x1,%r13
	je L_505421
L_307776:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_307774
.p2align 0x4
L_505421:
L_307777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307779
L_307790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_307791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307791
.p2align 0x4
.long 0x1DAE
L_307791:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_307779:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_307757
	cmpq $0x2,%r15
	je L_505425
L_307781:
	movq 0x50(%rbp),%r15
L_307747:
	movq 0x38(%rbp),%r14
	andq $0x3,%r14
	jnz L_505423
L_307753:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505422
L_307754:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_307736
.p2align 0x4
L_505422:
L_307755:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307752
.p2align 0x4
L_505423:
L_307749:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505424
L_307750:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_307736
.p2align 0x4
L_505424:
L_307751:
	movq 0x48(%rbp),%r13
	xchgq %r13,%r14
	jmp L_307752
.p2align 0x4
L_505425:
L_307783:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	movl %ecx,%r14d
	imull $0x5,%r14d
	jo L_505431
L_307789:
	movl %r14d,%ecx
L_307761:
	movq 0x38(%rbp),%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_307749
	cmpq $0x2,%r14
	je L_505427
L_307762:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505426
L_307763:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_307736
.p2align 0x4
L_505426:
L_307764:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307752
.p2align 0x4
L_505427:
L_307767:
	movq 0x38(%rbp),%r14
	shrq $0x2,%r14
	movl %r14d,%r13d
	cmpl %r13d,%ecx
	jl L_307749
L_307768:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505428
L_307769:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_307736
.p2align 0x4
L_505428:
L_307770:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307752
.p2align 0x4
L_505431:
L_307784:
	testl %ecx,%ecx
	jz L_307757
L_307785:
	cmpl $0x0,%ecx
	jng L_307781
L_307757:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505432
L_307758:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_307736
.p2align 0x4
L_505432:
L_307759:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307752
.p2align 0x4
L_505437:
L_307792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307744
L_307794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_307795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307795
.p2align 0x4
.long 0x1DAE
L_307795:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_307744:
	movq 0x50(%rbp),%r15
L_307745:
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_307757
	cmpq $0x2,%r14
	je L_505438
	jmp L_307747
.p2align 0x4
L_505438:
L_307760:
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	jmp L_307761
.p2align 0x4
L_505443:
L_307797:
	xorq %r14,%r14
	xchgq %r14,%r15
	jmp L_307745
.p2align 0x4
L_505444:
L_307802:
	movq 0x50(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	addl 0x14(%rbp),%r14d
	jo L_505446
L_307806:
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_307745
L_307807:
	movq %r15,0x50(%rbp)
	movq %r14,%r15
	jmp L_307742
.p2align 0x4
L_505446:
L_307803:
	cmpl $0x0,0x14(%rbp)
	jng L_307740
L_307799:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_505447
L_307800:
	movq $0x1,0x50(%rbp)
	jmp L_307742
.p2align 0x4
L_505447:
L_307801:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_307745
.text
.p2align 0x4
.globl coincide_0
.hidden coincide_0
coincide_0:
L_307839:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_307840
L_307863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_307864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307864
.p2align 0x4
.long 0x454
L_307864:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_307840:
	movw 0x2(%rbp),%r15w
	movb %r15b,%r14b
	shrw $0x8,%r15w
	movb %r15b,%r13b
	movw 0x0(%rbp),%r15w
	movb %r15b,%r11b
	shrw $0x8,%r15w
	movb %r15b,%r10b
	cmpb %r14b,%r11b
	jne L_307842
L_307843:
	cmpb $0x1,%r13b
	je L_505460
	cmpb $0x2,%r13b
	je L_307846
	cmpb $0x3,%r13b
	je L_307846
L_307844:
	cmpb $0x1,%r10b
	je L_505455
	cmpb $0x2,%r10b
	je L_505451
L_307846:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505451:
	movb %r13b,%cl
L_307851:
	cmpb $0x0,%cl
	je L_307846
	cmpb $0x1,%cl
	je L_307846
	cmpb $0x2,%cl
	je L_307846
L_307842:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505455:
L_307847:
	cmpb $0x0,%r13b
	je L_307846
	cmpb $0x1,%r13b
	je L_307846
	jmp L_307842
.p2align 0x4
L_505460:
L_307856:
	cmpb $0x2,%r10b
	jne L_307846
	movb %r13b,%cl
	jmp L_307851
.text
.p2align 0x4
.globl get_distanceB_0
.hidden get_distanceB_0
get_distanceB_0:
L_307865:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_307866
L_308023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_308024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308024
.p2align 0x4
.long 0x562
L_308024:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_307866:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_307867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
.long 0x557
L_307867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_505470
L_307870:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3590:
	cmpl %ebx,%ecx
	je L_505469
L_307871:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_505468
L_307874:
	movq %r13,%r11
	imulq $0x28,%r11
	imulq $0x28,%r13
	movq 0x20(%r14,%r13,1),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14,%r11,1),%r13
	cmpq %r10,0x10(%r13)
	je L_505466
L_307875:
	incl %ebx
	jo L_505465
L_307877:
	jmp loop_3590
.p2align 0x4
L_505465:
L_307876:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505466:
L_307878:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
L_307879:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_505467
L_308021:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505467:
L_307880:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_307881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
L_505468:
L_307873:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505469:
L_308022:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505470:
L_307869:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A73
L_307881:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307882
L_308019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_308020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308020
.p2align 0x4
.long 0x531
L_308020:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_307882:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x66C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1198,%r14
	je L_505475
	cmpq $0x1199,%r14
	je L_505474
	cmpq $0x119A,%r14
	je L_505473
	cmpq $0x119B,%r14
	je L_505472
default_10:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_505471
L_307883:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq $0x1,0x50(%rbp)
L_307884:
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_307885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_505471:
L_308001:
	movq $0x1,%r14
	movq $0x1,%r15
L_307901:
	movq $0x2575,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505472:
L_308018:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307901
.p2align 0x4
L_505473:
L_308017:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307901
.p2align 0x4
L_505474:
L_308016:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307901
.p2align 0x4
L_505475:
L_308002:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x14(%r14),%r13d
	testl %r13d,%r13d
	jnz L_505480
L_308003:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_308011
	cmpb $0x3,%r15b
	je L_308011
	cmpb $0x4,%r15b
	je L_308011
	cmpb $0x5,%r15b
	je L_505476
L_308005:
	xorb %dl,%dl
L_308006:
	cmpb $0x1,%dl
	je default_10
L_308007:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307901
.p2align 0x4
L_505476:
L_308011:
	movb $0x1,%dl
	jmp L_308006
.p2align 0x4
L_505480:
L_308015:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_307901
.p2align 0x4
.long 0x110F
L_307885:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_307869
L_307887:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3591:
	cmpl %ebx,%ecx
	je L_505499
L_307888:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_307873
L_307890:
	movq %r13,%r11
	imulq $0x28,%r11
	imulq $0x28,%r13
	movq 0x18(%r14,%r13,1),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r14,%r11,1),%r13
	movq 0x10(%r13),%r10
	cmpq %r10,0x40(%rbp)
	je L_505483
L_307891:
	incl %ebx
	jo L_307876
L_307892:
	jmp loop_3591
.p2align 0x4
L_505483:
L_307893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307894
L_307993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_307994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307994
.p2align 0x4
.long 0x1DCA
L_307994:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_307894:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_505496
L_307895:
	movq 0x0(%r14),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_505495
L_307896:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_505493
	cmpq $0x2,%r15
	je L_505487
L_307897:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jnz L_505485
L_307902:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505484
L_307903:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505484:
L_307904:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
L_505485:
	movq %r14,%r15
L_307898:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505486
L_307899:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505486:
L_307900:
	movq 0x30(%rbp),%r13
	xchgq %r13,%r14
	jmp L_307901
.p2align 0x4
L_505487:
L_307908:
	movq %r14,%r15
	shrq $0x2,%r15
	movl %r15d,%r13d
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_505492
	cmpq $0x2,%r15
	je L_505489
L_307909:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505488
L_307910:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r11,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505488:
L_307911:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
L_505489:
L_307913:
	movq 0x50(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	cmpl %r11d,%r13d
	jl L_505491
L_307914:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505490
L_307915:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505490:
L_307916:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
L_505491:
	movq %r14,%r15
	jmp L_307898
.p2align 0x4
L_505492:
	movq %r14,%r15
	jmp L_307898
.p2align 0x4
L_505493:
L_307905:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505494
L_307906:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505494:
L_307907:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
L_505495:
L_307918:
	shrq $0x1,%r15
	movl %r15d,0x14(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_307919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceB_0
.p2align 0x4
L_505496:
L_307992:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505499:
L_307995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307996
L_307999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_308000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308000
.p2align 0x4
.long 0x111C
L_308000:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_307996:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505500
L_307997:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505500:
L_307998:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
.long 0x4A74
L_307919:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307920
L_307990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_307991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307991
.p2align 0x4
.long 0x127F
L_307991:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_307920:
	movq 0x58(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_307980
	cmpq $0x2,%r15
	je L_505526
L_307922:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_505525
L_307923:
	movq $0x0,0x58(%rbp)
L_307924:
	movl 0x10(%rbp),%r11d
	testl %r11d,%r11d
	jz L_307926
L_307953:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_307960
L_307954:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_307955:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_505519
L_307956:
	cmpq $0x1,%r13
	je L_505503
L_307957:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_307955
.p2align 0x4
L_505503:
L_307958:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307960
L_307971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_307972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307972
.p2align 0x4
.long 0x127F
L_307972:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_307960:
	movq 0x58(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_307938
	cmpq $0x2,%r15
	je L_505507
L_307962:
	movq 0x58(%rbp),%r15
L_307929:
	movq 0x50(%rbp),%r14
	andq $0x3,%r14
	jnz L_505505
L_307934:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505504
L_307935:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505504:
L_307936:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307901
.p2align 0x4
L_505505:
L_307931:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505506
L_307932:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505506:
L_307933:
	movq 0x30(%rbp),%r13
	xchgq %r13,%r14
	jmp L_307901
.p2align 0x4
L_505507:
L_307964:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	movl %ecx,%r14d
	imull $0x5,%r14d
	jo L_505513
L_307970:
	movl %r14d,%ecx
L_307942:
	movq 0x50(%rbp),%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_307931
	cmpq $0x2,%r14
	je L_505509
L_307943:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505508
L_307944:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505508:
L_307945:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307901
.p2align 0x4
L_505509:
L_307948:
	movq 0x50(%rbp),%r14
	shrq $0x2,%r14
	movl %r14d,%r13d
	cmpl %r13d,%ecx
	jl L_307931
L_307949:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505510
L_307950:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505510:
L_307951:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_307901
.p2align 0x4
L_505513:
L_307965:
	testl %ecx,%ecx
	jz L_307938
L_307966:
	cmpl $0x0,%ecx
	jng L_307962
L_307938:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505514
L_307939:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_307884
.p2align 0x4
L_505514:
L_307940:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_307901
.p2align 0x4
L_505519:
L_307973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_307926
L_307975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_307976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_307976
.p2align 0x4
.long 0x127F
L_307976:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_307926:
	movq 0x58(%rbp),%r15
L_307927:
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_307938
	cmpq $0x2,%r14
	je L_505520
	jmp L_307929
.p2align 0x4
L_505520:
L_307941:
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	jmp L_307942
.p2align 0x4
L_505525:
L_307978:
	xorq %r14,%r14
	xchgq %r14,%r15
	jmp L_307927
.p2align 0x4
L_505526:
L_307983:
	movq 0x58(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	addl 0x14(%rbp),%r14d
	jo L_505528
L_307987:
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_307927
L_307988:
	movq %r15,0x58(%rbp)
	movq %r14,%r15
	jmp L_307924
.p2align 0x4
L_505528:
L_307984:
	cmpl $0x0,0x14(%rbp)
	jng L_307922
L_307980:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_505529
L_307981:
	movq $0x1,0x58(%rbp)
	jmp L_307924
.p2align 0x4
L_505529:
L_307982:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_307927
.text
.p2align 0x4
.globl doit_92
.hidden doit_92
doit_92:
loop_3592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_308025
L_308047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_308048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308048
.p2align 0x4
.long 0x45C
L_308048:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_308025:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_505533
L_308026:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq %r13,%r15
L_308027:
	movq %r15,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (toList_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2179
.p2align 0x4
L_505533:
L_308035:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_505534
L_308036:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
	xchgq %r11,%r14
L_308037:
	movq 0x8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	movq %r14,0x8(%r11)
	jmp L_308027
.p2align 0x4
L_505534:
L_308038:
	cmpq $0x1,%r13
	je L_505537
L_308039:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_308040:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505536
.p2align 0x4,,0x7
L_308041:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505535
L_308042:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_308040
.p2align 0x4
L_505535:
L_308043:
	movq 0x28(%rbp),%r11
	movq 0x20(%rbp),%r15
	movq $0x1,%r13
	xchgq %r11,%r14
	jmp L_308037
.p2align 0x4
L_505536:
L_308044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_308045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308045
.p2align 0x4
.long 0x4DF
L_308045:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_308041
.p2align 0x4
L_505537:
L_308046:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
toList_18:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_308028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4379
.p2align 0x4
.long 0x51F
L_308028:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je loop_3592
L_308029:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_308030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_92
.p2align 0x4
.long 0x490
L_308030:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308031
L_308032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_308033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308033
.p2align 0x4
.long 0x5E6
L_308033:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_308031:
	movq $0x234F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2179
.hidden x_2179
x_2179:
L_308049:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_308050
L_311039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_311040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311040
.p2align 0x4
.long 0x523
L_311040:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_308050:
	movq 0x18(%rbp),%r15
	movq 0x90(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_308051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2181
.p2align 0x4
.long 0x22DD
L_308051:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308052
L_311037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_311038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311038
.p2align 0x4
.long 0x4CB3
L_311038:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_308052:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_505562
L_308053:
	movq 0x0(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0xC8(%rbp)
	movq 0x98(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_505561
L_308055:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_505560
L_308056:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_308058:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_505559
L_311022:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC6,%r11
	jne L_505558
L_311023:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_505551
L_308059:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_505550
L_308061:
	cmpq $0x1,%r15
	je L_505541
L_308062:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_308058
.p2align 0x4
L_505541:
L_308063:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308064
L_311020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_311021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311021
.p2align 0x4
.long 0x4CB2
L_311021:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_308064:
	movl 0x14(%rbp),%ecx
L_308065:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_505548
L_308067:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_308069
L_311019:
	movl %ecx,0x0(%r15)
L_308069:
	movq 0xD8(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x198D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0xC8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1199,%r15
	je L_505546
	cmpq $0x119A,%r15
	je L_505545
	cmpq $0x119B,%r15
	je L_505544
	cmpq $0x119C,%r15
	je L_505543
L_308070:
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
L_308071:
	cmpq $0x1,%r15
	je L_505542
L_308072:
	movl 0x4(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (memloc_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505542:
L_310726:
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x10C(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xE0,%rbp
	leaq (L_310727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp near_0
.p2align 0x4
L_505543:
L_311013:
	movq 0x0(%r14),%r15
L_311014:
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x104(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xD8,%rbp
	leaq (L_311015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp near_0
.p2align 0x4
L_505544:
L_310960:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
L_310961:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505545:
L_310877:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_310878:
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x1C(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505546:
L_310794:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_310795:
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x1C(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505548:
L_308066:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505550:
L_308060:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505551:
L_311025:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_308066
L_311026:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_505556
L_311034:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_311028:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1199,%r15
	je L_505555
	cmpq $0x119A,%r15
	je L_505554
	cmpq $0x119B,%r15
	je L_505553
	cmpq $0x119C,%r15
	je L_505552
L_311029:
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	jmp L_308071
.p2align 0x4
L_505552:
L_311033:
	movq 0x0(%r14),%r15
	jmp L_311014
.p2align 0x4
L_505553:
L_311032:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_310961
.p2align 0x4
L_505554:
L_311031:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	jmp L_310878
.p2align 0x4
L_505555:
L_311030:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	jmp L_310795
.p2align 0x4
L_505556:
L_311027:
	movq %r11,%r15
	jmp L_311028
.p2align 0x4
L_505558:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_308059
.p2align 0x4
L_505559:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_308059
.p2align 0x4
L_505560:
L_311035:
	xorl %ecx,%ecx
	jmp L_308065
.p2align 0x4
L_505561:
L_308054:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505562:
L_308548:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A75
memloc_96:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308073
L_310724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310725
.p2align 0x4
.long 0x4C8A
L_310725:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_308073:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x10(%rbp),%r15d
	negl %r15d
	jo L_308060
L_308074:
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0xE8(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xF0(%rbp)
	movq %r13,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_308075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C8D
L_310727:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310728
L_310792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310793
.p2align 0x4
.long 0x4C92
L_310793:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_310728:
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_505589
L_310730:
	testl %r13d,%r13d
	jz L_505566
L_310731:
	movq 0x98(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_310732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_505566:
L_310766:
	cmpq $0x1,0x10(%rbp)
	je L_505588
L_310767:
L_308206:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x1,0x0(%r15)
	jg L_505578
L_308207:
	movq $0x1,0x18(%rbp)
L_308208:
	movq (globalObjptr+0x808)(%rip),%r14
	cmpl $0x2,0x0(%r14)
	jg L_505577
L_308209:
	movq $0x1,%r15
L_308210:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	cmpq $0x1,0x18(%rbp)
	je L_505576
L_308211:
	movq %r13,0x10(%rbp)
L_308212:
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_308213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505575
.p2align 0x4,,0x7
L_308214:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_505574
L_308215:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_308216:
	cmpq $0x1,%r15
	je L_505567
L_308217:
	movq %r13,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq %r15,0x18(%rbp)
L_308218:
	jmp L_308213
.p2align 0x4
L_505567:
L_308219:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_308220:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505573
.p2align 0x4,,0x7
L_308221:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_505568
L_308222:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_308216
.p2align 0x4
L_505568:
L_308223:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_505572
L_308224:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_308225:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505571
.p2align 0x4,,0x7
L_308226:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_505569
L_308227:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_308225
.p2align 0x4
L_505569:
L_308229:
	cmpq $0x1,%r15
	je L_505570
L_308230:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
L_308231:
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_308232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_0
.p2align 0x4
L_505570:
L_310446:
	movq $0x1,0x10(%rbp)
	jmp L_308231
.p2align 0x4
L_505571:
L_310447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310448
.p2align 0x4
.long 0x4C55
L_310448:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_308226
.p2align 0x4
L_505572:
L_310449:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308229
.p2align 0x4
L_505573:
L_310450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310451
.p2align 0x4
.long 0x4C56
L_310451:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_308221
.p2align 0x4
L_505574:
L_310452:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_308225
.p2align 0x4
L_505575:
L_310453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310454
.p2align 0x4
.long 0x4C55
L_310454:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_308214
.p2align 0x4
L_505576:
L_310455:
	movq %r13,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_308220
.p2align 0x4
L_505577:
L_310456:
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505578:
L_310484:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1199,%r13
	je L_505586
	cmpq $0x119A,%r13
	je L_505584
	cmpq $0x119B,%r13
	je L_505582
	cmpq $0x119C,%r13
	je L_505580
L_310485:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505579
L_310486:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505579:
L_310527:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505580:
L_310626:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505581
L_310627:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505581:
L_310632:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505582:
L_310591:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505583
L_310592:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505583:
L_310621:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505584:
L_310550:
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505585
L_310551:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505585:
L_310586:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505586:
L_310532:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505587
L_310533:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505587:
L_310545:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505588:
L_310769:
	movq $0x1,0x10(%rbp)
	jmp L_308206
.p2align 0x4
L_505589:
L_308084:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CB1
L_311015:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308206
L_311017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311018
.p2align 0x4
.long 0x4C7D
L_311018:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308206
.p2align 0x4
.long 0x4CA7
L_310962:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C93
L_310879:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C93
L_310796:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A76
L_308075:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_308076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C8E
L_310732:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_505610
L_310733:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_310734:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505609
.p2align 0x4,,0x7
L_310735:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_505592
L_310736:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_310734
.p2align 0x4
L_505592:
L_310737:
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_310738:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505608
.p2align 0x4,,0x7
L_310739:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_505593
L_310740:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_310738
.p2align 0x4
L_505593:
L_310741:
	movq %r15,0x48(%rbp)
L_310742:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_505607
L_310743:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_310744:
	incl %ecx
	jo L_308060
L_310745:
	cmpq $0x1,%r15
	je L_505594
L_310746:
	movq 0x8(%r15),%r15
	jmp L_310744
.p2align 0x4
L_505594:
L_310747:
L_310748:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_505605
L_310749:
	cmpq $0x7FFFFFFF,%rdx
	ja L_505604
L_310750:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1615,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310751
.p2align 0x4
.long 0x4C8F
L_310751:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x58(%rbp)
L_310752:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3595:
	cmpq 0x50(%rbp),%r15
	jnl L_505596
L_310780:
	cmpq $0x1,%r14
	je L_505595
L_310781:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x58(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3595
.p2align 0x4
L_505595:
L_310708:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505596:
L_310753:
	movq 0x58(%rbp),%r15
	movq $0x190D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_308084
L_310755:
	movl 0x18(%rbp),%r15d
	cmpl %r13d,%r15d
	jne L_308112
L_310757:
	cmpl $0x0,%r15d
	jl L_505601
L_310758:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3596:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505600
.p2align 0x4,,0x7
L_310759:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_505597
L_310770:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r10
	movb 0x0(%r10),%r9b
	movq 0x8(%r10),%r8
	cmpb $0x2,%r9b
	je memloc_215
	cmpb $0x3,%r9b
	je memloc_214
	cmpb $0x4,%r9b
	je memloc_213
	cmpb $0x5,%r9b
	je memloc_212
memloc_116:
	movl %r14d,0x1C(%rbp)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %r9b,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	jmp loop_3596
.p2align 0x4
memloc_212:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
memloc_117:
	movl %ecx,0x1C(%rbp)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3596
.p2align 0x4
memloc_213:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_117
.p2align 0x4
memloc_214:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_117
.p2align 0x4
memloc_215:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_117
.p2align 0x4
L_505597:
L_310760:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_310766
L_310761:
	movq $0x236D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_505598
L_310762:
L_310763:
	movq $0x2373,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r11,0x10(%rbp)
	jmp L_308206
.p2align 0x4
L_505598:
L_310764:
	movq %r13,0x10(%rbp)
	jmp L_308206
.p2align 0x4
L_505600:
L_310777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310778
.p2align 0x4
.long 0x4C90
L_310778:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_310759
.p2align 0x4
L_505601:
L_308112:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505604:
L_310710:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505605:
L_310784:
	movq (globalObjptr+0x68F0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_310752
.p2align 0x4
L_505607:
L_310785:
	xorl %ecx,%ecx
	jmp L_310748
.p2align 0x4
L_505608:
L_310786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310787
.p2align 0x4
.long 0x4C91
L_310787:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_310739
.p2align 0x4
L_505609:
L_310788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310789
.p2align 0x4
.long 0x4C91
L_310789:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_310735
.p2align 0x4
L_505610:
L_310790:
	movq $0x1,0x48(%rbp)
	jmp L_310742
.p2align 0x4
.long 0x4A85
L_308232:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308233
L_310444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310445
.p2align 0x4
.long 0x4C54
L_310445:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_308233:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505613
L_308234:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_308235:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505612
.p2align 0x4,,0x7
L_308236:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505611
L_308237:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_308235
.p2align 0x4
L_505611:
L_308238:
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
L_308239:
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_308240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1366
.p2align 0x4
L_505612:
L_310441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_310442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310442
.p2align 0x4
.long 0x4C53
L_310442:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_308236
.p2align 0x4
L_505613:
L_310443:
	movq $0x1,%r14
	xchgq %r14,%r15
L_308247:
	cmpq $0x1,%r15
	je L_505674
L_308248:
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x21C6,%r15
	je L_505660
L_310432:
	movq %r14,0x1A0(%rbp)
	movq 0x178(%r13),%r15
	movq 0x170(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x168(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x160(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x158(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x150(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x148(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x140(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x138(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x130(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x128(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x120(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x118(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x110(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x108(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x100(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0xF8(%r13),%r14
	movq %r14,0x90(%rbp)
	movq 0xF0(%r13),%r14
	movq %r14,0x98(%rbp)
	movq 0xE8(%r13),%r14
	movq %r14,0xB8(%rbp)
	movq 0xE0(%r13),%r14
	movq %r14,0xC0(%rbp)
	movq 0xD8(%r13),%r14
	movq %r14,0xC8(%rbp)
	movq 0xD0(%r13),%r14
	movq %r14,0xD0(%rbp)
	movq 0xC8(%r13),%r14
	movq %r14,0xD8(%rbp)
	movq 0xC0(%r13),%r14
	movq %r14,0xE0(%rbp)
	movq 0xB8(%r13),%r14
	movq %r14,0xE8(%rbp)
	movq 0xB0(%r13),%r14
	movq %r14,0xF0(%rbp)
	movq 0xA8(%r13),%r14
	movq %r14,0xF8(%rbp)
	movq 0xA0(%r13),%r14
	movq %r14,0x100(%rbp)
	movq 0x98(%r13),%r14
	movq %r14,0x108(%rbp)
	movq 0x90(%r13),%r14
	movq %r14,0x110(%rbp)
	movq 0x88(%r13),%r14
	movq %r14,0x118(%rbp)
	movq 0x80(%r13),%r14
	movq %r14,0x120(%rbp)
	movq 0x78(%r13),%r14
	movq %r14,0x128(%rbp)
	movq 0x70(%r13),%r14
	movq %r14,0x130(%rbp)
	movb 0x4(%r13),%r14b
	movq 0x68(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x60(%r13),%r11
	movq %r11,0x140(%rbp)
	movq 0x58(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x50(%r13),%r11
	movq %r11,0x150(%rbp)
	movq 0x48(%r13),%r11
	movq %r11,0x158(%rbp)
	movq 0x40(%r13),%r11
	movq %r11,0x160(%rbp)
	movq 0x38(%r13),%r11
	movq %r11,0x168(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x170(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x178(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x180(%rbp)
	movl 0x0(%r13),%r11d
	movq 0x18(%r13),%r10
	movq %r10,0x188(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x190(%rbp)
	movq 0x8(%r13),%r10
	movb 0x5(%r13),%r9b
	movb %r9b,0xA8(%rbp)
	movb %r14b,0xA9(%rbp)
	movl %r11d,0xAC(%rbp)
	movq %r10,0x198(%rbp)
x_1034:
	movq 0xA0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x1A8(%rbp)
	movq (globalObjptr+0x808)(%rip),%r13
	cmpl $0x1,0x0(%r13)
	jng L_505633
L_309621:
	movq 0x20(%r15),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1D0(%rbp)
	movq 0xB0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x119E,%r15
	je L_505631
	cmpq $0x119F,%r15
	je L_505629
	cmpq $0x11A0,%r15
	je L_505627
	cmpq $0x11A1,%r15
	je L_505625
	cmpq $0x11A2,%r15
	je L_505624
	cmpq $0x11A3,%r15
	je L_505623
	cmpq $0x11A4,%r15
	je L_505621
L_309622:
	movq 0x18(%r13),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x10(%r13),%r15
	movq 0x0(%r13),%r14
	movb 0x21(%r15),%r13b
	testb %r13b,%r13b
	jnz L_505620
L_309623:
	movq (globalObjptr+0xE8E0)(%rip),%r13
	movq %r13,0x1B8(%rbp)
L_309624:
	movq 0x28(%r15),%r13
	cmpq $0x1,%r13
	je L_505618
L_309625:
	cmpq $0x1,%r14
	je L_505614
L_309626:
	movq %r13,0x1E0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x1D8(%rbp)
L_309627:
	movq 0x8(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F0,%rbp
	leaq (toString_389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_505614:
L_309689:
	movq %r13,0x1C0(%rbp)
	movq $0x1,%r15
L_309638:
	cmpq $0x1,%r15
	je L_505617
L_309639:
	movq 0x8(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
.p2align 0x4,,0x7
L_309640:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505616
.p2align 0x4,,0x7
L_309641:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505615
L_309642:
	movq %r15,0x1E0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C8(%rbp)
	movq %r15,0x1D8(%rbp)
	jmp L_309640
.p2align 0x4
L_505615:
L_309643:
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_309644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_505616:
L_309681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_309682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309682
.p2align 0x4
.long 0x4BAC
L_309682:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	jmp L_309641
.p2align 0x4
L_505617:
L_309683:
	movq $0x1,%r15
L_309646:
	movq %r15,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505618:
L_309690:
	cmpq $0x1,%r14
	je L_505619
L_309691:
	movq 0x8(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x1D8(%rbp)
	movq (globalObjptr+0xE368)(%rip),%r14
	movq %r14,0x1E0(%rbp)
	jmp L_309627
.p2align 0x4
L_505619:
L_309692:
	movq $0x1,%r15
	movq (globalObjptr+0xE368)(%rip),%r14
	movq %r14,0x1C0(%rbp)
	jmp L_309638
.p2align 0x4
L_505620:
L_309693:
	movq (globalObjptr+0xE950)(%rip),%r13
	movq %r13,0x1B8(%rbp)
	jmp L_309624
.p2align 0x4
L_505621:
L_309924:
	movq 0x0(%r13),%r15
	movq 0x1D0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505622
L_309925:
	movq %r15,0x1B8(%rbp)
	movq %r13,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505622:
L_309930:
	movq %r15,0x1B8(%rbp)
	movq %r13,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505623:
L_309896:
	movq 0x10(%r13),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x1B8(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (toString_395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp condition_layout_0
.p2align 0x4
L_505624:
L_309841:
	movq 0x10(%r13),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (toString_394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_505625:
L_309806:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x1D0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505626
L_309807:
	movq %r15,0x1C8(%rbp)
	movq %r13,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505626:
L_309836:
	movq %r15,0x1C8(%rbp)
	movq %r13,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505627:
L_309750:
	movq 0x20(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x1C0(%rbp)
	movq 0x18(%r13),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x1D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_505628
L_309751:
	movq %r15,0x200(%rbp)
	movq %r11,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_309752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505628:
L_309801:
	movq %r15,0x200(%rbp)
	movq %r11,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_309802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505629:
L_309722:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_505630
L_309723:
	movq 0x8(%r14),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x1C0(%rbp)
	movq %r14,%r15
L_309724:
	movq %r15,0x1D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (toString_391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505630:
L_309749:
	movq $0x1,%r15
L_309737:
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505631:
L_309694:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_505632
L_309695:
	movq 0x8(%r14),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x1C0(%rbp)
	movq %r14,%r15
L_309696:
	movq %r15,0x1D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (toString_390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505632:
L_309721:
	movq $0x1,%r15
L_309709:
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505633:
L_308252:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x119E,%r14
	je L_505659
	cmpq $0x119F,%r14
	je L_505658
	cmpq $0x11A0,%r14
	je L_505657
	cmpq $0x11A1,%r14
	je L_505656
	cmpq $0x11A2,%r14
	je L_505655
	cmpq $0x11A3,%r14
	je L_505636
	cmpq $0x11A4,%r14
	je L_505634
L_308253:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
L_308254:
	movq 0x30(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0x188(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x190(%rbp)
	movb 0x20(%r15),%r14b
	movb %r14b,0xAA(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x198(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x18C(%rbp)
	movl 0x10(%r15),%r14d
	movl %r14d,0x1B0(%rbp)
	movl 0x14(%r15),%r14d
	movl %r14d,0x1B4(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1C8(%rbp)
	movb 0x1(%r15),%r13b
	movb %r13b,0xAB(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x1D0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1D8(%rbp)
	movq %r14,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_308255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505634:
L_309609:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_309610:
	movq 0x1A8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C4,%r14
	je L_505635
L_309620:
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq $0x29C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %r15,0x30(%rbp)
	addq $0x38,%r12
L_309612:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505635:
L_309611:
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq $0x29BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	addq $0x40,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x30(%rbp)
	jmp L_309612
.p2align 0x4
L_505636:
L_309351:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_309352:
	movzbq 0x50(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x10,%rax
	ja L_505637
	jmp *jumpTable_817(,%rax,8)
.data
.p2align 0x4
jumpTable_817:
.quad L_505654,L_505653,L_505652,L_505651,L_505650,L_505649,L_505648,L_505647,L_505646,L_505645,L_505644,L_505643,L_505642,L_505641,L_505640,L_505639,L_505638
.text
.p2align 0x4
L_505637:
L_309353:
	movb $0x1,0x51(%rbp)
L_309354:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505638:
L_309608:
	movb $0x10,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505639:
L_309607:
	movb $0x11,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505640:
L_309606:
	movb $0xE,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505641:
L_309605:
	movb $0xF,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505642:
L_309604:
	movb $0xC,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505643:
L_309603:
	movb $0xD,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505644:
L_309602:
	movb $0xA,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505645:
L_309601:
	movb $0xB,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505646:
L_309600:
	movb $0x8,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505647:
L_309599:
	movb $0x9,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505648:
L_309598:
	movb $0x6,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505649:
L_309597:
	movb $0x7,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505650:
L_309596:
	movb $0x4,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505651:
L_309595:
	movb $0x5,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505652:
L_309594:
	movb $0x2,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505653:
L_309593:
	movb $0x3,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505654:
L_309592:
	movb $0x0,0x51(%rbp)
	jmp L_309354
.p2align 0x4
L_505655:
L_309197:
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_309198:
	movq 0xB0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_0
.p2align 0x4
L_505656:
L_309191:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_309192:
	movq %r15,0x1C0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1D8(%rbp)
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2182
.p2align 0x4
L_505657:
L_309075:
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_309076:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je stackTopTempContentsOperand_0
L_309077:
	movq 0x0(%r15),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,0x0(%r9)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
stackTopTempContentsOperand_0:
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq %r13,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505658:
L_309057:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_309058:
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505659:
L_309020:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_309021:
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505660:
L_308249:
	movq %r14,0x138(%rbp)
	movq 0x120(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x118(%r13),%r11
	movq 0x110(%r13),%r14
	movq 0x108(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x100(%r13),%r15
	movq 0xF8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0xF0(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0xE8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0xE0(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0xD8(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0xD0(%r13),%r10
	movq %r10,0x50(%rbp)
	movq 0xC8(%r13),%r10
	movq %r10,0x58(%rbp)
	movq 0xC0(%r13),%r10
	movq %r10,0x60(%rbp)
	movq 0xB8(%r13),%r10
	movq %r10,0x68(%rbp)
	movq 0xB0(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0xA8(%r13),%r10
	movq %r10,0x78(%rbp)
	movq 0xA0(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x98(%r13),%r10
	movq %r10,0x88(%rbp)
	movq 0x90(%r13),%r10
	movq %r10,0x90(%rbp)
	movq 0x88(%r13),%r10
	movq %r10,0x98(%rbp)
	movq 0x78(%r13),%r10
	movq %r10,0xB8(%rbp)
	movq 0x70(%r13),%r10
	movq %r10,0xC0(%rbp)
	movq 0x68(%r13),%r10
	movq %r10,0xC8(%rbp)
	movq 0x60(%r13),%r10
	movq %r10,0xD0(%rbp)
	movq 0x58(%r13),%r10
	movq %r10,0xD8(%rbp)
	movq 0x50(%r13),%r10
	movq %r10,0xE0(%rbp)
	movq 0x48(%r13),%r10
	movq %r10,0xE8(%rbp)
	movq 0x40(%r13),%r10
	movq %r10,0xF0(%rbp)
	movq 0x38(%r13),%r10
	movq %r10,0xF8(%rbp)
	movq 0x30(%r13),%r10
	movq %r10,0x100(%rbp)
	movq 0x28(%r13),%r10
	movq %r10,0x108(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x110(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x118(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x120(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x128(%rbp)
	movq 0x0(%r13),%r10
	movq 0x80(%r13),%r13
	movq %r13,0xA8(%rbp)
	movq %r10,0x130(%rbp)
	movq %r11,%r13
L_308250:
	movq 0xB0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x11A2,%r10
	jne L_505673
L_309935:
	movq 0x10(%r11),%r10
	movq %r10,0x140(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x148(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x150(%rbp)
	movq %r10,%r11
	andq $0x3,%r11
	cmpq $0x1,%r11
	je L_309938
	cmpq $0x2,%r11
	je L_505668
L_309936:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x115F,%r11
	je L_309938
	cmpq $0x1160,%r11
	je L_309938
	cmpq $0x1161,%r11
	je L_309938
L_309937:
	movq 0x0(%r10),%r9
	movq 0x18(%r9),%r8
	movb 0x0(%r8),%r11b
	cmpb $0x2,%r11b
	je L_505664
	cmpb $0x3,%r11b
	je L_505663
	cmpb $0x4,%r11b
	je L_505662
	cmpb $0x5,%r11b
	je L_505661
L_309938:
	movq (globalObjptr+0x68F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505661:
L_310422:
	movq %r13,0x158(%rbp)
L_309940:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_309941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505662:
L_310421:
	movq %r15,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505663:
L_310420:
	movq %r14,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505664:
L_309939:
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505668:
L_310427:
	shrq $0x2,%r10
	movw %r10w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	cmpb $0x1,%r10b
	je L_505671
	cmpb $0x2,%r10b
	je L_505670
	cmpb $0x3,%r10b
	je L_505669
L_310428:
	movq %r13,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505669:
L_310431:
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505670:
L_310430:
	movq %r14,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505671:
L_310429:
	movq %r15,0x158(%rbp)
	jmp L_309940
.p2align 0x4
L_505673:
L_308251:
	movq 0x18(%rbp),%r14
	movq 0x178(%r14),%r13
	movq %r13,0x198(%rbp)
	movq 0x170(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x168(%r14),%r13
	movq %r13,0x188(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x160(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x158(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x150(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x148(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x140(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x138(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x130(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x128(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x120(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x118(%r14),%r15
	movb 0x5(%r14),%r13b
	movb %r13b,0xA9(%rbp)
	movq 0x110(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x108(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x100(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0xF8(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0xF0(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0xE8(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0xE0(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xD8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0xB8(%rbp)
	movb 0x4(%r14),%r13b
	movb %r13b,0xA8(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r14),%r14
	movq %r14,0x18(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq %r15,0x138(%rbp)
	movq %r13,%r15
	jmp x_1034
.p2align 0x4
L_505674:
L_310433:
	movq 0xA8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x21C6,%r15
	je L_505675
L_310435:
	movq 0x178(%r14),%r15
	movq 0x170(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x168(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x160(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x158(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x150(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x148(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x140(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x138(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x130(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x128(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x120(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x118(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x110(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x108(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x100(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0xF8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0xF0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0xE8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0xE0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xD8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x130(%rbp)
	movb 0x4(%r14),%r13b
	movq 0x68(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x180(%rbp)
	movl 0x0(%r14),%r11d
	movq 0x18(%r14),%r10
	movq %r10,0x188(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x190(%rbp)
	movq 0x8(%r14),%r10
	movb 0x5(%r14),%r9b
	movb %r9b,0xA8(%rbp)
	movb %r13b,0xA9(%rbp)
	movl %r11d,0xAC(%rbp)
	movq %r10,0x198(%rbp)
	movq $0x1,0x1A0(%rbp)
	jmp x_1034
.p2align 0x4
L_505675:
L_310434:
	movq 0x120(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x118(%r14),%r13
	movq 0x110(%r14),%r11
	movq 0x108(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x100(%r14),%r15
	movq 0xF8(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0xF0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0xE8(%r14),%r10
	movq %r10,0x38(%rbp)
	movq 0xE0(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0xD8(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0xD0(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0xC8(%r14),%r10
	movq %r10,0x58(%rbp)
	movq 0xC0(%r14),%r10
	movq %r10,0x60(%rbp)
	movq 0xB8(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0xB0(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0xA8(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0xA0(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x98(%r14),%r10
	movq %r10,0x88(%rbp)
	movq 0x90(%r14),%r10
	movq %r10,0x90(%rbp)
	movq 0x88(%r14),%r10
	movq %r10,0x98(%rbp)
	movq 0x78(%r14),%r10
	movq %r10,0xB8(%rbp)
	movq 0x70(%r14),%r10
	movq %r10,0xC0(%rbp)
	movq 0x68(%r14),%r10
	movq %r10,0xC8(%rbp)
	movq 0x60(%r14),%r10
	movq %r10,0xD0(%rbp)
	movq 0x58(%r14),%r10
	movq %r10,0xD8(%rbp)
	movq 0x50(%r14),%r10
	movq %r10,0xE0(%rbp)
	movq 0x48(%r14),%r10
	movq %r10,0xE8(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0xF0(%rbp)
	movq 0x38(%r14),%r10
	movq %r10,0xF8(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0x100(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0x108(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x110(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x118(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x120(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x128(%rbp)
	movq 0x0(%r14),%r10
	movq 0x80(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r10,0x130(%rbp)
	movq $0x1,0x138(%rbp)
	movq %r11,%r14
	jmp L_308250
.p2align 0x4
.long 0x4C57
L_310457:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310458
L_310482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310483
.p2align 0x4
.long 0x4C5D
L_310483:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310458:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_505677
L_310459:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x48(%rbp)
L_310460:
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505677:
L_310481:
	movq (globalObjptr+0xA058)(%rip),%r15
L_310473:
	movq $0x232F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_308210
.p2align 0x4
.long 0x4C5E
L_310487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310488
L_310525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310526
.p2align 0x4
.long 0x4C5C
L_310526:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310488:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_308084
L_310490:
	movl %r13d,0xD0(%rbp)
	movq $0x3B23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4C5E
L_310528:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310529
L_310530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310531
.p2align 0x4
.long 0x4C5C
L_310531:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310529:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C63
L_310628:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310629
L_310630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310631
.p2align 0x4
.long 0x4C55
L_310631:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310629:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11158)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C63
L_310633:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310634
L_310635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310636
.p2align 0x4
.long 0x4C55
L_310636:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310634:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C79
L_310593:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505684
L_310594:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
L_310595:
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505684:
L_310620:
	movq $0x1,%r15
L_310608:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C79
L_310622:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310623
L_310624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310625
.p2align 0x4
.long 0x4C6C
L_310625:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310623:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6D
L_310552:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505686
L_310553:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x60(%rbp)
L_310554:
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505686:
L_310585:
	movq $0x1,%r15
L_310567:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6D
L_310587:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310588
L_310589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310590
.p2align 0x4
.long 0x4C78
L_310590:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310588:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C68
L_310534:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C68
L_310546:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310547
L_310548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310549
.p2align 0x4
.long 0x4C5A
L_310549:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310547:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CA8
L_310963:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C93
L_310880:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C93
L_310797:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A77
L_308076:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_308077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A86
L_308240:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_308241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_0
.p2align 0x4
.long 0x4BA3
toString_389:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq $0x1,0x1F0(%rbp)
	movq %r15,0x1F8(%rbp)
	addq $0x1F0,%rbp
	leaq (rev_389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BA4
L_309644:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309645
L_309679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309680
.p2align 0x4
.long 0x4BAB
L_309680:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_309645:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_309646
.p2align 0x4
.long 0x4BA5
L_309647:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309648
L_309677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309678
.p2align 0x4
.long 0x4BAA
L_309678:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309648:
	movq 0x1B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505691
L_309649:
	movq 0x1D0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_505690
L_309650:
	movq %r13,0x1E0(%rbp)
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505690:
L_309671:
	movq %r13,0x1E0(%rbp)
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505691:
L_309676:
	movq (globalObjptr+0xDF58)(%rip),%r14
	xchgq %r14,%r15
L_309655:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11090)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11098)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA7
L_309926:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309927
L_309928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_309929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309929
.p2align 0x4
.long 0x4BA8
L_309929:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_309927:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA7
L_309931:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309932
L_309933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_309934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309934
.p2align 0x4
.long 0x4BA8
L_309934:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_309932:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BCB
toString_395:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (rev_395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BA5
toString_394:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (rev_394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BBE
L_309808:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505695
L_309809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	movq $0x1,0x1C8(%rbp)
L_309810:
	movq %r15,0x1D8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (toString_393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505695:
L_309835:
	movq $0x1,%r15
L_309823:
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBE
L_309837:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309838
L_309839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_309840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309840
.p2align 0x4
.long 0x4BC4
L_309840:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_309838:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BB2
L_309752:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x1D8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505697
L_309753:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1D8(%rbp)
	movq $0x1,0x1F8(%rbp)
L_309754:
	movq %r15,0x208(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x208,%rbp
	leaq (toString_392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_505697:
L_309800:
	movq $0x1,%r15
L_309767:
	movq %r15,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_309768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BB2
L_309802:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309803
L_309804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_309805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309805
.p2align 0x4
.long 0x4BBD
L_309805:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_309803:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_309752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAF
toString_391:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (rev_391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BA7
L_309738:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309739
L_309740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_309741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309741
.p2align 0x4
.long 0x4BA8
L_309741:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_309739:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAF
toString_390:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (rev_390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BA7
L_309710:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309711
L_309712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_309713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309713
.p2align 0x4
.long 0x4BA8
L_309713:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_309711:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10C28)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A88
L_308255:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x1F0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1F8(%rbp)
	movq %r14,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_308256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BA0
L_309613:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14DF,%r13
	je L_505701
L_309619:
	movq 0x28(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq %r15,0x1B0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2183
.p2align 0x4
L_505701:
L_309614:
	movq 0x30(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq %r15,0x1B0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2184
.p2align 0x4
.long 0x4B81
L_309355:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_505704
L_309356:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309357:
	incl %ecx
	jo L_308060
L_309358:
	cmpq $0x1,%r15
	je L_505702
L_309359:
	movq 0x8(%r15),%r15
	jmp L_309357
.p2align 0x4
L_505702:
L_309360:
	movl %ecx,0x54(%rbp)
L_309361:
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505704:
L_309591:
	movl $0x0,0x54(%rbp)
	jmp L_309361
.p2align 0x4
.long 0x4B6E
L_309199:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_505712
	cmpq $0x2,%r14
	je L_505708
L_309200:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115F,%r14
	je L_505707
	cmpq $0x1160,%r14
	je L_505706
	cmpq $0x1161,%r14
	je L_505705
L_309201:
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movb 0x0(%r11),%r14b
	movb %r14b,0x20(%rbp)
L_309202:
	movq 0x58(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505705:
L_309342:
	movb $0x2,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505706:
L_309341:
	movb $0x2,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505707:
L_309340:
	movb $0x2,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505708:
L_309346:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%r15b
	cmpb $0x1,%r15b
	je L_505711
	cmpb $0x2,%r15b
	je L_505710
	cmpb $0x3,%r15b
	je L_505709
L_309347:
	movb $0x5,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505709:
L_309350:
	movb $0x2,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505710:
L_309349:
	movb $0x3,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505711:
L_309348:
	movb $0x4,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505712:
L_309343:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_505713
L_309344:
	movb $0x1,0x20(%rbp)
	jmp L_309202
.p2align 0x4
L_505713:
L_309345:
	movb $0x0,0x20(%rbp)
	jmp L_309202
.p2align 0x4
.long 0x4B6D
L_309193:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309194
L_309195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309196
.p2align 0x4
.long 0x4B2A
L_309196:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309194:
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r15
L_309037:
	cmpq $0x1,%r15
	je L_505725
L_309038:
L_309039:
	cmpq $0x1,%r14
	je L_505724
L_309040:
L_309041:
	xchgq %r14,%r15
L_308525:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq %r13,%r14
L_308526:
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_505723
L_308527:
	movq %r14,0x0(%rbp)
L_308528:
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_308529:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505722
.p2align 0x4,,0x7
L_308530:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_505721
L_308531:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_308532:
	cmpq $0x1,%r15
	je L_505714
L_308533:
	movq %r13,0x0(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
L_308534:
	jmp L_308529
.p2align 0x4
L_505714:
L_308535:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_308536:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505720
.p2align 0x4,,0x7
L_308537:
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_505715
L_308538:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x8(%rbp),%r14
	jmp L_308532
.p2align 0x4
L_505715:
L_308539:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_505719
L_308540:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_308541:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505718
.p2align 0x4,,0x7
L_308542:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505716
L_308543:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_308541
.p2align 0x4
L_505716:
L_308545:
	cmpq $0x1,%r15
	je L_308548
L_308546:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_505718:
L_308549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_308550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308550
.p2align 0x4
.long 0x45C
L_308550:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_308542
.p2align 0x4
L_505719:
L_308551:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308545
.p2align 0x4
L_505720:
L_308552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_308553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308553
.p2align 0x4
.long 0x460
L_308553:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_308537
.p2align 0x4
L_505721:
L_308554:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_308541
.p2align 0x4
L_505722:
L_308555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_308556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308556
.p2align 0x4
.long 0x45C
L_308556:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_308530
.p2align 0x4
L_505723:
L_308557:
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp L_308536
.p2align 0x4
L_505724:
L_309042:
	movq 0x1A0(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_308526
.p2align 0x4
L_505725:
L_309043:
	movq 0x1A0(%rbp),%r15
	jmp L_308526
.p2align 0x4
.long 0x4B39
L_309078:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B30
L_309059:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B1F
memloc_104:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309022
L_309055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309056
.p2align 0x4
.long 0x4B2F
L_309056:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309022:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4BCF
L_309941:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x170(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_309942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C58
toString_396:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C5F
L_310491:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4C63
comment_18:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310509
L_310510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310511
.p2align 0x4
.long 0x4C55
L_310511:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310509:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	jmp L_308208
.p2align 0x4
.long 0x4C6D
toString_399:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C7B
L_310609:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310610
L_310611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310612
.p2align 0x4
.long 0x4C5D
L_310612:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310610:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11150)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6E
toString_398:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C70
L_310568:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4C58
L_310535:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CA9
L_310964:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310965
L_311011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311012
.p2align 0x4
.long 0x4CB0
L_311012:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310965:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_310966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C93
L_310881:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310882
L_310958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310959
.p2align 0x4
.long 0x4CA6
L_310959:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310882:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_310883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C93
L_310798:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310799
L_310875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310876
.p2align 0x4
.long 0x4CA6
L_310876:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310799:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_310800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A78
L_308077:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308078
L_310722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_310723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310723
.p2align 0x4
.long 0x4C8C
L_310723:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_308078:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (immediate_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A86
L_308241:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_308242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_0
.p2align 0x4
.long 0x4BA3
rev_389:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	cmpq $0x1,%r15
	je L_505736
L_309628:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1E8(%rbp)
	movq %r14,0x1F0(%rbp)
	movq $0x1,0x1F8(%rbp)
.p2align 0x4,,0x7
L_309629:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505735
.p2align 0x4,,0x7
L_309630:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1F8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1E8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505734
L_309631:
	movq %r15,0x1F8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1E8(%rbp)
	movq %r15,0x1F0(%rbp)
	jmp L_309629
.p2align 0x4
L_505734:
L_309633:
	movq %r15,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_309634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505735:
L_309686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_309687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309687
.p2align 0x4
.long 0x4BAE
L_309687:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	jmp L_309630
.p2align 0x4
L_505736:
L_309688:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309633
.p2align 0x4
.long 0x4BA6
L_309651:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309652
L_309669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309670
.p2align 0x4
.long 0x4BA9
L_309670:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309652:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA6
L_309672:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309673
L_309674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309675
.p2align 0x4
.long 0x4BA9
L_309675:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309673:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA7
comment_17:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309656
L_309665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_309666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309666
.p2align 0x4
.long 0x4BA8
L_309666:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_309656:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x119E,%r13
	je L_505745
	cmpq $0x119F,%r13
	je L_505744
	cmpq $0x11A0,%r13
	je L_505743
	cmpq $0x11A1,%r13
	je L_505742
	cmpq $0x11A2,%r13
	je L_505741
	cmpq $0x11A3,%r13
	je L_505740
	cmpq $0x11A4,%r13
	je L_505739
L_309657:
	movq %r14,0xD0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	jmp L_308254
.p2align 0x4
L_505739:
L_309664:
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_309610
.p2align 0x4
L_505740:
L_309663:
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	jmp L_309352
.p2align 0x4
L_505741:
L_309662:
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	jmp L_309198
.p2align 0x4
L_505742:
L_309661:
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_309192
.p2align 0x4
L_505743:
L_309660:
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	jmp L_309076
.p2align 0x4
L_505744:
L_309659:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_309058
.p2align 0x4
L_505745:
L_309658:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_309021
.p2align 0x4
.long 0x4BCB
rev_395:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq $0x1,%r15
	je L_505749
L_309897:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1C8(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_309898:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505748
.p2align 0x4,,0x7
L_309899:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505747
L_309900:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	jmp L_309898
.p2align 0x4
L_505747:
L_309902:
	movq %r15,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505748:
L_309921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309922
.p2align 0x4
.long 0x4BAB
L_309922:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_309899
.p2align 0x4
L_505749:
L_309923:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309902
.p2align 0x4
.long 0x4BA5
rev_394:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq $0x1,%r15
	je L_505752
L_309842:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C8(%rbp)
	movq %r14,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
.p2align 0x4,,0x7
L_309843:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505751
.p2align 0x4,,0x7
L_309844:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505750
L_309845:
	movq %r15,0x1E0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C8(%rbp)
	movq %r15,0x1D8(%rbp)
	jmp L_309843
.p2align 0x4
L_505750:
L_309847:
	movq %r15,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505751:
L_309893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_309894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309894
.p2align 0x4
.long 0x4BAC
L_309894:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	jmp L_309844
.p2align 0x4
L_505752:
L_309895:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309847
.p2align 0x4
.long 0x4BBF
toString_393:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (rev_393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BC1
L_309824:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309825
L_309826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_309827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309827
.p2align 0x4
.long 0x4BC2
L_309827:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_309825:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BB3
toString_392:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq $0x1,0x208(%rbp)
	movq %r15,0x210(%rbp)
	addq $0x208,%rbp
	leaq (rev_392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BB5
L_309768:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1E8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_505754
L_309769:
	movq 0x1C8(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_309770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505754:
L_309788:
	movq 0x1C8(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_309789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4BAF
rev_391:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq $0x1,%r15
	je L_505757
L_309725:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C8(%rbp)
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_309726:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505756
.p2align 0x4,,0x7
L_309727:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505755
L_309728:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C8(%rbp)
	movq %r15,0x1D0(%rbp)
	jmp L_309726
.p2align 0x4
L_505755:
L_309730:
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505756:
L_309746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309747
.p2align 0x4
.long 0x4BAB
L_309747:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_309727
.p2align 0x4
L_505757:
L_309748:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309730
.p2align 0x4
.long 0x4BAF
rev_390:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq $0x1,%r15
	je L_505760
L_309697:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C8(%rbp)
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_309698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505759
.p2align 0x4,,0x7
L_309699:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505758
L_309700:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C8(%rbp)
	movq %r15,0x1D0(%rbp)
	jmp L_309698
.p2align 0x4
L_505758:
L_309702:
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505759:
L_309718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309719
.p2align 0x4
.long 0x4BAB
L_309719:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_309699
.p2align 0x4
L_505760:
L_309720:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309702
.p2align 0x4
.long 0x4A89
L_308256:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x1C0(%rbp)
	movl %r15d,0x208(%rbp)
	movq $0x3,0x210(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_308257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BA1
L_309615:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309616
L_309617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309618
.p2align 0x4
.long 0x4BA2
L_309618:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309616:
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_309037
.p2align 0x4
.long 0x4B82
L_309362:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_505764
L_309363:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309364:
	incl %ecx
	jo L_308060
L_309365:
	cmpq $0x1,%r15
	je L_505762
L_309366:
	movq 0x8(%r15),%r15
	jmp L_309364
.p2align 0x4
L_505762:
L_309367:
	movl %ecx,0x68(%rbp)
L_309368:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2181
.p2align 0x4
L_505764:
L_309590:
	movl $0x0,0x68(%rbp)
	jmp L_309368
.p2align 0x4
.long 0x4B6F
L_309203:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309204
L_309338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309339
.p2align 0x4
.long 0x4B80
L_309339:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309204:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_505765
L_309205:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x80(%rbp)
L_309206:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_505765:
L_309337:
	movq $0x1,%r15
L_309239:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_505778
L_309240:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_309241:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505777
.p2align 0x4,,0x7
L_309242:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_505774
L_309243:
L_309244:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_505766
L_309245:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_309241
.p2align 0x4
L_505766:
L_309246:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_309247:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505773
.p2align 0x4,,0x7
L_309248:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_505767
L_309249:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_309247
.p2align 0x4
L_505767:
L_309251:
	cmpq $0x1,%r15
	je L_505771
L_309252:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x78(%rbp)
	je L_505769
L_309253:
	movq %r14,%r15
L_309254:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r8
	movq %r8,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r8,0x10(%r14)
	movq 0x78(%rbp),%r8
	movq %r8,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r13
	shrq $0x1,%r13
	cmpq $0x21C4,%r13
	je L_505768
L_309291:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x28(%r8),%r15
	movq 0x20(%r8),%r9
	movq 0x18(%r8),%r10
	movq 0x10(%r8),%r11
	movq 0x8(%r8),%r13
	movq 0x0(%r8),%r14
L_309292:
	movq %r15,0x1C0(%rbp)
	movq %r9,0x1C8(%rbp)
	movq %r10,0x1D0(%rbp)
	movq %r11,0x1D8(%rbp)
	movq %r13,0x1E0(%rbp)
	movq %r14,0x1E8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2183
.p2align 0x4
L_505768:
L_309255:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x28(%r8),%r15
	movq 0x20(%r8),%r9
	movq 0x18(%r8),%r10
	movq 0x10(%r8),%r11
	movq 0x8(%r8),%r13
	movq 0x0(%r8),%r14
L_309256:
	movq %r15,0x1C8(%rbp)
	movq %r9,0x1D0(%rbp)
	movq %r10,0x1D8(%rbp)
	movq %r11,0x1E0(%rbp)
	movq %r13,0x1E8(%rbp)
	movq %r14,0x1F0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2184
.p2align 0x4
L_505769:
L_309297:
	movq %r14,%r15
L_309298:
	movq 0x1A8(%rbp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x21C4,%r14
	je L_505770
L_309300:
	movq %r15,0x20(%rbp)
	movq 0x28(%r8),%r15
	movq 0x20(%r8),%r9
	movq 0x18(%r8),%r10
	movq 0x10(%r8),%r11
	movq 0x8(%r8),%r13
	movq 0x0(%r8),%r14
	movq $0x1,0x28(%rbp)
	jmp L_309292
.p2align 0x4
L_505770:
L_309299:
	movq %r15,0x20(%rbp)
	movq 0x28(%r8),%r15
	movq 0x20(%r8),%r9
	movq 0x18(%r8),%r10
	movq 0x10(%r8),%r11
	movq 0x8(%r8),%r13
	movq 0x0(%r8),%r14
	movq $0x1,0x28(%rbp)
	jmp L_309256
.p2align 0x4
L_505771:
L_309301:
	cmpq $0x1,0x78(%rbp)
	je L_505772
L_309302:
	movq $0x1,%r15
	jmp L_309254
.p2align 0x4
L_505772:
L_309303:
	movq $0x1,%r15
	jmp L_309298
.p2align 0x4
L_505773:
L_309304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309305
.p2align 0x4
.long 0x4B79
L_309305:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_309248
.p2align 0x4
L_505774:
L_309306:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_505775
L_309307:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_309241
.p2align 0x4
L_505775:
L_309308:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_505776
L_309309:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_309247
.p2align 0x4
L_505776:
L_309310:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_309251
.p2align 0x4
L_505777:
L_309311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309312
.p2align 0x4
.long 0x4B79
L_309312:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_309242
.p2align 0x4
L_505778:
L_309313:
	movq $0x1,%r15
	jmp L_309251
.p2align 0x4
.long 0x4B3A
L_309079:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B31
L_309060:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B20
memloc_105:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309023
L_309053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309054
.p2align 0x4
.long 0x4B2E
L_309054:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309023:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4BD0
L_309942:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq $0x1,0x170(%rbp)
	movq 0x168(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_309943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C58
rev_396:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_505783
L_310461:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_310462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505782
.p2align 0x4,,0x7
L_310463:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_505781
L_310464:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_310462
.p2align 0x4
L_505781:
L_310466:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505782:
L_310478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310479
.p2align 0x4
.long 0x4C5C
L_310479:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_310463
.p2align 0x4
L_505783:
L_310480:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310466
.p2align 0x4
.long 0x4C5F
toString_397:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C6D
rev_399:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_505786
L_310596:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_310597:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505785
.p2align 0x4,,0x7
L_310598:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_505784
L_310599:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_310597
.p2align 0x4
L_505784:
L_310601:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505785:
L_310617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310618
.p2align 0x4
.long 0x4C67
L_310618:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_310598
.p2align 0x4
L_505786:
L_310619:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310601
.p2align 0x4
.long 0x4C6E
rev_398:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_505789
L_310555:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_310556:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505788
.p2align 0x4,,0x7
L_310557:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_505787
L_310558:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_310556
.p2align 0x4
L_505787:
L_310560:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505788:
L_310582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310583
.p2align 0x4
.long 0x4C77
L_310583:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_310557
.p2align 0x4
L_505789:
L_310584:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310560
.p2align 0x4
.long 0x4C71
L_310569:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4C69
L_310536:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CAA
L_310966:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310967
L_311009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311010
.p2align 0x4
.long 0x4CAF
L_311010:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310967:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505790
L_310968:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_505790:
L_311008:
	movq $0x1,%r14
	xchgq %r14,%r15
L_310974:
	movq 0x68(%rbp),%r13
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x8(%r13),%r9
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_310976
L_311003:
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_310976:
	movq $0x230F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505799
.p2align 0x4,,0x7
L_310978:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_505798
L_310979:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_310980:
	cmpq $0x1,%r14
	jne L_505797
L_310983:
	cmpq $0x1,%r15
	je L_505791
L_310984:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_310980
.p2align 0x4
L_505791:
L_310985:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310986
L_310998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310999
.p2align 0x4
.long 0x4C7D
L_310999:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310986:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_505795
L_310987:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505794
.p2align 0x4,,0x7
L_310989:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_505792
L_310990:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_310988
.p2align 0x4
L_505792:
L_310992:
	cmpq $0x1,%r15
	je L_505793
L_310993:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_308206
.p2align 0x4
L_505793:
L_310638:
	movq $0x1,0x10(%rbp)
	jmp L_308206
.p2align 0x4
L_505794:
L_310995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310996
.p2align 0x4
.long 0x4C7C
L_310996:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310989
.p2align 0x4
L_505795:
L_310997:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310992
.p2align 0x4
L_505797:
L_310981:
	movq %r14,0x18(%rbp)
L_310982:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_310977
.p2align 0x4
L_505798:
L_311000:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_310988
.p2align 0x4
L_505799:
L_311001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311002
.p2align 0x4
.long 0x4C7C
L_311002:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310978
.p2align 0x4
.long 0x4C93
L_310883:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310884
L_310956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310957
.p2align 0x4
.long 0x4CA6
L_310957:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310884:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x1C(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_310885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C93
L_310800:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310801
L_310873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310874
.p2align 0x4
.long 0x4CA6
L_310874:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310801:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x1C(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_310802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A79
immediate_64:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308079
L_310720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310721
.p2align 0x4
.long 0x4C8B
L_310721:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_308079:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_505816
L_308080:
L_308081:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0x50(%rbp)
L_308082:
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_308084
L_308085:
	testl %r13d,%r13d
	jz L_505804
L_308086:
	movq 0x98(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_308087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_505804:
L_310694:
	movq $0x1,%r15
L_308118:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	cmpq $0x1,0x50(%rbp)
	je L_505814
L_308119:
	movq %r14,0x48(%rbp)
L_308120:
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_308121:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505813
.p2align 0x4,,0x7
L_308122:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_505812
L_308123:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_308124:
	cmpq $0x1,%r15
	je L_505805
L_308125:
	movq %r13,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
L_308126:
	jmp L_308121
.p2align 0x4
L_505805:
L_308127:
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_308128:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505811
.p2align 0x4,,0x7
L_308129:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_505806
L_308130:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x50(%rbp),%r14
	jmp L_308124
.p2align 0x4
L_505806:
L_308131:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_505810
L_308132:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_308133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505809
.p2align 0x4,,0x7
L_308134:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_505807
L_308135:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_308133
.p2align 0x4
L_505807:
L_308137:
	cmpq $0x1,%r15
	je L_505808
L_308138:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
L_308139:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_505808:
L_310683:
	movq $0x1,0x48(%rbp)
	jmp L_308139
.p2align 0x4
L_505809:
L_310684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310685
.p2align 0x4
.long 0x4C87
L_310685:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308134
.p2align 0x4
L_505810:
L_310686:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308137
.p2align 0x4
L_505811:
L_310687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310688
.p2align 0x4
.long 0x4C88
L_310688:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308129
.p2align 0x4
L_505812:
L_310689:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_308133
.p2align 0x4
L_505813:
L_310690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310691
.p2align 0x4
.long 0x4C87
L_310691:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308122
.p2align 0x4
L_505814:
L_310692:
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_308128
.p2align 0x4
L_505816:
L_310719:
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	jmp L_308082
.p2align 0x4
.long 0x4A87
L_308242:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308243
L_310439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_310440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310440
.p2align 0x4
.long 0x4C52
L_310440:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_308243:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_505819
L_308244:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_308247
L_308245:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_308239
.p2align 0x4
L_505819:
L_310436:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_505820
L_310437:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_308239
.p2align 0x4
L_505820:
	xchgq %r14,%r15
	jmp L_308247
.p2align 0x4
.long 0x4BA3
L_309634:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309635
L_309684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_309685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309685
.p2align 0x4
.long 0x4BAD
L_309685:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_309635:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505822
L_309636:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	jmp L_309627
.p2align 0x4
L_505822:
L_309637:
	movq 0x1E0(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	jmp L_309638
.p2align 0x4
.long 0x4BA6
L_309653:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309654
L_309667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309668
.p2align 0x4
.long 0x4BA9
L_309668:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309654:
	movq 0x1B0(%rbp),%r15
	jmp L_309655
.p2align 0x4
.long 0x4BCB
L_309903:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1D8(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_505825
L_309904:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq %r13,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_309905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505825:
L_309916:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq %r13,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_309917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4BA5
L_309848:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309849
L_309891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309892
.p2align 0x4
.long 0x4BAA
L_309892:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309849:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBF
rev_393:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	cmpq $0x1,%r15
	je L_505829
L_309811:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1D0(%rbp)
	movq %r14,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
.p2align 0x4,,0x7
L_309812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505828
.p2align 0x4,,0x7
L_309813:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1D0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505827
L_309814:
	movq %r15,0x1E0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1D0(%rbp)
	movq %r15,0x1D8(%rbp)
	jmp L_309812
.p2align 0x4
L_505827:
L_309816:
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505828:
L_309832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_309833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309833
.p2align 0x4
.long 0x4BAC
L_309833:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	jmp L_309813
.p2align 0x4
L_505829:
L_309834:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309816
.p2align 0x4
.long 0x4BB3
rev_392:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x200(%rbp)
	cmpq $0x1,%r15
	je L_505832
L_309755:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x200(%rbp)
	movq %r14,0x208(%rbp)
	movq $0x1,0x210(%rbp)
.p2align 0x4,,0x7
L_309756:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505831
.p2align 0x4,,0x7
L_309757:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x208(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x210(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x200(%rbp),%r14
	cmpq $0x1,%r14
	je L_505830
L_309758:
	movq %r15,0x210(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x200(%rbp)
	movq %r15,0x208(%rbp)
	jmp L_309756
.p2align 0x4
L_505830:
L_309760:
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_309761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505831:
L_309797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_309798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309798
.p2align 0x4
.long 0x4BBC
L_309798:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
	jmp L_309757
.p2align 0x4
L_505832:
L_309799:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309760
.p2align 0x4
.long 0x4BB6
L_309770:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movl 0x1C0(%rbp),%r15d
	movl %r15d,0x200(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_309771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4BB6
L_309789:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309790
L_309791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_309792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309792
.p2align 0x4
.long 0x4BB9
L_309792:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_309790:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_309770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAF
L_309731:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309732
L_309744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309745
.p2align 0x4
.long 0x4BA9
L_309745:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309732:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505834
L_309733:
	movq %r15,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	jmp L_309724
.p2align 0x4
L_505834:
L_309734:
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4BAF
L_309703:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309704
L_309716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309717
.p2align 0x4
.long 0x4BA9
L_309717:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309704:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505836
L_309705:
	movq %r15,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	jmp L_309696
.p2align 0x4
L_505836:
L_309706:
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_309707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4A89
L_308257:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq %r15,0x208(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x210(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_308258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B83
L_309369:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2181
.p2align 0x4
.long 0x4B70
L_309207:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309208
L_309335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309336
.p2align 0x4
.long 0x4B7F
L_309336:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309208:
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_309209:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq %r13,0x1C0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
.long 0x4B75
L_309293:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309294
L_309295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309296
.p2align 0x4
.long 0x4B78
L_309296:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309294:
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
L_309259:
	movq $0x2551,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_309260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505850
.p2align 0x4,,0x7
L_309261:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505849
L_309262:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x18(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_309263:
	cmpq $0x1,%r14
	jne L_505848
L_309266:
	cmpq $0x1,%r15
	je L_505840
L_309267:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_309263
.p2align 0x4
L_505840:
L_309268:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309269
L_309284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309285
.p2align 0x4
.long 0x4B77
L_309285:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309269:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_505846
L_309270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_309271:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505845
.p2align 0x4,,0x7
L_309272:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505841
L_309273:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_309271
.p2align 0x4
L_505841:
L_309275:
	cmpq $0x1,%r15
	je L_505843
L_309276:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_505842
L_309277:
L_309278:
	movq %r13,%r15
	jmp L_308525
.p2align 0x4
L_505842:
L_309279:
	movq 0x1A0(%rbp),%r15
	xchgq %r13,%r14
	jmp L_308526
.p2align 0x4
L_505843:
L_309280:
	movq 0x68(%rbp),%r15
L_308560:
	cmpq $0x1,%r15
	je L_505844
L_308561:
L_308562:
	movq 0x1A0(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_308526
.p2align 0x4
L_505844:
L_308563:
	movq $0x1,%r14
	movq 0x1A0(%rbp),%r15
	jmp L_308526
.p2align 0x4
L_505845:
L_309281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309282
.p2align 0x4
.long 0x4B76
L_309282:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_309272
.p2align 0x4
L_505846:
L_309283:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_309275
.p2align 0x4
L_505848:
L_309264:
	movq %r14,0x20(%rbp)
L_309265:
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_309260
.p2align 0x4
L_505849:
L_309286:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_309271
.p2align 0x4
L_505850:
L_309287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309288
.p2align 0x4
.long 0x4B76
L_309288:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_309261
.p2align 0x4
.long 0x4B75
L_309257:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309258
L_309289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309290
.p2align 0x4
.long 0x4B78
L_309290:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309258:
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
	jmp L_309259
.p2align 0x4
.long 0x4B3B
L_309080:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309081
L_309188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309189
.p2align 0x4
.long 0x4B6A
L_309189:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309081:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B32
L_309061:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B21
memloc_106:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309024
L_309051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309052
.p2align 0x4
.long 0x4B2D
L_309052:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309024:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x98(%rbp),%r14
	cmpb $0x7,0x0(%r14)
	je L_505854
L_309025:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb $0x5,%r10b
	movzbl %r10b,%r9d
	movzbl %r15b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r10
	movq %r10,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl %r15b,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
L_309026:
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x59(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505854:
L_309050:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb $0x5,%r10b
	movzbl %r10b,%r9d
	movzbl %r15b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_309026
.p2align 0x4
.long 0x4BD1
L_309943:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_309944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C58
L_310467:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310468
L_310476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310477
.p2align 0x4
.long 0x4C5B
L_310477:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310468:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C5F
rev_397:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_505859
L_310492:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_310493:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505858
.p2align 0x4,,0x7
L_310494:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505857
L_310495:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_310493
.p2align 0x4
L_505857:
L_310497:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505858:
L_310522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310523
.p2align 0x4
.long 0x4C67
L_310523:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_310494
.p2align 0x4
L_505859:
L_310524:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310497
.p2align 0x4
.long 0x4C6D
L_310602:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310603
L_310615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310616
.p2align 0x4
.long 0x4C78
L_310616:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310603:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505860
L_310604:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_310595
.p2align 0x4
L_505860:
L_310605:
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4C6E
L_310561:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310562
L_310580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310581
.p2align 0x4
.long 0x4C67
L_310581:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310562:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_505862
L_310563:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_310554
.p2align 0x4
L_505862:
L_310564:
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4C72
L_310570:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310571
L_310576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310577
.p2align 0x4
.long 0x4C75
L_310577:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310571:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6A
L_310537:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310538
L_310543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310544
.p2align 0x4
.long 0x4C5B
L_310544:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310538:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CAB
L_310969:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310970
L_311006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311007
.p2align 0x4
.long 0x4CAE
L_311007:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310970:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C94
L_310885:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_310886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C94
L_310802:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_310803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A7A
L_308087:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_505884
L_308088:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_308089:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505883
.p2align 0x4,,0x7
L_308090:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_505867
L_308091:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_308089
.p2align 0x4
L_505867:
L_308092:
	movq %r14,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_308093:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505882
.p2align 0x4,,0x7
L_308094:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_505868
L_308095:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_308093
.p2align 0x4
L_505868:
L_308096:
	movq %r15,0x48(%rbp)
L_308097:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_505881
L_308098:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_308099:
	incl %ecx
	jo L_308060
L_308100:
	cmpq $0x1,%r15
	je L_505869
L_308101:
	movq 0x8(%r15),%r15
	jmp L_308099
.p2align 0x4
L_505869:
L_308102:
L_308103:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_505879
L_308104:
	cmpq $0x7FFFFFFF,%rdx
	ja L_310710
L_308105:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1615,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_308106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308106
.p2align 0x4
.long 0x4A7B
L_308106:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x60(%rbp)
L_308107:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3593:
	cmpq 0x58(%rbp),%r15
	jnl L_505871
L_310705:
	cmpq $0x1,%r14
	je L_310708
L_310706:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3593
.p2align 0x4
L_505871:
L_308108:
	movq 0x60(%rbp),%r15
	movq $0x190D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_308084
L_308110:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,%r13d
	jne L_308112
L_308113:
	cmpl $0x0,%r15d
	jl L_308112
L_308114:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_3594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505874
.p2align 0x4,,0x7
L_308115:
	movl 0x58(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_505872
L_310695:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r10
	movb 0x0(%r10),%r9b
	movq 0x8(%r10),%r8
	cmpb $0x2,%r9b
	je memloc_219
	cmpb $0x3,%r9b
	je memloc_218
	cmpb $0x4,%r9b
	je memloc_217
	cmpb $0x5,%r9b
	je memloc_216
memloc_114:
	movl %r14d,0x58(%rbp)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %r9b,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	jmp loop_3594
.p2align 0x4
memloc_216:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
memloc_115:
	movl %ecx,0x58(%rbp)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3594
.p2align 0x4
memloc_217:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_115
.p2align 0x4
memloc_218:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_115
.p2align 0x4
memloc_219:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp memloc_115
.p2align 0x4
L_505872:
L_308116:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_310694
L_308117:
	movq $0x236D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r13,%r15
	jmp L_308118
.p2align 0x4
L_505874:
L_310702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310703
.p2align 0x4
.long 0x4C89
L_310703:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_308115
.p2align 0x4
L_505879:
L_310711:
	movq (globalObjptr+0x68F0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_308107
.p2align 0x4
L_505881:
L_310712:
	xorl %ecx,%ecx
	jmp L_308103
.p2align 0x4
L_505882:
L_310713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310714
.p2align 0x4
.long 0x4C8A
L_310714:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_308094
.p2align 0x4
L_505883:
L_310715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310716
.p2align 0x4
.long 0x4C8A
L_310716:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_308090
.p2align 0x4
L_505884:
L_310717:
	movq $0x1,0x48(%rbp)
	jmp L_308097
.p2align 0x4
.long 0x4A7C
L_308140:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BCC
L_309905:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1C8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_505885
L_309906:
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505885:
L_309911:
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4BCC
L_309917:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309918
L_309919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309920
.p2align 0x4
.long 0x4BCE
L_309920:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_309918:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_309905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA5
L_309850:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x1B8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505887
L_309851:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B8(%rbp)
	movq $0x1,0x1D8(%rbp)
L_309852:
	movq 0x0(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1F8(%rbp)
	addq $0x1F0,%rbp
	leaq (L_309853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_505887:
L_309890:
	movq $0x1,%r15
L_309865:
	movq %r15,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBF
L_309817:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309818
L_309830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309831
.p2align 0x4
.long 0x4BAA
L_309831:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309818:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_505888
L_309819:
	movq %r15,0x1C8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	jmp L_309810
.p2align 0x4
L_505888:
L_309820:
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4BB3
L_309761:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x200(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309762
L_309795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_309796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309796
.p2align 0x4
.long 0x4BBB
L_309796:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_309762:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x200(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1F8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1D8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505890
L_309763:
	movq %r15,0x1F8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1D8(%rbp)
	jmp L_309754
.p2align 0x4
L_505890:
L_309764:
	movq 0x1F8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_309765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4BB7
L_309771:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309772
L_309786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_309787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309787
.p2align 0x4
.long 0x4BB9
L_309787:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_309772:
	cmpq $0x1,0x1E0(%rbp)
	je L_505893
L_309773:
	movq 0x1E8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_505892
L_309774:
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505892:
L_309780:
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505893:
L_309785:
	movq (globalObjptr+0xA058)(%rip),%r15
L_309777:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BB0
L_309735:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309736
L_309742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309743
.p2align 0x4
.long 0x4BB1
L_309743:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309736:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_309737
.p2align 0x4
.long 0x4BB0
L_309707:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309708
L_309714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_309715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309715
.p2align 0x4
.long 0x4BB1
L_309715:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_309708:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_309709
.p2align 0x4
.long 0x4A89
L_308258:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308259
L_309018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_309019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309019
.p2align 0x4
.long 0x4B1E
L_309019:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_308259:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x208(%rbp)
	addq $0x10,%r12
	movq 0x1E0(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x208,%rbp
	leaq (L_308260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B84
L_309370:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309371
L_309588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309589
.p2align 0x4
.long 0x4B9F
L_309589:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309371:
	cmpq $0x1,0x70(%rbp)
	je L_505899
L_309372:
	cmpq $0x1,0x78(%rbp)
	je fall_truee_2
x_1035:
	movq 0x8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
fall_truee_2:
fall_truee_0:
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_309460:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq %r13,0x1C0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
L_505899:
L_309586:
	movq 0x78(%rbp),%r15
	andq $0x3,%r15
	jnz x_1035
fall_falsee_0:
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_309404:
	movl %r14d,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq %r13,0x1C0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
.long 0x4B71
L_309210:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309211
L_309333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309334
.p2align 0x4
.long 0x4B7E
L_309334:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309211:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x28,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (immediate_73+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B3C
L_309082:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B33
L_309062:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309063
L_309073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309074
.p2align 0x4
.long 0x4B38
L_309074:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309063:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B22
L_309027:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BD2
L_309944:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_309945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C59
L_310469:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310470
L_310474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310475
.p2align 0x4
.long 0x4C5A
L_310475:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310470:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_505904
L_310471:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_310460
.p2align 0x4
L_505904:
L_310472:
	movq 0x48(%rbp),%r15
	jmp L_310473
.p2align 0x4
.long 0x4C5F
L_310498:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310499
L_310520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310521
.p2align 0x4
.long 0x4C66
L_310521:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310499:
	movq 0x40(%rbp),%r15
	movq 0x28(%r15),%r14
	cmpq $0x1,%r14
	je L_505907
L_310500:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_505906
L_310501:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%r13d
	movl %r13d,0x40(%rbp)
	movq %r14,0x50(%rbp)
L_310502:
	movl %ecx,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_505906:
L_310516:
	movq (globalObjptr+0xA058)(%rip),%r13
	xchgq %r13,%r15
L_310508:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11128)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505907:
L_310517:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_505908
L_310518:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq (globalObjptr+0xE368)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_310502
.p2align 0x4
L_505908:
L_310519:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq (globalObjptr+0xE368)(%rip),%r14
	xchgq %r13,%r15
	jmp L_310508
.p2align 0x4
.long 0x4C7A
L_310606:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310607
L_310613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310614
.p2align 0x4
.long 0x4C74
L_310614:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310607:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_310608
.p2align 0x4
.long 0x4C6F
L_310565:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310566
L_310578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310579
.p2align 0x4
.long 0x4C76
L_310579:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310566:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_310567
.p2align 0x4
.long 0x4C73
L_310572:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310573
L_310574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310575
.p2align 0x4
.long 0x4C74
L_310575:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310573:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11140)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11148)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6B
L_310539:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310540
L_310541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310542
.p2align 0x4
.long 0x4C6C
L_310542:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310540:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11130)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11138)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CAB
L_310971:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C95
L_310886:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C95
L_310803:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A7C
L_308141:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BCD
L_309907:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309908
L_309909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_309910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309910
.p2align 0x4
.long 0x4BC4
L_309910:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_309908:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110F0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BCD
L_309912:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309913
L_309914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_309915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309915
.p2align 0x4
.long 0x4BC4
L_309915:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_309913:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_309907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BA3
L_309853:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_505916
L_309854:
	movq %r14,0x200(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_309855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505916:
L_309885:
	movq %r14,0x200(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_309886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4BC7
L_309866:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq %r15,0x1E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4BC0
L_309821:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309822
L_309828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309829
.p2align 0x4
.long 0x4BC3
L_309829:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309822:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_309823
.p2align 0x4
.long 0x4BB4
L_309765:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309766
L_309793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_309794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309794
.p2align 0x4
.long 0x4BBA
L_309794:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_309766:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x200(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_309767
.p2align 0x4
.long 0x4BB8
L_309775:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309776
L_309778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309779
.p2align 0x4
.long 0x4BAA
L_309779:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309776:
	movq 0x1C0(%rbp),%r15
	jmp L_309777
.p2align 0x4
.long 0x4BB8
L_309781:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309782
L_309783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_309784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309784
.p2align 0x4
.long 0x4BAA
L_309784:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_309782:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_309775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A89
L_308260:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x1D8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x200(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x208(%rbp)
	movb 0xAB(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movq %r15,0x220(%rbp)
	movq %r13,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B85
L_309373:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
.long 0x4B94
L_309461:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309462
L_309513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309514
.p2align 0x4
.long 0x4B93
L_309514:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309462:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x54(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x22E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl 0x51(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B8B
L_309405:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309406
L_309457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309458
.p2align 0x4
.long 0x4B93
L_309458:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309406:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x54(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x22E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B72
immediate_73:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309212
L_309331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309332
.p2align 0x4
.long 0x4B7D
L_309332:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309212:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0xB,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B3D
L_309083:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B34
L_309064:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B23
L_309028:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BD3
L_309945:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_309946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C60
L_310503:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_310504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CAC
L_310972:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310973
L_311004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_311005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311005
.p2align 0x4
.long 0x4CAD
L_311005:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310973:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_310974
.p2align 0x4
.long 0x4C96
L_310887:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310888
L_310954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310955
.p2align 0x4
.long 0x4CA5
L_310955:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310888:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_310889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C96
L_310804:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310805
L_310871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310872
.p2align 0x4
.long 0x4CA5
L_310872:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310805:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_310806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A7C
L_308142:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308143
L_310681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310682
.p2align 0x4
.long 0x4C86
L_310682:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308143:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_308144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BC5
L_309855:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309856
L_309883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_309884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309884
.p2align 0x4
.long 0x4BAD
L_309884:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_309856:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_309857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC5
L_309886:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309887
L_309888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_309889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309889
.p2align 0x4
.long 0x4BAD
L_309889:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_309887:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_309855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC8
L_309867:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_505930
L_309868:
	movq %r14,0x1D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_505930:
L_309874:
	movq %r14,0x1D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4A8A
L_308261:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movb 0x1D0(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movb 0xAB(%rbp),%r14b
	movb %r14b,0x219(%rbp)
	movq $0x1,0x220(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x230(%rbp)
	movq $0x1,0x238(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x218,%rbp
	leaq (memloc_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B86
L_309374:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r13),%r14
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_309383
L_309375:
	cmpq $0x1,%r14
	je L_309383
L_309377:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_505940
L_309379:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
L_309380:
	cmpq $0x1,%r14
	je L_505936
L_309381:
	movq 0x8(%r14),%r13
	cmpl %ecx,0x0(%r14)
	jne L_505935
L_309566:
	cmpq $0x1,%r15
	je L_505931
L_309567:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_309380
.p2align 0x4
L_505931:
L_309568:
	cmpq $0x1,%r13
	je L_505934
L_309569:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309570:
	incl %ecx
	jo L_308060
L_309571:
	cmpq $0x1,%r15
	je L_505932
L_309572:
	movq 0x8(%r15),%r15
	jmp L_309570
.p2align 0x4
L_505932:
L_309573:
L_309574:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
L_309384:
	movq 0x8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
L_505934:
L_309575:
	xorl %ecx,%ecx
	jmp L_309574
.p2align 0x4
L_505935:
L_309383:
	movq $0x0,0x70(%rbp)
	jmp L_309384
.p2align 0x4
L_505936:
L_309576:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309577:
	incl %ecx
	jo L_308060
L_309578:
	cmpq $0x1,%r15
	je L_505937
L_309579:
	movq 0x8(%r15),%r15
	jmp L_309577
.p2align 0x4
L_505937:
L_309580:
	negl %ecx
	jo L_308060
L_309581:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
	jmp L_309384
.p2align 0x4
L_505940:
L_309378:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
.long 0x4B95
L_309463:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309464
L_309511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309512
.p2align 0x4
.long 0x4B9A
L_309512:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309464:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_309471
L_309465:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309466:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_309472
L_309467:
	cmpq $0x1,%r14
	je L_505943
L_309468:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309466
.p2align 0x4
L_505943:
L_309469:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309471
L_309507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309508
.p2align 0x4
.long 0x4B9A
L_309508:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309471:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
L_309472:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B8C
L_309407:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309408
L_309455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309456
.p2align 0x4
.long 0x4B92
L_309456:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309408:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_309415
L_309409:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309410:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505950
L_309411:
	cmpq $0x1,%r14
	je L_505948
L_309412:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309410
.p2align 0x4
L_505948:
L_309413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309415
L_309451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309452
.p2align 0x4
.long 0x4B92
L_309452:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309415:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
L_309416:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505950:
L_309453:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_309416
.p2align 0x4
.long 0x4B73
L_309213:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309214
L_309329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309330
.p2align 0x4
.long 0x4B7B
L_309330:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309214:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_309221
L_309215:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309216:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505955
L_309217:
	cmpq $0x1,%r14
	je L_505953
L_309218:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309216
.p2align 0x4
L_505953:
L_309219:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309221
L_309325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309326
.p2align 0x4
.long 0x4B7B
L_309326:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309221:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
L_309222:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_505955:
L_309327:
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_309222
.p2align 0x4
.long 0x4B3E
L_309084:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq %r13,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B35
L_309065:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0x39(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B24
L_309029:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BD4
L_309946:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309947
L_310418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_310419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310419
.p2align 0x4
.long 0x4C51
L_310419:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_309947:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x180(%rbp)
	movq %r14,0x190(%rbp)
	movq %r14,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_309948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4C61
L_310504:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310505
L_310514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310515
.p2align 0x4
.long 0x4C65
L_310515:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310505:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_310506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C97
L_310889:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310890
L_310952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310953
.p2align 0x4
.long 0x4CA4
L_310953:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310890:
	movq $0x2325,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2321,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505960
L_310891:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_505960:
L_310951:
	movq $0x1,0x10(%rbp)
L_310897:
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (memloc_119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4C97
L_310806:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310807
L_310869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310870
.p2align 0x4
.long 0x4CA4
L_310870:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310807:
	movq $0x2325,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2321,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_505962
L_310808:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_505962:
L_310868:
	movq $0x1,0x10(%rbp)
L_310814:
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (memloc_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4A7C
L_308144:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308145
L_310679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310680
.p2align 0x4
.long 0x4C86
L_310680:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308145:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x14(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_308146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BC6
L_309857:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309858
L_309881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_309882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309882
.p2align 0x4
.long 0x4BAC
L_309882:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_309858:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B8(%rbp),%r14
	cmpq $0x1,%r14
	je L_505965
L_309859:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B8(%rbp)
	jmp L_309852
.p2align 0x4
L_505965:
L_309860:
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_309861:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505967
.p2align 0x4,,0x7
L_309862:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B8(%rbp),%r14
	cmpq $0x1,%r14
	je L_309865
L_309863:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	jmp L_309861
.p2align 0x4
L_505967:
L_309879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_309880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309880
.p2align 0x4
.long 0x4BAB
L_309880:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_309862
.p2align 0x4
.long 0x4BC9
L_309869:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309870
L_309872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_309873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309873
.p2align 0x4
.long 0x4BCA
L_309873:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_309870:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC9
L_309875:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309876
L_309877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_309878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309878
.p2align 0x4
.long 0x4BCA
L_309878:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_309876:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_309869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A8B
memloc_97:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308262
L_309016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_309017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309017
.p2align 0x4
.long 0x4B1D
L_309017:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308262:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1C0(%rbp)
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_0
.p2align 0x4
.long 0x4B87
L_309385:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
.long 0x4B96
L_309473:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309474
L_309505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309506
.p2align 0x4
.long 0x4B98
L_309506:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309474:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_309481
L_309475:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309476:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505975
L_309477:
	cmpq $0x1,%r14
	je L_505972
L_309478:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309476
.p2align 0x4
L_505972:
L_309479:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309481
L_309498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309499
.p2align 0x4
.long 0x4B98
L_309499:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309481:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_309482:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C4,%r14
	je L_505973
L_309497:
	movq 0x28(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2183
.p2align 0x4
L_505973:
L_309483:
	movq 0x28(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2184
.p2align 0x4
L_505975:
L_309500:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309501
L_309502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309503
.p2align 0x4
.long 0x4B99
L_309503:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309501:
	movq 0x18(%rbp),%r15
	jmp L_309482
.p2align 0x4
.long 0x4B8D
L_309417:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309418
L_309449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309450
.p2align 0x4
.long 0x4B90
L_309450:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309418:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_309425
L_309419:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309420:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_505982
L_309421:
	cmpq $0x1,%r14
	je L_505979
L_309422:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309420
.p2align 0x4
L_505979:
L_309423:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309425
L_309442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309443
.p2align 0x4
.long 0x4B90
L_309443:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309425:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_309426:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C4,%r14
	je L_505980
L_309441:
	movq 0x28(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2183
.p2align 0x4
L_505980:
L_309427:
	movq 0x28(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2184
.p2align 0x4
L_505982:
L_309444:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309445
L_309446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309447
.p2align 0x4
.long 0x4B91
L_309447:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309445:
	movq 0x20(%rbp),%r15
	jmp L_309426
.p2align 0x4
.long 0x4B74
L_309223:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309224
L_309323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309324
.p2align 0x4
.long 0x4B7B
L_309324:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309224:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_309231
L_309225:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309226:
	movq 0x98(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_505991
L_309227:
	cmpq $0x1,%r14
	je L_505986
L_309228:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309226
.p2align 0x4
L_505986:
L_309229:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309231
L_309316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309317
.p2align 0x4
.long 0x4B7B
L_309317:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309231:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_309232:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_505987
L_309233:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_309206
.p2align 0x4
L_505987:
L_309234:
	movq %r13,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_309235:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_505989
.p2align 0x4,,0x7
L_309236:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_309239
L_309237:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_309235
.p2align 0x4
L_505989:
L_309314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309315
.p2align 0x4
.long 0x4B7A
L_309315:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_309236
.p2align 0x4
L_505991:
L_309318:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309319
L_309320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309321
.p2align 0x4
.long 0x4B7C
L_309321:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309319:
	movq 0x88(%rbp),%r15
	jmp L_309232
.p2align 0x4
.long 0x4B3F
L_309085:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B36
memloc_108:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309066
L_309071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309072
.p2align 0x4
.long 0x4B37
L_309072:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309066:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2182
.p2align 0x4
.long 0x4B25
L_309030:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309031
L_309048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309049
.p2align 0x4
.long 0x4B2C
L_309049:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309031:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BD5
L_309948:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movl 0x190(%rbp),%r15d
	movl %r15d,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309949
L_310416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_310417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310417
.p2align 0x4
.long 0x4C50
L_310417:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_309949:
	movl 0x188(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_505997
L_309950:
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_505997:
L_309954:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x188(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_309955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4C62
L_310506:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310507
L_310512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_310513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310513
.p2align 0x4
.long 0x4C64
L_310513:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_310507:
	movq 0x40(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_310508
.p2align 0x4
.long 0x4C98
L_310892:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310893
L_310949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310950
.p2align 0x4
.long 0x4CA3
L_310950:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310893:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C9A
memloc_119:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310898
L_310945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310946
.p2align 0x4
.long 0x4CA1
L_310946:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310898:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x18(%rbp),%r15d
	negl %r15d
	jo L_308060
L_310899:
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x88(%rbp)
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C98
L_310809:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310810
L_310866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310867
.p2align 0x4
.long 0x4CA3
L_310867:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310810:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C9A
memloc_118:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310815
L_310862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310863
.p2align 0x4
.long 0x4CA1
L_310863:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310815:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x18(%rbp),%r15d
	negl %r15d
	jo L_308060
L_310816:
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x88(%rbp)
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A7D
L_308146:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_308147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BC9
L_309871:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (comment_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4A8C
L_308263:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308264
L_309014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_309015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309015
.p2align 0x4
.long 0x4B1C
L_309015:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308264:
	cmpq $0x1,0x190(%rbp)
	je L_506028
L_308265:
	movq 0xC8(%rbp),%r15
	movq $0x1,0x20(%rbp)
L_308266:
	movq 0xE0(%rbp),%r13
	movb 0x0(%r13),%r14b
	cmpb $0x3,%r14b
	je L_309007
	cmpb $0x9,%r14b
	je L_506025
L_308267:
	cmpq $0x1,%r15
	je L_506024
L_308268:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r15
	movl $0x0,0x1D4(%rbp)
	movq (globalObjptr+0x6998)(%rip),%r14
	movq %r14,0x1D8(%rbp)
	movq (globalObjptr+0x6948)(%rip),%r14
	movq %r14,0x210(%rbp)
	movl $0x0,0x218(%rbp)
	movq $0x1,0x220(%rbp)
	movq $0x1,0x228(%rbp)
	movq $0x1,0x230(%rbp)
L_308269:
	movb 0x0(%r15),%r14b
	movb %r14b,0x1D1(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x238(%rbp)
	cmpb $0x0,%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x21C(%rbp)
	je L_308935
L_308270:
	cmpb $0x1,%r14b
	je L_506015
L_308271:
	cmpb $0x5,%r14b
	je L_308278
L_308272:
	cmpb $0x4,%r14b
	je L_308278
L_308273:
	cmpb $0x3,%r14b
	je L_308278
L_308274:
	cmpb $0x2,%r14b
	je L_506006
L_308276:
	movq (globalObjptr+0x6918)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506006:
L_308278:
	movq 0x210(%rbp),%r14
	cmpq $0x1,%r14
	je L_506011
L_308279:
	movq 0x8(%r14),%r13
	movq %r13,0x240(%rbp)
	movw 0x0(%r14),%r11w
	movw %r11w,0x1D2(%rbp)
	cmpq $0x1,%r13
	je L_506010
L_308280:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_308281:
	incl %ecx
	movl %ecx,0x210(%rbp)
	jo L_308060
L_308282:
	cmpq $0x1,%r15
	je L_506007
L_308283:
	movq 0x8(%r15),%r15
	jmp L_308281
.p2align 0x4
L_506007:
L_308284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308286
L_308903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_308904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308904
.p2align 0x4
.long 0x4B0D
L_308904:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_308286:
	movq 0x130(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x248(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x250(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x214(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x258(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	addq $0x268,%rbp
	leaq (L_308287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506010:
L_308905:
	movl $0x0,0x210(%rbp)
	jmp L_308286
.p2align 0x4
L_506011:
L_308906:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x240(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x248(%rbp)
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x250(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x258(%rbp)
	movq %r13,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_308907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506015:
L_308935:
	movq 0x1D8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506022
L_308936:
	movq 0x8(%r14),%r13
	movq %r13,0x240(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0x248(%rbp)
	cmpq $0x1,%r13
	je L_506021
L_308937:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_308938:
	incl %ecx
	movl %ecx,0x1D8(%rbp)
	jo L_308060
L_308939:
	cmpq $0x1,%r15
	je L_506016
L_308940:
	movq 0x8(%r15),%r15
	jmp L_308938
.p2align 0x4
L_506016:
L_308941:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308943
L_308985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_308986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308986
.p2align 0x4
.long 0x4B1B
L_308986:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_308943:
	movb 0x1D1(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_506018
	cmpb $0x1,%r15b
	je L_506017
L_308944:
	movq (globalObjptr+0x69C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506017:
L_308975:
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x258(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_308976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506018:
L_308945:
	movq $0x22B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x258(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_308946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506021:
L_308987:
	movl $0x0,0x1D8(%rbp)
	jmp L_308943
.p2align 0x4
L_506022:
L_308988:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x240(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x248(%rbp)
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x250(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x258(%rbp)
	movq %r13,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_308989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506024:
L_309005:
	movl $0x0,0x80(%rbp)
	movl $0x0,0x84(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq $0x1,0xF8(%rbp)
L_308310:
	movl $0x10,0x218(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x21C(%rbp)
	addq $0x218,%rbp
	leaq (L_308311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
L_506025:
L_309007:
	cmpq $0x1,%r15
	je L_506026
L_309008:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r15
	movl $0x1,0x1D4(%rbp)
	movq (globalObjptr+0x69B8)(%rip),%r14
	movq %r14,0x1D8(%rbp)
	movq (globalObjptr+0x6958)(%rip),%r14
	movq %r14,0x210(%rbp)
	movl $0x0,0x218(%rbp)
	movq $0x1,0x220(%rbp)
	movq $0x1,0x228(%rbp)
	movq $0x1,0x230(%rbp)
	jmp L_308269
.p2align 0x4
L_506026:
L_309009:
	movl $0x1,0x80(%rbp)
	movl $0x0,0x84(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq $0x1,0xF8(%rbp)
	jmp L_308310
.p2align 0x4
L_506028:
L_309012:
	movq 0xC8(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_308276
L_309013:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movzbl %r10b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_308266
.p2align 0x4
.long 0x4B88
L_309386:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309387
L_309564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309565
.p2align 0x4
.long 0x4B9E
L_309565:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309387:
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_309397
L_309388:
	cmpq $0x1,%r14
	je L_309397
L_309390:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_506044
L_309392:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
L_309393:
	cmpq $0x1,%r14
	je L_506039
L_309394:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpl %ecx,0x0(%r14)
	jne L_506037
L_309533:
	cmpq $0x1,%r15
	je L_506031
L_309534:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_309393
.p2align 0x4
L_506031:
L_309535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309536
L_309549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309550
.p2align 0x4
.long 0x4B9D
L_309550:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309536:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_506035
L_309537:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309538:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_308060
L_309539:
	cmpq $0x1,%r15
	je L_506032
L_309540:
	movq 0x8(%r15),%r15
	jmp L_309538
.p2align 0x4
L_506032:
L_309541:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309542
L_309546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309547
.p2align 0x4
.long 0x4B9C
L_309547:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309542:
	movl 0x6C(%rbp),%ecx
L_309543:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz fall_falsee_0
L_309545:
	shrq $0x1,%r14
	movl %r14d,%ecx
L_309524:
	movq %r15,%r14
	andq $0x1,%r14
	jz fall_truee_0
L_309526:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r14d,%ecx
	jl fall_falsee_0
L_309527:
	cmpl %ecx,%r14d
	jl fall_truee_0
default_11:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_1
.p2align 0x4
L_506035:
L_309548:
	xorl %ecx,%ecx
	jmp L_309543
.p2align 0x4
L_506037:
L_309395:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309397
L_309531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309532
.p2align 0x4
.long 0x4B9C
L_309532:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309397:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz default_11
L_309523:
	shrq $0x1,%r15
	movl %r15d,%ecx
	xorq %r15,%r15
	jmp L_309524
.p2align 0x4
L_506039:
L_309551:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_309552:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_308060
L_309553:
	cmpq $0x1,%r15
	je L_506040
L_309554:
	movq 0x8(%r15),%r15
	jmp L_309552
.p2align 0x4
L_506040:
L_309555:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309556
L_309560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309561
.p2align 0x4
.long 0x4B9C
L_309561:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309556:
	movl 0x6C(%rbp),%ecx
	negl %ecx
	jo L_308060
L_309557:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz fall_falsee_0
L_309559:
	shrq $0x1,%r14
	movl %r14d,%ecx
	jmp L_309524
.p2align 0x4
L_506044:
L_309391:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
.long 0x4B97
L_309484:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309485
L_309495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309496
.p2align 0x4
.long 0x4B8F
L_309496:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309485:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_506049
L_309486:
L_309487:
	movq $0x2373,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_506048
L_309488:
L_309489:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_308525
.p2align 0x4
L_506048:
L_309490:
	movq 0x1A0(%rbp),%r15
	jmp L_308526
.p2align 0x4
L_506049:
L_309491:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506050
L_309492:
L_309493:
	movq 0x18(%rbp),%r13
	xchgq %r13,%r15
	jmp L_308525
.p2align 0x4
L_506050:
L_309494:
	movq 0x18(%rbp),%r13
	movq 0x1A0(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_308526
.p2align 0x4
.long 0x4B8E
L_309428:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309429
L_309439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309440
.p2align 0x4
.long 0x4B8F
L_309440:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309429:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506053
L_309430:
L_309431:
	movq $0x2373,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_506052
L_309432:
L_309433:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_308525
.p2align 0x4
L_506052:
L_309434:
	movq 0x1A0(%rbp),%r15
	jmp L_308526
.p2align 0x4
L_506053:
L_309435:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506054
L_309436:
L_309437:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_308525
.p2align 0x4
L_506054:
L_309438:
	movq 0x20(%rbp),%r13
	movq 0x1A0(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_308526
.p2align 0x4
.long 0x4B40
L_309086:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B29
L_309067:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309068
L_309069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309070
.p2align 0x4
.long 0x4B2A
L_309070:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309068:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_309037
.p2align 0x4
.long 0x4B26
L_309032:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x58(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x1
bug_654:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309951
L_309952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_309953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309953
.p2align 0x4
.long 0x452
L_309953:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_309951:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BD6
L_309955:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x178(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_309956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C98
L_310894:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C9B
L_310900:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C98
L_310811:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C9B
L_310817:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A7E
L_308147:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_308148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A8D
L_308287:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x248(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movslq 0x210(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x278(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_308288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B0E
L_308907:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movl 0x268(%rbp),%r15d
	movl %r15d,0x21C(%rbp)
	movl %r15d,0x268(%rbp)
	movq $0x3,0x270(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x268,%rbp
	leaq (L_308908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B13
L_308976:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x260(%rbp)
	movslq 0x1D8(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_308977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B13
L_308946:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x260(%rbp)
	movslq 0x1D8(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_308947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B0E
L_308989:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movl 0x268(%rbp),%r15d
	movl %r15d,0x260(%rbp)
	movl %r15d,0x268(%rbp)
	movq $0x3,0x270(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x268,%rbp
	leaq (L_308990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A94
L_308311:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308312
L_308881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308882
.p2align 0x4
.long 0x4B0A
L_308882:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308312:
	movl $0x10,%r15d
	subl 0x100(%rbp),%r15d
	movl %r15d,0x104(%rbp)
	jo L_308060
L_308313:
	cmpl $0x10,%r15d
	je L_506058
L_308314:
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x110(%rbp)
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x120(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x138(%rbp)
	movq %r13,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506058:
L_308878:
	movl 0x80(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506059
L_308879:
	movl 0x84(%rbp),%r14d
	movl %r14d,0x80(%rbp)
L_308325:
	movq 0x130(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x108(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x84(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x110(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x218(%rbp)
	addq $0x10,%r12
	addq $0x218,%rbp
	leaq (L_308326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506059:
L_308880:
	movl 0x84(%rbp),%r14d
	movl %r14d,0x80(%rbp)
L_308856:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x120(%rbp)
	movq %r14,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B89
L_309399:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_309400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_1
.p2align 0x4
.long 0x4B41
L_309087:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309088
L_309186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309187
.p2align 0x4
.long 0x4B6A
L_309187:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309088:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B27
L_309033:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x59(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x58(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BD7
L_309956:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movl 0x198(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	movl %r15d,0x198(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_309957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C99
L_310895:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310896
L_310947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310948
.p2align 0x4
.long 0x4CA2
L_310948:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310896:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_310897
.p2align 0x4
.long 0x4C9C
L_310901:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C99
L_310812:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310813
L_310864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310865
.p2align 0x4
.long 0x4CA2
L_310865:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310813:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_310814
.p2align 0x4
.long 0x4C9C
L_310818:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_310819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A7F
L_308148:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308149
L_310677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310678
.p2align 0x4
.long 0x4C85
L_310678:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_308149:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_308150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A8E
L_308288:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x210(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_308289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B0F
L_308908:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq $0x11,0x260(%rbp)
	movq 0x258(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_308909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B14
L_308977:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x1D8(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_308978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B14
L_308947:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x1D8(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_308948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B0F
L_308990:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq $0x11,0x260(%rbp)
	movq 0x258(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_308991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A95
L_308315:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A98
L_308326:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1D8(%rbp)
	movq %r14,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B04
L_308857:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B8A
L_309400:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309401
L_309521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_309522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309522
.p2align 0x4
.long 0x4B9B
L_309522:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_309401:
	movq 0x70(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_506066
L_309402:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne defaultP_9
L_309515:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je fall_falsee_0
defaultP_9:
	movl 0x54(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl fall_truee_0
	jmp fall_falsee_0
.p2align 0x4
L_506066:
L_309516:
	movq 0x70(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je L_506067
L_309517:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne defaultP_9
L_309518:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je fall_falsee_0
	jmp defaultP_9
.p2align 0x4
L_506067:
L_309519:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne fall_truee_0
L_309520:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je defaultP_9
	jmp fall_truee_0
.p2align 0x4
.long 0x4B42
L_309089:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B28
memloc_107:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309034
L_309046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309047
.p2align 0x4
.long 0x4B2B
L_309047:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309034:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2182
.p2align 0x4
.long 0x4BD8
L_309957:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq %r15,0x180(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_309958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C9D
L_310902:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310903
L_310943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310944
.p2align 0x4
.long 0x4CA0
L_310944:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310903:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (immediate_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C9D
L_310819:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310820
L_310860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310861
.p2align 0x4
.long 0x4CA0
L_310861:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310820:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (immediate_79+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A80
L_308150:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308151
L_310675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_310676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310676
.p2align 0x4
.long 0x4C84
L_310676:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_308151:
	movq $0x2325,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2321,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_506072
L_308152:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_506072:
L_310674:
	movq $0x1,0x10(%rbp)
L_308158:
	movq 0x98(%rbp),%r15
	movl 0x14(%r15),%r14d
	testl %r14d,%r14d
	jnz L_506073
L_308159:
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_308160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2185
.p2align 0x4
L_506073:
L_310663:
	movq 0x68(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movl 0x0(%r14),%r11d
	movq 0x8(%r14),%r10
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	testl %r11d,%r11d
	jz L_310665
L_310669:
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_310665:
	movq $0x230F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_506083
L_310666:
L_310667:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
L_308188:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_308189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506082
.p2align 0x4,,0x7
L_308190:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506081
L_308191:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_308192:
	cmpq $0x1,%r14
	jne L_506080
L_308195:
	cmpq $0x1,%r15
	je L_506074
L_308196:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_308192
.p2align 0x4
L_506074:
L_308197:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308198
L_310642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310643
.p2align 0x4
.long 0x4C7D
L_310643:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308198:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506078
L_308199:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_308200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506077
.p2align 0x4,,0x7
L_308201:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506075
L_308202:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_308200
.p2align 0x4
L_506075:
L_308204:
	cmpq $0x1,%r15
	je L_310638
L_308205:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_308206
.p2align 0x4
L_506077:
L_310639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310640
.p2align 0x4
.long 0x4C7C
L_310640:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308201
.p2align 0x4
L_506078:
L_310641:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308204
.p2align 0x4
L_506080:
L_308193:
	movq %r14,0x18(%rbp)
L_308194:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_308189
.p2align 0x4
L_506081:
L_310644:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_308200
.p2align 0x4
L_506082:
L_310645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310646
.p2align 0x4
.long 0x4C7C
L_310646:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308190
.p2align 0x4
L_506083:
L_310668:
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_308188
.p2align 0x4
.long 0x4A8F
L_308289:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq %r15,0x280(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_308290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B10
L_308909:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308910
L_308929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_308930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308930
.p2align 0x4
.long 0x4B12
L_308930:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_308910:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x248(%rbp)
	addq $0x10,%r12
	movq 0x240(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (immediate_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B15
L_308978:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_308979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B15
L_308948:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_308949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B10
L_308991:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308992
L_309002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_309003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309003
.p2align 0x4
.long 0x4B12
L_309003:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_308992:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x248(%rbp)
	addq $0x10,%r12
	movq 0x240(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (immediate_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A96
L_308316:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq %r15,0x218(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A99
L_308327:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B05
L_308858:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x218(%rbp)
	movq $0x41,0x220(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B43
L_309090:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B29
L_309035:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309036
L_309044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309045
.p2align 0x4
.long 0x4B2A
L_309045:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309036:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_309037
.p2align 0x4
.long 0x4BD3
L_309958:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309959
L_310414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_310415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310415
.p2align 0x4
.long 0x4C4F
L_310415:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_309959:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x178(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x18F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x180(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0xF25,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x188(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x198(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1A0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C9E
immediate_80:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310904
L_310941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310942
.p2align 0x4
.long 0x4C9F
L_310942:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310904:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506101
L_310905:
L_310906:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
farEntry_1:
	movq 0x68(%rbp),%r13
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x8(%r13),%r9
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_310908
L_310939:
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_310908:
	movq $0x230F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_506099
L_310909:
L_310910:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_310911:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310912:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506098
.p2align 0x4,,0x7
L_310913:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506097
L_310914:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_310915:
	cmpq $0x1,%r14
	jne L_506096
L_310918:
	cmpq $0x1,%r15
	je L_506090
L_310919:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_310915
.p2align 0x4
L_506090:
L_310920:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310921
L_310933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310934
.p2align 0x4
.long 0x4C7D
L_310934:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310921:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506094
L_310922:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506093
.p2align 0x4,,0x7
L_310924:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506091
L_310925:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_310923
.p2align 0x4
L_506091:
L_310927:
	cmpq $0x1,%r15
	je L_310638
L_310928:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_308206
.p2align 0x4
L_506093:
L_310930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310931
.p2align 0x4
.long 0x4C7C
L_310931:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310924
.p2align 0x4
L_506094:
L_310932:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310927
.p2align 0x4
L_506096:
L_310916:
	movq %r14,0x18(%rbp)
L_310917:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_310912
.p2align 0x4
L_506097:
L_310935:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_310923
.p2align 0x4
L_506098:
L_310936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310937
.p2align 0x4
.long 0x4C7C
L_310937:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310913
.p2align 0x4
L_506099:
L_310938:
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_310911
.p2align 0x4
L_506101:
L_310940:
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp farEntry_1
.p2align 0x4
.long 0x4C9E
immediate_79:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310821
L_310858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310859
.p2align 0x4
.long 0x4C9F
L_310859:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310821:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506114
L_310822:
L_310823:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
farEntry_0:
	movq 0x68(%rbp),%r13
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x8(%r13),%r9
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_310825
L_310856:
	movq $0x2311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_310825:
	movq $0x230F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_506112
L_310826:
L_310827:
	movq $0x236F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_310828:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310829:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506111
.p2align 0x4,,0x7
L_310830:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506110
L_310831:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_310832:
	cmpq $0x1,%r14
	jne L_506109
L_310835:
	cmpq $0x1,%r15
	je L_506103
L_310836:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_310832
.p2align 0x4
L_506103:
L_310837:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310838
L_310850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310851
.p2align 0x4
.long 0x4C7D
L_310851:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_310838:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506107
L_310839:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_310840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506106
.p2align 0x4,,0x7
L_310841:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506104
L_310842:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_310840
.p2align 0x4
L_506104:
L_310844:
	cmpq $0x1,%r15
	je L_310638
L_310845:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_308206
.p2align 0x4
L_506106:
L_310847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310848
.p2align 0x4
.long 0x4C7C
L_310848:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310841
.p2align 0x4
L_506107:
L_310849:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310844
.p2align 0x4
L_506109:
L_310833:
	movq %r14,0x18(%rbp)
L_310834:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_310829
.p2align 0x4
L_506110:
L_310852:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_310840
.p2align 0x4
L_506111:
L_310853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310854
.p2align 0x4
.long 0x4C7C
L_310854:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_310830
.p2align 0x4
L_506112:
L_310855:
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_310828
.p2align 0x4
L_506114:
L_310857:
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp farEntry_0
.p2align 0x4
.long 0x4A81
L_308153:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308154
L_310672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310673
.p2align 0x4
.long 0x4C83
L_310673:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308154:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A83
L_308160:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308161
L_310661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310662
.p2align 0x4
.long 0x4C81
L_310662:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308161:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_506122
L_308162:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_308163:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506121
.p2align 0x4,,0x7
L_308164:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movw 0x4(%r15),%r13w
	movq 0x8(%r15),%r11
	movq $0xF29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x400,0x0(%r15)
	movl $0x0,0x8(%r15)
	movzwl %r13w,%r14d
	movl %r14d,0xC(%r15)
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_506117
L_308165:
	movq %r14,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_308163
.p2align 0x4
L_506117:
L_308166:
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_308167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506120
.p2align 0x4,,0x7
L_308168:
	movq $0x2311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506118
L_308169:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_308167
.p2align 0x4
L_506118:
L_308171:
	movq 0x78(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movl 0x0(%r14),%r10d
	movq 0x8(%r14),%r9
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_308173
L_310655:
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_308173:
	movq $0x230F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_308174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2186
.p2align 0x4
L_506120:
L_310656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310657
.p2align 0x4
.long 0x4C80
L_310657:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308168
.p2align 0x4
L_506121:
L_310658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310659
.p2align 0x4
.long 0x4C80
L_310659:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308164
.p2align 0x4
L_506122:
L_310660:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308171
.p2align 0x4
.long 0x4A90
L_308290:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308291
L_308901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_308902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308902
.p2align 0x4
.long 0x4B0C
L_308902:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_308291:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x270(%rbp)
	addq $0x10,%r12
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_308292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B11
immediate_70:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308911
L_308927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_308928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308928
.p2align 0x4
.long 0x4B0B
L_308928:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_308911:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%ecx
	movzbl 0xA8(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x118(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movb 0x1D1(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_308922
	cmpb $0x3,%r14b
	je L_506131
	cmpb $0x4,%r14b
	je L_506130
	cmpb $0x5,%r14b
	je L_506129
L_308913:
	movl $0x8,%ecx
L_308914:
	cmpl $0x8,%ecx
	jl L_506128
L_308915:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x1D1(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x138(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x238(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
L_308916:
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x230(%rbp)
	je L_506127
L_308917:
L_308918:
	movq 0x1D8(%rbp),%r11
	movq 0x210(%rbp),%r10
	movl $0x8,%ecx
	movq 0x220(%rbp),%r14
	movq 0x228(%rbp),%r15
L_308305:
	movq $0x2373,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq 0x230(%rbp),%r8
	movq %r8,0x8(%r9)
	movq %r15,%r13
	movq %r11,%r15
	movq %r10,%r11
	movq %r9,%r10
L_308306:
	addl 0x218(%rbp),%ecx
	jo L_308060
L_308307:
	movq 0x80(%rbp),%r9
	cmpq $0x1,%r9
	je L_506125
L_308308:
	movq %r15,0x1D8(%rbp)
	movq %r11,0x210(%rbp)
	movl %ecx,0x218(%rbp)
	movq %r14,0x220(%rbp)
	movq %r13,0x228(%rbp)
	movq %r10,0x230(%rbp)
	movq 0x0(%r9),%r15
	movq 0x8(%r9),%r9
	movq %r9,0x80(%rbp)
	jmp L_308269
.p2align 0x4
L_506125:
L_308309:
	movl %ecx,0x84(%rbp)
	movq %r14,0xE8(%rbp)
	movq %r13,0xF0(%rbp)
	movq %r10,0xF8(%rbp)
	movl 0x1D4(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	jmp L_308310
.p2align 0x4
L_506127:
L_308919:
	movq 0x1D8(%rbp),%r15
	movq 0x210(%rbp),%r11
	movl $0x8,%ecx
	movq 0x220(%rbp),%r14
	movq 0x228(%rbp),%r9
	movq %r13,%r10
	movq %r9,%r13
	jmp L_308306
.p2align 0x4
L_506128:
L_308920:
	movq $0x22DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0xA9(%rbp),%r13d
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r13d
	movzbl 0x1D1(%rbp),%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x138(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x238(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_308916
.p2align 0x4
L_506129:
L_308926:
	movl $0x1,%ecx
	jmp L_308914
.p2align 0x4
L_506130:
L_308925:
	movl $0x2,%ecx
	jmp L_308914
.p2align 0x4
L_506131:
L_308922:
	movl $0x4,%ecx
	jmp L_308914
.p2align 0x4
.long 0x4B16
L_308979:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308980
L_308983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_308984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308984
.p2align 0x4
.long 0x4B1A
L_308984:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_308980:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x260(%rbp)
	addq $0x10,%r12
	movq 0x258(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_308981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B16
L_308949:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308950
L_308973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_308974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308974
.p2align 0x4
.long 0x4B1A
L_308974:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_308950:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x260(%rbp)
	addq $0x10,%r12
	movq 0x258(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_308951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B11
immediate_71:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308993
L_309000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_309001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309001
.p2align 0x4
.long 0x4B0B
L_309001:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_308993:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movzbl 0xA8(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x118(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x21C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_506137
L_308994:
	movq 0x128(%rbp),%r14
L_308995:
	movq $0x22CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movzbl 0x1D1(%rbp),%ecx
	movl %ecx,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x238(%rbp),%r9
	movq %r9,0x10(%r13)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x230(%rbp)
	je L_506136
L_308996:
L_308997:
	movq 0x1D8(%rbp),%r11
	movq 0x210(%rbp),%r10
	movl $0x8,%ecx
	movq 0x220(%rbp),%r14
	movq 0x228(%rbp),%r15
	jmp L_308305
.p2align 0x4
L_506136:
L_308998:
	movq 0x1D8(%rbp),%r15
	movq 0x210(%rbp),%r11
	movl $0x8,%ecx
	movq 0x220(%rbp),%r14
	movq 0x228(%rbp),%r9
	movq %r13,%r10
	movq %r9,%r13
	jmp L_308306
.p2align 0x4
L_506137:
L_308999:
	movq 0x120(%rbp),%r14
	jmp L_308995
.p2align 0x4
.long 0x4A97
L_308317:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308318
L_308876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308877
.p2align 0x4
.long 0x4B09
L_308877:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308318:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (immediate_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A9A
L_308328:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x218(%rbp)
	movq $0x11,0x220(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B06
L_308859:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308860
L_308871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308872
.p2align 0x4
.long 0x4B07
L_308872:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308860:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (immediate_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B44
memloc_109:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309091
L_309184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309185
.p2align 0x4
.long 0x4B6C
L_309185:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309091:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4BD9
L_309960:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A81
L_308155:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_308156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4A84
L_308174:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308175
L_310653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310654
.p2align 0x4
.long 0x4C7F
L_310654:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308175:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506147
L_308176:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_308177:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506146
.p2align 0x4,,0x7
L_308178:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movw 0x4(%r15),%r13w
	movq 0x8(%r15),%r11
	movq $0x124B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x400,0x0(%r15)
	movl $0x0,0x8(%r15)
	movzwl %r13w,%r14d
	movl %r14d,0xC(%r15)
	movq $0x2313,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_506142
L_308179:
	movq %r14,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_308177
.p2align 0x4
L_506142:
L_308180:
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_308181:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506145
.p2align 0x4,,0x7
L_308182:
	movq $0x2313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506143
L_308183:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_308181
.p2align 0x4
L_506143:
L_308185:
	movq $0x230D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_506144
L_308186:
L_308187:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,%r15
	jmp L_308188
.p2align 0x4
L_506144:
L_310647:
	xchgq %r14,%r15
	jmp L_308188
.p2align 0x4
L_506145:
L_310648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310649
.p2align 0x4
.long 0x4C7E
L_310649:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308182
.p2align 0x4
L_506146:
L_310650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310651
.p2align 0x4
.long 0x4C7E
L_310651:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_308178
.p2align 0x4
L_506147:
L_310652:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308185
.p2align 0x4
.long 0x4A91
L_308292:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x258(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x288(%rbp)
	movb $0x0,0x278(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_308293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B17
L_308981:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x108(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x258(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movb $0x1,0x268(%rbp)
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_308982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B17
L_308951:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x108(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x258(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movb $0x0,0x268(%rbp)
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_308952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4A94
immediate_65:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308319
L_308874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308875
.p2align 0x4
.long 0x4B08
L_308875:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308319:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x118(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506151
L_308320:
L_308321:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,%r15
L_308322:
	movl 0x84(%rbp),%r14d
	addl 0x104(%rbp),%r14d
	jo L_308060
L_308323:
	movl 0x80(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_506149
L_308324:
	movl %r14d,0x80(%rbp)
	movq %r15,0xF8(%rbp)
	jmp L_308325
.p2align 0x4
L_506149:
L_308855:
	movl %r14d,0x80(%rbp)
	movq %r15,0xF8(%rbp)
	jmp L_308856
.p2align 0x4
L_506151:
L_308873:
	xchgq %r14,%r15
	jmp L_308322
.p2align 0x4
.long 0x4A9B
L_308329:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308330
L_308853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308854
.p2align 0x4
.long 0x4B03
L_308854:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308330:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4A9E
immediate_69:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308861
L_308869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308870
.p2align 0x4
.long 0x4B02
L_308870:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308861:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x118(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506177
L_308862:
L_308863:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r13,%r15
L_308864:
	movl 0x80(%rbp),%r14d
	addl $0x20,%r14d
	jo L_308060
L_308865:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_506155
L_308866:
	movl %r14d,0x84(%rbp)
	movq %r15,0xB0(%rbp)
	movl 0x4(%r13),%r15d
	movl %r15d,0x80(%rbp)
L_308349:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_506154
L_308350:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x20(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x130(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x138(%rbp)
	movq %r13,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506154:
L_308499:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506155:
L_308867:
	movl %r14d,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x58(%rbp)
L_308810:
	movl 0x1B0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506175
L_308811:
	movl 0x18C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506174
L_308812:
	movq $0x1,%r15
L_308813:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x6240)(%rip),%r15
	movq %r15,0x10(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x190(%rbp),%r15
	cmpq $0x1,%r15
	je L_506159
L_308814:
	movq %r14,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	movq %r15,0x30(%rbp)
L_308452:
	movq 0xE0(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x170(%rbp),%r15
	movl 0x0(%r15),%r13d
	movb 0xAA(%rbp),%r15b
	cmpb $0x1,%r15b
	je label_5
	cmpb $0x2,%r15b
	je L_506157
L_308453:
	cmpb $0x3,%r14b
	je label_5
	cmpb $0x8,%r14b
	je label_5
	cmpb $0x9,%r14b
	je label_5
L_308454:
	testl %r13d,%r13d
	jnz importLabel_1
label_5:
	movq 0x168(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
importLabel_1:
importLabel_0:
	movq 0xE0(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x3,%r15b
	je coff_1
	cmpb $0x8,%r15b
	je L_506156
	cmpb $0x9,%r15b
	je coff_7
L_308648:
	movq (globalObjptr+0x11088)(%rip),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
coff_7:
coff_1:
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq (globalObjptr+0x10FE0)(%rip),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_506156:
L_308662:
	movq 0x168(%rbp),%r13
	movq %r13,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_506157:
L_308672:
	cmpb $0x3,%r14b
	je indirect_1
	cmpb $0x8,%r14b
	je importLabel_0
	cmpb $0x9,%r14b
	je indirect_8
L_308673:
	testl %r13d,%r13d
	jnz importLabel_0
	jmp label_5
.p2align 0x4
indirect_8:
indirect_1:
	movq 0xE0(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x3,%r15b
	je coff_2
	cmpb $0x8,%r15b
	je L_506158
	cmpb $0x9,%r15b
	je coff_9
L_308677:
	movq (globalObjptr+0x11088)(%rip),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
coff_9:
coff_2:
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq (globalObjptr+0x10FE0)(%rip),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_506158:
L_308696:
	movq 0x168(%rbp),%r13
	movq %r13,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_506159:
L_308815:
	movl 0x30(%rbp),%ecx
	movq 0x50(%rbp),%r11
	movq 0x58(%rbp),%r10
	xchgq %r10,%r15
	movq %r14,%r13
	movq %r11,%r14
L_308705:
	movq $0x22E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0xD8(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq (globalObjptr+0x69C8)(%rip),%r11
	movq %r11,0x0(%r10)
	movq $0x236D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq 0xE8(%rbp),%r10
	cmpq $0x1,%r10
	je L_506173
L_308706:
	movl %ecx,0x54(%rbp)
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	movq %r11,0x70(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x30(%rbp)
	movw 0x0(%r10),%r15w
	movw %r15w,0x50(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_308459:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506172
.p2align 0x4,,0x7
L_308460:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506160
L_308461:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0x50(%rbp)
	jmp L_308459
.p2align 0x4
L_506160:
L_308462:
	movl 0x54(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%rbp)
	xchgq %r15,%r14
L_308463:
	cmpq $0x1,%r14
	je L_506171
L_308464:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movw 0x0(%r14),%r15w
	movw %r15w,0x34(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_308465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506170
.p2align 0x4,,0x7
L_308466:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_506161
L_308467:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movw %r15w,0x34(%rbp)
	jmp L_308465
.p2align 0x4
L_506161:
L_308469:
	movq $0x2301,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_506169
L_308470:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_308471:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506168
.p2align 0x4,,0x7
L_308472:
	movq 0x78(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_506162
L_308473:
	movq %r15,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_308471
.p2align 0x4
L_506162:
L_308474:
	movw %r14w,0x34(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_308475:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506167
.p2align 0x4,,0x7
L_308476:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506163
L_308477:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movw %r15w,0x34(%rbp)
	jmp L_308475
.p2align 0x4
L_506163:
L_308479:
	movq $0x2303,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x48(%rbp)
	je L_506164
L_308480:
	movq $0x2307,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
L_308481:
	movq 0x198(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
L_506164:
L_308603:
	movl 0x1B0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506166
L_308604:
	movl 0x188(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506165
L_308605:
	movq $0x1,%r15
L_308606:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x160(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	jmp L_308481
.p2align 0x4
L_506165:
L_308607:
	movq $0x1,0x40(%rbp)
L_308608:
	movq 0x38(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506166:
L_308627:
	movq 0x40(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506167:
L_308634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308635
.p2align 0x4
.long 0x4ADA
L_308635:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308476
.p2align 0x4
L_506168:
L_308636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308637
.p2align 0x4
.long 0x4ADB
L_308637:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308472
.p2align 0x4
L_506169:
L_308638:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308479
.p2align 0x4
L_506170:
L_308639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308640
.p2align 0x4
.long 0x4ADA
L_308640:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308466
.p2align 0x4
L_506171:
L_308641:
	movq $0x1,%r15
	jmp L_308469
.p2align 0x4
L_506172:
L_308642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308643
.p2align 0x4
.long 0x4ADC
L_308643:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308460
.p2align 0x4
L_506173:
L_308707:
	movl %ecx,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r11,0x68(%rbp)
	movq $0x1,%r14
	jmp L_308463
.p2align 0x4
L_506174:
L_308816:
	movq $0x1,0x60(%rbp)
L_308817:
	movq 0x38(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506175:
L_308836:
	movq 0x40(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506177:
L_308868:
	xchgq %r14,%r15
	jmp L_308864
.p2align 0x4
.long 0x4B45
memloc_110:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309092
L_309182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309183
.p2align 0x4
.long 0x4B6B
L_309183:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309092:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4BDA
L_309961:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4A82
L_308156:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308157
L_310670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_310671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310671
.p2align 0x4
.long 0x4C82
L_310671:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_308157:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_308158
.p2align 0x4
.long 0x4A92
L_308293:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq $0x1,0x258(%rbp)
	movq 0x260(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0x250(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x268(%rbp)
	movq $0x1,0x260(%rbp)
	movb $0x0,0x251(%rbp)
	movb 0x214(%rbp),%r15b
	movb %r15b,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_308294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B18
L_308982:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq $0x1,0x260(%rbp)
	movq $0x1,0x268(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x288(%rbp)
	movb $0x1,0x259(%rbp)
	movb $0x1,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_308953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B18
L_308952:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq $0x1,0x260(%rbp)
	movq $0x1,0x268(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x288(%rbp)
	movb $0x0,0x259(%rbp)
	movb $0x0,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_308953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4A9C
L_308331:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x228(%rbp)
	movb $0x0,0x218(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4AA2
L_308351:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4AC6
L_308456:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308457
L_308645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308646
.p2align 0x4
.long 0x4ADD
L_308646:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308457:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x54(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x22E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x69C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506181
L_308458:
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x54(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_308459
.p2align 0x4
L_506181:
L_308644:
	movl 0x50(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,%r14
	jmp L_308463
.p2align 0x4
.long 0x4ADE
L_308649:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4ADE
L_308657:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4AC6
L_308663:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308664
L_308665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308666
.p2align 0x4
.long 0x4ADD
L_308666:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308664:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
label_6:
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x22E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x69C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506183
L_308652:
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x54(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_308459
.p2align 0x4
L_506183:
L_308653:
	movl 0x50(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,%r14
	jmp L_308463
.p2align 0x4
.long 0x4ADF
L_308678:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4ADF
L_308691:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4AE0
L_308697:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308698
L_308699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308700
.p2align 0x4
.long 0x4AE4
L_308700:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308698:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
memloc_label_1:
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1D0(%rbp)
	addq $0x10,%r12
	addq $0x1D0,%rbp
	leaq (L_308681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4AC7
L_308482:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308483
L_308601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308602
.p2align 0x4
.long 0x4AD5
L_308602:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308483:
	movq $0x2305,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpl $0x0,0x30(%rbp)
	jg L_506204
L_308484:
	movl 0x1B4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506203
L_308485:
	movq $0x1,0x30(%rbp)
L_308486:
	cmpq $0x1,0x28(%rbp)
	je L_506188
L_308487:
	cmpq $0x1,0x48(%rbp)
	je L_506186
L_308488:
	movq 0x180(%rbp),%r8
	movq 0x10(%r8),%r9
	movq 0x18(%r8),%r10
	movq 0x20(%r8),%r14
	movq 0x8(%r8),%r11
	movq 0x0(%r8),%r13
	movq 0x28(%r8),%r15
L_308489:
	movq $0x29C1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r14,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r9,0x18(%r8)
	movq %r11,0x20(%r8)
	movq %r13,0x28(%r8)
	movq %r8,0x40(%rbp)
	addq $0x38,%r12
L_308490:
	movq 0x28(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_308491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_506186:
L_308577:
	movq 0x1A8(%rbp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r15
	shrq $0x1,%r15
	cmpq $0x21C4,%r15
	je L_506187
L_308579:
	movq 0x18(%r8),%r9
	movq 0x10(%r8),%r10
	movq 0x8(%r8),%r14
	movq 0x20(%r8),%r11
	movq 0x28(%r8),%r13
	movq 0x0(%r8),%r15
	jmp L_308489
.p2align 0x4
L_506187:
L_308578:
	movq 0x28(%r8),%r15
	movq 0x20(%r8),%r14
	movq 0x18(%r8),%r13
	movq 0x10(%r8),%r11
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r9
	movq $0x29BF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r13,0x18(%r8)
	movq %r14,0x20(%r8)
	movq %r15,0x28(%r8)
	addq $0x40,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%r8)
	movq %r8,0x40(%rbp)
	jmp L_308490
.p2align 0x4
L_506188:
L_308580:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_506202
L_308581:
	movq 0x30(%rbp),%r14
	movq $0x1,%r15
L_308497:
L_308498:
	movq 0x118(%rbp),%r10
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_308499
L_308500:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_308499
L_308501:
	movq 0x0(%r10),%r13
	movq $0x1249,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movzwl (globalWord16+0x2BA)(%rip),%r10d
	movl %r10d,0x4(%r11)
	movq $0x2315,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x230B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq (globalObjptr+0x69E8)(%rip),%r10
	movq %r14,%r13
	movq %r10,%r14
L_308502:
	movq $0x2551,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq $0x1,0x8(%r10)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq $0x1,%r11
	je L_506199
L_308503:
	movq %r15,0x18(%rbp)
	movq %r11,0x20(%rbp)
L_308504:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_308505:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506198
.p2align 0x4,,0x7
L_308506:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_506197
L_308507:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_308508:
	cmpq $0x1,%r15
	je L_506189
L_308509:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
L_308510:
	jmp L_308505
.p2align 0x4
L_506189:
L_308511:
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_308512:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506196
.p2align 0x4,,0x7
L_308513:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_506190
L_308514:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_308508
.p2align 0x4
L_506190:
L_308515:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_506195
L_308516:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_308517:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506194
.p2align 0x4,,0x7
L_308518:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506191
L_308519:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_308517
.p2align 0x4
L_506191:
L_308521:
	cmpq $0x1,%r15
	je L_506193
L_308522:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506192
L_308523:
L_308524:
	movq %r13,%r15
	jmp L_308525
.p2align 0x4
L_506192:
L_308558:
	movq 0x1A0(%rbp),%r15
	xchgq %r13,%r14
	jmp L_308526
.p2align 0x4
L_506193:
L_308559:
	movq 0xD0(%rbp),%r15
	jmp L_308560
.p2align 0x4
L_506194:
L_308564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_308565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308565
.p2align 0x4
.long 0x4ACA
L_308565:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_308518
.p2align 0x4
L_506195:
L_308566:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308521
.p2align 0x4
L_506196:
L_308567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_308568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308568
.p2align 0x4
.long 0x4ACB
L_308568:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_308513
.p2align 0x4
L_506197:
L_308569:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_308517
.p2align 0x4
L_506198:
L_308570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_308571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308571
.p2align 0x4
.long 0x4ACA
L_308571:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_308506
.p2align 0x4
L_506199:
L_308572:
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_308512
.p2align 0x4
L_506202:
L_308582:
	movq $0x1,%r14
	movq 0x30(%rbp),%r13
	movq $0x1,%r15
	movq $0x1,%r11
	jmp L_308502
.p2align 0x4
L_506203:
L_308583:
	movq $0x1,0x18(%rbp)
L_308584:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x1C0(%rbp)
	movq $0x1,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_308585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2182
.p2align 0x4
L_506204:
L_308589:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movslq 0x30(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq %r14,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AD6
L_308609:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308610
L_308625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308626
.p2align 0x4
.long 0x4AD7
L_308626:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308610:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_308617
L_308611:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_308612:
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506208
L_308613:
	cmpq $0x1,%r14
	je L_506206
L_308614:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_308612
.p2align 0x4
L_506206:
L_308615:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308617
L_308618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308619
.p2align 0x4
.long 0x4AD7
L_308619:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308617:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_308606
.p2align 0x4
L_506208:
L_308620:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308621
L_308622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308623
.p2align 0x4
.long 0x4AD8
L_308623:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308621:
	movq 0x40(%rbp),%r15
	jmp L_308606
.p2align 0x4
.long 0x4AD9
L_308628:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308629
L_308632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308633
.p2align 0x4
.long 0x4AD7
L_308633:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308629:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0x188(%rbp),%r14d
	testl %r14d,%r14d
	jz L_308606
L_308631:
	movq %r15,0x40(%rbp)
	jmp L_308608
.p2align 0x4
.long 0x4AFC
L_308818:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308819
L_308834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308835
.p2align 0x4
.long 0x4AFD
L_308835:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308819:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_308826
L_308820:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_308821:
	movq 0x68(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506216
L_308822:
	cmpq $0x1,%r14
	je L_506214
L_308823:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_308821
.p2align 0x4
L_506214:
L_308824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308826
L_308827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308828
.p2align 0x4
.long 0x4AFD
L_308828:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308826:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_308813
.p2align 0x4
L_506216:
L_308829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308830
L_308831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308832
.p2align 0x4
.long 0x4AFE
L_308832:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308830:
	movq 0x60(%rbp),%r15
	jmp L_308813
.p2align 0x4
.long 0x4AFF
L_308837:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308838
L_308841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308842
.p2align 0x4
.long 0x4AFE
L_308842:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308838:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0x18C(%rbp),%r14d
	testl %r14d,%r14d
	jz L_308813
L_308840:
	movq %r15,0x60(%rbp)
	jmp L_308817
.p2align 0x4
.long 0x4B46
L_309093:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BDB
L_309962:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A93
L_308294:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x210(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308295
L_308899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_308900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308900
.p2align 0x4
.long 0x4B0B
L_308900:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_308295:
	movb 0x1D1(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_308894
	cmpb $0x3,%r15b
	je L_506230
	cmpb $0x4,%r15b
	je L_506229
	cmpb $0x5,%r15b
	je L_506228
L_308297:
	movl $0x8,%ecx
L_308298:
	cmpl $0x8,%ecx
	jl L_506227
L_308299:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0x1D1(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x238(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_308300:
	movq $0x1249,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movw 0x1D2(%rbp),%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x4(%r14)
	movq 0x210(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x18,%r12
	movq $0x1,0x8(%r10)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x10,%r12
	movq $0x119F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r13w,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r11,0x8(%r14)
	movq $0x2565,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x228(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x1D8(%rbp),%r11
	cmpq $0x1,%r11
	je L_506225
L_308301:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%ecx
	movl 0x1D4(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_506223
L_308302:
	movq $0x2571,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	cmpq $0x1,0x230(%rbp)
	je L_506222
L_308303:
L_308304:
	movq 0x240(%rbp),%r10
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r14
	xchgq %r13,%r15
	jmp L_308305
.p2align 0x4
L_506222:
L_308883:
	movq 0x240(%rbp),%r9
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r14
	movq %r15,%r10
	movq %r11,%r15
	movq %r9,%r11
	jmp L_308306
.p2align 0x4
L_506223:
L_308884:
	cmpq $0x1,0x230(%rbp)
	je L_506224
L_308885:
L_308886:
	movq 0x240(%rbp),%r10
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r9
	movq %r14,%r11
	movq %r9,%r14
	xchgq %r13,%r15
	jmp L_308305
.p2align 0x4
L_506224:
L_308887:
	movq 0x240(%rbp),%r11
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r9
	movq %r15,%r10
	movq %r14,%r15
	movq %r9,%r14
	jmp L_308306
.p2align 0x4
L_506225:
L_308888:
	cmpq $0x1,0x230(%rbp)
	je L_506226
L_308889:
L_308890:
	movq $0x1,%r9
	movq 0x240(%rbp),%r10
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r14
	xchgq %r9,%r11
	xchgq %r13,%r15
	jmp L_308305
.p2align 0x4
L_506226:
L_308891:
	movq $0x1,%r9
	movq 0x240(%rbp),%r8
	xorl %ecx,%ecx
	movq 0x220(%rbp),%r14
	xchgq %r8,%r11
	movq %r15,%r10
	movq %r9,%r15
	jmp L_308306
.p2align 0x4
L_506227:
L_308892:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0xA9(%rbp),%r13d
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r13d
	movzbl 0x1D1(%rbp),%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x238(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_308300
.p2align 0x4
L_506228:
L_308898:
	movl $0x1,%ecx
	jmp L_308298
.p2align 0x4
L_506229:
L_308897:
	movl $0x2,%ecx
	jmp L_308298
.p2align 0x4
L_506230:
L_308894:
	movl $0x4,%ecx
	jmp L_308298
.p2align 0x4
.long 0x4B13
L_308953:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308954
L_308971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_308972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308972
.p2align 0x4
.long 0x4B19
L_308972:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_308954:
	movl 0x21C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506238
L_308955:
	movl 0x248(%rbp),%r14d
	movw %r14w,%r15w
L_308956:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x1D8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x22CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movzbl 0x1D1(%rbp),%ecx
	movl %ecx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x238(%rbp),%r10
	movq %r10,0x10(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x1247,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movzwl %r15w,%r10d
	movl %r10d,0x4(%r11)
	movq %r13,0x8(%r11)
	movq $0x2317,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2309,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x256F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movzwl %r15w,%r9d
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x220(%rbp),%r9
	movq %r9,0x8(%r13)
	movq 0x210(%rbp),%r9
	cmpq $0x1,%r9
	je L_506236
L_308957:
	movq 0x8(%r9),%r15
	movw 0x0(%r9),%r8w
	movl 0x1D4(%rbp),%r9d
	testl %r9d,%r9d
	jnz L_506234
L_308958:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movzwl %r8w,%ecx
	movl %ecx,0x0(%r10)
	movl $0x0,0x4(%r10)
	cmpq $0x1,0x230(%rbp)
	je L_506233
L_308959:
L_308960:
	movq 0x240(%rbp),%r11
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r15
	xchgq %r13,%r14
	jmp L_308305
.p2align 0x4
L_506233:
L_308961:
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r9
	movq 0x240(%rbp),%r15
	movq %r10,%r11
	movq %r14,%r10
	movq %r13,%r14
	movq %r9,%r13
	jmp L_308306
.p2align 0x4
L_506234:
L_308962:
	cmpq $0x1,0x230(%rbp)
	je L_506235
L_308963:
L_308964:
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r9
	movq 0x240(%rbp),%r11
	movq %r15,%r10
	movq %r9,%r15
	xchgq %r13,%r14
	jmp L_308305
.p2align 0x4
L_506235:
L_308965:
	movq 0x240(%rbp),%r9
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r8
	movq %r15,%r11
	movq %r9,%r15
	movq %r14,%r10
	movq %r13,%r14
	movq %r8,%r13
	jmp L_308306
.p2align 0x4
L_506236:
L_308966:
	cmpq $0x1,0x230(%rbp)
	je L_506237
L_308967:
L_308968:
	movq 0x240(%rbp),%r11
	movq $0x1,%r10
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r15
	xchgq %r13,%r14
	jmp L_308305
.p2align 0x4
L_506237:
L_308969:
	movq 0x240(%rbp),%r15
	movq $0x1,%r11
	xorl %ecx,%ecx
	movq 0x228(%rbp),%r8
	movq %r14,%r10
	movq %r13,%r14
	movq %r8,%r13
	jmp L_308306
.p2align 0x4
L_506238:
L_308970:
	movl 0x248(%rbp),%r14d
	shrl $0x10,%r14d
	movw %r14w,%r15w
	jmp L_308956
.p2align 0x4
.long 0x4A9D
L_308332:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	movb 0x84(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movb $0x0,0x219(%rbp)
	movq $0x1,0x220(%rbp)
	movq $0x1,0x228(%rbp)
	movq %r15,0x230(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x218,%rbp
	leaq (L_308333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4AA3
L_308352:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x218(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AC6
L_308650:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308651
L_308654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308655
.p2align 0x4
.long 0x4ADD
L_308655:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308651:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
	jmp label_6
.p2align 0x4
.long 0x4AC6
L_308658:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308659
L_308660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308661
.p2align 0x4
.long 0x4ADD
L_308661:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308659:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
	jmp label_6
.p2align 0x4
.long 0x4AE0
L_308679:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308680
L_308688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308689
.p2align 0x4
.long 0x4AE4
L_308689:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308680:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
	jmp memloc_label_1
.p2align 0x4
.long 0x4AE0
L_308692:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308693
L_308694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308695
.p2align 0x4
.long 0x4AE4
L_308695:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308693:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x54(%rbp),%ecx
	jmp memloc_label_1
.p2align 0x4
.long 0x4AE1
L_308681:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movb $0x0,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4AC8
L_308491:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14DF,%r13
	je L_506244
L_308576:
	movq 0x28(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_308493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2183
.p2align 0x4
L_506244:
L_308492:
	movq 0x30(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_308493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2184
.p2align 0x4
.long 0x4ACD
L_308585:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308586
L_308587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_308588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308588
.p2align 0x4
.long 0x4ACE
L_308588:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_308586:
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r15
L_308495:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_506245
L_308496:
	xchgq %r14,%r15
	jmp L_308497
.p2align 0x4
L_506245:
L_308573:
	movq $0x1,%r11
	movq $0x1,%r10
	movq %r15,%r13
	movq %r14,%r15
	movq %r10,%r14
	jmp L_308502
.p2align 0x4
.long 0x4ACF
L_308590:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x1D0(%rbp)
	movq $0x3,0x1D8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B47
L_309094:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BDC
L_309963:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A9E
L_308333:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308334
L_308851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308852
.p2align 0x4
.long 0x4B02
L_308852:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308334:
	movq $0x119F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl (globalWord16+0xDA)(%rip),%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2565,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506249
L_308335:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_308336:
	incl %ecx
	jo L_308060
L_308337:
	cmpq $0x1,%r15
	je L_506247
L_308338:
	movq 0x8(%r15),%r15
	jmp L_308336
.p2align 0x4
L_506247:
L_308339:
L_308340:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movslq %ecx,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x120(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	movq %r14,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506249:
L_308850:
	xorl %ecx,%ecx
	jmp L_308340
.p2align 0x4
.long 0x4AA4
L_308353:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308354
L_308806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308807
.p2align 0x4
.long 0x4AFB
L_308807:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308354:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4AE2
L_308682:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb $0x2,0x1D0(%rbp)
	movb $0x0,0x1D1(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1D0,%rbp
	leaq (memloc_102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4AC9
L_308493:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308494
L_308574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_308575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308575
.p2align 0x4
.long 0x4ACC
L_308575:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_308494:
	movq 0x18(%rbp),%r14
	movq 0x30(%rbp),%r15
	jmp L_308495
.p2align 0x4
.long 0x4AD0
L_308591:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x1D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B48
L_309095:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BDD
L_309964:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x1A0(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_309965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A9F
L_308341:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4AA5
L_308355:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x228(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4AE3
memloc_102:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308683
L_308686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308687
.p2align 0x4
.long 0x4ADD
L_308687:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308683:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x69C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506253
L_308684:
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x54(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_308459
.p2align 0x4
L_506253:
L_308685:
	movl 0x50(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,%r14
	jmp L_308463
.p2align 0x4
.long 0x4AD1
L_308592:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308593
L_308599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308600
.p2align 0x4
.long 0x4AD4
L_308600:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308593:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1D0(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (immediate_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B49
L_309096:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309097
L_309180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309181
.p2align 0x4
.long 0x4B6A
L_309181:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309097:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BDE
L_309965:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309966
L_310412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_310413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310413
.p2align 0x4
.long 0x4C4E
L_310413:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_309966:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x198(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1A0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AA0
L_308342:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq %r15,0x218(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AA6
L_308356:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x50(%rbp)
	movb 0x108(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x219(%rbp)
	movq $0x1,0x220(%rbp)
	movq 0xF8(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x230(%rbp)
	movq $0x1,0x238(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x218,%rbp
	leaq (L_308357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4AD2
immediate_68:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308594
L_308597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308598
.p2align 0x4
.long 0x4AD3
L_308598:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308594:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x118(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movl 0x1B4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506258
L_308595:
	movq %r14,0x30(%rbp)
	jmp L_308486
.p2align 0x4
L_506258:
L_308596:
	movq %r14,0x18(%rbp)
	jmp L_308584
.p2align 0x4
.long 0x4B4A
L_309098:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4BDF
L_309967:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A98
L_308343:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308344
L_308848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308849
.p2align 0x4
.long 0x4B01
L_308849:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308344:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (immediate_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4AA7
L_308357:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x100(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x20(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x128(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x130(%rbp)
	movq %r13,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B4B
L_309099:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BE0
L_309968:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4AA1
immediate_66:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x280,%r15
	jnb L_308345
L_308846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x280,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308847
.p2align 0x4
.long 0x4B00
L_308847:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308345:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r14d
	movl %r14d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1249,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movzwl (globalWord16+0xDA)(%rip),%r11d
	movl %r11d,0x4(%r14)
	movq %r13,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506262
L_308346:
L_308347:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_506261
L_308348:
	movq %r13,0xB0(%rbp)
	movl 0x80(%rbp),%r14d
	movl %r14d,0x84(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x80(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
	jmp L_308349
.p2align 0x4
L_506261:
L_308809:
	movq %r13,0x50(%rbp)
	movl 0x80(%rbp),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x108(%rbp),%r14
	movq %r14,0x58(%rbp)
	jmp L_308810
.p2align 0x4
L_506262:
L_308843:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_506263
L_308844:
	movq %r15,0xB0(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl 0x4(%r13),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
	jmp L_308349
.p2align 0x4
L_506263:
L_308845:
	movq %r15,0x50(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_308810
.p2align 0x4
.long 0x4AA8
L_308358:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B4C
L_309100:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4BE1
L_309969:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AA9
L_308359:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x218(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B4D
L_309101:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BE2
L_309970:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x190(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_309971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4AAA
L_308360:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308361
L_308804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308805
.p2align 0x4
.long 0x4AFA
L_308805:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308361:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B4E
L_309102:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BE3
L_309971:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_309972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AAB
L_308362:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x108(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x228(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B4F
L_309103:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x1B0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BE4
L_309972:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309973
L_310410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_310411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310411
.p2align 0x4
.long 0x4C4D
L_310411:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_309973:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_309974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_0
.p2align 0x4
.long 0x4AAC
L_308363:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x100(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x219(%rbp)
	movq $0x1,0x220(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x230(%rbp)
	movq $0x1,0x238(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x218,%rbp
	leaq (memloc_98+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B50
L_309104:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309105
L_309178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309179
.p2align 0x4
.long 0x4B6A
L_309179:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309105:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BE5
L_309974:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reduceP_0
.p2align 0x4
.long 0x4AAD
memloc_98:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308364
L_308802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308803
.p2align 0x4
.long 0x4AF9
L_308803:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308364:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (memloc_99+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B4B
L_309106:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4BE6
L_309975:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl 0x1AC(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x1C0(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x150(%rbp)
	movq %r15,0x1A0(%rbp)
	movq %r13,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4AAE
memloc_99:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308365
L_308800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308801
.p2align 0x4
.long 0x4AF8
L_308801:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308365:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	addq $0x218,%rbp
	leaq (L_308366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B51
L_309107:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1B0(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BE7
L_309976:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_506270
L_309977:
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506270:
L_309981:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x1A0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4AAF
L_308366:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	movq %r14,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B52
memloc_111:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309108
L_309176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309177
.p2align 0x4
.long 0x4B69
L_309177:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309108:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movslq 0x28(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
bug_655:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309978
L_309979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_309980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309980
.p2align 0x4
.long 0x452
L_309980:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_309978:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BE8
L_309982:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AB0
L_308367:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B53
L_309109:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x1B0(%rbp)
	movq $0x3,0x1B8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BE9
L_309983:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4AB1
L_308368:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x218(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B54
L_309110:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x1B0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BEA
L_309984:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AB2
L_308369:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308370
L_308798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308799
.p2align 0x4
.long 0x4AF7
L_308799:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308370:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4B55
L_309111:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309112
L_309174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309175
.p2align 0x4
.long 0x4B68
L_309175:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309112:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (immediate_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BEB
L_309985:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309986
L_310408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310409
.p2align 0x4
.long 0x4C4C
L_310409:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_309986:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpl $0x8,0x34(%rbp)
	jl L_506275
L_309987:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506275:
L_310007:
	movq 0x18(%rbp),%r14
	movq 0x178(%r14),%r13
	movq %r13,0x198(%rbp)
	movq 0x170(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x168(%r14),%r13
	movq %r13,0x188(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x160(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x158(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x150(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x148(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x140(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x138(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x130(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x128(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x120(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x118(%r14),%r15
	movb 0x5(%r14),%r13b
	movb %r13b,0xA9(%rbp)
	movq 0x110(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x108(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x100(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0xF8(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0xF0(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0xE8(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0xE0(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xD8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0xB8(%rbp)
	movb 0x4(%r14),%r13b
	movb %r13b,0xA8(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r14),%r14
	movq %r14,0x18(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq %r15,0x138(%rbp)
	movq %r13,%r15
	jmp x_1034
.p2align 0x4
.long 0x4AB3
L_308371:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x228(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B56
immediate_72:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309113
L_309172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309173
.p2align 0x4
.long 0x4B67
L_309173:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309113:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x4BEC
L_309988:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jnz L_506278
L_309989:
	movq (globalObjptr+0x1948)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506278:
L_309993:
	movq 0x170(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x4AB4
L_308372:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x108(%rbp),%r14b
	movb %r14b,0x218(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x219(%rbp)
	movq $0x1,0x220(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x230(%rbp)
	movq $0x1,0x238(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x218,%rbp
	leaq (L_308373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B57
L_309114:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309116
L_309170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309171
.p2align 0x4
.long 0x4B66
L_309171:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309116:
	movq 0x40(%rbp),%r15
	andq $0x3,%r15
	jz L_506291
L_309117:
	movq $0x1,%r15
L_309118:
	movq $0x22BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x22BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_506290
L_309119:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_309120:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506289
.p2align 0x4,,0x7
L_309121:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_309128
L_309122:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_309123:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_506286
L_309124:
	cmpq $0x1,%r14
	je L_506279
L_309125:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_309123
.p2align 0x4
L_506279:
L_309126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506285
.p2align 0x4,,0x7
L_309128:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506280
L_309129:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_309120
.p2align 0x4
L_506280:
L_309130:
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_309131:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506284
.p2align 0x4,,0x7
L_309132:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506282
L_309133:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_506281
L_309134:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	jmp L_309120
.p2align 0x4
L_506281:
L_309135:
	movq %r14,0x18(%rbp)
	jmp L_309131
.p2align 0x4
L_506282:
L_309136:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x98(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_506283
L_309137:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0xA8(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x22F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r11b
	movzbl %r11b,%r10d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506283:
L_309148:
	movq $0x22F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r14b
	movzbl %r14b,%r13d
	movzbl 0xA8(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506284:
L_309154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309155
.p2align 0x4
.long 0x4B62
L_309155:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_309132
.p2align 0x4
L_506285:
L_309156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309157
.p2align 0x4
.long 0x4B63
L_309157:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_309128
.p2align 0x4
L_506286:
L_309158:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506287
L_309159:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_309120
.p2align 0x4
L_506287:
L_309160:
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_309131
.p2align 0x4
L_506289:
L_309162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309163
.p2align 0x4
.long 0x4B63
L_309163:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_309121
.p2align 0x4
L_506290:
L_309164:
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_309131
.p2align 0x4
L_506291:
L_309165:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x1
bug_656:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309990
L_309991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_309992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309992
.p2align 0x4
.long 0x452
L_309992:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_309990:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BED
L_309994:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AB5
L_308373:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4B58
L_309138:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb $0x0,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B5E
L_309149:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movb $0x0,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4B64
L_309166:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309167
L_309168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309169
.p2align 0x4
.long 0x4B65
L_309169:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309167:
	movq 0x18(%rbp),%r15
	jmp L_309118
.p2align 0x4
.long 0x4BEE
L_309995:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AB6
L_308374:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_308375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4B59
L_309139:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movb $0x2,0x1B0(%rbp)
	movb $0x0,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq $0x1,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4B5F
L_309150:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb $0x2,0x1B0(%rbp)
	movb $0x0,0x1B1(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq $0x1,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1B0,%rbp
	leaq (memloc_113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BEF
L_309996:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4AB7
L_308375:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movl %r15d,0x218(%rbp)
	movq $0x3,0x220(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4B5A
memloc_112:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309140
L_309146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309147
.p2align 0x4
.long 0x4B5D
L_309147:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309140:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2307,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r11)
	movq %r14,0x10(%r11)
	movq $0x1,0x18(%r11)
	movq $0x1,0x20(%r11)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x22DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0xC0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_309141:
	movq %r15,0x1E0(%rbp)
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_309142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2182
.p2align 0x4
.long 0x4B60
memloc_113:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309151
L_309152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309153
.p2align 0x4
.long 0x4B61
L_309153:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309151:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0xA8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2307,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_309141
.p2align 0x4
.long 0x4BF0
L_309997:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_309998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4AB8
L_308376:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x218(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_308377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4B5B
L_309142:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309143
L_309144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_309145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_309145
.p2align 0x4
.long 0x4B5C
L_309145:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_309143:
	movq 0x18(%rbp),%r14
	movq 0x48(%rbp),%r15
	jmp L_309037
.p2align 0x4
.long 0x4BF1
L_309998:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_309999
L_310405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310406
.p2align 0x4
.long 0x4C4B
L_310406:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_309999:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movslq 0x34(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4AB9
L_308377:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308378
L_308796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_308797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308797
.p2align 0x4
.long 0x4AF6
L_308797:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_308378:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x218(%rbp)
	addq $0x10,%r12
	movq 0x1E0(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_308379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BF2
L_310000:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4ABA
L_308379:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movb 0xAB(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movq %r15,0x218(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x210,%rbp
	leaq (L_308380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4BF2
L_310001:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4ABB
L_308380:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movb 0xAB(%rbp),%r14b
	movb %r14b,0x1D1(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	movq $0x1,0x1F0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1D0,%rbp
	leaq (memloc_100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BF2
L_310002:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310003
L_310403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310404
.p2align 0x4
.long 0x4C4A
L_310404:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310003:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1A8(%rbp)
	movl $0x0,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
.long 0x4ABC
memloc_100:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308381
L_308794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308795
.p2align 0x4
.long 0x4AF5
L_308795:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308381:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movslq 0x80(%rbp),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x110(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x128(%rbp)
	movq %r14,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BF3
L_310004:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310005
L_310401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310402
.p2align 0x4
.long 0x4C49
L_310402:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310005:
	movl 0x34(%rbp),%r14d
	testl %r14d,%r14d
	jz L_310007
L_310008:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506308
L_310009:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,%r15
.p2align 0x4,,0x7
L_310010:
	cmpq $0x1,%r15
	jne L_506307
L_310399:
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_310018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506306
.p2align 0x4,,0x7
L_310019:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_310025
L_310020:
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
L_310021:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506304
.p2align 0x4,,0x7
L_310022:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_506302
L_310023:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_310021
.p2align 0x4
L_506302:
L_310025:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506303
L_310026:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_310010
.p2align 0x4
L_506303:
L_310027:
	movq %r15,0x18(%rbp)
L_310028:
	movq 0x98(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_506304:
L_310380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310381
.p2align 0x4
.long 0x4C46
L_310381:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_310022
.p2align 0x4
L_506306:
L_310383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310384
.p2align 0x4
.long 0x4C47
L_310384:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_310019
.p2align 0x4
L_506307:
L_310011:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x68(%rbp)
L_310012:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movl $0x0,0x1A0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
L_506308:
L_310400:
	movq $0x1,0x18(%rbp)
	jmp L_310028
.p2align 0x4
.long 0x4ABD
L_308382:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movl 0x1D0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0x1D0(%rbp)
	movq $0x3,0x1D8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BF5
L_310029:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310030
L_310378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310379
.p2align 0x4
.long 0x4C45
L_310379:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310030:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x11100)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_310031:
	movl %r14d,0x0(%r15)
	movq $0x40FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x148(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x18(%r15)
	movq $0x2917,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x18F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1C8(%rbp)
	movq %r13,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp filler_0
.p2align 0x4
.long 0x4BF4
L_310013:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310014
L_310397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310398
.p2align 0x4
.long 0x4C48
L_310398:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310014:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506314
L_310015:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_506313
L_310016:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_310012
.p2align 0x4
L_506313:
L_310017:
	movq %r15,0x40(%rbp)
	jmp L_310018
.p2align 0x4
L_506314:
L_310385:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_310391
L_310386:
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_310387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506317
.p2align 0x4,,0x7
L_310388:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_506315
L_310389:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_310387
.p2align 0x4
L_506315:
L_310391:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506316
L_310392:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_310010
.p2align 0x4
L_506316:
L_310393:
	movq %r15,0x18(%rbp)
	jmp L_310028
.p2align 0x4
L_506317:
L_310394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310395
.p2align 0x4
.long 0x4C46
L_310395:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_310388
.p2align 0x4
.long 0x4ABE
L_308383:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x1D0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BF6
L_310032:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310033
L_310376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310377
.p2align 0x4
.long 0x4C44
L_310377:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310033:
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_310034:
	movl %r14d,0x0(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq %r13,0x1A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
.long 0x4ABF
L_308384:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308385
L_308792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308793
.p2align 0x4
.long 0x4AF4
L_308793:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308385:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1D0(%rbp)
	addq $0x10,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (immediate_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BF7
L_310035:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310036
L_310374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310375
.p2align 0x4
.long 0x4C43
L_310375:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310036:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x4AC0
immediate_67:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308386
L_308790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308791
.p2align 0x4
.long 0x4AF3
L_308791:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308386:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x4BF8
L_310037:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_506325
L_310038:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x88(%rbp)
L_310039:
	movq 0x0(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
L_506325:
L_310373:
	movq %r14,0x18(%rbp)
L_310056:
	movq 0xC8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4AC1
L_308387:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_0
.p2align 0x4
.long 0x4BF9
L_310040:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_310053
L_310041:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r13,0xA0(%rbp)
	movq %r15,0xB0(%rbp)
.p2align 0x4,,0x7
L_310042:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506333
.p2align 0x4,,0x7
L_310043:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_310050
L_310044:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310045:
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506330
L_310046:
	cmpq $0x1,%r14
	je L_506326
L_310047:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310045
.p2align 0x4
L_506326:
L_310048:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506329
.p2align 0x4,,0x7
L_310050:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_506327
L_310051:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_310042
.p2align 0x4
L_506327:
L_310053:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506328
L_310054:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_310039
.p2align 0x4
L_506328:
L_310055:
	movq %r15,0x18(%rbp)
	jmp L_310056
.p2align 0x4
L_506329:
L_310364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310365
.p2align 0x4
.long 0x4C42
L_310365:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_310050
.p2align 0x4
L_506330:
L_310366:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_506331
L_310367:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_310042
.p2align 0x4
L_506331:
L_310368:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_310053
.p2align 0x4
L_506333:
L_310370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310371
.p2align 0x4
.long 0x4C42
L_310371:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_310043
.p2align 0x4
.long 0x4BFA
L_310057:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310058
L_310362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310363
.p2align 0x4
.long 0x4C41
L_310363:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310058:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11108)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4AC2
L_308388:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308389
L_308788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308789
.p2align 0x4
.long 0x4AF2
L_308789:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308389:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_506362
L_308390:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x108(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_308391:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506361
.p2align 0x4,,0x7
L_308392:
	movq 0x108(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_506336
L_308393:
	movq %r14,0x110(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_308391
.p2align 0x4
L_506336:
L_308394:
	movq %r15,0x108(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_308395:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506360
.p2align 0x4,,0x7
L_308396:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506337
L_308397:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_308395
.p2align 0x4
L_506337:
L_308398:
	movq %r15,0x30(%rbp)
L_308399:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_308409
L_308400:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0x108(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_308401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506358
.p2align 0x4,,0x7
L_308402:
	movq 0x108(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506338
L_308403:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_308401
.p2align 0x4
L_506338:
L_308404:
	movq 0x110(%rbp),%r15
.p2align 0x4,,0x7
L_308405:
	cmpq $0x1,%r15
	je L_506339
L_308406:
	movq 0x8(%r15),%r15
	jmp L_308405
.p2align 0x4
L_506339:
L_308407:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308409
L_308778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308779
.p2align 0x4
.long 0x4AF0
L_308779:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308409:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506356
L_308410:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_308411:
L_308412:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_308413
L_308745:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	jne L_506352
L_308746:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_308753
L_308747:
	movq 0x8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq $0x1,0x120(%rbp)
L_308748:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506350
.p2align 0x4,,0x7
L_308749:
	movq 0x110(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_506344
L_308750:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_506340
L_308751:
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x108(%rbp)
	movq %r14,0x110(%rbp)
	jmp L_308748
.p2align 0x4
L_506340:
L_308753:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506341
L_308754:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_308411
.p2align 0x4
L_506341:
L_308755:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308756
L_308757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308758
.p2align 0x4
.long 0x4AED
L_308758:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308756:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
L_308417:
	movq 0x98(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_506342
L_308418:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0xA8(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x22F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r11b
	movzbl %r11b,%r10d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506342:
L_308737:
	movq $0x22F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r14b
	movzbl %r14b,%r13d
	movzbl 0xA8(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506344:
L_308759:
	movq 0x120(%rbp),%r14
	cmpq $0x1,%r14
	je L_506349
L_308760:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
L_308761:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506348
.p2align 0x4,,0x7
L_308762:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_506345
L_308763:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_308761
.p2align 0x4
L_506345:
L_308764:
	movq %r15,0x78(%rbp)
L_308765:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506346
L_308766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_308411
.p2align 0x4
L_506346:
L_308767:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308768
L_308769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308770
.p2align 0x4
.long 0x4AED
L_308770:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308768:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_308417
.p2align 0x4
L_506348:
L_308771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308772
.p2align 0x4
.long 0x4AEE
L_308772:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308762
.p2align 0x4
L_506349:
L_308773:
	movq 0x108(%rbp),%r13
	movq %r13,0x78(%rbp)
	jmp L_308765
.p2align 0x4
L_506350:
L_308774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308775
.p2align 0x4
.long 0x4AEF
L_308775:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308749
.p2align 0x4
L_506352:
L_308413:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506353
L_308414:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_308411
.p2align 0x4
L_506353:
L_308415:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308416
L_308743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308744
.p2align 0x4
.long 0x4AED
L_308744:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308416:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_308417
.p2align 0x4
L_506356:
L_308777:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_308417
.p2align 0x4
L_506358:
L_308780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308781
.p2align 0x4
.long 0x4AF1
L_308781:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308402
.p2align 0x4
L_506360:
L_308783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308784
.p2align 0x4
.long 0x4AF1
L_308784:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308396
.p2align 0x4
L_506361:
L_308785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308786
.p2align 0x4
.long 0x4AF1
L_308786:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308392
.p2align 0x4
L_506362:
L_308787:
	movq $0x1,0x30(%rbp)
	jmp L_308399
.p2align 0x4
.long 0x4BFA
L_310059:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movb $0x0,0x1A0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4AC3
L_308419:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movb $0x0,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4AE9
L_308738:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movb $0x0,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_308739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4BFB
L_310060:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb $0x2,0x1A0(%rbp)
	movb $0x0,0x1A1(%rbp)
	movq $0x1,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4AC4
L_308420:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movb $0x2,0x1D0(%rbp)
	movb $0x0,0x1D1(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1D0,%rbp
	leaq (memloc_101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4AEA
L_308739:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb $0x2,0x1D0(%rbp)
	movb $0x0,0x1D1(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq $0x1,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1D0,%rbp
	leaq (memloc_103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BFC
L_310061:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4AC5
memloc_101:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x2B8,%r15
	jnb L_308421
L_308735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x2B8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308736
.p2align 0x4
.long 0x4AE8
L_308736:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308421:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2307,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r11)
	movq %r14,0x10(%r11)
	movq $0x1,0x18(%r11)
	movq $0x1,0x20(%r11)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x22DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movzbl %r15b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0xC0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
L_308422:
	movq $0x2307,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_506384
L_308423:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_308424:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506383
.p2align 0x4,,0x7
L_308425:
	movq 0x60(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x150(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_308720
L_308426:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_308427:
	movl 0x0(%r15),%r11d
	movl %r11d,0x70(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x74(%rbp)
	cmpl %r10d,%r11d
	jnl L_506378
L_308725:
	cmpq $0x1,%r13
	je L_506364
L_308726:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_308427
.p2align 0x4
L_506364:
L_308727:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506377
.p2align 0x4,,0x7
L_308720:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506365
L_308721:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_308424
.p2align 0x4
L_506365:
L_308433:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2307,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq 0x158(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r15,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2551,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_308434:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506376
.p2align 0x4,,0x7
L_308435:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506375
L_308436:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x30(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_308437:
	cmpq $0x1,%r14
	jne L_506374
L_308440:
	cmpq $0x1,%r15
	je L_506366
L_308441:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_308437
.p2align 0x4
L_506366:
L_308442:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_308443
L_308714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308715
.p2align 0x4
.long 0x4AE6
L_308715:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308443:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_506372
L_308444:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_308445:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506371
.p2align 0x4,,0x7
L_308446:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506367
L_308447:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_308445
.p2align 0x4
L_506367:
L_308449:
	cmpq $0x1,%r15
	je L_506369
L_308450:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x190(%rbp),%r15
	cmpq $0x1,%r15
	je L_506368
L_308451:
	movq %r14,0x68(%rbp)
	movq %r15,0x30(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_308452
.p2align 0x4
L_506368:
L_308704:
	movl 0x84(%rbp),%ecx
	movq 0xB0(%rbp),%r11
	movq 0xF0(%rbp),%r10
	xchgq %r10,%r15
	movq %r14,%r13
	movq %r11,%r14
	jmp L_308705
.p2align 0x4
L_506369:
L_308708:
	movq 0x190(%rbp),%r15
	cmpq $0x1,%r15
	je L_506370
L_308709:
	movq %r15,0x30(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_308452
.p2align 0x4
L_506370:
L_308710:
	movl 0x84(%rbp),%ecx
	movq 0xB0(%rbp),%r14
	movq 0xF0(%rbp),%r11
	movq $0x1,%r13
	xchgq %r11,%r15
	jmp L_308705
.p2align 0x4
L_506371:
L_308711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308712
.p2align 0x4
.long 0x4AE5
L_308712:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308446
.p2align 0x4
L_506372:
L_308713:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_308449
.p2align 0x4
L_506374:
L_308438:
	movq %r14,0x50(%rbp)
L_308439:
	movq 0x30(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_308434
.p2align 0x4
L_506375:
L_308716:
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_308445
.p2align 0x4
L_506376:
L_308717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308718
.p2align 0x4
.long 0x4AE5
L_308718:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308435
.p2align 0x4
L_506377:
L_308729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308730
.p2align 0x4
.long 0x4AE7
L_308730:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308720
.p2align 0x4
L_506378:
L_308428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506381
.p2align 0x4,,0x7
L_308429:
	movl 0x70(%rbp),%r15d
	cmpl %r15d,0x74(%rbp)
	jl L_308720
L_308430:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_506379
L_308431:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_308424
.p2align 0x4
L_506379:
L_308432:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
	jmp L_308433
.p2align 0x4
L_506381:
L_308723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308724
.p2align 0x4
.long 0x4AE7
L_308724:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308429
.p2align 0x4
L_506383:
L_308732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308733
.p2align 0x4
.long 0x4AE7
L_308733:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_308425
.p2align 0x4
L_506384:
L_308734:
	movq $0x1,%r15
	jmp L_308433
.p2align 0x4
.long 0x4AEB
memloc_103:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x240,%r15
	jnb L_308740
L_308741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x240,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_308742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_308742
.p2align 0x4
.long 0x4AEC
L_308742:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_308740:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2307,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	jmp L_308422
.p2align 0x4
.long 0x4BFD
L_310062:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310063
L_310360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310361
.p2align 0x4
.long 0x4C40
L_310361:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310063:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11110)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4BFD
L_310064:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb $0x0,0x1A0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4BFE
L_310065:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movb $0x2,0x1A0(%rbp)
	movb $0x0,0x1A1(%rbp)
	movq $0x1,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4BFF
L_310066:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310067
L_310358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310359
.p2align 0x4
.long 0x4C3F
L_310359:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310067:
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C00
L_310068:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movb $0x2,0x1A0(%rbp)
	movb $0x0,0x1A1(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_310069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4C01
L_310069:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310070
L_310356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_310357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310357
.p2align 0x4
.long 0x4C3E
L_310357:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_310070:
	movq 0x140(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_506405
	cmpq $0x2,%r14
	je L_506401
L_310071:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115F,%r14
	je L_506400
	cmpq $0x1160,%r14
	je L_506399
	cmpq $0x1161,%r14
	je L_506398
L_310072:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%dl
L_310073:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpb $0x1,%dl
	je L_310340
	cmpb $0x3,%dl
	je L_506396
	cmpb $0x4,%dl
	je L_506395
	cmpb $0x5,%dl
	je L_506394
L_310075:
	movl $0x8,%ecx
L_310076:
	cmpl $0x8,%ecx
	jnl L_506392
L_310336:
	movq $0x22DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movzbl %dl,%r14d
	shll $0x10,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x190(%rbp)
	je L_506391
L_310337:
L_310079:
	movq %r15,0xC8(%rbp)
	movq $0x2307,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x190(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
L_310080:
	cmpl $0x0,0x30(%rbp)
	jng L_506390
L_310214:
	movq (globalObjptr+0x6900)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_308060
L_310215:
	movl %r14d,0x0(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq %r13,0x188(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
L_506390:
L_310082:
	movq $0x1,0x20(%rbp)
L_310083:
	movq 0x158(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_310084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506391:
L_310338:
	movq %r15,0xC8(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_310080
.p2align 0x4
L_506392:
L_310077:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x190(%rbp)
	je L_506393
L_310078:
	jmp L_310079
.p2align 0x4
L_506393:
L_310335:
	movq %r15,0xC8(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_310080
.p2align 0x4
L_506394:
L_310344:
	movl $0x1,%ecx
	jmp L_310076
.p2align 0x4
L_506395:
L_310343:
	movl $0x2,%ecx
	jmp L_310076
.p2align 0x4
L_506396:
L_310340:
	movl $0x4,%ecx
	jmp L_310076
.p2align 0x4
L_506398:
L_310347:
	movb $0x2,%dl
	jmp L_310073
.p2align 0x4
L_506399:
L_310346:
	movb $0x2,%dl
	jmp L_310073
.p2align 0x4
L_506400:
L_310345:
	movb $0x2,%dl
	jmp L_310073
.p2align 0x4
L_506401:
L_310351:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%dl
	cmpb $0x1,%dl
	je L_506404
	cmpb $0x2,%dl
	je L_506403
	cmpb $0x3,%dl
	je L_506402
L_310352:
	movb $0x5,%dl
	jmp L_310073
.p2align 0x4
L_506402:
L_310355:
	movb $0x2,%dl
	jmp L_310073
.p2align 0x4
L_506403:
L_310354:
	movb $0x3,%dl
	jmp L_310073
.p2align 0x4
L_506404:
L_310353:
	movb $0x4,%dl
	jmp L_310073
.p2align 0x4
L_506405:
L_310348:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_506406
L_310349:
	movb $0x1,%dl
	jmp L_310073
.p2align 0x4
L_506406:
L_310350:
	xorb %dl,%dl
	jmp L_310073
.p2align 0x4
.long 0x4C19
L_310216:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movl 0x198(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310217
L_310333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_310334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310334
.p2align 0x4
.long 0x4C3D
L_310334:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_310217:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x28,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_310218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_0
.p2align 0x4
.long 0x4C02
L_310084:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310085
L_310212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310213
.p2align 0x4
.long 0x4C18
L_310213:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310085:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_310087
L_310205:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310206
L_310210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310211
.p2align 0x4
.long 0x4C18
L_310211:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310206:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x160(%rbp),%rsi
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_310207:
	testl %eax,%eax
	jz L_506409
L_310209:
	movq $0x1,0x28(%rbp)
L_310089:
	movq $0x2307,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movzwl (globalWord16+0xDA)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x230B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x22B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (immediate_75+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506409:
L_310087:
	movq $0x22B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (immediate_74+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C1A
L_310218:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310219
L_310331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_310332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310332
.p2align 0x4
.long 0x4C3C
L_310332:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_310219:
	movq $0x22DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_310220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C04
immediate_75:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310090
L_310201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310202
.p2align 0x4
.long 0x4C16
L_310202:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310090:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x7,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_310091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4C03
immediate_74:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310088
L_310203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310204
.p2align 0x4
.long 0x4C17
L_310204:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310088:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movb $0x2,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_310089
.p2align 0x4
.long 0x4C1B
L_310220:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C05
L_310091:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310092
L_310199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310200
.p2align 0x4
.long 0x4C14
L_310200:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310092:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_310099
L_310093:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310094:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506418
L_310095:
	cmpq $0x1,%r14
	je L_506416
L_310096:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310094
.p2align 0x4
L_506416:
L_310097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310099
L_310195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310196
.p2align 0x4
.long 0x4C14
L_310196:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310099:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
L_310100:
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_310101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506418:
L_310197:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_310100
.p2align 0x4
.long 0x4C1C
L_310221:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x3,0x180(%rbp)
	movq %r15,0x188(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4C06
L_310101:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310102
L_310193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310194
.p2align 0x4
.long 0x4C14
L_310194:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310102:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_310109
L_310103:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310104:
	movq 0x70(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_506423
L_310105:
	cmpq $0x1,%r14
	je L_506421
L_310106:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310104
.p2align 0x4
L_506421:
L_310107:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310109
L_310186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310187
.p2align 0x4
.long 0x4C14
L_310187:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310109:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_310110:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_310111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506423:
L_310188:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310189
L_310190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310191
.p2align 0x4
.long 0x4C15
L_310191:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310189:
	movq 0x60(%rbp),%r15
	jmp L_310110
.p2align 0x4
.long 0x4C1D
L_310222:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_310223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C07
L_310111:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310112
L_310184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310185
.p2align 0x4
.long 0x4C13
L_310185:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310112:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_310119
L_310113:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310114:
	movq 0x68(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_310120
L_310115:
	cmpq $0x1,%r14
	je L_506427
L_310116:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310114
.p2align 0x4
L_506427:
L_310117:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310119
L_310180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310181
.p2align 0x4
.long 0x4C13
L_310181:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310119:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
L_310120:
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_310121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4C1E
L_310223:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C08
L_310121:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310122
L_310178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310179
.p2align 0x4
.long 0x4C11
L_310179:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310122:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_310129
L_310123:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310124:
	movq 0x68(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506434
L_310125:
	cmpq $0x1,%r14
	je L_506432
L_310126:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310124
.p2align 0x4
L_506432:
L_310127:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310129
L_310171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310172
.p2align 0x4
.long 0x4C11
L_310172:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310129:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_310130:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2307,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x18(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x20(%r13)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x130(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_310131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506434:
L_310173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310174
L_310175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310176
.p2align 0x4
.long 0x4C12
L_310176:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310174:
	movq 0x18(%rbp),%r15
	jmp L_310130
.p2align 0x4
.long 0x4C1F
L_310224:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x180(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C09
L_310131:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_310132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C20
L_310225:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310226
L_310329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_310330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310330
.p2align 0x4
.long 0x4C3B
L_310330:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_310226:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movslq 0x30(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_310227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C0A
L_310132:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x148(%rbp)
	movq $0x9,0x150(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_310133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C21
L_310227:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_310228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C0B
L_310133:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310134
L_310169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310170
.p2align 0x4
.long 0x4C10
L_310170:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310134:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x148(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_310135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C22
L_310228:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_310229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C0C
L_310135:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310136
L_310167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310168
.p2align 0x4
.long 0x4C0F
L_310168:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_310136:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x231F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x232B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x6910)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6378)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506449
L_310137:
	movq %r14,0x18(%rbp)
L_310138:
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_310139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506448
.p2align 0x4,,0x7
L_310140:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_506447
L_310141:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_310142:
	cmpq $0x1,%r15
	je L_506440
L_310143:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
L_310144:
	jmp L_310139
.p2align 0x4
L_506440:
L_310145:
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_310146:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506446
.p2align 0x4,,0x7
L_310147:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_506441
L_310148:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_310142
.p2align 0x4
L_506441:
L_310149:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_506445
L_310150:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_310151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506444
.p2align 0x4,,0x7
L_310152:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506442
L_310153:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_310151
.p2align 0x4
L_506442:
L_310155:
	cmpq $0x1,%r15
	je L_506443
L_310156:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x138(%rbp),%r15
	jmp L_308526
.p2align 0x4
L_506443:
L_310157:
	movq $0x1,%r14
	movq 0x138(%rbp),%r15
	jmp L_308526
.p2align 0x4
L_506444:
L_310158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310159
.p2align 0x4
.long 0x4C0D
L_310159:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_310152
.p2align 0x4
L_506445:
L_310160:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310155
.p2align 0x4
L_506446:
L_310161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310162
.p2align 0x4
.long 0x4C0E
L_310162:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_310147
.p2align 0x4
L_506447:
L_310163:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_310151
.p2align 0x4
L_506448:
L_310164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_310165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310165
.p2align 0x4
.long 0x4C0D
L_310165:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_310140
.p2align 0x4
L_506449:
L_310166:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_310146
.p2align 0x4
.long 0x4C23
L_310229:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310230
L_310327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310328
.p2align 0x4
.long 0x4C3A
L_310328:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310230:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_310231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1458
.p2align 0x4
.long 0x4C24
L_310231:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x178(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x100(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jnz L_506455
L_310319:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_308060
L_310320:
	movq 0x8(%r13),%rsi
	movq %rsi,%r15
	movq 0x0(%r13),%r11
	imulq %r14,%r15
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r15
	movq %r15,%rsi
	movq %r15,0xB8(%rbp)
	addq $0x0,%rsi
	jc L_506453
L_310322:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_310323
L_310325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310326
.p2align 0x4
.long 0x4C39
L_310326:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310323:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0x20(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_310324:
	movq %rax,0x20(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_310233:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_310234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506453:
L_310321:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_506455:
L_310232:
	notq %r15
	orq $0x1,%r15
	movq %r15,0x20(%rbp)
	jmp L_310233
.p2align 0x4
.long 0x4C25
L_310234:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0x170(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_310235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C26
L_310235:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_310236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C27
L_310236:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310237
L_310317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310318
.p2align 0x4
.long 0x4C38
L_310318:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310237:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C28
immediate_76:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310238
L_310315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310316
.p2align 0x4
.long 0x4C37
L_310316:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310238:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movb $0x2,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,0x0(%r15)
	je L_506457
L_310239:
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_77+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506457:
L_310314:
	movq $0x1,0x20(%rbp)
L_310241:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x8,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_310242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4C29
immediate_77:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310240
L_310312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310313
.p2align 0x4
.long 0x4C36
L_310313:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310240:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movb $0x2,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_310241
.p2align 0x4
.long 0x4C2A
L_310242:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310243
L_310310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310311
.p2align 0x4
.long 0x4C35
L_310311:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310243:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_310250
L_310244:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310245:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506462
L_310246:
	cmpq $0x1,%r14
	je L_506460
L_310247:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310245
.p2align 0x4
L_506460:
L_310248:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310250
L_310306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310307
.p2align 0x4
.long 0x4C35
L_310307:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310250:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
L_310251:
	movq 0x120(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_310252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506462:
L_310308:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_310251
.p2align 0x4
.long 0x4C2B
L_310252:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310253
L_310304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310305
.p2align 0x4
.long 0x4C34
L_310305:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310253:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_310260
L_310254:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_310255:
	movq 0xA8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506467
L_310256:
	cmpq $0x1,%r14
	je L_506465
L_310257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_310255
.p2align 0x4
L_506465:
L_310258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310260
L_310297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310298
.p2align 0x4
.long 0x4C34
L_310298:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310260:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_310261:
	movq $0x22FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x128(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_310262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506467:
L_310299:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310300
L_310301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310302
.p2align 0x4
.long 0x4C35
L_310302:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310300:
	movq 0x88(%rbp),%r15
	jmp L_310261
.p2align 0x4
.long 0x4C2C
L_310262:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movl %r15d,0x170(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_310263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C2D
L_310263:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x170(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_310264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C2E
L_310264:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310265
L_310295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310296
.p2align 0x4
.long 0x4C33
L_310296:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310265:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_78+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4C2F
immediate_78:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310266
L_310293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310294
.p2align 0x4
.long 0x4C32
L_310294:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310266:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movb $0x2,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_310267:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506480
.p2align 0x4,,0x7
L_310268:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506479
L_310269:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x20(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_310270:
	cmpq $0x1,%r14
	jne L_506478
L_310273:
	cmpq $0x1,%r15
	je L_506472
L_310274:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_310270
.p2align 0x4
L_506472:
L_310275:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_310276
L_310288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310289
.p2align 0x4
.long 0x4C31
L_310289:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_310276:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_506476
L_310277:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_310278:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506475
.p2align 0x4,,0x7
L_310279:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506473
L_310280:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_310278
.p2align 0x4
L_506473:
L_310282:
	cmpq $0x1,%r15
	je L_310082
L_310283:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_310083
.p2align 0x4
L_506475:
L_310285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310286
.p2align 0x4
.long 0x4C30
L_310286:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	jmp L_310279
.p2align 0x4
L_506476:
L_310287:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_310282
.p2align 0x4
L_506478:
L_310271:
	movq %r14,0x28(%rbp)
L_310272:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_310267
.p2align 0x4
L_506479:
L_310290:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_310278
.p2align 0x4
L_506480:
L_310291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_310292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_310292
.p2align 0x4
.long 0x4C30
L_310292:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	jmp L_310268
