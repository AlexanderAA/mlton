/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:40 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_2070
.hidden x_2070
x_2070:
L_271367:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271368
L_271371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_271372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271372
.p2align 0x4
.long 0x452
L_271372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_271368:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22C4,%r14
	je L_490916
L_271370:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x18(%rbp)
	jmp x_2045
.p2align 0x4
L_490916:
L_271369:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x18(%rbp)
	jmp x_2046
.text
.p2align 0x4
.globl x_2045
.hidden x_2045
x_2045:
L_271373:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271374
L_271386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271387
.p2align 0x4
.long 0x4AF
L_271387:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271374:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_271375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2067
.p2align 0x4
.long 0x5F0
L_271375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271376
L_271384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271385
.p2align 0x4
.long 0x638
L_271385:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271376:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_490919
L_271377:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2070
.p2align 0x4
L_490919:
L_271383:
	movq $0x1,%r14
	xchgq %r14,%r15
L_271380:
	movq $0x1C19,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x653
L_271378:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271379
L_271381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271382
.p2align 0x4
.long 0x654
L_271382:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271379:
	movq 0x20(%rbp),%r15
	jmp L_271380
.text
.p2align 0x4
.globl x_2076
.hidden x_2076
x_2076:
L_271388:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271389
L_271409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_271410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271410
.p2align 0x4
.long 0x460
L_271410:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_271389:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_271390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x522
L_271390:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271391
L_271407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271408
.p2align 0x4
.long 0x4E8
L_271408:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271391:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22DC,%r14
	je L_490923
L_271402:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_271403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2076
.p2align 0x4
L_490923:
L_271392:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x30,%rbp
	leaq (L_271393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x45A
L_271403:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271404
L_271405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271406
.p2align 0x4
.long 0x509
L_271406:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271404:
	movq 0x28(%rbp),%r15
L_271397:
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2
L_271393:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271394
L_271400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271401
.p2align 0x4
.long 0x520
L_271401:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271394:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x7B4
L_271395:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271396
L_271398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271399
.p2align 0x4
.long 0x5EF
L_271399:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271396:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x270B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_271397
.text
.p2align 0x4
.globl x_2072
.hidden x_2072
x_2072:
L_271411:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272287
L_271412:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491031
L_271413:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22E8,%r15
	je L_491020
L_271511:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x22EB,%rax
	cmpq $0x9,%rax
	ja L_490928
	jmp *jumpTable_756(,%rax,8)
.data
.p2align 0x4
jumpTable_756:
.quad L_491017,L_490972,L_490968,L_490967,L_490963,L_490959,L_490957,L_490948,L_490940,L_490934
.text
.p2align 0x4
L_490928:
L_271512:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_490933
L_271563:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	cmpq $0x1,%r15
	je L_490932
L_271564:
	movq %r15,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_271565:
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490931
L_271567:
	cmpl $0x1,%r9d
	jng L_490930
L_271580:
	cmpq $0x1,%r10
	jna L_490929
L_271582:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
L_271569:
	movq %r15,0x58(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271579(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_271570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490929:
L_271581:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490930:
L_271568:
	movl $0x0,0x40(%rbp)
	jmp L_271569
.p2align 0x4
L_490931:
L_271566:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490932:
L_271583:
	movq (globalObjptr+0x10A90)(%rip),%r9
	movq %r9,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_271565
.p2align 0x4
L_490933:
L_271513:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_271514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_490934:
L_272170:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_490939
L_272263:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	cmpq $0x1,%r15
	je L_490938
L_272264:
	movq %r15,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_272265:
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490937
L_272267:
	cmpl $0x1,%r9d
	jng L_490936
L_272283:
	cmpq $0x1,%r10
	jna L_490935
L_272285:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
L_272269:
	movq %r15,0x58(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272282(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490935:
L_272284:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490936:
L_272268:
	movl $0x0,0x40(%rbp)
	jmp L_272269
.p2align 0x4
L_490937:
L_272266:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490938:
L_272286:
	movq (globalObjptr+0x10A90)(%rip),%r9
	movq %r9,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_272265
.p2align 0x4
L_490939:
L_272171:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_272172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_490940:
L_272111:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	movq %r13,%r15
	shrq $0x1,%r15
	cmpq $0x2304,%r15
	je L_490947
L_272135:
	movq 0x10(%r14),%r11
	movq %r11,%r15
	movq 0x8(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_490945
L_272167:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_490944
L_272169:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_272140:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_490943
L_272141:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_490942
	cmpq $0x230A,%r15
	je L_490941
L_272142:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x60(%rbp)
	addq $0x20,%r12
	addq $0x60,%rbp
	leaq (L_272143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_490941:
L_272158:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_272159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_490942:
L_272153:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_272154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_490943:
L_272163:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_272145:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_272150(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_272146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_490944:
L_272168:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_272138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_490945:
L_272136:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_490946
L_272166:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_272140
.p2align 0x4
L_490946:
L_272137:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_272138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_490947:
L_272112:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
L_490948:
L_272036:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x40(%rbp)
	cmpq $0x1,%r14
	je L_490954
L_272037:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x48(%rbp)
	cmpq $0x1,%r15
	je L_490953
L_272038:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_272039:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490952
L_272041:
	cmpl $0x1,%r9d
	jne L_272043
L_272097:
	testl %ecx,%ecx
	jnz L_272043
L_272098:
	cmpb $0x1,%dl
	jne L_490949
L_272100:
	movq %r11,0x50(%rbp)
	movq %r13,0x58(%rbp)
	leaq L_272096(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (x_894+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490949:
L_272043:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_272096(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10AC8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_272044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490952:
L_272040:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490953:
L_272107:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_272039
.p2align 0x4
L_490954:
L_272108:
	movq 0x30(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x2335,%r15
	je L_490955
L_272110:
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	xorq %r15,%r15
x_893:
	movq %r15,0x30(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	movq %r15,%r13
L_272055:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_490955:
L_272109:
	movq 0x0(%r10),%r15
	movq $0x0,0x30(%rbp)
x_892:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490956
L_272091:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	movq %r15,%r13
	jmp L_272055
.p2align 0x4
L_490956:
L_272052:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_272053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_490957:
L_271968:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FB,%r15
	je L_490958
L_272031:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r13,0x58(%rbp)
	addq $0x20,%r12
	addq $0x58,%rbp
	leaq (L_272032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
L_490958:
L_271969:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_271970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_490959:
L_271879:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x230B,%r15
	je L_490962
L_271904:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_490960
L_271964:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_490960:
L_271905:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_490961
L_271957:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	addq $0x48,%rbp
	leaq (L_271958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_490961:
L_271906:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490962:
L_271880:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
L_490963:
L_271831:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B6,%r15
	je L_490964
L_271870:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_271871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490964:
L_271832:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490966
L_271867:
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_3180:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490965
L_271869:
	movq 0x0(%r15),%r15
	jmp loop_3180
.p2align 0x4
L_490965:
L_271868:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_271834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_490966:
L_271833:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_271834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_490967:
L_271808:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_271809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
L_490968:
L_271750:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F9,%r15
	je L_490971
L_271774:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2328,%r14
	je L_490969
L_271807:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_271791:
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_271796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_271792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_490969:
L_271775:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r14
	jne L_490970
L_271806:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r14,%r15
L_271777:
	movq %r15,0x60(%rbp)
	leaq L_271805(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_271778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_490970:
	movq %r14,%r15
	jmp L_271777
.p2align 0x4
L_490971:
L_271751:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2088
.p2align 0x4
L_490972:
L_271645:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r14
	je L_491015
	cmpq $0x2,%r14
	je L_491013
	cmpq $0x3,%r14
	je L_490984
L_271646:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F7,%r15
	je L_490978
L_271710:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x38(%rbp)
	cmpq $0x1,%r15
	je L_490977
L_271711:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_271712:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490976
L_271714:
	cmpl $0x1,%r9d
	jne L_271716
L_271730:
	testl %ecx,%ecx
	jnz L_271716
L_271731:
	cmpb $0x1,%dl
	jne L_490973
L_271733:
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	leaq L_271729(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (x_890+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490973:
L_271716:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_271729(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10AC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490976:
L_271713:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490977:
L_271740:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_271712
.p2align 0x4
L_490978:
L_271647:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x38(%rbp)
	cmpq $0x1,%r15
	je L_490983
L_271648:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_271649:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490982
L_271651:
	cmpl $0x1,%r9d
	jne L_271653
L_271699:
	testl %ecx,%ecx
	jnz L_271653
L_271700:
	cmpb $0x1,%dl
	jne L_490979
L_271702:
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	leaq L_271698(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (x_889+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490979:
L_271653:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_271698(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10AC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490982:
L_271650:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490983:
L_271709:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_271649
.p2align 0x4
L_490984:
L_271747:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_491012
L_271749:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0x2640)(%rip),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
x_888:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_491010
L_271694:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271690:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x24DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r11
	movq 0x30(%rbp),%r14
	xorl %ecx,%ecx
	movq %r15,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
L_271665:
	incl %ecx
	jo L_491009
L_271667:
	cmpq $0x1,%r15
	je L_490985
L_271668:
	movq 0x8(%r15),%r15
	jmp L_271665
.p2align 0x4
L_490985:
L_271669:
	movq %r14,0x30(%rbp)
	movq %r13,0x38(%rbp)
L_271670:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491008
L_271671:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491007
L_271672:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x157F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271673
.p2align 0x4
.long 0x36E0
L_271673:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_271674:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3175:
	cmpq 0x40(%rbp),%r15
	jnl L_490987
L_271679:
	cmpq $0x1,%r14
	je L_490986
L_271680:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3175
.p2align 0x4
L_490986:
L_271681:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490987:
L_271675:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271676
L_271677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271678
.p2align 0x4
.long 0x44E4
L_271678:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271676:
	movq 0x48(%rbp),%r15
	movq $0xB2F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
L_271423:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491005
	cmpq $0x22E7,%r14
	je L_490988
L_271424:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_490988:
L_271484:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
loop_3166:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490990
	cmpq $0x22E7,%r14
	je L_490989
L_271485:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_490989:
L_271490:
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp loop_3166
.p2align 0x4
L_490990:
L_271486:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271487
L_271488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271489
.p2align 0x4
.long 0x4B8
L_271489:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271487:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
L_271427:
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE0F,%r13
	je L_491000
L_271428:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE0F,%r15
	je L_490996
L_271429:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271430
.p2align 0x4
.long 0x9C1
L_271430:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x40(%rbp)
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_3163:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490995
.p2align 0x4,,0x7
L_271431:
	movq 0x50(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_490993
L_271436:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_490992
	cmpl $0x1,%r14d
	je L_490991
L_271437:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490991:
L_271440:
	movq 0x20(%rbp),%r14
	movq 0x48(%rbp),%r15
L_271439:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_3163
.p2align 0x4
L_490992:
L_271438:
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r15
	jmp L_271439
.p2align 0x4
L_490993:
L_271432:
	movq 0x40(%rbp),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_490994
L_271433:
	movq 0x8(%r13),%r11
	xchgq %r11,%r15
L_271434:
	movq %r14,0x8(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490994:
L_271435:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490995:
L_271441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271442
.p2align 0x4
.long 0x7AF
L_271442:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_271431
.p2align 0x4
L_490996:
L_271443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271444
L_271458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271459
.p2align 0x4
.long 0x856
L_271459:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271444:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271445
.p2align 0x4
.long 0x4B8
L_271445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3164:
	cmpq $0x1,%r15
	jnl L_490997
L_271457:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3164
.p2align 0x4
L_490997:
L_271446:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271447
L_271455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271456
.p2align 0x4
.long 0x9C1
L_271456:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271447:
	movq 0x48(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	leaq L_271454(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_271448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_491000:
L_271460:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE0F,%r15
	je L_491003
L_271461:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271462
.p2align 0x4
.long 0x44D9
L_271462:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3165:
	cmpq $0x1,%r15
	jnl L_491001
L_271473:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3165
.p2align 0x4
L_491001:
L_271463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271464
L_271471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271472
.p2align 0x4
.long 0x4B8
L_271472:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271464:
	movq 0x30(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	leaq L_271454(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_271465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_491003:
L_271474:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	leaq L_271454(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_271475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_491005:
L_271483:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	jmp L_271427
.p2align 0x4
L_491007:
L_271682:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491008:
L_271683:
	movq (globalObjptr+0x2648)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_271674
.p2align 0x4
L_491009:
L_271666:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491010:
L_271686:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491011
L_271693:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
	jmp L_271690
.p2align 0x4
L_491011:
L_271687:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491012:
L_271748:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2640)(%rip),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
L_271662:
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2089
.p2align 0x4
L_491013:
L_271744:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_491014
L_271746:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0x2638)(%rip),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
	jmp x_888
.p2align 0x4
L_491014:
L_271745:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2638)(%rip),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp L_271662
.p2align 0x4
L_491015:
L_271741:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_491016
L_271743:
	movq 0x0(%r15),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp x_888
.p2align 0x4
L_491016:
L_271742:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
	jmp L_271662
.p2align 0x4
L_491017:
L_271584:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F5,%r15
	je L_491018
L_271640:
	movq 0x28(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	addq $0x38,%rbp
	leaq (L_271641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2090
.p2align 0x4
L_491018:
L_271585:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22FB,%r14
	je L_491019
L_271635:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_271636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
L_491019:
L_271586:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_271587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_491020:
L_271414:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491030
	cmpq $0x22E7,%r14
	je L_491021
L_271415:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_271416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491021:
L_271504:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
loop_3168:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491023
	cmpq $0x22E7,%r14
	je L_491022
L_271505:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_271416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491022:
L_271510:
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp loop_3168
.p2align 0x4
L_491023:
L_271506:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271507
L_271508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271509
.p2align 0x4
.long 0x98A
L_271509:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271507:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF70)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_271418:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491028
	cmpq $0x22E7,%r14
	je L_491024
L_271419:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491024:
L_271494:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_3167:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491026
	cmpq $0x22E7,%r14
	je L_491025
L_271495:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491025:
L_271500:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_3167
.p2align 0x4
L_491026:
L_271496:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271497
L_271498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271499
.p2align 0x4
.long 0x98A
L_271499:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271497:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF70)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_271422:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1C25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491028:
L_271493:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF70)(%rip),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
	jmp L_271422
.p2align 0x4
L_491030:
L_271503:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r13,%r15
	jmp L_271418
.p2align 0x4
L_491031:
L_272287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272288
.p2align 0x4
.long 0x45D
L_272288:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271413
.p2align 0x4
.long 0x44DD
L_271570:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271571
L_271577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271578
.p2align 0x4
.long 0x44DF
L_271578:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271571:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x44(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271572
.p2align 0x4
.long 0x44DE
L_271572:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3172:
	cmpq $0x1,%r15
	jnl L_491033
L_271576:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3172
.p2align 0x4
L_491033:
L_271573:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x22B6,%r13
	je L_491034
L_271575:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_271554:
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_491034:
L_271574:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
x_887:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_491036
L_271550:
	movq 0x0(%r15),%r15
.p2align 0x4,,0x7
loop_3171:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_491035
L_271552:
	movq 0x0(%r15),%r15
	jmp loop_3171
.p2align 0x4
L_491035:
L_271551:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491036:
L_271516:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
.long 0x25
L_271579:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_271514:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r11
	movq %r11,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B6,%r14
	je L_491038
L_271553:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r10
	movq %r11,0x30(%rbp)
	movq %r10,%r15
	jmp L_271554
.p2align 0x4
L_491038:
L_271515:
	movq 0x0(%r15),%r14
	movq %r11,0x30(%rbp)
	movq %r14,%r15
	jmp x_887
.p2align 0x4
.long 0x44DD
L_272270:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272271
L_272280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272281
.p2align 0x4
.long 0x44DF
L_272281:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272271:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x44(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272272
.p2align 0x4
.long 0x44DE
L_272272:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3190:
	cmpq $0x1,%r15
	jnl L_491039
L_272279:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3190
.p2align 0x4
L_491039:
L_272273:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272274
L_272277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272278
.p2align 0x4
.long 0x98A
L_272278:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272274:
	movq 0x38(%rbp),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x230B,%r13
	je L_491042
L_272276:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
x_895:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_491040
L_272257:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_491040:
L_272198:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491041
L_272250:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_272251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491041:
L_272199:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_272200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491042:
L_272275:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
L_272175:
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (fromList_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
.long 0x25
L_272282:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_272172:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272173
L_272261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272262
.p2align 0x4
.long 0x98A
L_272262:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272173:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230B,%r14
	je L_491045
L_272197:
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
	jmp x_895
.p2align 0x4
L_491045:
L_272174:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x38(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp L_272175
.p2align 0x4
.long 0x44F2
L_272143:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272144
L_272151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272152
.p2align 0x4
.long 0x243D
L_272152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272144:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_272145
.p2align 0x4
.long 0x44F2
L_272159:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272160
L_272161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272162
.p2align 0x4
.long 0x243D
L_272162:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272160:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272145
.p2align 0x4
.long 0x44F2
L_272154:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272155
L_272156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272157
.p2align 0x4
.long 0x243D
L_272157:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272155:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272145
.p2align 0x4
.long 0x986
L_272146:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272147
L_272148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272149
.p2align 0x4
.long 0x7BC
L_272149:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272147:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272115:
	incl %ecx
	jo L_491056
L_272117:
	cmpq $0x1,%r15
	je L_491050
L_272118:
	movq 0x8(%r15),%r15
	jmp L_272115
.p2align 0x4
L_491050:
L_272119:
	movq %r14,0x30(%rbp)
L_272120:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_491055
L_272121:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491054
L_272122:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272123
.p2align 0x4
.long 0x44E5
L_272123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_272124:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3187:
	cmpq 0x38(%rbp),%r15
	jnl L_491052
L_272129:
	cmpq $0x1,%r14
	je L_491051
L_272130:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3187
.p2align 0x4
L_491051:
L_272131:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491052:
L_272125:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272126
L_272127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272128
.p2align 0x4
.long 0x7A8
L_272128:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272126:
	movq 0x40(%rbp),%r15
	movq $0x12E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491054:
L_272132:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491055:
L_272133:
	movq (globalObjptr+0x2650)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_272124
.p2align 0x4
L_491056:
L_272116:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272150:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49F
L_272138:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272139
L_272164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272165
.p2align 0x4
.long 0x2373
L_272165:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272139:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_272140
.p2align 0x4
.long 0x639
L_272113:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_491059
L_272114:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_272115
.p2align 0x4
L_491059:
L_272134:
	xorl %ecx,%ecx
	jmp L_272120
.p2align 0x4
.long 0x36CD
x_894:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272101
L_272104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272105
.p2align 0x4
.long 0x44DA
L_272105:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272101:
	movq 0x48(%rbp),%r15
	andq $0x1,%r15
	jnz L_491060
L_272102:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491060:
L_272103:
	movq 0x48(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_272050:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x30(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_491061
L_272092:
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	jmp x_893
.p2align 0x4
L_491061:
L_272051:
	movq 0x0(%r10),%r14
	movq %r15,0x30(%rbp)
	movq %r14,%r15
	jmp x_892
.p2align 0x4
.long 0x25
L_272096:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2350
L_272044:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_491063
L_272046:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_272047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491063:
L_272045:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x246A
L_272056:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272057
L_272087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272088
.p2align 0x4
.long 0x44F1
L_272088:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272057:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2302,%r14
	je L_491064
L_272085:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_272086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2091
.p2align 0x4
L_491064:
L_272058:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x3BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_272059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2067
.p2align 0x4
.long 0x7B9
L_272053:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272054
L_272089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272090
.p2align 0x4
.long 0x44F1
L_272090:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272054:
	movq 0x48(%rbp),%r13
	movq 0x50(%rbp),%r14
	jmp L_272055
.p2align 0x4
.long 0x1007
L_272032:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272033
L_272034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_272035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272035
.p2align 0x4
.long 0x257E
L_272035:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_272033:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271972:
	incl %ecx
	jo L_491079
L_271974:
	cmpq $0x1,%r15
	je L_491067
L_271975:
	movq 0x8(%r15),%r15
	jmp L_271972
.p2align 0x4
L_491067:
L_271976:
	movq %r14,0x50(%rbp)
L_271977:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_491078
L_271978:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491077
L_271979:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271980
.p2align 0x4
.long 0x44EA
L_271980:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_271981:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3183:
	cmpq 0x58(%rbp),%r15
	jnl L_491069
L_272025:
	cmpq $0x1,%r14
	je L_491068
L_272026:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3183
.p2align 0x4
L_491068:
L_272027:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491069:
L_271982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271983
L_272023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_272024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272024
.p2align 0x4
.long 0x243C
L_272024:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_271983:
	movq 0x60(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233D,%r14
	je L_491070
L_272000:
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x70,%rbp
	leaq (L_272001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
L_491070:
L_271984:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_271985:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x11BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491075
	cmpq $0x22E7,%r14
	je L_491071
L_271986:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_271987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491071:
L_271993:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_3184:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_491073
	cmpq $0x22E7,%r14
	je L_491072
L_271994:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_271987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
L_491072:
L_271999:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_3184
.p2align 0x4
L_491073:
L_271995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271996
L_271997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271998
.p2align 0x4
.long 0x44E4
L_271998:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271996:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF70)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_271989:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1C2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491075:
L_271992:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF70)(%rip),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
	jmp L_271989
.p2align 0x4
L_491077:
L_272028:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491078:
L_272029:
	movq (globalObjptr+0x2610)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_271981
.p2align 0x4
L_491079:
L_271973:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1007
L_271970:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	cmpq $0x1,%r14
	je L_491081
L_271971:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_271972
.p2align 0x4
L_491081:
L_272030:
	xorl %ecx,%ecx
	jmp L_271977
.p2align 0x4
.long 0x639
L_271965:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_491097
L_271966:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271925:
	incl %ecx
	jo L_491096
L_271927:
	cmpq $0x1,%r15
	je L_491082
L_271928:
	movq 0x8(%r15),%r15
	jmp L_271925
.p2align 0x4
L_491082:
L_271929:
	movq %r14,0x30(%rbp)
L_271930:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_491095
L_271931:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491094
L_271932:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271933
.p2align 0x4
.long 0x44E5
L_271933:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_271934:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3182:
	cmpq 0x38(%rbp),%r15
	jnl L_491084
L_271939:
	cmpq $0x1,%r14
	je L_491083
L_271940:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x40(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3182
.p2align 0x4
L_491083:
L_271941:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491084:
L_271935:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271936
L_271937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271938
.p2align 0x4
.long 0x7A8
L_271938:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271936:
	movq 0x40(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
L_271882:
	movq (globalObjptr+0xF60)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_491092
L_271883:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271884:
	incl %ecx
	jo L_491091
L_271886:
	cmpq $0x1,%r15
	je L_491085
L_271887:
	movq 0x8(%r15),%r15
	jmp L_271884
.p2align 0x4
L_491085:
L_271888:
L_271889:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_491090
L_271890:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491089
L_271891:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271892
.p2align 0x4
.long 0x44E5
L_271892:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_271893:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3181:
	cmpq 0x38(%rbp),%r15
	jnl L_491087
L_271898:
	cmpq $0x1,%r14
	je L_491086
L_271899:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3181
.p2align 0x4
L_491086:
L_271900:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491087:
L_271894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271895
L_271896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271897
.p2align 0x4
.long 0x7A8
L_271897:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271895:
	movq 0x40(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq (globalObjptr+0xF60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491089:
L_271901:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491090:
L_271902:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_271893
.p2align 0x4
L_491091:
L_271885:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491092:
L_271903:
	xorl %ecx,%ecx
	jmp L_271889
.p2align 0x4
L_491094:
L_271942:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491095:
L_271943:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_271934
.p2align 0x4
L_491096:
L_271926:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491097:
L_271967:
	xorl %ecx,%ecx
	jmp L_271930
.p2align 0x4
.long 0x49F
L_271958:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271959
L_271962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271963
.p2align 0x4
.long 0x2373
L_271963:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271959:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_491098
L_271960:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_891:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x48(%rbp)
	addq $0x20,%r12
	addq $0x48,%rbp
	leaq (L_271910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491098:
L_271961:
	movq %r14,0x40(%rbp)
	movq $0x1,0x30(%rbp)
L_271912:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x49F
L_271907:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271908
L_271955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271956
.p2align 0x4
.long 0x2578
L_271956:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271908:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_491100
L_271909:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq %r11,%r15
	jmp x_891
.p2align 0x4
L_491100:
L_271954:
	movq $0x1,0x30(%rbp)
	jmp L_271912
.p2align 0x4
.long 0x639
L_271881:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_271882
.p2align 0x4
.long 0x639
L_271871:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_491116
L_271872:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271873:
	incl %ecx
	jo L_491115
L_271875:
	cmpq $0x1,%r15
	je L_491102
L_271876:
	movq 0x8(%r15),%r15
	jmp L_271873
.p2align 0x4
L_491102:
L_271877:
L_271835:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491114
L_271836:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491113
L_271837:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271838
.p2align 0x4
.long 0x36E0
L_271838:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_271839:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3178:
	cmpq 0x40(%rbp),%r15
	jnl L_491104
L_271862:
	cmpq $0x1,%r14
	je L_491103
L_271863:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3178
.p2align 0x4
L_491103:
L_271864:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491104:
L_271840:
	movq 0x48(%rbp),%r14
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_491112
L_271841:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271842:
	incl %ecx
	jo L_491111
L_271844:
	cmpq $0x1,%r15
	je L_491105
L_271845:
	movq 0x8(%r15),%r15
	jmp L_271842
.p2align 0x4
L_491105:
L_271846:
L_271847:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_491110
L_271848:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491109
L_271849:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271850
.p2align 0x4
.long 0x44E4
L_271850:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x40(%rbp)
L_271851:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3179:
	cmpq 0x38(%rbp),%r15
	jnl L_491107
L_271856:
	cmpq $0x1,%r14
	je L_491106
L_271857:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x40(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3179
.p2align 0x4
L_491106:
L_271858:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491107:
L_271852:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271853
L_271854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271855
.p2align 0x4
.long 0x44E7
L_271855:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271853:
	movq 0x40(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF60)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491109:
L_271859:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491110:
L_271860:
	movq (globalObjptr+0x2630)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_271851
.p2align 0x4
L_491111:
L_271843:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491112:
L_271861:
	xorl %ecx,%ecx
	jmp L_271847
.p2align 0x4
L_491113:
L_271865:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491114:
L_271866:
	movq (globalObjptr+0x2628)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_271839
.p2align 0x4
L_491115:
L_271874:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491116:
L_271878:
	xorl %ecx,%ecx
	jmp L_271835
.p2align 0x4
.long 0x639
L_271834:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_271835
.p2align 0x4
.long 0x49F
L_271809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_491124
L_271810:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271811:
	incl %ecx
	jo L_491123
L_271813:
	cmpq $0x1,%r15
	je L_491117
L_271814:
	movq 0x8(%r15),%r15
	jmp L_271811
.p2align 0x4
L_491117:
L_271815:
L_271816:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_491122
L_271817:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491121
L_271818:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271819
.p2align 0x4
.long 0x44DA
L_271819:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_271820:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3177:
	cmpq 0x48(%rbp),%r15
	jnl L_491119
L_271825:
	cmpq $0x1,%r14
	je L_491118
L_271826:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3177
.p2align 0x4
L_491118:
L_271827:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491119:
L_271821:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271822
L_271823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271824
.p2align 0x4
.long 0x44DB
L_271824:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271822:
	movq 0x50(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x1C1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	jmp L_271423
.p2align 0x4
L_491121:
L_271828:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491122:
L_271829:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_271820
.p2align 0x4
L_491123:
L_271812:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491124:
L_271830:
	xorl %ecx,%ecx
	jmp L_271816
.p2align 0x4
.long 0x639
L_271792:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271793
L_271794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271795
.p2align 0x4
.long 0x98A
L_271795:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271793:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271754:
	incl %ecx
	jo L_491131
L_271756:
	cmpq $0x1,%r15
	je L_491125
L_271757:
	movq 0x8(%r15),%r15
	jmp L_271754
.p2align 0x4
L_491125:
L_271758:
	movq %r14,0x30(%rbp)
L_271759:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_491130
L_271760:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491129
L_271761:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1581,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271762
.p2align 0x4
.long 0x44E5
L_271762:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_271763:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3176:
	cmpq 0x38(%rbp),%r15
	jnl L_491127
L_271768:
	cmpq $0x1,%r14
	je L_491126
L_271769:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3176
.p2align 0x4
L_491126:
L_271770:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491127:
L_271764:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271765
L_271766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271767
.p2align 0x4
.long 0x7A8
L_271767:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271765:
	movq 0x40(%rbp),%r15
	movq $0xB29,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491129:
L_271771:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491130:
L_271772:
	movq (globalObjptr+0x25C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_271763
.p2align 0x4
L_491131:
L_271755:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271796:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1007
L_271778:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271779
L_271803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271804
.p2align 0x4
.long 0x2443
L_271804:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271779:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_491133
L_271780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_271781:
	movq %r15,0x68(%rbp)
	leaq L_271801(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_271782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491133:
L_271802:
	movq $0x1,%r15
L_271790:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_271791
.p2align 0x4
.long 0x25
L_271805:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_271752:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_491135
L_271753:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_271754
.p2align 0x4
L_491135:
L_271773:
	xorl %ecx,%ecx
	jmp L_271759
.p2align 0x4
.long 0x7BF
x_890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271734
L_271737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271738
.p2align 0x4
.long 0x44E5
L_271738:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271734:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_491136
L_271735:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491136:
L_271736:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_271723:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x1BDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x2333,%r13
	je L_491137
L_271725:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp x_888
.p2align 0x4
L_491137:
L_271724:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp L_271662
.p2align 0x4
.long 0x25
L_271729:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x36CD
L_271717:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_491139
L_271719:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491139:
L_271718:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
x_889:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271703
L_271706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271707
.p2align 0x4
.long 0x44E5
L_271707:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271703:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_491140
L_271704:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491140:
L_271705:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_271660:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x1BE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x2333,%r13
	je L_491141
L_271685:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp x_888
.p2align 0x4
L_491141:
L_271661:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp L_271662
.p2align 0x4
.long 0x25
L_271698:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x36CD
L_271654:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_491143
L_271656:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491143:
L_271655:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x113B
L_271425:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271427
L_271481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271482
.p2align 0x4
.long 0x4B6
L_271482:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_271427
.p2align 0x4
.long 0x512
L_271448:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271449
L_271452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271453
.p2align 0x4
.long 0x5EF
L_271453:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271449:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_491145
L_271450:
	movq 0x8(%r13),%r15
	jmp L_271434
.p2align 0x4
L_491145:
L_271451:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271454:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_271465:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271466
L_271469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271470
.p2align 0x4
.long 0x5EF
L_271470:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271466:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_491147
L_271467:
	movq 0x8(%r13),%r15
	jmp L_271434
.p2align 0x4
L_491147:
L_271468:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_271475:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271476
L_271479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271480
.p2align 0x4
.long 0x5EF
L_271480:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271476:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_491149
L_271477:
	movq 0x8(%r13),%r15
	jmp L_271434
.p2align 0x4
L_491149:
L_271478:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_271688:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271689
L_271691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271692
.p2align 0x4
.long 0x2578
L_271692:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271689:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_271690
.p2align 0x4
.long 0x7BF
L_271663:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_491152
L_271664:
	movq 0x8(%r13),%r15
	movq 0x30(%rbp),%r14
	xorl %ecx,%ecx
	jmp L_271665
.p2align 0x4
L_491152:
L_271684:
	xorl %ecx,%ecx
	jmp L_271670
.p2align 0x4
.long 0x639
L_271641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271642
L_271643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271644
.p2align 0x4
.long 0xE3F
L_271644:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271642:
	movq 0x30(%rbp),%r15
L_271603:
	movq $0x1C2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_271423
.p2align 0x4
.long 0x36CD
L_271636:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271637
L_271638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271639
.p2align 0x4
.long 0x243D
L_271639:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271637:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271589:
	incl %ecx
	jo L_491161
L_271591:
	cmpq $0x1,%r15
	je L_491154
L_271592:
	movq 0x8(%r15),%r15
	jmp L_271589
.p2align 0x4
L_491154:
L_271593:
	movq %r14,0x48(%rbp)
L_271594:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_491160
L_271595:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491159
L_271596:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271597
.p2align 0x4
.long 0x257C
L_271597:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_271598:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3173:
	cmpq 0x50(%rbp),%r15
	jnl L_491156
L_271629:
	cmpq $0x1,%r14
	je L_491155
L_271630:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x58(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3173
.p2align 0x4
L_491155:
L_271631:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491156:
L_271599:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271600
L_271627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271628
.p2align 0x4
.long 0x44E3
L_271628:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271600:
	movq 0x58(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233D,%r14
	je L_491157
L_271604:
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x68,%rbp
	leaq (L_271605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
L_491157:
L_271601:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_271602:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x11BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x253D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_271603
.p2align 0x4
L_491159:
L_271632:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491160:
L_271633:
	movq (globalObjptr+0x2610)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_271598
.p2align 0x4
L_491161:
L_271590:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x36CD
L_271587:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_491163
L_271588:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_271589
.p2align 0x4
L_491163:
L_271634:
	xorl %ecx,%ecx
	jmp L_271594
.p2align 0x4
.long 0x7BF
L_271416:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271417
L_271501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271502
.p2align 0x4
.long 0x2578
L_271502:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271417:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_271418
.p2align 0x4
.long 0x987
L_271420:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271421
L_271491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271492
.p2align 0x4
.long 0x2578
L_271492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271421:
	movq 0x30(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_271422
.p2align 0x4
.long 0x7BF
L_271555:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_491180
L_271556:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271557:
	incl %ecx
	jo L_491179
L_271559:
	cmpq $0x1,%r15
	je L_491166
L_271560:
	movq 0x8(%r15),%r15
	jmp L_271557
.p2align 0x4
L_491166:
L_271561:
L_271518:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_491178
L_271519:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491177
L_271520:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271521
.p2align 0x4
.long 0x44DA
L_271521:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_271522:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3169:
	cmpq 0x48(%rbp),%r15
	jnl L_491168
L_271545:
	cmpq $0x1,%r14
	je L_491167
L_271546:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x50(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3169
.p2align 0x4
L_491167:
L_271547:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491168:
L_271523:
	movq 0x50(%rbp),%r14
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491176
L_271524:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271525:
	incl %ecx
	jo L_491175
L_271527:
	cmpq $0x1,%r15
	je L_491169
L_271528:
	movq 0x8(%r15),%r15
	jmp L_271525
.p2align 0x4
L_491169:
L_271529:
L_271530:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491174
L_271531:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491173
L_271532:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271533
.p2align 0x4
.long 0x44DB
L_271533:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_271534:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3170:
	cmpq 0x40(%rbp),%r15
	jnl L_491171
L_271539:
	cmpq $0x1,%r14
	je L_491170
L_271540:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3170
.p2align 0x4
L_491170:
L_271541:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491171:
L_271535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271536
L_271537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271538
.p2align 0x4
.long 0x44DC
L_271538:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271536:
	movq 0x48(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491173:
L_271542:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491174:
L_271543:
	movq (globalObjptr+0x2630)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_271534
.p2align 0x4
L_491175:
L_271526:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491176:
L_271544:
	xorl %ecx,%ecx
	jmp L_271530
.p2align 0x4
L_491177:
L_271548:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491178:
L_271549:
	movq (globalObjptr+0x2628)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_271522
.p2align 0x4
L_491179:
L_271558:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491180:
L_271562:
	xorl %ecx,%ecx
	jmp L_271518
.p2align 0x4
.long 0x7BF
L_271517:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	xorl %ecx,%ecx
	jmp L_271518
.p2align 0x4
.long 0x7BF
L_272258:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_491195
L_272259:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272218:
	incl %ecx
	jo L_491194
L_272220:
	cmpq $0x1,%r15
	je L_491181
L_272221:
	movq 0x8(%r15),%r15
	jmp L_272218
.p2align 0x4
L_491181:
L_272222:
	movq %r14,0x38(%rbp)
L_272223:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491193
L_272224:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491192
L_272225:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272226
.p2align 0x4
.long 0x36E0
L_272226:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_272227:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3189:
	cmpq 0x40(%rbp),%r15
	jnl L_491183
L_272232:
	cmpq $0x1,%r14
	je L_491182
L_272233:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x48(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3189
.p2align 0x4
L_491182:
L_272234:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491183:
L_272228:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272229
L_272230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272231
.p2align 0x4
.long 0x44E4
L_272231:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272229:
	movq 0x48(%rbp),%r14
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r13
	xorl %ecx,%ecx
	movq $0x1,%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_272177:
	incl %ecx
	jo L_491190
L_272179:
	cmpq $0x1,%r15
	je L_491184
L_272180:
	movq 0x8(%r15),%r15
	jmp L_272177
.p2align 0x4
L_491184:
L_272181:
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
L_272182:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491189
L_272183:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491188
L_272184:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272185
.p2align 0x4
.long 0x36E0
L_272185:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_272186:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3188:
	cmpq 0x40(%rbp),%r15
	jnl L_491186
L_272191:
	cmpq $0x1,%r14
	je L_491185
L_272192:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3188
.p2align 0x4
L_491185:
L_272193:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491186:
L_272187:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272188
L_272189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272190
.p2align 0x4
.long 0x44E4
L_272190:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272188:
	movq 0x48(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491188:
L_272194:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491189:
L_272195:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_272186
.p2align 0x4
L_491190:
L_272178:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491192:
L_272235:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491193:
L_272236:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_272227
.p2align 0x4
L_491194:
L_272219:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491195:
L_272260:
	xorl %ecx,%ecx
	jmp L_272223
.p2align 0x4
.long 0x36CD
L_272251:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272252
L_272255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272256
.p2align 0x4
.long 0x2443
L_272256:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272252:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_491196
L_272253:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_896:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_272203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491196:
L_272254:
	movq %r14,0x48(%rbp)
	movq $0x1,0x38(%rbp)
L_272205:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x36CD
L_272200:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272201
L_272248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272249
.p2align 0x4
.long 0x2373
L_272249:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272201:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_491198
L_272202:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x48(%rbp),%r10
	movq %r10,0x38(%rbp)
	movq %r11,%r15
	jmp x_896
.p2align 0x4
L_491198:
L_272247:
	movq $0x1,0x38(%rbp)
	jmp L_272205
.p2align 0x4
.long 0x7BF
fromList_23:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_491200
L_272176:
	movq 0x8(%r14),%r15
	movq 0x30(%rbp),%r13
	xorl %ecx,%ecx
	jmp L_272177
.p2align 0x4
L_491200:
L_272196:
	xorl %ecx,%ecx
	jmp L_272182
.p2align 0x4
.long 0x36CD
L_272047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272048
L_272094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272095
.p2align 0x4
.long 0x2578
L_272095:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272048:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491201
L_272049:
	xorl %ecx,%ecx
	jmp L_272050
.p2align 0x4
L_491201:
L_272093:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44ED
L_272086:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
L_272061:
	movq (globalObjptr+0xF60)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491210
L_272062:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272063:
	incl %ecx
	jo L_491209
L_272065:
	cmpq $0x1,%r15
	je L_491203
L_272066:
	movq 0x8(%r15),%r15
	jmp L_272063
.p2align 0x4
L_491203:
L_272067:
L_272068:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_491208
L_272069:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491207
L_272070:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1581,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272071
.p2align 0x4
.long 0x44EE
L_272071:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x50(%rbp)
L_272072:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3186:
	cmpq 0x40(%rbp),%r15
	jnl L_491205
L_272077:
	cmpq $0x1,%r14
	je L_491204
L_272078:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3186
.p2align 0x4
L_491204:
L_272079:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491205:
L_272073:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272074
L_272075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272076
.p2align 0x4
.long 0x44EF
L_272076:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272074:
	movq 0x50(%rbp),%r15
	movq $0xB29,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C21,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0xF60)(%rip),%r13
	movq %r13,0x10(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271423
.p2align 0x4
L_491207:
L_272080:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491208:
L_272081:
	movq (globalObjptr+0x25C8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_272072
.p2align 0x4
L_491209:
L_272064:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491210:
L_272082:
	xorl %ecx,%ecx
	jmp L_272068
.p2align 0x4
.long 0x44ED
L_272059:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272060
L_272083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272084
.p2align 0x4
.long 0x44F0
L_272084:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272060:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	jmp L_272061
.p2align 0x4
.long 0x256D
L_272001:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_491219
L_272002:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272003:
	incl %ecx
	jo L_491218
L_272005:
	cmpq $0x1,%r15
	je L_491212
L_272006:
	movq 0x8(%r15),%r15
	jmp L_272003
.p2align 0x4
L_491212:
L_272007:
L_272008:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_491217
L_272009:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491216
L_272010:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_272011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272011
.p2align 0x4
.long 0x44EB
L_272011:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
L_272012:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3185:
	cmpq 0x68(%rbp),%r15
	jnl L_491214
L_272017:
	cmpq $0x1,%r14
	je L_491213
L_272018:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3185
.p2align 0x4
L_491213:
L_272019:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491214:
L_272013:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272014
L_272015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_272016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272016
.p2align 0x4
.long 0x44EC
L_272016:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_272014:
	movq 0x70(%rbp),%r14
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
	jmp L_271985
.p2align 0x4
L_491216:
L_272020:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491217:
L_272021:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_272012
.p2align 0x4
L_491218:
L_272004:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491219:
L_272022:
	xorl %ecx,%ecx
	jmp L_272008
.p2align 0x4
.long 0xF1E
L_271987:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271988
L_271990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271991
.p2align 0x4
.long 0x44DF
L_271991:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271988:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r15
	jmp L_271989
.p2align 0x4
.long 0x49F
L_271910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271911
L_271952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271953
.p2align 0x4
.long 0x2373
L_271953:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271911:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_271912
.p2align 0x4
.long 0x986
L_271913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271914
L_271950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271951
.p2align 0x4
.long 0x2373
L_271951:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271914:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491225
L_271915:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271916:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_491224
L_271918:
	cmpq $0x1,%r15
	je L_491222
L_271919:
	movq 0x8(%r15),%r15
	jmp L_271916
.p2align 0x4
L_491222:
L_271920:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271921
L_271947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271948
.p2align 0x4
.long 0x44E9
L_271948:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271921:
	movl 0x38(%rbp),%ecx
L_271922:
	movl %ecx,0x68(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	leaq L_271946(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_271923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491224:
L_271917:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491225:
L_271949:
	xorl %ecx,%ecx
	jmp L_271922
.p2align 0x4
.long 0x44E6
L_271782:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271783
L_271799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_271800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271800
.p2align 0x4
.long 0x257E
L_271800:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_271783:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_491227
L_271784:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_271781
.p2align 0x4
L_491227:
L_271785:
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_271786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491229
.p2align 0x4,,0x7
L_271787:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_271790
L_271788:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_271786
.p2align 0x4
L_491229:
L_271797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271798
.p2align 0x4
.long 0x243D
L_271798:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_271787
.p2align 0x4
.long 0x25
L_271801:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_271720:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271721
L_271727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271728
.p2align 0x4
.long 0xE3F
L_271728:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271721:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491231
L_271722:
	xorl %ecx,%ecx
	jmp L_271723
.p2align 0x4
L_491231:
L_271726:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_271657:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271658
L_271696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271697
.p2align 0x4
.long 0xE3F
L_271697:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271658:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491233
L_271659:
	xorl %ecx,%ecx
	jmp L_271660
.p2align 0x4
L_491233:
L_271695:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44E0
L_271605:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_491242
L_271606:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271607:
	incl %ecx
	jo L_491241
L_271609:
	cmpq $0x1,%r15
	je L_491235
L_271610:
	movq 0x8(%r15),%r15
	jmp L_271607
.p2align 0x4
L_491235:
L_271611:
L_271612:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_491240
L_271613:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491239
L_271614:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_271615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271615
.p2align 0x4
.long 0x44E1
L_271615:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_271616:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3174:
	cmpq 0x60(%rbp),%r15
	jnl L_491237
L_271621:
	cmpq $0x1,%r14
	je L_491236
L_271622:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3174
.p2align 0x4
L_491236:
L_271623:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491237:
L_271617:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271618
L_271619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_271620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271620
.p2align 0x4
.long 0x44E2
L_271620:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_271618:
	movq 0x68(%rbp),%r14
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
	jmp L_271602
.p2align 0x4
L_491239:
L_271624:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491240:
L_271625:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_271616
.p2align 0x4
L_491241:
L_271608:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491242:
L_271626:
	xorl %ecx,%ecx
	jmp L_271612
.p2align 0x4
.long 0x36CD
L_272203:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272204
L_272245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272246
.p2align 0x4
.long 0x2443
L_272246:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272204:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_272205
.p2align 0x4
.long 0x44DD
L_272206:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272207
L_272243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272244
.p2align 0x4
.long 0x2443
L_272244:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272207:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491247
L_272208:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272209:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_491246
L_272211:
	cmpq $0x1,%r15
	je L_491244
L_272212:
	movq 0x8(%r15),%r15
	jmp L_272209
.p2align 0x4
L_491244:
L_272213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272214
L_272240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_272241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272241
.p2align 0x4
.long 0x44F4
L_272241:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_272214:
	movl 0x40(%rbp),%ecx
L_272215:
	movl %ecx,0x70(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	leaq L_272239(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_272216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491246:
L_272210:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491247:
L_272242:
	xorl %ecx,%ecx
	jmp L_272215
.p2align 0x4
.long 0x44E8
L_271923:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271924
L_271944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271945
.p2align 0x4
.long 0x44DB
L_271945:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271924:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_271925
.p2align 0x4
.long 0x25
L_271946:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44F3
L_272216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272217
L_272237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272238
.p2align 0x4
.long 0x44E3
L_272238:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272217:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_272218
.p2align 0x4
.long 0x25
L_272239:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2078
.hidden x_2078
x_2078:
L_272289:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272393
L_272290:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491256
L_272291:
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x2341,%r15
	je L_491255
L_272377:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_491254
L_272378:
	movq %r15,0x20(%rbp)
	movq %r10,%r15
L_272379:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491253
L_272381:
	cmpl $0x1,%r9d
	jng L_491252
L_272389:
	cmpq $0x1,%r10
	jna L_491251
L_272391:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_272383:
	movq %r15,0x40(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272388(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491251:
L_272390:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491252:
L_272382:
	movl $0x0,0x28(%rbp)
	jmp L_272383
.p2align 0x4
L_491253:
L_272380:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491254:
L_272392:
	movq (globalObjptr+0x10A90)(%rip),%r11
	movq %r11,0x20(%rbp)
	movq %r10,%r15
	jmp L_272379
.p2align 0x4
L_491255:
L_272292:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (fromList_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2092
.p2align 0x4
L_491256:
L_272393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272394
.p2align 0x4
.long 0x45D
L_272394:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272291
.p2align 0x4
.long 0x7BD
L_272384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272385
L_272386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272387
.p2align 0x4
.long 0x7B7
L_272387:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272385:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x28(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272294:
	incl %ecx
	jo L_491273
L_272296:
	cmpq $0x1,%r15
	je L_491258
L_272297:
	movq 0x8(%r15),%r15
	jmp L_272294
.p2align 0x4
L_491258:
L_272298:
	movq %r14,0x20(%rbp)
L_272299:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_491272
L_272300:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491271
L_272301:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272302
.p2align 0x4
.long 0x44F5
L_272302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_272303:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3191:
	cmpq 0x28(%rbp),%r15
	jnl L_491260
L_272371:
	cmpq $0x1,%r14
	je L_491259
L_272372:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3191
.p2align 0x4
L_491259:
L_272373:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491260:
L_272304:
	movq 0x30(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x28(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_491261
L_272305:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491261:
L_272306:
	cmpl $0x0,0x28(%rbp)
	jl L_491270
L_272307:
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_3192:
	movl 0x2C(%rbp),%r14d
	cmpl 0x28(%rbp),%r14d
	jnl L_491269
L_272309:
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3193:
	cmpl 0x2C(%rbp),%ecx
	je L_491268
L_272310:
	movslq %ecx,%r14
	cmpq 0x20(%rbp),%r14
	jnb L_491267
L_272312:
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,%r9
	je L_272323
L_272313:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%rsi)
	jne L_272315
L_272318:
	xorq %r11,%r11
	movq %rsi,%r14
.p2align 0x4,,0x7
vectorEqualLoop_210:
	cmpq %r11,%r13
	je L_491264
L_272319:
	movq 0x38(%rbp),%r10
	movb 0x0(%r14,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_491262
L_272321:
	incq %r11
	jmp vectorEqualLoop_210
.p2align 0x4
L_491262:
L_272315:
	incl %ecx
	jo L_491263
L_272317:
	jmp loop_3193
.p2align 0x4
L_491263:
L_272316:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491264:
L_272323:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_272355(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x2620)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_272324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_491267:
L_272311:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491268:
.p2align 0x4,,0x7
L_272353:
	incl 0x2C(%rbp)
	jmp loop_3192
.p2align 0x4
L_491269:
L_272308:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491270:
L_272370:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491271:
L_272374:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491272:
L_272375:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_272303
.p2align 0x4
L_491273:
L_272295:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272388:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x499
fromList_24:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_491275
L_272293:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_272294
.p2align 0x4
L_491275:
L_272376:
	xorl %ecx,%ecx
	jmp L_272299
.p2align 0x4
.long 0x4A0
L_272324:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_272325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x25
L_272355:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A0
L_272325:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x36C8
L_272326:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272327
L_272366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272367
.p2align 0x4
.long 0x44F9
L_272367:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272327:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272328:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_491279
L_272330:
	cmpq $0x1,%r14
	je L_491276
L_272331:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_272328
.p2align 0x4
L_491276:
L_272332:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272333
L_272364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272365
.p2align 0x4
.long 0x246B
L_272365:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272333:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_491277
L_272334:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_272335:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_272336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_491277:
L_272363:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_272335
.p2align 0x4
L_491279:
L_272329:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A0
L_272336:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272337
L_272361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272362
.p2align 0x4
.long 0x44F9
L_272362:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272337:
	movq $0x3B47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_272338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x44F6
L_272338:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_272339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x44F6
L_272339:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272340
L_272359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272360
.p2align 0x4
.long 0x44F8
L_272360:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272340:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272341:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_491286
L_272343:
	cmpq $0x1,%r14
	je L_491282
L_272344:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_272341
.p2align 0x4
L_491282:
L_272345:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272346
L_272357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272358
.p2align 0x4
.long 0x44F7
L_272358:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272346:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_491284
L_272347:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_272348:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_491283
L_272350:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_272351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491283:
L_272349:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491284:
L_272356:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_272348
.p2align 0x4
L_491286:
L_272342:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F9
L_272351:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_272353
L_272354:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2092
.hidden x_2092
x_2092:
L_272395:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272435
L_272396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491293
L_272397:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_491292
L_272398:
	movq %r10,0x20(%rbp)
L_272399:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491291
L_272401:
	cmpl $0x1,%r9d
	jng L_491290
L_272431:
	cmpq $0x1,%r10
	jna L_491289
L_272433:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_272403:
	movq %r15,0x40(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	leaq L_272430(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491289:
L_272432:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491290:
L_272402:
	movl $0x0,0x28(%rbp)
	jmp L_272403
.p2align 0x4
L_491291:
L_272400:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491292:
L_272434:
	movq (globalObjptr+0x10A90)(%rip),%r11
	movq %r11,0x20(%rbp)
	jmp L_272399
.p2align 0x4
L_491293:
L_272435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272436
.p2align 0x4
.long 0x45D
L_272436:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272397
.p2align 0x4
.long 0x7BD
L_272404:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272405
L_272428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272429
.p2align 0x4
.long 0x7B7
L_272429:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272405:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl 0x28(%rbp),%r11d
	movl %r11d,0x4(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x8(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x2341,%r15
	je L_491299
L_272412:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_491298
L_272413:
	movq %r15,0x20(%rbp)
	movq %r10,%r15
L_272414:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491297
L_272416:
	cmpl $0x1,%r9d
	jng L_491296
L_272424:
	cmpq $0x1,%r10
	jna L_491295
L_272426:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_272418:
	movq %r15,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272423(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x48,%rbp
	leaq (L_272419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491295:
L_272425:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491296:
L_272417:
	movl $0x0,0x28(%rbp)
	jmp L_272418
.p2align 0x4
L_491297:
L_272415:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491298:
L_272427:
	movq (globalObjptr+0x10A90)(%rip),%r11
	movq %r11,0x20(%rbp)
	movq %r10,%r15
	jmp L_272414
.p2align 0x4
L_491299:
L_272406:
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_272407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2092
.p2align 0x4
.long 0x25
L_272430:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x75E
L_272419:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272420
L_272421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272422
.p2align 0x4
.long 0x7C1
L_272422:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272420:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_272409:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272423:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_272407:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272408
L_272410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272411
.p2align 0x4
.long 0x7B6
L_272411:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272408:
	movq 0x20(%rbp),%r15
	jmp L_272409
.text
.p2align 0x4
.globl x_2086
.hidden x_2086
x_2086:
L_272437:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272438
L_272458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_272459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272459
.p2align 0x4
.long 0x45C
L_272459:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_272438:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_272439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
.long 0x4E6
L_272439:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272440
L_272456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272457
.p2align 0x4
.long 0x4EA
L_272457:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272440:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_272441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2047
.p2align 0x4
.long 0x50C
L_272441:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272442
L_272454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272455
.p2align 0x4
.long 0x520
L_272455:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272442:
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_491307
L_272443:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B8,%r15
	je L_491306
L_272450:
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
loop_3194:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_491305
L_272452:
	movq 0x0(%r15),%r15
	jmp loop_3194
.p2align 0x4
L_491305:
L_272451:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491306:
L_272444:
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491307:
L_272453:
	movq $0x1,%r15
L_272447:
	movq $0x10CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F2
L_272445:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272446
L_272448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272449
.p2align 0x4
.long 0x48A
L_272449:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272446:
	movq 0x38(%rbp),%r15
	jmp L_272447
.text
.p2align 0x4
.globl x_2085
.hidden x_2085
x_2085:
L_272460:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272461
L_272487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_272488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272488
.p2align 0x4
.long 0x45C
L_272488:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_272461:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_272462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
.long 0x4E6
L_272462:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272463
L_272485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272486
.p2align 0x4
.long 0x4EA
L_272486:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272463:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_272464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x50C
L_272464:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272465
L_272483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272484
.p2align 0x4
.long 0x520
L_272484:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272465:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_491315
L_272466:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B6,%r14
	je L_491312
L_272477:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_491312:
L_272467:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B8,%r15
	je L_491314
L_272474:
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_3195:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_491313
L_272476:
	movq 0x0(%r15),%r15
	jmp loop_3195
.p2align 0x4
L_491313:
L_272475:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491314:
L_272468:
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491315:
L_272482:
	movq $0x1,%r13
	movq $0x1,%r14
	xchgq %r13,%r15
L_272471:
	movq %r15,0x0(%rbp)
	movq $0x10CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x26FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F2
L_272478:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272479
L_272480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272481
.p2align 0x4
.long 0x5F5
L_272481:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272479:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_272471
.p2align 0x4
.long 0x5F2
L_272469:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272470
L_272472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272473
.p2align 0x4
.long 0x48A
L_272473:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272470:
	movq 0x38(%rbp),%r15
	movq $0x1,%r14
	jmp L_272471
.text
.p2align 0x4
.globl x_2082
.hidden x_2082
x_2082:
L_272489:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272490
L_272506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_272507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272507
.p2align 0x4
.long 0x460
L_272507:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_272490:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_272491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
.long 0x522
L_272491:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272492
L_272504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272505
.p2align 0x4
.long 0x4EA
L_272505:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272492:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22FB,%r14
	je L_491320
L_272499:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_272500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
L_491320:
L_272493:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
.long 0x51B
L_272500:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272501
L_272502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272503
.p2align 0x4
.long 0x5F5
L_272503:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272501:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_272496:
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51B
L_272494:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272495
L_272497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272498
.p2align 0x4
.long 0x489
L_272498:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272495:
	movq 0x30(%rbp),%r15
	jmp L_272496
.text
.p2align 0x4
.globl x_2081
.hidden x_2081
x_2081:
L_272508:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272623
L_272509:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491331
L_272510:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_491329
L_272511:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233F,%r14
	je L_491328
L_272603:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq $0x1,%r14
	je L_491327
L_272604:
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_272605:
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491326
L_272607:
	cmpl $0x1,%r9d
	jng L_491325
L_272618:
	cmpq $0x1,%r10
	jna L_491324
L_272620:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x30(%rbp)
L_272609:
	movq %r15,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272617(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_272610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491324:
L_272619:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491325:
L_272608:
	movl $0x0,0x30(%rbp)
	jmp L_272609
.p2align 0x4
L_491326:
L_272606:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491327:
L_272621:
	movq (globalObjptr+0x10A90)(%rip),%r9
	movq %r9,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_272605
.p2align 0x4
L_491328:
L_272512:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_272513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491329:
L_272622:
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
L_272514:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_491330
L_272515:
L_272516:
	movq %r15,0x60(%rbp)
	leaq L_272601(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491330:
L_272602:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_272516
.p2align 0x4
L_491331:
L_272623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_272624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272624
.p2align 0x4
.long 0x453
L_272624:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_272510
.p2align 0x4
.long 0x8E9
L_272610:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272611
L_272615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272616
.p2align 0x4
.long 0x5E7
L_272616:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272611:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272612
.p2align 0x4
.long 0x873
L_272612:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3197:
	cmpq $0x1,%r15
	jnl L_491333
L_272614:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3197
.p2align 0x4
L_491333:
L_272613:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_272514
.p2align 0x4
.long 0x72F
L_272617:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_272513:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_272514
.p2align 0x4
.long 0xA80
L_272517:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272518
L_272599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272600
.p2align 0x4
.long 0x4AE
L_272600:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272518:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491335
L_272519:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x50(%rbp)
L_272520:
	movq %r15,0x60(%rbp)
	leaq L_272597(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_272521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491335:
L_272598:
	movq $0x1,%r15
L_272529:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
L_272530:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_897
L_272591:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2093
L_272592:
	movq %r14,%r15
L_272537:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FD,%r15
	je L_491349
L_272557:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r14
	shrq $0x1,%r14
	cmpq $0x22FF,%r14
	je L_491345
L_272575:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491343
L_272584:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491342
L_272586:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_272580:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r15
	movq %r13,%r14
L_272566:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272540:
	incl %ecx
	jo L_491341
L_272542:
	cmpq $0x1,%r15
	je L_491336
L_272543:
	movq 0x8(%r15),%r15
	jmp L_272540
.p2align 0x4
L_491336:
L_272544:
	movq %r14,0x18(%rbp)
L_272545:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_491340
L_272546:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491339
L_272547:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272548
.p2align 0x4
.long 0xC1C
L_272548:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_272549:
	movq 0x18(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3196:
	cmpq 0x20(%rbp),%r14
	jnl L_491338
L_272551:
	cmpq $0x1,%r13
	je L_491337
L_272552:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3196
.p2align 0x4
L_491337:
L_272553:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491338:
L_272550:
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491339:
L_272554:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491340:
L_272555:
	movq (globalObjptr+0xD78)(%rip),%r15
	jmp L_272549
.p2align 0x4
L_491341:
L_272541:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491342:
L_272585:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491343:
L_272576:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491344
L_272583:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_272580
.p2align 0x4
L_491344:
L_272577:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491345:
L_272558:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491347
L_272572:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491346
L_272574:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_272563:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_272564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491346:
L_272573:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491347:
L_272559:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491348
L_272571:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_272563
.p2align 0x4
L_491348:
L_272560:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491349:
L_272538:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (fromList_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2095
.p2align 0x4
x_2093:
x_897:
	leaq L_272590(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10AA8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_272531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72F
L_272601:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BD
L_272521:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272522
L_272595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272596
.p2align 0x4
.long 0x8C1
L_272596:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272522:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491351
L_272523:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_272520
.p2align 0x4
L_491351:
L_272524:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_272525:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491353
.p2align 0x4,,0x7
L_272526:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_272529
L_272527:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_272525
.p2align 0x4
L_491353:
L_272593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272594
.p2align 0x4
.long 0x9AA
L_272594:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_272526
.p2align 0x4
.long 0x72F
L_272597:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F2
L_272578:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272579
L_272581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272582
.p2align 0x4
.long 0x720
L_272582:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272579:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_272580
.p2align 0x4
.long 0x700
L_272564:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272565
L_272567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272568
.p2align 0x4
.long 0x5E8
L_272568:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272565:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_272566
.p2align 0x4
.long 0x900
L_272561:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272562
L_272569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272570
.p2align 0x4
.long 0x5E8
L_272570:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272562:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	jmp L_272563
.p2align 0x4
.long 0x5F2
fromList_25:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_491358
L_272539:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_272540
.p2align 0x4
L_491358:
L_272556:
	xorl %ecx,%ecx
	jmp L_272545
.p2align 0x4
.long 0x44FA
L_272531:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491359
L_272533:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_272534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491359:
L_272532:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_272590:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44B8
L_272534:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272535
L_272588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272589
.p2align 0x4
.long 0xD43
L_272589:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272535:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491360
L_272536:
	movq 0x48(%rbp),%r15
	jmp L_272537
.p2align 0x4
L_491360:
L_272587:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2095
.hidden x_2095
x_2095:
L_272625:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272693
L_272626:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491377
L_272627:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22FF,%r15
	je L_491373
L_272681:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491371
L_272690:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491370
L_272692:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_272686:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r14
	movq %r13,%r15
L_272636:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FD,%r15
	je L_491369
L_272643:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r14
	shrq $0x1,%r14
	cmpq $0x22FF,%r14
	je L_491365
L_272661:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491363
L_272670:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491362
L_272672:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_272666:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r15
	movq %r13,%r14
L_272652:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_272640:
	movq $0x26F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491362:
L_272671:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491363:
L_272662:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491364
L_272669:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_272666
.p2align 0x4
L_491364:
L_272663:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491365:
L_272644:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491367
L_272658:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491366
L_272660:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_272649:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_272650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491366:
L_272659:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_272647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491367:
L_272645:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491368
L_272657:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_272649
.p2align 0x4
L_491368:
L_272646:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_272647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491369:
L_272637:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2095
.p2align 0x4
L_491370:
L_272691:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_272684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491371:
L_272682:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491372
L_272689:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_272686
.p2align 0x4
L_491372:
L_272683:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_272684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491373:
L_272628:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491375
L_272678:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491374
L_272680:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_272633:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_272634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491374:
L_272679:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491375:
L_272629:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491376
L_272677:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_272633
.p2align 0x4
L_491376:
L_272630:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491377:
L_272693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_272694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272694
.p2align 0x4
.long 0x460
L_272694:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_272627
.p2align 0x4
.long 0x2B
L_272664:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272665
L_272667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272668
.p2align 0x4
.long 0x4B2
L_272668:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272665:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_272666
.p2align 0x4
.long 0x2
L_272650:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272651
L_272653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272654
.p2align 0x4
.long 0x520
L_272654:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272651:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_272652
.p2align 0x4
.long 0x491
L_272647:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272648
L_272655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272656
.p2align 0x4
.long 0x520
L_272656:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272648:
	movq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	jmp L_272649
.p2align 0x4
.long 0x2B
L_272638:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272639
L_272641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272642
.p2align 0x4
.long 0x2C
L_272642:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272639:
	movq 0x18(%rbp),%r15
	jmp L_272640
.p2align 0x4
.long 0x522
L_272684:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272685
L_272687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272688
.p2align 0x4
.long 0x4E8
L_272688:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272685:
	movq 0x10(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_272686
.p2align 0x4
.long 0x4E1
L_272634:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272635
L_272673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272674
.p2align 0x4
.long 0x4EA
L_272674:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272635:
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r15
	jmp L_272636
.p2align 0x4
.long 0x4E6
L_272631:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272632
L_272675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272676
.p2align 0x4
.long 0x4EA
L_272676:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272632:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_272633
.text
.p2align 0x4
.globl x_2087
.hidden x_2087
x_2087:
L_272695:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272772
L_272696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491393
L_272697:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_491391
L_272698:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233F,%r14
	je L_491390
L_272752:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq $0x1,%r14
	je L_491389
L_272753:
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_272754:
	movq 0x30(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_491388
L_272756:
	cmpl $0x1,%r9d
	jng L_491387
L_272767:
	cmpq $0x1,%r10
	jna L_491386
L_272769:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
L_272758:
	movq %r15,0x50(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272766(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_272759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491386:
L_272768:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491387:
L_272757:
	movl $0x0,0x38(%rbp)
	jmp L_272758
.p2align 0x4
L_491388:
L_272755:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491389:
L_272770:
	movq (globalObjptr+0x10A90)(%rip),%r9
	movq %r9,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_272754
.p2align 0x4
L_491390:
L_272699:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491391:
L_272771:
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
L_272701:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_491392
L_272702:
L_272703:
	movq %r15,0x68(%rbp)
	leaq L_272750(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_272704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491392:
L_272751:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_272703
.p2align 0x4
L_491393:
L_272772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_272773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272773
.p2align 0x4
.long 0x453
L_272773:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_272697
.p2align 0x4
.long 0x5EA
L_272759:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272760
L_272764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272765
.p2align 0x4
.long 0x846
L_272765:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272760:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272761
.p2align 0x4
.long 0xD43
L_272761:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3198:
	cmpq $0x1,%r15
	jnl L_491395
L_272763:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3198
.p2align 0x4
L_491395:
L_272762:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_272701
.p2align 0x4
.long 0x72F
L_272766:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_272700:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_272701
.p2align 0x4
.long 0x214C
L_272704:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272705
L_272748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272749
.p2align 0x4
.long 0x9AA
L_272749:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272705:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_491397
L_272706:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
L_272707:
	movq %r15,0x68(%rbp)
	leaq L_272746(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_272708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491397:
L_272747:
	movq $0x1,%r15
L_272716:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
L_272717:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_898
L_272740:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2096
L_272741:
	movq %r14,%r15
L_272724:
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_272725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
x_2096:
x_898:
	leaq L_272739(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10AA8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_272718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72F
L_272750:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x914
L_272708:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272709
L_272744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_272745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272745
.p2align 0x4
.long 0x91F
L_272745:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_272709:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_491399
L_272710:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_272707
.p2align 0x4
L_491399:
L_272711:
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_272712:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491401
.p2align 0x4,,0x7
L_272713:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_272716
L_272714:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_272712
.p2align 0x4
L_491401:
L_272742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272743
.p2align 0x4
.long 0x8C1
L_272743:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_272713
.p2align 0x4
.long 0x72F
L_272746:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x605
L_272725:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272726
L_272734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272735
.p2align 0x4
.long 0x5E8
L_272735:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272726:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_491403
L_272727:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x3A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r15,0x50(%rbp)
	addq $0x28,%r12
	addq $0x50,%rbp
	leaq (L_272728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
L_491403:
L_272733:
	movq $0x1,%r14
	xchgq %r14,%r15
L_272730:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2701,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AE4
L_272718:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491405
L_272720:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_272721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491405:
L_272719:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_272739:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x513
L_272728:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272729
L_272731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272732
.p2align 0x4
.long 0x3B22
L_272732:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272729:
	movq 0x18(%rbp),%r15
	jmp L_272730
.p2align 0x4
.long 0x1987
L_272721:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272722
L_272737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272738
.p2align 0x4
.long 0x9A6
L_272738:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272722:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491407
L_272723:
	movq 0x50(%rbp),%r15
	jmp L_272724
.p2align 0x4
L_491407:
L_272736:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2090
.hidden x_2090
x_2090:
L_272774:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272859
L_272775:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491416
L_272776:
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_491414
L_272777:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_491413
L_272839:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_491412
L_272840:
	movq %r15,0x40(%rbp)
	movq %r10,%r15
L_272841:
	movq 0x40(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491411
L_272843:
	cmpl $0x1,%r9d
	jng L_491410
L_272854:
	cmpq $0x1,%r10
	jna L_491409
L_272856:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
L_272845:
	movq %r15,0x60(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_272853(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_272846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491409:
L_272855:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491410:
L_272844:
	movl $0x0,0x48(%rbp)
	jmp L_272845
.p2align 0x4
L_491411:
L_272842:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491412:
L_272857:
	movq (globalObjptr+0x10A90)(%rip),%r11
	movq %r11,0x40(%rbp)
	movq %r10,%r15
	jmp L_272841
.p2align 0x4
L_491413:
L_272778:
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_272779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491414:
L_272858:
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
L_272780:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_491415
L_272781:
L_272782:
	movq %r15,0x78(%rbp)
	leaq L_272837(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_272783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491415:
L_272838:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_272782
.p2align 0x4
L_491416:
L_272859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272860
.p2align 0x4
.long 0x979
L_272860:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_272776
.p2align 0x4
.long 0xE54
L_272846:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272847
L_272851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272852
.p2align 0x4
.long 0x4505
L_272852:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272847:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272848
.p2align 0x4
.long 0x109B
L_272848:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3199:
	cmpq $0x1,%r15
	jnl L_491418
L_272850:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3199
.p2align 0x4
L_491418:
L_272849:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x40(%rbp)
	jmp L_272780
.p2align 0x4
.long 0x652
L_272853:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32BB
L_272779:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_272780
.p2align 0x4
.long 0x44FB
L_272783:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272784
L_272835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_272836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272836
.p2align 0x4
.long 0x4504
L_272836:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_272784:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_491420
L_272785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_272786:
	movq %r15,0x80(%rbp)
	leaq L_272833(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_272787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491420:
L_272834:
	movq $0x1,%r15
L_272795:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
L_272796:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_899
L_272827:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2098
L_272828:
	movq %r14,%r15
L_272803:
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2057
.p2align 0x4
x_2098:
x_899:
	leaq L_272826(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x10AA8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_272797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x652
L_272837:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44FC
L_272787:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272788
L_272831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_272832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272832
.p2align 0x4
.long 0x4503
L_272832:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_272788:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_491422
L_272789:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_272786
.p2align 0x4
L_491422:
L_272790:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_272791:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491424
.p2align 0x4,,0x7
L_272792:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_272795
L_272793:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_272791
.p2align 0x4
L_491424:
L_272829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_272830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272830
.p2align 0x4
.long 0x4502
L_272830:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_272792
.p2align 0x4
.long 0x652
L_272833:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC4D
L_272804:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272805
L_272821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272822
.p2align 0x4
.long 0xA9B
L_272822:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272805:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_491427
L_272807:
	testl %r13d,%r13d
	jz L_491426
L_272808:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_272819(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10AD0)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_272809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_491426:
L_272815:
	movq $0x253B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491427:
L_272806:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44FD
L_272797:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491429
L_272799:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_272800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491429:
L_272798:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_272826:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44FF
L_272809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491430
L_272811:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x70,%rbp
	leaq (L_272812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491430:
L_272810:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_272819:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44FE
L_272800:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272801
L_272824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_272825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272825
.p2align 0x4
.long 0x4501
L_272825:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_272801:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491431
L_272802:
	movq 0x68(%rbp),%r15
	jmp L_272803
.p2align 0x4
L_491431:
L_272823:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1493
L_272812:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272813
L_272817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_272818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272818
.p2align 0x4
.long 0x4500
L_272818:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_272813:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_272815
L_272816:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2089
.hidden x_2089
x_2089:
L_272861:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272889
L_272862:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491440
L_272863:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2335,%r15
	je L_491438
L_272888:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
L_272868:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2333,%r15
	je L_491437
L_272875:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_491435
L_272884:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_272880:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x24DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_272872:
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491435:
L_272876:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491436
L_272883:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
	jmp L_272880
.p2align 0x4
L_491436:
L_272877:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491437:
L_272869:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_272870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2089
.p2align 0x4
L_491438:
L_272864:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491439
L_272887:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r11,%r15
	jmp L_272868
.p2align 0x4
L_491439:
L_272865:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_272866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491440:
L_272889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_272890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272890
.p2align 0x4
.long 0x460
L_272890:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_272863
.p2align 0x4
.long 0x2B
L_272878:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272879
L_272881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_272882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272882
.p2align 0x4
.long 0x4B2
L_272882:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_272879:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_272880
.p2align 0x4
.long 0x2B
L_272870:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272871
L_272873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272874
.p2align 0x4
.long 0x2C
L_272874:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272871:
	movq 0x18(%rbp),%r15
	jmp L_272872
.p2align 0x4
.long 0x522
L_272866:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272867
L_272885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272886
.p2align 0x4
.long 0x4E8
L_272886:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272867:
	movq 0x10(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_272868
.text
.p2align 0x4
.globl x_2088
.hidden x_2088
x_2088:
L_272891:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272967
L_272892:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491447
L_272893:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2328,%r15
	je L_491445
L_272966:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_272910:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	leaq L_272955(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_272911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_491445:
L_272894:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r15
	je L_491446
L_272895:
L_272896:
	movq %r15,0x50(%rbp)
	leaq L_272964(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_272897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491446:
L_272965:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_272896
.p2align 0x4
L_491447:
L_272967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272968
.p2align 0x4
.long 0x45D
L_272968:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272893
.p2align 0x4
.long 0x499
L_272911:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272912
L_272953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272954
.p2align 0x4
.long 0x498
L_272954:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272912:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22F9,%r14
	je L_491451
L_272919:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2328,%r15
	je L_491449
L_272952:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_272936:
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	leaq L_272941(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_272937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_491449:
L_272920:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r15
	je L_491450
L_272921:
L_272922:
	movq %r15,0x58(%rbp)
	leaq L_272950(%rip),%r15
	movq %r15,0x10(%rbp)
	movb $0x2E,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_272923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491450:
L_272951:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_272922
.p2align 0x4
L_491451:
L_272913:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2088
.p2align 0x4
.long 0x25
L_272955:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49F
L_272897:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272898
L_272962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272963
.p2align 0x4
.long 0x2578
L_272963:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272898:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_491453
L_272899:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_272900:
	movq %r15,0x58(%rbp)
	leaq L_272960(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_272901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491453:
L_272961:
	movq $0x1,%r15
L_272909:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	xchgq %r14,%r15
	jmp L_272910
.p2align 0x4
.long 0x25
L_272964:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69C
L_272937:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272938
L_272939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272940
.p2align 0x4
.long 0x4FD
L_272940:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272938:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_272916:
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272941:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B5
L_272923:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272924
L_272948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272949
.p2align 0x4
.long 0x4B6
L_272949:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272924:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_491456
L_272925:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_272926:
	movq %r15,0x60(%rbp)
	leaq L_272946(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_272927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491456:
L_272947:
	movq $0x1,%r15
L_272935:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	xchgq %r14,%r15
	jmp L_272936
.p2align 0x4
.long 0x25
L_272950:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69C
L_272914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272915
L_272917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272918
.p2align 0x4
.long 0x601
L_272918:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272915:
	movq 0x20(%rbp),%r15
	jmp L_272916
.p2align 0x4
.long 0x1007
L_272901:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272902
L_272958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272959
.p2align 0x4
.long 0x2443
L_272959:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272902:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_491459
L_272903:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_272900
.p2align 0x4
L_491459:
L_272904:
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_272905:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491461
.p2align 0x4,,0x7
L_272906:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_272909
L_272907:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_272905
.p2align 0x4
L_491461:
L_272956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272957
.p2align 0x4
.long 0x2373
L_272957:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_272906
.p2align 0x4
.long 0x25
L_272960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B4
L_272927:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272928
L_272944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_272945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272945
.p2align 0x4
.long 0x4B7
L_272945:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_272928:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_491463
L_272929:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_272926
.p2align 0x4
L_491463:
L_272930:
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_272931:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491465
.p2align 0x4,,0x7
L_272932:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_272935
L_272933:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_272931
.p2align 0x4
L_491465:
L_272942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272943
.p2align 0x4
.long 0x7AD
L_272943:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_272932
.p2align 0x4
.long 0x25
L_272946:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromSymbols_0
.hidden fromSymbols_0
fromSymbols_0:
L_272969:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272970
L_273040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_273041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273041
.p2align 0x4
.long 0x45C
L_273041:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_272970:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_491467
L_272971:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_272972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_491467:
L_273025:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491481
L_273026:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_273027:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491480
.p2align 0x4,,0x7
L_273028:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2713,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_491468
L_273029:
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_273027
.p2align 0x4
L_491468:
L_273030:
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_273031:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491479
.p2align 0x4,,0x7
L_273032:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491469
L_273033:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_273031
.p2align 0x4
L_491469:
L_273034:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_272988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491478
.p2align 0x4,,0x7
L_272989:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491470
L_272990:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_272988
.p2align 0x4
L_491470:
L_272991:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_491477
L_272992:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_272993:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491476
.p2align 0x4,,0x7
L_272994:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491471
L_272995:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_272993
.p2align 0x4
L_491471:
L_272996:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_272997:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491475
.p2align 0x4,,0x7
L_272998:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491472
L_272999:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_272997
.p2align 0x4
L_491472:
L_273000:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_273001:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491474
.p2align 0x4,,0x7
L_273002:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491473
L_273003:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_273001
.p2align 0x4
L_491473:
L_273005:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491474:
L_273006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_273007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273007
.p2align 0x4
.long 0x63D
L_273007:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_273002
.p2align 0x4
L_491475:
L_273008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_273009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273009
.p2align 0x4
.long 0x63D
L_273009:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_272998
.p2align 0x4
L_491476:
L_273010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_273011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273011
.p2align 0x4
.long 0x63D
L_273011:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_272994
.p2align 0x4
L_491477:
L_273012:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_273005
.p2align 0x4
L_491478:
L_273013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273014
.p2align 0x4
.long 0x4AF
L_273014:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272989
.p2align 0x4
L_491479:
L_273035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273036
.p2align 0x4
.long 0x4AF
L_273036:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273032
.p2align 0x4
L_491480:
L_273037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273038
.p2align 0x4
.long 0x4AF
L_273038:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273028
.p2align 0x4
L_491481:
L_273024:
	movq (globalObjptr+0xA10)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x556
L_272972:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movl 0x4(%r15),%r14d
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_273024
L_272973:
	movl %r14d,0x24(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_272974:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_491492
L_272976:
	movl $0x0,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3200:
	cmpl %ecx,%ebx
	jnl L_491485
L_273019:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_491484
L_273021:
	movl 0x30(%rbp),%r13d
	incl %r13d
	jo L_491483
L_273022:
	movl %r13d,0x30(%rbp)
	movl %r14d,%ebx
	jmp loop_3200
.p2align 0x4
L_491483:
L_272979:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491484:
L_273020:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491485:
L_272977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491491
.p2align 0x4,,0x7
L_272978:
	movl 0x24(%rbp),%r15d
	movl %r15d,%r14d
	addl 0x30(%rbp),%r14d
	jo L_272979
L_272980:
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl 0x20(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl %r15d,0x4(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x389,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x4(%r10)
	addq $0x18,%r12
	movl %r11d,0x0(%r10)
	movq %r15,0x8(%r10)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r13)
	incl %r14d
	jo L_272979
L_272981:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x8(%rbp),%r11
	cmpq $0x1,%r11
	je L_491486
L_272982:
	movq %r15,0x28(%rbp)
	movl %r14d,0x24(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_272974
.p2align 0x4
L_491486:
L_272983:
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_272984:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491488
.p2align 0x4,,0x7
L_272985:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491487
L_272986:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_272984
.p2align 0x4
L_491487:
L_272987:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_272988
.p2align 0x4
L_491488:
L_273015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273016
.p2align 0x4
.long 0x4AF
L_273016:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272985
.p2align 0x4
L_491491:
L_273017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273018
.p2align 0x4
.long 0xD40
L_273018:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_272978
.p2align 0x4
L_491492:
L_272975:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2084
.hidden x_2084
x_2084:
L_273042:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273178
L_273043:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491496
L_273044:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_491494
L_273174:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_273175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_491494:
L_273045:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491495
L_273167:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_273168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491495:
L_273046:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_273047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491496:
L_273178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273179
.p2align 0x4
.long 0x45D
L_273179:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273044
.p2align 0x4
.long 0x499
L_273175:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_491508
L_273176:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273065:
	incl %ecx
	jo L_491507
L_273067:
	cmpq $0x1,%r15
	je L_491498
L_273068:
	movq 0x8(%r15),%r15
	jmp L_273065
.p2align 0x4
L_491498:
L_273069:
	movq %r14,0x20(%rbp)
L_273070:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_491506
L_273071:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491505
L_273072:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_273073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273073
.p2align 0x4
.long 0x44F5
L_273073:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_273074:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3201:
	cmpq 0x28(%rbp),%r15
	jnl L_491500
L_273149:
	cmpq $0x1,%r14
	je L_491499
L_273150:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x30(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3201
.p2align 0x4
L_491499:
L_273151:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491500:
L_273075:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273076
L_273147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273148
.p2align 0x4
.long 0x1DA8
L_273148:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273076:
	movq 0x30(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230B,%r14
	je L_491503
L_273083:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x230D,%r15
	je L_491501
L_273143:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_491501:
L_273084:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2317,%r14
	je L_491502
L_273136:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x40(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491502:
L_273085:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491503:
L_273077:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
L_491505:
L_273152:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491506:
L_273153:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_273074
.p2align 0x4
L_491507:
L_273066:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491508:
L_273177:
	xorl %ecx,%ecx
	jmp L_273070
.p2align 0x4
.long 0x639
L_273168:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273169
L_273172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273173
.p2align 0x4
.long 0x98A
L_273173:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273169:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491509
L_273170:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_900:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_273050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491509:
L_273171:
	movq %r14,0x30(%rbp)
	movq $0x1,0x20(%rbp)
L_273052:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_273053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x639
L_273047:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273048
L_273165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273166
.p2align 0x4
.long 0xE3F
L_273166:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273048:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491511
L_273049:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x30(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_900
.p2align 0x4
L_491511:
L_273164:
	movq $0x1,0x20(%rbp)
	jmp L_273052
.p2align 0x4
.long 0x69C
L_273144:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_491520
L_273145:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273104:
	incl %ecx
	jo L_491519
L_273106:
	cmpq $0x1,%r15
	je L_491513
L_273107:
	movq 0x8(%r15),%r15
	jmp L_273104
.p2align 0x4
L_491513:
L_273108:
	movq %r14,0x20(%rbp)
L_273109:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_491518
L_273110:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491517
L_273111:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273112
.p2align 0x4
.long 0x601
L_273112:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_273113:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3202:
	cmpq 0x28(%rbp),%r15
	jnl L_491515
L_273118:
	cmpq $0x1,%r14
	je L_491514
L_273119:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x38(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3202
.p2align 0x4
L_491514:
L_273120:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491515:
L_273114:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273115
L_273116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273117
.p2align 0x4
.long 0x6AF
L_273117:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273115:
	movq 0x38(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_273080:
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491517:
L_273121:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491518:
L_273122:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_273113
.p2align 0x4
L_491519:
L_273105:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491520:
L_273146:
	xorl %ecx,%ecx
	jmp L_273109
.p2align 0x4
.long 0x700
L_273137:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273138
L_273141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273142
.p2align 0x4
.long 0x4B8
L_273142:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273138:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491521
L_273139:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_901:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x40(%rbp)
	addq $0x20,%r12
	addq $0x40,%rbp
	leaq (L_273089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491521:
L_273140:
	movq %r14,0x38(%rbp)
	movq $0x1,0x20(%rbp)
L_273091:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_273092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x700
L_273086:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273087
L_273134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273135
.p2align 0x4
.long 0x5EF
L_273135:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273087:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491523
L_273088:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x38(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_901
.p2align 0x4
L_491523:
L_273133:
	movq $0x1,0x20(%rbp)
	jmp L_273091
.p2align 0x4
.long 0x69C
L_273078:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273079
L_273081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273082
.p2align 0x4
.long 0x601
L_273082:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273079:
	movq 0x20(%rbp),%r15
	jmp L_273080
.p2align 0x4
.long 0x639
L_273050:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273051
L_273162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273163
.p2align 0x4
.long 0x98A
L_273163:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273051:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_273052
.p2align 0x4
.long 0x7BD
L_273053:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273054
L_273160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273161
.p2align 0x4
.long 0x98A
L_273161:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273054:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491530
L_273055:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273056:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491529
L_273058:
	cmpq $0x1,%r15
	je L_491527
L_273059:
	movq 0x8(%r15),%r15
	jmp L_273056
.p2align 0x4
L_491527:
L_273060:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273061
L_273157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273158
.p2align 0x4
.long 0x8A1
L_273158:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273061:
	movl 0x28(%rbp),%ecx
L_273062:
	movl %ecx,0x58(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_273156(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_273063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491529:
L_273057:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491530:
L_273159:
	xorl %ecx,%ecx
	jmp L_273062
.p2align 0x4
.long 0x700
L_273089:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273090
L_273131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273132
.p2align 0x4
.long 0x4B8
L_273132:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273090:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_273091
.p2align 0x4
.long 0x75E
L_273092:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273093
L_273129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273130
.p2align 0x4
.long 0x4B8
L_273130:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273093:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491536
L_273094:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273095:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491535
L_273097:
	cmpq $0x1,%r15
	je L_491533
L_273098:
	movq 0x8(%r15),%r15
	jmp L_273095
.p2align 0x4
L_491533:
L_273099:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273100
L_273126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273127
.p2align 0x4
.long 0x4506
L_273127:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_273100:
	movl 0x28(%rbp),%ecx
L_273101:
	movl %ecx,0x60(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	leaq L_273125(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491535:
L_273096:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491536:
L_273128:
	xorl %ecx,%ecx
	jmp L_273101
.p2align 0x4
.long 0x7A7
L_273063:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273064
L_273154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273155
.p2align 0x4
.long 0x7A8
L_273155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273064:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_273065
.p2align 0x4
.long 0x25
L_273156:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA81
L_273102:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273103
L_273123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273124
.p2align 0x4
.long 0x702
L_273124:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273103:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_273104
.p2align 0x4
.long 0x25
L_273125:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2083
.hidden x_2083
x_2083:
L_273180:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273268
L_273181:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491541
L_273182:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491540
L_273261:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_273262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491540:
L_273183:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_273184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491541:
L_273268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273269
.p2align 0x4
.long 0x45D
L_273269:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273182
.p2align 0x4
.long 0x639
L_273262:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273263
L_273266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273267
.p2align 0x4
.long 0x98A
L_273267:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273263:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_491543
L_273264:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_902:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_273187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491543:
L_273265:
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
L_273189:
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_273190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x639
L_273184:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273185
L_273259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273260
.p2align 0x4
.long 0xE3F
L_273260:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273185:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_491545
L_273186:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x30(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq %r11,%r15
	jmp x_902
.p2align 0x4
L_491545:
L_273258:
	movq $0x1,0x28(%rbp)
	jmp L_273189
.p2align 0x4
.long 0x639
L_273187:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273188
L_273256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273257
.p2align 0x4
.long 0x98A
L_273257:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273188:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_273189
.p2align 0x4
.long 0x8FA
L_273190:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273191
L_273254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273255
.p2align 0x4
.long 0x98A
L_273255:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273191:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491551
L_273192:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273193:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_491550
L_273195:
	cmpq $0x1,%r15
	je L_491548
L_273196:
	movq 0x8(%r15),%r15
	jmp L_273193
.p2align 0x4
L_491548:
L_273197:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273198
L_273251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273252
.p2align 0x4
.long 0x3ADF
L_273252:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273198:
	movl 0x20(%rbp),%ecx
L_273199:
	movl %ecx,0x58(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_273250(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_273200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491550:
L_273194:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491551:
L_273253:
	xorl %ecx,%ecx
	jmp L_273199
.p2align 0x4
.long 0x36CA
L_273200:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273201
L_273248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273249
.p2align 0x4
.long 0x7A8
L_273249:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273201:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_491553
L_273243:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_491553:
L_273202:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491554
L_273236:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x40(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491554:
L_273203:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
.long 0x25
L_273250:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69C
L_273244:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273245
L_273246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273247
.p2align 0x4
.long 0x601
L_273247:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273245:
	movq 0x20(%rbp),%r15
L_273222:
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x700
L_273237:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273238
L_273241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273242
.p2align 0x4
.long 0x4B8
L_273242:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273238:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491557
L_273239:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_903:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x40(%rbp)
	addq $0x20,%r12
	addq $0x40,%rbp
	leaq (L_273207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491557:
L_273240:
	movq %r14,0x38(%rbp)
	movq $0x1,0x20(%rbp)
L_273209:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_273210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x700
L_273204:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273205
L_273234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273235
.p2align 0x4
.long 0x5EF
L_273235:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273205:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491559
L_273206:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x38(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_903
.p2align 0x4
L_491559:
L_273233:
	movq $0x1,0x20(%rbp)
	jmp L_273209
.p2align 0x4
.long 0x700
L_273207:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273208
L_273231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273232
.p2align 0x4
.long 0x4B8
L_273232:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273208:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_273209
.p2align 0x4
.long 0x75E
L_273210:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273211
L_273229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273230
.p2align 0x4
.long 0x4B8
L_273230:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273211:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xB61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491565
L_273212:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_273213:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491564
L_273215:
	cmpq $0x1,%r15
	je L_491562
L_273216:
	movq 0x8(%r15),%r15
	jmp L_273213
.p2align 0x4
L_491562:
L_273217:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273218
L_273226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273227
.p2align 0x4
.long 0x4506
L_273227:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_273218:
	movl 0x28(%rbp),%ecx
L_273219:
	movl %ecx,0x60(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	leaq L_273225(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491564:
L_273214:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491565:
L_273228:
	xorl %ecx,%ecx
	jmp L_273219
.p2align 0x4
.long 0xA81
L_273220:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273221
L_273223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273224
.p2align 0x4
.long 0x702
L_273224:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273221:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_273222
.p2align 0x4
.long 0x25
L_273225:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2091
.hidden x_2091
x_2091:
L_273270:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_273271
L_273287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_273288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273288
.p2align 0x4
.long 0x460
L_273288:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_273271:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_273272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2067
.p2align 0x4
.long 0x522
L_273272:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273273
L_273285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273286
.p2align 0x4
.long 0x4E8
L_273286:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_273273:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2302,%r14
	je L_491569
L_273280:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_273281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2091
.p2align 0x4
L_491569:
L_273274:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x3BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_273275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2067
.p2align 0x4
.long 0x45A
L_273281:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273282
L_273283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_273284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273284
.p2align 0x4
.long 0x509
L_273284:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_273282:
	movq 0x28(%rbp),%r15
L_273277:
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_273275:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273276
L_273278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273279
.p2align 0x4
.long 0x4FD
L_273279:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273276:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_273277
.text
.p2align 0x4
.globl x_2080
.hidden x_2080
x_2080:
L_273289:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273367
L_273290:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491579
L_273291:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491577
L_273364:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491576
L_273366:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_273296:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_491575
L_273297:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_491574
	cmpq $0x230A,%r15
	je L_491573
L_273298:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_273299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491573:
L_273355:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_273356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_491574:
L_273350:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_273351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_491575:
L_273360:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_273301:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_273347(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_273302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_491576:
L_273365:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_273294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491577:
L_273292:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491578
L_273363:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_273296
.p2align 0x4
L_491578:
L_273293:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_273294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491579:
L_273367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273368
.p2align 0x4
.long 0x45D
L_273368:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273291
.p2align 0x4
.long 0x19A0
L_273299:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273300
L_273348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273349
.p2align 0x4
.long 0x2373
L_273349:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273300:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_273301
.p2align 0x4
.long 0x19A0
L_273356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273357
L_273358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273359
.p2align 0x4
.long 0x2373
L_273359:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273357:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_273301
.p2align 0x4
.long 0x19A0
L_273351:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273352
L_273353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273354
.p2align 0x4
.long 0x2373
L_273354:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273352:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_273301
.p2align 0x4
.long 0x8FA
L_273302:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273303
L_273345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273346
.p2align 0x4
.long 0x4404
L_273346:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_273303:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2304,%r15
	je L_491590
L_273310:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491588
L_273342:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491587
L_273344:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_273315:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_491586
L_273316:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_491585
	cmpq $0x230A,%r15
	je L_491584
L_273317:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2054
.p2align 0x4
L_491584:
L_273333:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_491585:
L_273328:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_491586:
L_273338:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_273320:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_273325(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_273321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_491587:
L_273343:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491588:
L_273311:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491589
L_273341:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_273315
.p2align 0x4
L_491589:
L_273312:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_273313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491590:
L_273304:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_273305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
.long 0x25
L_273347:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_273294:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273295
L_273361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273362
.p2align 0x4
.long 0x98A
L_273362:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273295:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r15
	jmp L_273296
.p2align 0x4
.long 0x853
L_273318:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273319
L_273326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273327
.p2align 0x4
.long 0x7AD
L_273327:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_273319:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_273320
.p2align 0x4
.long 0x853
L_273334:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273335
L_273336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273337
.p2align 0x4
.long 0x7AD
L_273337:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_273335:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_273320
.p2align 0x4
.long 0x853
L_273329:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273330
L_273331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273332
.p2align 0x4
.long 0x7AD
L_273332:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_273330:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_273320
.p2align 0x4
.long 0x512
L_273321:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273322
L_273323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273324
.p2align 0x4
.long 0x816
L_273324:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273322:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_273307:
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_273325:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x700
L_273313:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273314
L_273339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273340
.p2align 0x4
.long 0x4B8
L_273340:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273314:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_273315
.p2align 0x4
.long 0x45A
L_273305:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273306
L_273308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_273309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273309
.p2align 0x4
.long 0x509
L_273309:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_273306:
	movq 0x28(%rbp),%r15
	jmp L_273307
.text
.p2align 0x4
.globl x_2079
.hidden x_2079
x_2079:
L_273369:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273455
L_273370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491601
L_273371:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2328,%r14
	je L_491599
L_273454:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
L_273388:
	leaq L_273443(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_273389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_491599:
L_273372:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	jne L_491600
L_273453:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r14,%r15
L_273374:
	movq %r15,0x48(%rbp)
	leaq L_273452(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_273375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491600:
	movq %r14,%r15
	jmp L_273374
.p2align 0x4
L_491601:
L_273455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273456
.p2align 0x4
.long 0x45D
L_273456:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_273371
.p2align 0x4
.long 0x700
L_273389:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movl 0x4(%r15),%r14d
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_491622
L_273390:
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_273391:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_491621
L_273393:
	movl $0x0,0x50(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3203:
	cmpl %ecx,%ebx
	jnl L_491605
L_273437:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_491604
L_273439:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_491603
L_273441:
	movl %r13d,0x50(%rbp)
	movl %r14d,%ebx
	jmp loop_3203
.p2align 0x4
L_491603:
L_273440:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491604:
L_273438:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491605:
L_273394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491620
.p2align 0x4,,0x7
L_273395:
	movl 0x44(%rbp),%r15d
	movl %r15d,%r14d
	addl 0x50(%rbp),%r14d
	jo L_491619
L_273397:
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl 0x40(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl %r15d,0x4(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x389,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x4(%r10)
	addq $0x18,%r12
	movl %r11d,0x0(%r10)
	movq %r15,0x8(%r10)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r13)
	incl %r14d
	jo L_491618
L_273399:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_491606
L_273400:
	movq %r15,0x48(%rbp)
	movl %r14d,0x44(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_273391
.p2align 0x4
L_491606:
L_273401:
	movq %r13,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_273402:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491617
.p2align 0x4,,0x7
L_273403:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491607
L_273404:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_273402
.p2align 0x4
L_491607:
L_273405:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_273406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491616
.p2align 0x4,,0x7
L_273407:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491608
L_273408:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_273406
.p2align 0x4
L_491608:
L_273409:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_491615
L_273410:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_273411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491614
.p2align 0x4,,0x7
L_273412:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491609
L_273413:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_273411
.p2align 0x4
L_491609:
L_273414:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_273415:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491613
.p2align 0x4,,0x7
L_273416:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491610
L_273417:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_273415
.p2align 0x4
L_491610:
L_273418:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_273419:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491612
.p2align 0x4,,0x7
L_273420:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491611
L_273421:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_273419
.p2align 0x4
L_491611:
L_273423:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491612:
L_273424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273425
.p2align 0x4
.long 0x4B8
L_273425:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_273420
.p2align 0x4
L_491613:
L_273426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273427
.p2align 0x4
.long 0x4B8
L_273427:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_273416
.p2align 0x4
L_491614:
L_273428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273429
.p2align 0x4
.long 0x4B8
L_273429:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_273412
.p2align 0x4
L_491615:
L_273430:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_273423
.p2align 0x4
L_491616:
L_273431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273432
.p2align 0x4
.long 0x5EF
L_273432:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_273407
.p2align 0x4
L_491617:
L_273433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273434
.p2align 0x4
.long 0x5EF
L_273434:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_273403
.p2align 0x4
L_491618:
L_273398:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491619:
L_273396:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491620:
L_273435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273436
.p2align 0x4
.long 0x4507
L_273436:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_273395
.p2align 0x4
L_491621:
L_273392:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491622:
L_273442:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_273443:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_273375:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273376
L_273450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273451
.p2align 0x4
.long 0x98A
L_273451:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273376:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491623
L_273377:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_273378:
	movq %r15,0x50(%rbp)
	leaq L_273448(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_273379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491623:
L_273449:
	movq $0x1,%r15
L_273387:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r15,0x30(%rbp)
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_273388
.p2align 0x4
.long 0x25
L_273452:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x36CD
L_273379:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273380
L_273446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273447
.p2align 0x4
.long 0x2373
L_273447:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_273380:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491625
L_273381:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_273378
.p2align 0x4
L_491625:
L_273382:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_273383:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491627
.p2align 0x4,,0x7
L_273384:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_273387
L_273385:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_273383
.p2align 0x4
L_491627:
L_273444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273445
.p2align 0x4
.long 0x2578
L_273445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_273384
.p2align 0x4
.long 0x25
L_273448:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2073
.hidden x_2073
x_2073:
L_273457:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_273458
L_273478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_273479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273479
.p2align 0x4
.long 0x460
L_273479:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_273458:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_273459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x522
L_273459:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273460
L_273476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_273477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273477
.p2align 0x4
.long 0x4E8
L_273477:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_273460:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E3,%r14
	je L_491630
L_273467:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x30,%rbp
	leaq (L_273468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
L_491630:
L_273461:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_273462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2073
.p2align 0x4
.long 0x2
L_273468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273469
L_273474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_273475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273475
.p2align 0x4
.long 0x520
L_273475:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_273469:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_273470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2035
.p2align 0x4
.long 0x45A
L_273462:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273463
L_273465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_273466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273466
.p2align 0x4
.long 0x509
L_273466:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_273463:
	movq 0x28(%rbp),%r15
L_273464:
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_273470:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273471
L_273472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273473
.p2align 0x4
.long 0x5EF
L_273473:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273471:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x270B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_273464
.text
.p2align 0x4
.globl x_2077
.hidden x_2077
x_2077:
L_273480:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273569
L_273481:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491655
L_273482:
	movq 0x0(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491654
L_273566:
	movq 0x0(%r9),%r15
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491635
L_273567:
	movq %r15,0x38(%rbp)
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
L_273487:
	movq %r15,0x48(%rbp)
	movq %r10,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_273488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_491635:
L_273568:
	movq $0x1,0x38(%rbp)
L_273490:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,(globalObjptr+0xE948)(%rip)
	je L_273557
L_273491:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x8,%r13
	jne vectorEqual_78
L_273548:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_214:
	cmpq %r15,0x48(%rbp)
	je L_491651
L_273549:
	movq (globalObjptr+0xE948)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491636
L_273554:
	incq %r15
	jmp vectorEqualLoop_214
.p2align 0x4
L_491636:
L_273550:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_78
L_273552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273553
.p2align 0x4
.long 0x450A
L_273553:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_78:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE928)(%rip)
	je L_273544
L_273493:
	cmpq $0x6,0x48(%rbp)
	jne vectorEqual_79
L_273535:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_213:
	cmpq %r15,0x48(%rbp)
	je L_491648
L_273536:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE928)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491637
L_273541:
	incq %r15
	jmp vectorEqualLoop_213
.p2align 0x4
L_491637:
L_273537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_79
L_273539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273540
.p2align 0x4
.long 0x450A
L_273540:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_79:
	movq (globalObjptr+0xE940)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_273531
L_273495:
	cmpq $0x7,0x48(%rbp)
	jne vectorEqual_80
L_273522:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_212:
	cmpq 0x48(%rbp),%r15
	je L_491645
L_273523:
	movq (globalObjptr+0xE940)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491638
L_273528:
	incq %r15
	jmp vectorEqualLoop_212
.p2align 0x4
L_491638:
L_273524:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_80
L_273526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273527
.p2align 0x4
.long 0x450A
L_273527:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_80:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xD768)(%rip)
	je L_273518
L_273497:
	cmpq $0x5,0x48(%rbp)
	jne L_273499
L_273509:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_211:
	cmpq %r15,0x48(%rbp)
	je L_491641
L_273510:
	movq (globalObjptr+0xD768)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491639
L_273515:
	incq %r15
	jmp vectorEqualLoop_211
.p2align 0x4
L_491639:
L_273511:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273499
L_273513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273514
.p2align 0x4
.long 0x4509
L_273514:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273499:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10AD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	leaq L_273508(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_491641:
L_273516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273518
L_273519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273520
.p2align 0x4
.long 0x7BB
L_273520:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273518:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491645:
L_273529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273531
L_273532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273533
.p2align 0x4
.long 0x7BB
L_273533:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273531:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491648:
L_273542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273544
L_273545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273546
.p2align 0x4
.long 0x7BB
L_273546:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273544:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491651:
L_273555:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273557
L_273558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273559
.p2align 0x4
.long 0x7BB
L_273559:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273557:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491654:
L_273483:
	movq 0x8(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_273484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491655:
L_273569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273570
.p2align 0x4
.long 0x97E
L_273570:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_273482
.p2align 0x4
.long 0x3A36
L_273488:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273489
L_273561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273562
.p2align 0x4
.long 0x4509
L_273562:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273489:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_273490
.p2align 0x4
.long 0x4508
L_273500:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	leaq L_273507(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_273501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x922
L_273508:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19F7
L_273484:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273485
L_273564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273565
.p2align 0x4
.long 0x4EB
L_273565:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273485:
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491658
L_273486:
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movq 0x40(%rbp),%r9
	movq %r9,0x38(%rbp)
	jmp L_273487
.p2align 0x4
L_491658:
L_273563:
	movq $0x1,0x38(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_273490
.p2align 0x4
.long 0x4508
L_273501:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491660
L_273503:
	movl %r13d,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_273504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491660:
L_273502:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x922
L_273507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_273504:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491661
L_273505:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491661:
L_273506:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2071
.hidden x_2071
x_2071:
L_273571:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_273675
L_273572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491686
L_273573:
	movq 0x0(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491685
L_273672:
	movq 0x0(%r9),%r15
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491662
L_273673:
	movq %r15,0x38(%rbp)
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
L_273578:
	movq %r15,0x48(%rbp)
	movq %r10,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_273579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_491662:
L_273674:
	movq $0x1,0x38(%rbp)
L_273581:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq (globalObjptr+0xE948)(%rip),%r14
	je L_273663
L_273582:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x8,%r13
	jne vectorEqual_81
L_273654:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_219:
	cmpq %r15,0x48(%rbp)
	je L_491682
L_273655:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE948)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491663
L_273660:
	incq %r15
	jmp vectorEqualLoop_219
.p2align 0x4
L_491663:
L_273656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_81
L_273658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273659
.p2align 0x4
.long 0x450A
L_273659:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_81:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE928)(%rip)
	je L_273650
L_273584:
	cmpq $0x6,0x48(%rbp)
	jne vectorEqual_82
L_273641:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_218:
	cmpq %r15,0x48(%rbp)
	je L_491679
L_273642:
	movq (globalObjptr+0xE928)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491664
L_273647:
	incq %r15
	jmp vectorEqualLoop_218
.p2align 0x4
L_491664:
L_273643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_82
L_273645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273646
.p2align 0x4
.long 0x450A
L_273646:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_82:
	movq (globalObjptr+0xE8E0)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_273637
L_273586:
	cmpq $0x7,0x48(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x50(%rbp)
	jne vectorEqual_83
L_273628:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_217:
	cmpq %r15,0x48(%rbp)
	je L_491676
L_273629:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE8E0)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491665
L_273634:
	incq %r15
	jmp vectorEqualLoop_217
.p2align 0x4
L_491665:
L_273630:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_83
L_273632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_273633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273633
.p2align 0x4
.long 0x450B
L_273633:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
vectorEqual_83:
	movq (globalObjptr+0xE940)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_273624
L_273588:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jz vectorEqual_84
L_273615:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_216:
	cmpq 0x48(%rbp),%r15
	je L_491673
L_273616:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE940)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491666
L_273621:
	incq %r15
	jmp vectorEqualLoop_216
.p2align 0x4
L_491666:
L_273617:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_84
L_273619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_273620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273620
.p2align 0x4
.long 0x450A
L_273620:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_84:
	movq (globalObjptr+0xE950)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_273611
L_273590:
	cmpq $0x5,0x48(%rbp)
	jne L_273592
L_273602:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_215:
	cmpq %r15,0x48(%rbp)
	je L_491669
L_273603:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE950)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491667
L_273608:
	incq %r15
	jmp vectorEqualLoop_215
.p2align 0x4
L_491667:
L_273604:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273592
L_273606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273607
.p2align 0x4
.long 0x4509
L_273607:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273592:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10AD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	leaq L_273601(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_273593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_491669:
L_273609:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273611
L_273612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273613
.p2align 0x4
.long 0x7BB
L_273613:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273611:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491673:
L_273622:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273624
L_273625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273626
.p2align 0x4
.long 0x7BB
L_273626:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273624:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491676:
L_273635:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273637
L_273638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273639
.p2align 0x4
.long 0x7BB
L_273639:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273637:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491679:
L_273648:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273650
L_273651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273652
.p2align 0x4
.long 0x7BB
L_273652:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273650:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491682:
L_273661:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273663
L_273664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_273665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273665
.p2align 0x4
.long 0x7BB
L_273665:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_273663:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491685:
L_273574:
	movq 0x8(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_273575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2061
.p2align 0x4
L_491686:
L_273675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_273676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273676
.p2align 0x4
.long 0x97E
L_273676:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_273573
.p2align 0x4
.long 0x3A36
L_273579:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273580
L_273667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273668
.p2align 0x4
.long 0x4509
L_273668:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273580:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_273581
.p2align 0x4
.long 0x4508
L_273593:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	leaq L_273600(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_273594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x922
L_273601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19F7
L_273575:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_273576
L_273670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_273671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_273671
.p2align 0x4
.long 0x4EB
L_273671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_273576:
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491689
L_273577:
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movq 0x40(%rbp),%r9
	movq %r9,0x38(%rbp)
	jmp L_273578
.p2align 0x4
L_491689:
L_273669:
	movq $0x1,0x38(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_273581
.p2align 0x4
.long 0x4508
L_273594:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491691
L_273596:
	movl %r13d,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_273597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491691:
L_273595:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x922
L_273600:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_273597:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491692
L_273598:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491692:
L_273599:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
