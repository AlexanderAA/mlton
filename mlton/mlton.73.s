/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:17:49 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl concat_7
.hidden concat_7
concat_7:
L_216233:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_216234
L_216277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216278
.p2align 0x4
.long 0x452
L_216278:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216234:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_468152
L_216235:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216236:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468151
.p2align 0x4,,0x7
L_216237:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468137
L_216238:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216236
.p2align 0x4
L_468137:
L_216239:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468150
.p2align 0x4,,0x7
L_216241:
	movq $0x2995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468138
L_216242:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216240
.p2align 0x4
L_468138:
L_216243:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_468145
L_216244:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_216245:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_468139
L_216246:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_216245
.p2align 0x4
L_468139:
L_216247:
	testq %r15,%r15
	jz L_468144
L_216248:
	cmpq $0x7FFFFFFF,%r15
	ja L_468143
L_216249:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216250
.p2align 0x4
.long 0x49C
L_216250:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_216251:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2349:
	cmpq 0x18(%rbp),%r14
	jnl L_468142
.p2align 0x4,,0x7
loop_2350:
	cmpq 0x0(%r11),%r13
	jl L_468141
L_216254:
	cmpq $0x1,%r10
	je L_468140
L_216255:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2350
.p2align 0x4
L_468140:
L_216256:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468141:
L_216257:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2349
.p2align 0x4
L_468142:
L_216252:
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468143:
L_216259:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468144:
L_216260:
	movq (globalObjptr+0x650)(%rip),%r14
	xchgq %r14,%r15
	jmp L_216251
.p2align 0x4
L_468145:
L_216261:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r13)
	movq %r13,0x10(%rbp)
	je L_468149
L_216262:
	testq %rdx,%rdx
	jz L_468148
L_216263:
	cmpq $0x7FFFFFFF,%rdx
	ja L_216259
L_216264:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216265
.p2align 0x4
.long 0x4A5
L_216265:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_216266:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2351:
	cmpq 0x18(%rbp),%r14
	jnl L_468146
L_216268:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2351
.p2align 0x4
L_468146:
L_216267:
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468148:
L_216270:
	movq (globalObjptr+0x658)(%rip),%r15
	jmp L_216266
.p2align 0x4
L_468149:
L_216271:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468150:
L_216272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216273
.p2align 0x4
.long 0x45C
L_216273:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216241
.p2align 0x4
L_468151:
L_216274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216275
.p2align 0x4
.long 0x45C
L_216275:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216237
.p2align 0x4
L_468152:
L_216276:
	movq (globalObjptr+0x660)(%rip),%r14
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1870
.hidden x_1870
x_1870:
L_216279:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_216280
L_216356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_216357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216357
.p2align 0x4
.long 0x1E4D
L_216357:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_216280:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xA8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x1,%r14
	je L_468154
L_216281:
	movq (globalObjptr+0x10260)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_216282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468154:
L_216286:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468155
L_216287:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
L_216288:
	movq %r15,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0xC8,%rbp
	leaq (L_216289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_1
.p2align 0x4
L_468155:
L_216352:
	movq $0x1,0xB0(%rbp)
L_216293:
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0xC0,%rbp
	leaq (L_216294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_1
.p2align 0x4
.long 0x328C
L_216282:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216283
L_216353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_216354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216354
.p2align 0x4
.long 0x329D
L_216354:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_216283:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_216284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x328C
L_216289:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216290
L_216350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_216351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216351
.p2align 0x4
.long 0x329C
L_216351:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_216290:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB0(%rbp),%r13
	cmpq $0x1,%r13
	je L_468158
L_216291:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xB0(%rbp)
	jmp L_216288
.p2align 0x4
L_468158:
L_216292:
	movq %r14,0xB0(%rbp)
	jmp L_216293
.p2align 0x4
.long 0x328D
L_216294:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_216295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x328C
L_216284:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_216285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x328E
L_216295:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216296
L_216348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216349
.p2align 0x4
.long 0x329B
L_216349:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216296:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_468171
L_216297:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216298:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_468170
L_216300:
	cmpq $0x1,%r15
	je L_468160
L_216301:
	movq 0x8(%r15),%r15
	jmp L_216298
.p2align 0x4
L_468160:
L_216302:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216303
L_216345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216346
.p2align 0x4
.long 0x328F
L_216346:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216303:
	movl 0x48(%rbp),%ecx
L_216304:
	movslq %ecx,%r15
	movq %r15,0x48(%rbp)
	testq %r15,%r15
	jz L_468168
L_216305:
	cmpq $0x7FFFFFFF,%r15
	ja L_468167
L_216306:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216307
L_216341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216342
.p2align 0x4
.long 0x328F
L_216342:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216307:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216308
.p2align 0x4
.long 0x328F
L_216308:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x60(%rbp)
L_216309:
	movq 0x58(%rbp),%r15
	movq $0x0,0x58(%rbp)
loop_2352:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x58(%rbp)
	jnl L_468162
L_216324:
	cmpq $0x1,%r15
	je L_468161
L_216325:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_216326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_468161:
L_216340:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468162:
L_216310:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216311
L_216322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216323
.p2align 0x4
.long 0x3294
L_216323:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216311:
	movq 0x60(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x48(%rbp)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216312
.p2align 0x4
.long 0x3290
L_216312:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2353:
	cmpq $0x1,%r15
	jnl L_468163
L_216321:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2353
.p2align 0x4
L_468163:
L_216313:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216314
L_216319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216320
.p2align 0x4
.long 0x3293
L_216320:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216314:
	movq 0x38(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_216315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_7
.p2align 0x4
L_468167:
L_216343:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468168:
L_216344:
	movq (globalObjptr+0x7450)(%rip),%r14
	movq %r14,0x60(%rbp)
	jmp L_216309
.p2align 0x4
L_468170:
L_216299:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468171:
L_216347:
	xorl %ecx,%ecx
	jmp L_216304
.p2align 0x4
.long 0x2233
L_216285:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_216286
.p2align 0x4
.long 0x3295
L_216326:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_216327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3291
L_216315:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216316
L_216317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216318
.p2align 0x4
.long 0x3292
L_216318:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216316:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3296
L_216327:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_216328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3297
L_216328:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216329
L_216338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216339
.p2align 0x4
.long 0x329A
L_216339:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_216329:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_216330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3298
L_216330:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_216331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3298
L_216331:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216332
L_216336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_216337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216337
.p2align 0x4
.long 0x3299
L_216337:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_216332:
	movl 0x78(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_468175
L_216333:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
L_216334:
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x58(%rbp),%r11
	movq %r14,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x58(%rbp)
	movq 0x68(%rbp),%r15
	jmp loop_2352
.p2align 0x4
L_468175:
L_216335:
	movq 0xB8(%rbp),%r15
	jmp L_216334
.text
.p2align 0x4
.globl insert_1
.hidden insert_1
insert_1:
L_216358:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_216679
L_216359:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468177
L_216360:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x7C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x3403,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_216361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468177:
L_216679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_216680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216680
.p2align 0x4
.long 0x32BA
L_216680:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_216360
.p2align 0x4
.long 0x329E
L_216361:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpq $0x1,%r13
	je L_468193
L_216362:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216363:
	incl %ecx
	jo L_216364
L_216365:
	cmpq $0x1,%r15
	je L_468179
L_216366:
	movq 0x8(%r15),%r15
	jmp L_216363
.p2align 0x4
L_468179:
L_216367:
L_216368:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_468191
L_216369:
	cmpq $0x7FFFFFFF,%rdx
	ja L_216571
L_216370:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_216371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216371
.p2align 0x4
.long 0x329F
L_216371:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_216372:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2354:
	cmpq 0xA8(%rbp),%r15
	jnl L_468181
L_216673:
	cmpq $0x1,%r14
	je L_468180
L_216674:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2354
.p2align 0x4
L_468180:
L_216569:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468181:
L_216373:
	movq 0xB0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r14
	jne L_216375
L_216376:
	decl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_216364
L_216377:
	testq %rdx,%rdx
	jz L_468187
L_216378:
	cmpq $0x7FFFFFFF,%rdx
	ja L_468186
L_216379:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_216380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216380
.p2align 0x4
.long 0x32A0
L_216380:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xA8(%rbp)
L_216381:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2355:
	cmpq 0x78(%rbp),%r15
	jnl L_468183
L_216669:
	movl %r15d,%r14d
	movl 0x1C(%rbp),%r13d
	subl %r14d,%r13d
	jo L_468182
L_216670:
	movslq %r13d,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2355
.p2align 0x4
L_468182:
L_216364:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468183:
L_216382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216383
L_216667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_216668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216668
.p2align 0x4
.long 0x32B9
L_216668:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_216383:
	movq 0xA8(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	movq %r11,0xB0(%rbp)
	cmpq %r11,%r14
	jne L_468184
L_216385:
	movq $0x437D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB8(%rbp)
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x343B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x18,%r12
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_216386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468184:
L_216375:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468186:
L_216571:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468187:
L_216672:
	movq (globalObjptr+0xF90)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_216381
.p2align 0x4
L_468191:
L_216677:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_216372
.p2align 0x4
L_468193:
L_216678:
	xorl %ecx,%ecx
	jmp L_216368
.p2align 0x4
.long 0x32A1
L_216386:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216387
L_216665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_216666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216666
.p2align 0x4
.long 0x32B8
L_216666:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_216387:
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	testq %r15,%r15
	jz L_468200
L_216388:
	cmpq $0x7FFFFFFF,%r15
	ja L_216571
L_216389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216390
L_216661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_216662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216662
.p2align 0x4
.long 0x32A2
L_216662:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_216390:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB5,%rcx
	movq 0xB0(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_216391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216391
.p2align 0x4
.long 0x32A2
L_216391:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_216392:
	movq $0x0,0xD8(%rbp)
loop_2356:
	movq 0xB0(%rbp),%rdx
	cmpq %rdx,0xD8(%rbp)
	jl L_468197
L_216393:
	movq 0xD0(%rbp),%r15
	movq $0xCF1,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0xD8(%rbp)
	movq %r14,0x8(%r13)
	movq %r14,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r13,0xE8(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	cmpq $0x7FFFFFFF,%rdx
	ja L_216571
L_216394:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_216395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216395
.p2align 0x4
.long 0x32A3
L_216395:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xF0(%rbp)
	movq $0x0,0xF8(%rbp)
loop_2357:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xF8(%rbp)
	jl L_468194
L_216396:
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_468194:
L_216620:
	movq 0xF8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0x78(%rbp),%r15
	jnb L_468195
L_216622:
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x108(%rbp)
	movq %r11,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_216623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_468195:
L_216399:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468197:
L_216654:
	movq 0xD8(%rbp),%r15
	movl %r15d,0xE0(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468200:
L_216664:
	movq (globalObjptr+0x7448)(%rip),%r14
	movq %r14,0xD0(%rbp)
	jmp L_216392
.p2align 0x4
.long 0x32A4
L_216397:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movslq %r15d,%r14
	cmpq 0xB0(%rbp),%r14
	jnb L_216399
L_216400:
	movq 0xF0(%rbp),%r15
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x32B5
L_216623:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_468213
L_216647:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_468207
	cmpq $0x2,%r15
	je L_216632
L_216648:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_468203
L_216650:
	movl $0x1,%ecx
L_216629:
	movq 0xF0(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movl %ecx,0x0(%r15,%r14,4)
	incq %r14
	movq %r14,0xF8(%rbp)
	jmp loop_2357
.p2align 0x4
L_468203:
L_216649:
	movq 0x108(%rbp),%r15
	movl 0xC(%r15),%ecx
	movl 0x8(%r15),%r14d
	movl %r14d,(localWord32+0x4)(%rip)
	movl $0x1,%ebx
L_216627:
	testl %ecx,%ecx
	jz L_468205
L_216630:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jz L_468204
L_216633:
	movl %ebx,%ecx
	jmp L_216629
.p2align 0x4
L_468204:
L_216632:
	movl $0x1,%ecx
	jmp L_216629
.p2align 0x4
L_468205:
L_216628:
	movl %ebx,%ecx
	jmp L_216629
.p2align 0x4
L_468207:
L_216651:
	movl $0x1,%ecx
L_216636:
	movq 0x100(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109E,%r14
	jne L_216629
L_216638:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	jz L_216632
L_216640:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movslq %r15d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_216399
L_216642:
	movq 0x0(%r14,%r13,8),%r15
L_216643:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_216632
L_216644:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108D,%r14
	jne L_216632
	jmp L_216629
.p2align 0x4
L_468213:
L_216624:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_468216
	cmpq $0x2,%r15
	je L_216632
L_216625:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_468214
L_216634:
	movl $0x1,%ecx
	jmp L_216629
.p2align 0x4
L_468214:
L_216626:
	movq 0x108(%rbp),%r15
	movl 0xC(%r15),%ecx
	movl 0x8(%r15),%r14d
	movl %r14d,(localWord32+0x4)(%rip)
	xorl %ebx,%ebx
	jmp L_216627
.p2align 0x4
L_468216:
L_216635:
	xorl %ecx,%ecx
	jmp L_216636
.p2align 0x4
.long 0x32B6
L_216655:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216656
L_216659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_216660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216660
.p2align 0x4
.long 0x32B7
L_216660:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_216656:
	movq 0xF8(%rbp),%r15
	andq $0x1,%r15
	jnz L_468217
L_216657:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xE0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xD8(%rbp),%r14
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xD8(%rbp)
	jmp loop_2356
.p2align 0x4
L_468217:
L_216658:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32A4
L_216401:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216402
L_216618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216619
.p2align 0x4
.long 0x32B4
L_216619:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_216402:
	movslq 0x70(%rbp),%r15
	movq 0xD0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_216399
L_216404:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x261B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq $0x3401,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xF0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r13,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x32A5
L_216405:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216406
L_216616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216617
.p2align 0x4
.long 0x32A7
L_216617:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_216406:
	movq $0x37E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
.long 0x32A6
L_216407:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xB0(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216408
.p2align 0x4
.long 0x32A7
L_216408:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2358:
	cmpq 0xB0(%rbp),%r15
	jnl L_468222
L_216615:
	movq 0x70(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2358
.p2align 0x4
L_468222:
L_216409:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216410
L_216613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216614
.p2align 0x4
.long 0x32B3
L_216614:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_216410:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopForestSteensgaard_0
.p2align 0x4
.long 0x32A8
L_216411:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x100,%rbp
	leaq (L_216412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setClass_0
.p2align 0x4
.long 0x32A9
L_216412:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x78(%rbp),%r15
	movslq 0x0(%r15),%rdx
	movq %rdx,0xD8(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_216571
L_216413:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216414
.p2align 0x4
.long 0x32AA
L_216414:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2359:
	cmpq 0xD8(%rbp),%r15
	jnl L_468224
L_216611:
	movq 0x78(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2359
.p2align 0x4
L_468224:
L_216415:
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_216457
L_216416:
	movq 0x8(%r13),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_216417:
	movq 0x8(%r15),%r14
	cmpq 0xE0(%rbp),%r14
	jne L_468232
L_216607:
	movq 0xE8(%rbp),%r13
	cmpq $0x1,%r13
	je L_468225
L_216608:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0xE8(%rbp)
	movq %r14,%r15
	jmp L_216417
.p2align 0x4
L_468225:
L_216457:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_216538
L_216458:
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
.p2align 0x4,,0x7
L_216459:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq 0xE0(%rbp),%r14
	jne L_468230
L_216591:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_468226
L_216592:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xE8(%rbp)
	jmp L_216459
.p2align 0x4
L_468226:
L_216538:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD57,%rcx
	movq 0xB0(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216539
.p2align 0x4
.long 0x32AB
L_216539:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2360:
	cmpq 0xB0(%rbp),%r15
	jnl L_468227
L_216583:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2360
.p2align 0x4
L_468227:
L_216540:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216541
L_216581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_216582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216582
.p2align 0x4
.long 0x32B2
L_216582:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_216541:
	movq $0xD59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x58(%r15)
	movq $0xD5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0xD5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_468228
L_216542:
	movq %r15,0x168(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_216543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_468228:
L_216576:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_216577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_468230:
L_216460:
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468232:
L_216418:
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
.long 0x32AC
L_216543:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216544
L_216574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_216575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216575
.p2align 0x4
.long 0x32B1
L_216575:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_216544:
	movq $0x216F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x7C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD5D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq 0xE0(%rbp),%r13
	movq %r13,0x8(%r11)
	movq $0x3439,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x30(%r10)
	movq %r11,0x40(%r10)
	addq $0xB8,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0xF8(%rbp),%r15
	movq %r15,0x10(%r10)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r10)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r10)
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%r10)
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%r10)
	movq 0x118(%rbp),%r15
	movq %r15,0x48(%r10)
	movq 0x120(%rbp),%r15
	movq %r15,0x50(%r10)
	movq %r14,0x58(%r10)
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%r10)
	movq 0x130(%rbp),%r15
	movq %r15,0x68(%r10)
	movq 0x138(%rbp),%r15
	movq %r15,0x70(%r10)
	movq 0x140(%rbp),%r15
	movq %r15,0x78(%r10)
	movq 0x148(%rbp),%r15
	movq %r15,0x80(%r10)
	movq %r13,0x88(%r10)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%r10)
	movq 0x150(%rbp),%r15
	movq %r15,0x98(%r10)
	movq 0xD8(%rbp),%r15
	movq %r15,0xA0(%r10)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%r10)
	movq %r10,0xC8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_216545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x1
L_216577:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x32A8
L_216461:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_468236
L_216462:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468236:
L_216491:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0xB0(%rbp),%r15
	jnb L_216399
L_216493:
	movq 0x70(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r15
	cmpq 0xD8(%rbp),%r15
	jnb L_216399
L_216495:
	movq 0x78(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_468239
L_216496:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_468237
L_216497:
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_216498:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_216499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468237:
L_216535:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_216538
L_216536:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_216459
.p2align 0x4
L_468239:
L_216588:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_216538
L_216589:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_216459
.p2align 0x4
.long 0x32A8
L_216419:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_468243
L_216420:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468243:
L_216449:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_216399
L_216451:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_468249
L_216452:
	cmpq $0x1,%r13
	jng L_468247
L_216596:
	cmpq 0xB0(%rbp),%r15
	jnb L_216399
L_216598:
	movq 0x70(%rbp),%r14
	movslq 0x0(%r14,%r15,4),%r13
	cmpq 0xD8(%rbp),%r13
	jnb L_216399
L_216600:
	movq 0x78(%rbp),%r14
	movl $0x1,0x0(%r14,%r13,4)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_216457
L_216601:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_216417
.p2align 0x4
L_468247:
L_216454:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_216457
L_216455:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_216417
.p2align 0x4
L_468249:
L_216603:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_216604:
	cmpl $0x0,%eax
	jnl L_216454
	jmp L_216596
.p2align 0x4
.long 0x32AD
L_216545:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_468260
L_216546:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216547:
	incl %ecx
	jo L_216364
L_216548:
	cmpq $0x1,%r15
	je L_468252
L_216549:
	movq 0x8(%r15),%r15
	jmp L_216547
.p2align 0x4
L_468252:
L_216550:
L_216551:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_468258
L_216552:
	cmpq $0x7FFFFFFF,%rdx
	ja L_216571
L_216553:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_216554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216554
.p2align 0x4
.long 0x32AE
L_216554:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x20(%rbp)
L_216555:
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2361:
	cmpq 0x18(%rbp),%r15
	jnl L_468254
L_216566:
	cmpq $0x1,%r14
	je L_216569
L_216567:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2361
.p2align 0x4
L_468254:
L_216556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216557
L_216564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_216565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216565
.p2align 0x4
.long 0x32B0
L_216565:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_216557:
	movq 0x20(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_468255
L_216558:
	movq $0x343D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0xB0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_216559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468255:
L_216560:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq $0x1,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_216561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_468258:
L_216572:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_216555
.p2align 0x4
L_468260:
L_216573:
	xorl %ecx,%ecx
	jmp L_216551
.p2align 0x4
.long 0x1
bug_534:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216578
L_216579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216580
.p2align 0x4
.long 0x452
L_216580:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216578:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_216463:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_216464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x32A8
L_216499:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_468262
L_216500:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468262:
L_216529:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0xB0(%rbp),%r15
	jnb L_216399
L_216531:
	movq 0x70(%rbp),%r14
	movl 0x1C(%rbp),%r13d
	cmpl %r13d,0x0(%r14,%r15,4)
	je L_468264
L_216532:
	movq 0xF0(%rbp),%r14
	movl $0x1,0x0(%r14,%r15,4)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_216535
L_216533:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_216498
.p2align 0x4
L_468264:
L_216584:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_216535
L_216585:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_216498
.p2align 0x4
.long 0x1
L_216421:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_216422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x32AF
L_216559:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_216560
.p2align 0x4
.long 0x32AF
L_216561:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq $0x2,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_216562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x4B0
L_216464:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_216465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_216501:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_216502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_216422:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_216423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x32AF
L_216562:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_216465:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_216502:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_216503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_216423:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_216466:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216467
L_216489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216490
.p2align 0x4
.long 0x4AF
L_216490:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216467:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_216468:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_216364
L_216469:
	cmpq $0x1,%r14
	je L_468267
L_216470:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216468
.p2align 0x4
L_468267:
L_216471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216472
L_216487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216488
.p2align 0x4
.long 0x4E7
L_216488:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216472:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468268
L_216473:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_333:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468268:
L_216486:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_333
.p2align 0x4
.long 0x5B0
L_216503:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_216424:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216425
L_216447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216448
.p2align 0x4
.long 0x4AF
L_216448:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216425:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_216426:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_216364
L_216427:
	cmpq $0x1,%r14
	je L_468272
L_216428:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216426
.p2align 0x4
L_468272:
L_216429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216430
L_216445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216446
.p2align 0x4
.long 0x4E7
L_216446:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216430:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468273
L_216431:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_332:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468273:
L_216444:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_332
.p2align 0x4
.long 0x1
rev_331:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468279
L_216474:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216475:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468278
.p2align 0x4,,0x7
L_216476:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468277
L_216477:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216475
.p2align 0x4
L_468277:
L_216479:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468278:
L_216483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216484
.p2align 0x4
.long 0x45C
L_216484:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216476
.p2align 0x4
L_468279:
L_216485:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_216479
.p2align 0x4
.long 0x51F
L_216504:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216505
L_216527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216528
.p2align 0x4
.long 0x4AF
L_216528:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216505:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_216506:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_216364
L_216507:
	cmpq $0x1,%r14
	je L_468280
L_216508:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216506
.p2align 0x4
L_468280:
L_216509:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216510
L_216525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216526
.p2align 0x4
.long 0x4E7
L_216526:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216510:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468281
L_216511:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_334:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468281:
L_216524:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_334
.p2align 0x4
.long 0x1
rev_330:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468287
L_216432:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468286
.p2align 0x4,,0x7
L_216434:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468285
L_216435:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216433
.p2align 0x4
L_468285:
L_216437:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468286:
L_216441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216442
.p2align 0x4
.long 0x45C
L_216442:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216434
.p2align 0x4
L_468287:
L_216443:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_216437
.p2align 0x4
.long 0x1
bug_532:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216480
L_216481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216482
.p2align 0x4
.long 0x452
L_216482:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216480:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_332:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468291
L_216512:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216513:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468290
.p2align 0x4,,0x7
L_216514:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468289
L_216515:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216513
.p2align 0x4
L_468289:
L_216517:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468290:
L_216521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216522
.p2align 0x4
.long 0x45C
L_216522:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216514
.p2align 0x4
L_468291:
L_216523:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_216517
.p2align 0x4
.long 0x1
bug_531:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216438
L_216439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216440
.p2align 0x4
.long 0x452
L_216440:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216438:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_533:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216518
L_216519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216520
.p2align 0x4
.long 0x452
L_216520:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216518:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopForestSteensgaard_0
.hidden loopForestSteensgaard_0
loopForestSteensgaard_0:
L_216681:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_216724
L_216682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468310
L_216683:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_216705
L_216684:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_216685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468308
.p2align 0x4,,0x7
L_216686:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x108D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13FF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r11)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_468307
L_216688:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468306
L_216689:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_216691:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_216692
L_216710:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCC,%r13
	jne L_216692
L_216711:
	movq 0x0(%r14),%r13
	cmpq %r13,0x10(%rbp)
	je L_468300
L_216692:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_468299
L_216694:
	cmpq $0x1,%r15
	je L_468294
L_216695:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_216691
.p2align 0x4
L_468294:
L_216696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468298
.p2align 0x4,,0x7
L_216697:
	movl 0x28(%rbp),%ecx
L_216698:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468297
L_216700:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_216702
L_216707:
	movl %ecx,0x0(%r15)
L_216702:
	movq $0x1999,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_468295
L_216703:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_216685
.p2align 0x4
L_468295:
L_216705:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_216706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468297:
L_216699:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468298:
L_216708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_216709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216709
.p2align 0x4
.long 0xE7D
L_216709:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_216697
.p2align 0x4
L_468299:
L_216693:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468300:
L_216713:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_216699
L_216714:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_468302
L_216719:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_216716:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_216705
L_216717:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_216685
.p2align 0x4
L_468302:
L_216715:
	movq %r14,%r15
	jmp L_216716
.p2align 0x4
L_468306:
L_216720:
	xorl %ecx,%ecx
	jmp L_216698
.p2align 0x4
L_468307:
L_216687:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468308:
L_216721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216722
.p2align 0x4
.long 0x4DF
L_216722:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_216686
.p2align 0x4
L_468310:
L_216724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_216725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216725
.p2align 0x4
.long 0x460
L_216725:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_216683
.p2align 0x4
.long 0x5F0
L_216706:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp treeFor_0
.text
.p2align 0x4
.globl x_1938
.hidden x_1938
x_1938:
L_216726:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_216727
L_216782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_216783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216783
.p2align 0x4
.long 0x460
L_216783:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_216727:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_468322
L_216729:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_468321
L_216730:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_216732:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_216733
L_216773:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCCC,%r13
	jne L_216733
L_216774:
	movq 0x8(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_468316
L_216733:
	incl %ecx
	jo L_468315
L_216735:
	cmpq $0x1,%r14
	je L_468312
L_216736:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216732
.p2align 0x4
L_468312:
L_216737:
L_216738:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468314
L_216740:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_216742
L_216772:
	movl %ecx,0x0(%r15)
L_216742:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468314:
L_216739:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468315:
L_216734:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468316:
L_216776:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_216739
L_216777:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_216779
L_216780:
	movl %ecx,0x0(%r14)
L_216779:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468321:
L_216781:
	xorl %ecx,%ecx
	jmp L_216738
.p2align 0x4
L_468322:
L_216728:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_216743:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_216744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_216744:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10268)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_216745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_216745:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_216746:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216747
L_216770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_216771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216771
.p2align 0x4
.long 0x4AF
L_216771:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216747:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_216748:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_216734
L_216749:
	cmpq $0x1,%r14
	je L_468324
L_216750:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216748
.p2align 0x4
L_468324:
L_216751:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216752
L_216768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216769
.p2align 0x4
.long 0x4E7
L_216769:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216752:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468325
L_216753:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_335:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468325:
L_216767:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_335
.p2align 0x4
.long 0x1
rev_333:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468331
L_216754:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_216755:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468330
.p2align 0x4,,0x7
L_216756:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468329
L_216757:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_216755
.p2align 0x4
L_468329:
L_216759:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468330:
L_216764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216765
.p2align 0x4
.long 0x45C
L_216765:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_216756
.p2align 0x4
L_468331:
L_216766:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_216759
.p2align 0x4
.long 0x1
L_216760:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216761
L_216762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216763
.p2align 0x4
.long 0x452
L_216763:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_216761:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl treeFor_0
.hidden treeFor_0
treeFor_0:
L_216784:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_216785
L_217017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_217018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217018
.p2align 0x4
.long 0x45C
L_217018:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_216785:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x51F
L_216786:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216787
L_217015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_217016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217016
.p2align 0x4
.long 0x4AF
L_217016:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216787:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_216801
L_216788:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
L_216789:
	cmpq $0x1,%r15
	jne L_468364
.p2align 0x4,,0x7
L_216795:
	movl 0x28(%rbp),%r14d
	incl %r14d
	jo L_216796
L_216797:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_468334
L_216798:
	movl %r14d,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_216789
.p2align 0x4
L_468334:
L_216799:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216801
L_217011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_217012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217012
.p2align 0x4
.long 0x4AF
L_217012:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_216801:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_468335
L_216802:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_216803:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_216804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468335:
L_216816:
	movq $0x1875,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_468346
L_216817:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_216819:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_724
L_216971:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,0x8(%r15)
	jne x_1939
L_216972:
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_216973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
x_1939:
x_724:
	movq $0x927,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_468336
L_216820:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
L_216821:
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468336:
L_216841:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_468337
L_216842:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_216843:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_216844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468337:
L_216950:
	movq $0x1,0x40(%rbp)
L_216859:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_468338
L_216860:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
L_216861:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x3DA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_216862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_468338:
L_216866:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_468345
L_216867:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216868:
	incl %ecx
	jo L_468344
L_216869:
	cmpq $0x1,%r15
	je L_468339
L_216870:
	movq 0x8(%r15),%r15
	jmp L_216868
.p2align 0x4
L_468339:
L_216871:
L_216872:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_468343
L_216873:
	cmpq $0x7FFFFFFF,%rdx
	ja L_468342
L_216874:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216875
.p2align 0x4
.long 0x1E52
L_216875:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_216876:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2362:
	cmpq 0x28(%rbp),%r15
	jnl L_468341
L_216924:
	cmpq $0x1,%r14
	je L_468340
L_216925:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2362
.p2align 0x4
L_468340:
L_216911:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468341:
L_216877:
	movq 0x48(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_216878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeFor_0
.p2align 0x4
L_468342:
L_216913:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468343:
L_216928:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_216876
.p2align 0x4
L_468344:
L_216796:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468345:
L_216929:
	xorl %ecx,%ecx
	jmp L_216872
.p2align 0x4
L_468346:
L_217001:
	movq $0x1,0x28(%rbp)
L_216882:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	je L_468361
L_216883:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216884:
	incl %ecx
	jo L_216796
L_216885:
	cmpq $0x1,%r15
	je L_468347
L_216886:
	movq 0x8(%r15),%r15
	jmp L_216884
.p2align 0x4
L_468347:
L_216887:
L_216888:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_468359
L_216889:
	cmpq $0x7FFFFFFF,%rdx
	ja L_216913
L_216890:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_216891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216891
.p2align 0x4
.long 0x783
L_216891:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_216892:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2363:
	cmpq 0x38(%rbp),%r15
	jnl L_468349
L_216916:
	cmpq $0x1,%r14
	je L_216911
L_216917:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x40(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2363
.p2align 0x4
L_468349:
L_216893:
	movq 0x40(%rbp),%r14
	movq $0x2D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_468357
L_216894:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216895:
	incl %ecx
	jo L_216796
L_216896:
	cmpq $0x1,%r15
	je L_468350
L_216897:
	movq 0x8(%r15),%r15
	jmp L_216895
.p2align 0x4
L_468350:
L_216898:
L_216899:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_468355
L_216900:
	cmpq $0x7FFFFFFF,%rdx
	ja L_216913
L_216901:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216902
.p2align 0x4
.long 0x6F8
L_216902:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_216903:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2364:
	cmpq 0x30(%rbp),%r15
	jnl L_468352
L_216908:
	cmpq $0x1,%r14
	je L_216911
L_216909:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x38(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2364
.p2align 0x4
L_468352:
L_216904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216905
L_216906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216907
.p2align 0x4
.long 0x78D
L_216907:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216905:
	movq 0x38(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5341,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468355:
L_216914:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_216903
.p2align 0x4
L_468357:
L_216915:
	xorl %ecx,%ecx
	jmp L_216899
.p2align 0x4
L_468359:
L_216920:
	movq (globalObjptr+0x1438)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_216892
.p2align 0x4
L_468361:
L_216921:
	xorl %ecx,%ecx
	jmp L_216888
.p2align 0x4
L_468364:
L_216790:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
L_216791:
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_216792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
.long 0x4E4
L_216804:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216805
L_217008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_217009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217009
.p2align 0x4
.long 0x4F1
L_217009:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_216805:
	movq 0x30(%rbp),%r14
	movq 0x18(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_468367
L_216806:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_216807:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_216808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468367:
L_216813:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_216816
L_216814:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_216803
.p2align 0x4
.long 0x4E5
L_216973:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216974
L_216999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_217000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217000
.p2align 0x4
.long 0x4EC
L_217000:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_216974:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_216981
L_216975:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_216976:
	movq 0x0(%r15),%r13
	movq 0x38(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	je L_468373
L_216977:
	cmpq $0x1,%r14
	je L_468370
L_216978:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216976
.p2align 0x4
L_468370:
L_216979:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216981
L_216984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216985
.p2align 0x4
.long 0x1254
L_216985:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216981:
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_468371
L_216982:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_216819
.p2align 0x4
L_468371:
L_216983:
	movq %r15,0x28(%rbp)
	jmp L_216882
.p2align 0x4
L_468373:
L_216986:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216987
.p2align 0x4
.long 0x1254
L_216987:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2365:
	cmpq $0x1,%r15
	jnl L_468374
L_216997:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x28(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2365
.p2align 0x4
L_468374:
L_216988:
	movq 0x28(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x1430)(%rip),%r15
	movq $0x2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216989
.p2align 0x4
.long 0xAA7
L_216989:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2366:
	cmpq $0x1,%r15
	jnl L_468375
L_216996:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x38(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2366
.p2align 0x4
L_468375:
L_216990:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216991
L_216994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_216995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216995
.p2align 0x4
.long 0x4EC
L_216995:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_216991:
	movq 0x38(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5341,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq (globalObjptr+0x1430)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0xFCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28D3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_468376
L_216992:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_216819
.p2align 0x4
L_468376:
L_216993:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_216882
.p2align 0x4
.long 0x67B
L_216822:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216823
L_216968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_216969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216969
.p2align 0x4
.long 0x8A8
L_216969:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_216823:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r9
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,0x0(%r8)
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r13)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r10,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq %r10,0x58(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x108D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0x13FF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x60(%rbp)
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r13,0x18(%r8)
	addq $0x28,%r12
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_468394
L_216825:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468393
L_216826:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x48(%rbp)
	movl $0x0,0x68(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_216828:
	movq 0x48(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_468392
L_216954:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCCC,%r11
	jne L_468391
L_216955:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x30)(%rip)
	je L_468386
L_216829:
	movl 0x68(%rbp),%r13d
	incl %r13d
	movl %r13d,0x48(%rbp)
	jo L_216796
L_216830:
	cmpq $0x1,%r15
	je L_468380
L_216831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x68(%rbp)
	movq %r14,0x48(%rbp)
	movq (localObjptr+0x30)(%rip),%r14
	jmp L_216828
.p2align 0x4
L_468380:
L_216832:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216833
L_216952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216953
.p2align 0x4
.long 0x860
L_216953:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_216833:
	movl 0x48(%rbp),%ecx
L_216834:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468383
L_216836:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_216838
L_216951:
	movl %ecx,0x0(%r15)
L_216838:
	movq $0x1999,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_216841
L_216839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_216821
.p2align 0x4
L_468383:
L_216835:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468386:
L_216957:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216958
L_216965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_216966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216966
.p2align 0x4
.long 0x32BD
L_216966:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_216958:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_216835
L_216959:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468388
L_216960:
	movq 0x48(%rbp),%r15
L_216961:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_216841
L_216962:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_216821
.p2align 0x4
L_468388:
L_216964:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_216961
.p2align 0x4
L_468391:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_216829
.p2align 0x4
L_468392:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_216829
.p2align 0x4
L_468393:
L_216967:
	xorl %ecx,%ecx
	jmp L_216834
.p2align 0x4
L_468394:
L_216824:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A7
L_216844:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216845
L_216948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_216949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216949
.p2align 0x4
.long 0x9E4
L_216949:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_216845:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x18(%r15),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x60(%rbp)
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r10
	je L_468399
L_216846:
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jz L_216848
L_216946:
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
L_216848:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_468396
L_216849:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_216850:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_216851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1938
.p2align 0x4
L_468396:
L_216856:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_468397
L_216857:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_216843
.p2align 0x4
L_468397:
L_216858:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_216859
.p2align 0x4
L_468399:
L_216939:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB68
L_216862:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216863
L_216930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_216931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216931
.p2align 0x4
.long 0x85D
L_216931:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_216863:
	movq 0x48(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_216866
L_216864:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_216861
.p2align 0x4
.long 0x141E
L_216878:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216879
L_216922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_216923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216923
.p2align 0x4
.long 0x17F3
L_216923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_216879:
	movq $0xFCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28D3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_468403
L_216880:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_216819
.p2align 0x4
L_468403:
L_216881:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_216882
.p2align 0x4
.long 0xE79
L_216792:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r14),%r13
	movl 0x28(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_216795
L_216793:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_216791
.p2align 0x4
.long 0x32BB
L_216808:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216809
L_217005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_217006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217006
.p2align 0x4
.long 0x73E
L_217006:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_216809:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x38(%rbp)
	je L_468407
L_216810:
	movl $0x1,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_216813
L_216811:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_216807
.p2align 0x4
L_468407:
L_217002:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_216813
L_217003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_216807
.p2align 0x4
.long 0x32BC
L_216851:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216852
L_216943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_216944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216944
.p2align 0x4
.long 0xF55
L_216944:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_216852:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x60(%rbp),%r10d
	cmpl %r10d,0x0(%r11)
	jne L_468414
L_216933:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_468412
L_216934:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_216939
L_216935:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r13,0x10(%r10)
	movq 0x0(%r15),%r14
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_216856
L_216936:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_216850
.p2align 0x4
L_468412:
L_216940:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_216856
L_216941:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_216850
.p2align 0x4
L_468414:
L_216853:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_216856
L_216854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_216850
.text
.p2align 0x4
.globl setClass_0
.hidden setClass_0
setClass_0:
L_217019:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_217020
L_217114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_217115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217115
.p2align 0x4
.long 0x4DF
L_217115:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_217020:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x40(%rbp)
	incl %r13d
	jo L_468427
L_217022:
	movl %r13d,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x44(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_217024
L_217025:
	cmpl $0x0,%r13d
	jl L_217074
L_217026:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_2367:
	movl 0x48(%rbp),%r15d
	cmpl 0x44(%rbp),%r15d
	jnl L_468418
L_217076:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0x20(%rbp),%r15
	cmpq 0x8(%r15),%r13
	jne L_468417
.p2align 0x4,,0x7
L_217111:
	incl 0x48(%rbp)
	jmp loop_2367
.p2align 0x4
L_468417:
L_217077:
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_217078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468418:
L_217027:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_217024
L_217029:
	cmpl $0x0,%r11d
	jl L_217074
L_217030:
	movl $0x0,0x34(%rbp)
loop_2368:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_468419
L_217031:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468419:
L_217032:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_468422
L_217034:
	cmpl $0x0,%r14d
	jl L_468421
L_217035:
	movl $0x0,0x54(%rbp)
loop_2369:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_468420
L_217036:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_217037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setClass_0
.p2align 0x4
L_468420:
L_217038:
	movslq 0x54(%rbp),%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_217039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468421:
L_217074:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468422:
L_217024:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468427:
L_217021:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DE6
L_217078:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	andq $0x1,%r15
	jnz L_468429
L_217079:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468429:
L_217108:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_468430
L_217110:
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14,%r15,4)
	jmp L_217111
.p2align 0x4
L_468430:
L_217071:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A5
L_217037:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x34(%rbp)
	jmp loop_2368
.p2align 0x4
.long 0x32BE
L_217039:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	andq $0x1,%r15
	jnz L_468431
L_217040:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468431:
L_217069:
	movq 0x58(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_217071
L_217072:
	movl $0x1,0x0(%r14,%r15,4)
	incl 0x54(%rbp)
	jmp loop_2369
.p2align 0x4
.long 0x1
L_217080:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_217081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_217041:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_217042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_217081:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_217082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_217042:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_217043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_217082:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_217083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_217043:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_217044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_217083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217084
L_217106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_217107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217107
.p2align 0x4
.long 0x4AF
L_217107:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_217084:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_217085:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_217021
L_217086:
	cmpq $0x1,%r14
	je L_468433
L_217087:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_217085
.p2align 0x4
L_468433:
L_217088:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217089
L_217104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_217105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217105
.p2align 0x4
.long 0x4E7
L_217105:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_217089:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468434
L_217090:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_337:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468434:
L_217103:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_337
.p2align 0x4
.long 0x51F
L_217044:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217045
L_217067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_217068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217068
.p2align 0x4
.long 0x4AF
L_217068:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_217045:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_217046:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_217021
L_217047:
	cmpq $0x1,%r14
	je L_468438
L_217048:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_217046
.p2align 0x4
L_468438:
L_217049:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217050
L_217065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_217066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217066
.p2align 0x4
.long 0x4E7
L_217066:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_217050:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468439
L_217051:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_336:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468439:
L_217064:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_336
.p2align 0x4
.long 0x1
rev_335:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468445
L_217091:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_217092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468444
.p2align 0x4,,0x7
L_217093:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468443
L_217094:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_217092
.p2align 0x4
L_468443:
L_217096:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468444:
L_217100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_217101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217101
.p2align 0x4
.long 0x45C
L_217101:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_217093
.p2align 0x4
L_468445:
L_217102:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_217096
.p2align 0x4
.long 0x1
rev_334:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468448
L_217052:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_217053:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468447
.p2align 0x4,,0x7
L_217054:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468446
L_217055:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_217053
.p2align 0x4
L_468446:
L_217057:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468447:
L_217061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_217062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217062
.p2align 0x4
.long 0x45C
L_217062:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_217054
.p2align 0x4
L_468448:
L_217063:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_217057
.p2align 0x4
.long 0x1
bug_536:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217097
L_217098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217099
.p2align 0x4
.long 0x452
L_217099:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217097:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_535:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217058
L_217059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217060
.p2align 0x4
.long 0x452
L_217060:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217058:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1869
.hidden x_1869
x_1869:
L_217116:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x360(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_219423
L_217117:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468491
L_217118:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x18(%r15),%r14
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x390(%rbp)
	movq %r15,0x388(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1877,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x398(%rbp)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r10
	movq $0x47D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x58,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r10,0x8(%r15)
	movq %r10,0x3A0(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x28(%r15)
	movq %r11,0x30(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x38(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x40(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x48(%r15)
	movq $0x491,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x3A8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x3B0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x3C0(%rbp)
	movq %r15,0x3B8(%rbp)
	movq $0x4D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x380(%rbp)
	jne L_217120
L_217121:
	testq %rdx,%rdx
	jz L_468489
L_217122:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217123:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1691,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E0,%rbp
	leaq (L_217124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217124
.p2align 0x4
.long 0x32BF
L_217124:
	addq $0xFFFFFFFFFFFFFC20,%rbp
	movq %rax,0x18(%rbp)
L_217125:
	movq $0x0,0x3D8(%rbp)
.p2align 0x4,,0x7
loop_2370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468487
.p2align 0x4,,0x7
L_217126:
	movq 0x3D8(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_468486
L_219344:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x380(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x3E0(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3E8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x3F0(%rbp)
	cmpq %r15,%r11
	jne L_217120
L_219346:
	testq %r11,%r11
	jnz L_468483
L_219418:
	movq (globalObjptr+0x7440)(%rip),%r15
	movq %r15,0x3F8(%rbp)
.p2align 0x4,,0x7
L_219350:
	movq $0x0,0x400(%rbp)
loop_2428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468482
.p2align 0x4,,0x7
L_219351:
	movq 0x3F0(%rbp),%r15
	cmpq %r15,0x400(%rbp)
	jl L_468480
L_219352:
	movq 0x3F8(%rbp),%r15
	movq $0x4D3,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x48F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x4453,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x30,%r12
	movq 0x390(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x70(%rbp),%r9
	movq %r9,0x8(%r10)
	movq 0x3C8(%rbp),%r9
	movq %r9,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r13,0x20(%r10)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_468479
L_219353:
	movq 0x50(%rbp),%r10
	movq 0x0(%r10),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r15,0x0(%r9)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r9,0x0(%r10)
	movl $0x1,0x0(%r11)
	movq %r13,%r14
L_219354:
	movq $0x4E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x3E8(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x3E0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x3F0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_218548
L_219355:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468477
L_219356:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_219358:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_219359
L_219404:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD99,%r13
	jne L_219359
L_219405:
	movq 0x0(%r14),%r13
	cmpq %r13,0x3B8(%rbp)
	je L_468472
L_219359:
	incl %ecx
	movl %ecx,0x244(%rbp)
	jo L_217268
L_219360:
	cmpq $0x1,%r15
	je L_468451
L_219361:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_219358
.p2align 0x4
L_468451:
L_219362:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468470
.p2align 0x4,,0x7
L_219363:
	movl 0x244(%rbp),%ecx
L_219364:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_219365:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219367
L_219401:
	movl %ecx,0x0(%r15)
L_219367:
	movq $0x1B33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x3B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3E8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x3F0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x3F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x244(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_468467
L_219369:
	cmpl $0x0,%r13d
	jl L_468466
L_219370:
	movl $0x0,0x324(%rbp)
loop_2429:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468465
.p2align 0x4,,0x7
L_219371:
	movl 0x244(%rbp),%r15d
	cmpl %r15d,0x324(%rbp)
	jl L_468452
L_219372:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x3D8(%rbp),%r14
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x3E0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x3E8(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x3F8(%rbp),%r11
	movq %r11,0x10(%r15,%r13,1)
	incq %r14
	movq %r14,0x3D8(%rbp)
	jmp loop_2370
.p2align 0x4
L_468452:
L_219373:
	movslq 0x324(%rbp),%r15
	imulq $0x18,%r15
	movq 0x3F8(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r14
	movq $0x4CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1309,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x3F0(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x3E8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x400(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_468464
L_219374:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468463
L_219375:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_219377:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_219378
L_219390:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD97,%r13
	jne L_219378
L_219391:
	movq 0x0(%r14),%r13
	cmpq %r13,0x388(%rbp)
	je L_468458
L_219378:
	incl %ecx
	movl %ecx,0x408(%rbp)
	jo L_468457
L_219379:
	cmpq $0x1,%r15
	je L_468453
L_219380:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_219377
.p2align 0x4
L_468453:
L_219381:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468456
.p2align 0x4,,0x7
L_219382:
	movl 0x408(%rbp),%ecx
L_219383:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468455
L_219384:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219386
L_219387:
	movl %ecx,0x0(%r15)
L_219386:
	movq $0x1B2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x400(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x324(%rbp)
	jmp loop_2429
.p2align 0x4
L_468455:
L_218558:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468456:
L_219388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x418,%rbp
	leaq (L_219389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219389
.p2align 0x4
.long 0x3437
L_219389:
	addq $0xFFFFFFFFFFFFFBE8,%rbp
	jmp L_219382
.p2align 0x4
L_468457:
L_217268:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468458:
L_219393:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_219394:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219264
L_219396:
	movl %ecx,0x0(%r15)
L_219264:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468463:
L_219397:
	xorl %ecx,%ecx
	jmp L_219383
.p2align 0x4
L_468464:
L_218548:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468465:
L_219398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x408,%rbp
	leaq (L_219399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219399
.p2align 0x4
.long 0x3438
L_219399:
	addq $0xFFFFFFFFFFFFFBF8,%rbp
	jmp L_219371
.p2align 0x4
L_468466:
L_217605:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468467:
L_217120:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468470:
L_219402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x408,%rbp
	leaq (L_219403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219403
.p2align 0x4
.long 0x3439
L_219403:
	addq $0xFFFFFFFFFFFFFBF8,%rbp
	jmp L_219363
.p2align 0x4
L_468472:
L_219407:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_219408:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219264
L_219410:
	movl %ecx,0x0(%r15)
	jmp L_219264
.p2align 0x4
L_468477:
L_219411:
	xorl %ecx,%ecx
	jmp L_219364
.p2align 0x4
L_468479:
	movq %r13,%r14
	jmp L_219354
.p2align 0x4
L_468480:
L_219413:
	movq 0x400(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x3E8(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq (globalObjptr+0x7340)(%rip),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,%r9d
	incl %r11d
	jo L_217268
L_219414:
	movl %r11d,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	addq $0x10,%r12
	movl $0x0,0x4(%r13)
	movq 0x3F8(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,%r9
	imulq $0x18,%r9
	movq %r13,0x0(%r11,%r9,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,%r13
	imulq $0x18,%r13
	movq %r10,0x8(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,%r13
	imulq $0x18,%r13
	movq %r14,0x10(%r11,%r13,1)
	incq %r15
	movq %r15,0x400(%rbp)
	jmp loop_2428
.p2align 0x4
L_468482:
L_219415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x410,%rbp
	leaq (L_219416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219416
.p2align 0x4
.long 0x343A
L_219416:
	addq $0xFFFFFFFFFFFFFBF0,%rbp
	jmp L_219351
.p2align 0x4
L_468483:
L_219347:
	movq 0x3F0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_468484
L_219348:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1697,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x400,%rbp
	leaq (L_219349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219349
.p2align 0x4
.long 0x3436
L_219349:
	addq $0xFFFFFFFFFFFFFC00,%rbp
	movq %rax,0x3F8(%rbp)
	jmp L_219350
.p2align 0x4
L_468484:
L_217218:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468486:
L_217127:
	movq 0x18(%rbp),%r14
	movq $0x1879,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x5C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	addq $0xE0,%r12
	movq $0x7FFFFFFF,0x0(%r11)
	movl $0x0,0x8(%r11)
	movl $0x0,0xC(%r11)
	movq 0x3C0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x3A8(%rbp),%r9
	movq %r9,0x18(%r11)
	movq 0xC0(%rbp),%r8
	movq %r8,0x20(%r11)
	movq 0xB8(%rbp),%rsp
	movq %rsp,0x28(%r11)
	movq 0x20(%rbp),%rsi
	movq %rsi,0x30(%r11)
	movq 0x28(%rbp),%rdi
	movq %rdi,0x38(%r11)
	movq 0x30(%rbp),%rdx
	movq %rdx,0x40(%r11)
	movq 0x10(%rbp),%rcx
	movq %rcx,0x48(%r11)
	movq 0xB0(%rbp),%rbx
	movq %rbx,0x50(%r11)
	movq 0x38(%rbp),%rax
	movq %rax,0x58(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%r11)
	movq 0x48(%rbp),%r10
	movq %r10,0x68(%r11)
	movq 0x3B0(%rbp),%r9
	movq %r9,0x70(%r11)
	movq 0x3A0(%rbp),%r8
	movq %r8,0x78(%r11)
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x80(%r11)
	movq 0x390(%rbp),%rsi
	movq %rsi,0x88(%r11)
	movq 0xA0(%rbp),%rdi
	movq %rdi,0x90(%r11)
	movq %r14,0x98(%r11)
	movq 0x50(%rbp),%rdx
	movq %rdx,0xA0(%r11)
	movq (globalObjptr+0x5290)(%rip),%rcx
	movq %rcx,0xA8(%r11)
	movq 0x98(%rbp),%rbx
	movq %rbx,0xB0(%r11)
	movq 0x90(%rbp),%rax
	movq %rax,0xB8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x80(%rbp),%r10
	movq %r10,0xC8(%r11)
	movq %r13,0xD0(%r11)
	movq $0x4459,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	addq $0xE0,%r12
	movq $0x7FFFFFFF,0x0(%r11)
	movl $0x0,0x8(%r11)
	movl $0x0,0xC(%r11)
	movq %r10,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %rax,0x28(%r11)
	movq %rbx,0x30(%r11)
	movq %rcx,0x38(%r11)
	movq %rdx,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %rdi,0x50(%r11)
	movq %rsi,0x58(%r11)
	movq %rsp,0x60(%r11)
	movq %r8,0x68(%r11)
	movq %r9,0x70(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%r11)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%r11)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%r11)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB8(%r11)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xC8(%r11)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xD0(%r11)
	movq 0x3C8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_468487:
L_219419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E8,%rbp
	leaq (L_219420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219420
.p2align 0x4
.long 0x343B
L_219420:
	addq $0xFFFFFFFFFFFFFC18,%rbp
	jmp L_217126
.p2align 0x4
L_468489:
L_219422:
	movq (globalObjptr+0x73F0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_217125
.p2align 0x4
L_468491:
L_219423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_219424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219424
.p2align 0x4
.long 0x343C
L_219424:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	jmp L_217118
.p2align 0x4
.long 0x32C0
L_217128:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217129
L_219342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219343
.p2align 0x4
.long 0x3435
L_219343:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217129:
	movslq 0x10(%rbp),%r15
	movq 0x388(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_468494
L_217132:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_468493
L_217133:
	movl 0x0(%r13),%r15d
	movl %r15d,0x3D8(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_468493:
L_217649:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468494:
L_217131:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32C1
L_217134:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0x32C2
L_217135:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x32C2
L_217136:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_217138:
	cmpl $0x0,%r13d
	jl L_217605
L_217139:
	movl $0x0,0x10(%rbp)
.p2align 0x4,,0x7
loop_2371:
	movl 0x10(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_468502
L_219320:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x28(%rbp)
	imulq $0x18,%r14
	movq 0x10(%r13,%r14,1),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_219322:
	cmpl $0x0,%r13d
	jl L_217605
L_219323:
	movl $0x0,0x24(%rbp)
loop_2426:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_468496
L_219324:
	incl 0x10(%rbp)
	jmp loop_2371
.p2align 0x4
L_468496:
L_219325:
	movslq 0x24(%rbp),%r15
	imulq $0x18,%r15
	movq 0x30(%rbp),%r14
	movq 0x10(%r14,%r15,1),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_217120
L_219327:
	cmpl $0x0,%r14d
	jl L_217605
L_219328:
	movl $0x0,0x8C(%rbp)
.p2align 0x4,,0x7
loop_2427:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x8C(%rbp)
	jl L_468497
L_219329:
	incl 0x24(%rbp)
	jmp loop_2426
.p2align 0x4
L_468497:
L_219330:
	movslq 0x8C(%rbp),%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x3D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_219331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_468502:
L_217140:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217141
L_219318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219319
.p2align 0x4
.long 0x3432
L_219319:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217141:
	movq $0xBD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x40,%r12
	movq 0x3A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x30(%r15)
	movq $0x3351,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x3433
L_219331:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219332
L_219336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219337
.p2align 0x4
.long 0x3434
L_219337:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219332:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	jne L_219334
L_219333:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq 0x0(%r11),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
L_219334:
	incl 0x8C(%rbp)
	jmp loop_2427
.p2align 0x4
.long 0x32C3
L_217142:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217143
L_219316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219317
.p2align 0x4
.long 0x3431
L_219317:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217143:
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je loop_3916
L_217144:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_217145:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq $0x33EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
loop_3916:
.p2align 0x4,,0x7
loop_2372:
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_468799
L_217152:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x10(%r11),%r8
	movq %r8,0x50(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movl $0x0,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	movq %r9,0x30(%rbp)
	shrq $0x1,%r15
	cmpq $0x2226,%r15
	je L_468790
	cmpq $0x2227,%r15
	je L_468786
	cmpq $0x2228,%r15
	je L_468777
	cmpq $0x2229,%r15
	je L_468527
	cmpq $0x222A,%r15
	je L_468521
	cmpq $0x222B,%r15
	je L_468517
L_217153:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217154
L_217183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217184
.p2align 0x4
.long 0x32C7
L_217184:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217154:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r13
	cmpq $0x1,%r13
	je L_468515
L_217155:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10D5,%r11
	je L_468514
	cmpq $0x10D6,%r11
	je L_468513
	cmpq $0x10D7,%r11
	je L_468512
	cmpq $0x10D8,%r11
	je L_468511
	cmpq $0x10D9,%r11
	je L_468508
L_217156:
	movq 0x8(%r13),%r11
	movq %r11,%r13
L_217157:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r14),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468508:
L_217177:
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_468510
L_217179:
	movq 0x0(%r11),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10C6,%r11
	je L_468509
L_217181:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468509:
L_217180:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468510:
L_217178:
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalWord64+0xFF8)(%rip),%r10
	movq %r10,0x0(%r11)
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468511:
L_217176:
	movq 0x0(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468512:
L_217175:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468513:
L_217174:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468514:
L_217173:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_217157
.p2align 0x4
L_468515:
L_217182:
	movq (globalObjptr+0x5290)(%rip),%r13
	jmp L_217157
.p2align 0x4
L_468517:
L_218208:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218209
L_218217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218218
.p2align 0x4
.long 0x32C7
L_218218:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_218209:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x10CE,%r11
	je L_468519
L_218214:
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468518
L_218216:
	movq 0x8(%r11),%r11
	movq %r11,%r15
L_218211:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468518:
L_218215:
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_218211
.p2align 0x4
L_468519:
L_218210:
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r10
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq (globalWord64+0xFF8)(%rip),%r11
	movq %r11,0x0(%r15)
	jmp L_218211
.p2align 0x4
L_468521:
L_218194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218195
L_218206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218207
.p2align 0x4
.long 0x32C7
L_218207:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_218195:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x10D1,%r10
	je L_468525
	cmpq $0x10D2,%r10
	je L_468524
L_218196:
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_468523
L_218201:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x10C6,%r11
	je L_468522
L_218203:
	movq 0x8(%r15),%r11
	movq %r11,%r15
L_218198:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468522:
L_218202:
	movq 0x8(%r15),%r11
	movq %r11,%r15
	jmp L_218198
.p2align 0x4
L_468523:
L_218197:
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	movq $0x4BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalWord64+0xFF8)(%rip),%r10
	movq %r10,0x0(%r11)
	movq %r11,%r15
	jmp L_218198
.p2align 0x4
L_468524:
L_218205:
	movq 0x18(%r15),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	jmp L_218198
.p2align 0x4
L_468525:
L_218204:
	movq 0x8(%r15),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	jmp L_218198
.p2align 0x4
L_468527:
L_217242:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xC8(%rbp)
	cmpq %rdx,%r15
	movq %r13,0x88(%rbp)
	jne L_217120
L_217244:
	testq %rdx,%rdx
	jz L_468775
L_217245:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217246:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1693,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217247
.p2align 0x4
.long 0x32CB
L_217247:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_217248:
	movq $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2374:
	movq 0xD0(%rbp),%r15
	cmpq 0xC8(%rbp),%r15
	jnl L_468534
L_218170:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x88(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0xD8(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x380(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x388(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x3A8(%rbp)
	cmpq %r15,%r11
	jne L_217120
L_218172:
	testq %r11,%r11
	jnz L_468531
L_218191:
	movq (globalObjptr+0x7408)(%rip),%r15
	movq %r15,0x3B0(%rbp)
.p2align 0x4,,0x7
L_218176:
	movq $0x0,0x3C8(%rbp)
.p2align 0x4,,0x7
loop_2406:
	movq 0x3A8(%rbp),%r15
	cmpq %r15,0x3C8(%rbp)
	jl L_468528
L_218177:
	movq 0x3B0(%rbp),%r15
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD0(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0xD8(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x380(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	incq %r13
	movq %r13,0xD0(%rbp)
	jmp loop_2374
.p2align 0x4
L_468528:
L_218178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218179
L_218188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D8,%rbp
	leaq (L_218189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218189
.p2align 0x4
.long 0x333E
L_218189:
	addq $0xFFFFFFFFFFFFFC28,%rbp
L_218179:
	movq 0x3C8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x388(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x24(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3D0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_468529
L_218180:
	movq 0xD0(%r13),%r15
	movq 0xC8(%r13),%r11
	movq 0xC0(%r13),%r10
	movq 0xB8(%r13),%r9
	movq 0xB0(%r13),%r8
	movq 0xA8(%r13),%rsp
	movq 0xA0(%r13),%rsi
	movq 0x98(%r13),%rdi
	movq 0x90(%r13),%rdx
	movq 0x88(%r13),%rcx
	movq 0x80(%r13),%rbx
	movq 0x78(%r13),%rax
	movq 0x70(%r13),%r14
	movq %rbp,(gcState+0x10)(%rip)
	movl 0x8(%r13),%ebp
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x68(%r13),%r14
	movq %r14,(localObjptr+0x70)(%rip)
	movq 0x60(%r13),%r14
	movq %r14,(localObjptr+0x78)(%rip)
	movq 0x0(%r13),%r14
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x58(%r13),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x50(%r13),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x48(%r13),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x40(%r13),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x38(%r13),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x30(%r13),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x28(%r13),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x20(%r13),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x18(%r13),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x10(%r13),%rax
	movq $0x5C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movl %ebp,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r10,0x20(%r13)
	movq %r9,0x28(%r13)
	movq %r8,0x30(%r13)
	movq %rsp,0x38(%r13)
	movq %rsi,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rdx,0x50(%r13)
	movq %rcx,0x58(%r13)
	movq %rbx,0x60(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq %rax,0xD0(%r13)
	addq $0xE0,%r12
	movl $0x0,0xC(%r13)
	movq (gcState+0x10)(%rip),%rbp
	movq %r13,0x3E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3E0,%rbp
	leaq (x_725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_468529:
L_218187:
	movq (globalObjptr+0x7410)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468531:
L_218173:
	movq 0x3A8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_218174:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218175
.p2align 0x4
.long 0x333B
L_218175:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x3B0(%rbp)
	jmp L_218176
.p2align 0x4
L_468534:
L_217249:
	movq 0x30(%rbp),%r14
	movq $0x1893,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x110(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x108(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x100(%r13),%r10
	movq %r10,0xC8(%rbp)
	movq 0xF8(%r13),%r15
	movq %r15,0xD0(%rbp)
	movq 0xF0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%r13),%r15
	movq %r15,0x380(%rbp)
	movq 0xE0(%r13),%r15
	movq %r15,0x388(%rbp)
	movq 0xD8(%r13),%r15
	movq %r15,0x3A8(%rbp)
	movq 0xC8(%r13),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x70(%r13),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x60(%r13),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x58(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x50(%r13),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x48(%r13),%r15
	movq %r15,0x3E8(%rbp)
	movq 0x40(%r13),%r15
	movq %r15,0x3F0(%rbp)
	movq 0x38(%r13),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x400(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x408(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x410(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x418(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r9
	cmpq %r9,%r15
	jne L_217120
L_217251:
	testl %r13d,%r13d
	jz L_468772
L_217252:
	cmpl $0x1,%r13d
	je L_468770
L_217253:
	cmpl $0x2,%r13d
	jne L_217255
L_218144:
	cmpq $0x0,%r15
	jna L_217131
L_218146:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r11)
	je L_218150
L_218147:
	cmpq %r13,0x10(%r10)
	je L_468763
L_217255:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_217932
	cmpq $0x2,%r13
	je L_468535
L_217256:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_218141(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468535:
L_218143:
	shrq $0x2,%r14
	movl %r14d,%ecx
fromIntForLength_1:
	movslq %ecx,%rdx
	movq %rdx,0x90(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217259:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1895,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217260
.p2align 0x4
.long 0x32CD
L_217260:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x98(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2375:
	cmpq 0x90(%rbp),%r15
	jnl L_468536
L_218139:
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2375
.p2align 0x4
L_468536:
L_217261:
	cmpl $0x0,0x24(%rbp)
	jl L_217605
L_217262:
	movq $0x1,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
loop_2376:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0xD8(%rbp)
	jl L_468759
L_217263:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_217932
	cmpq $0x2,%r13
	je L_468537
L_217264:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_218095(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468537:
L_218097:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_217267:
	decl %ecx
	jo L_217268
L_217269:
	cmpq $0x1,0xD0(%rbp)
	je L_468756
L_217270:
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl %ecx,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
loop_2377:
	cmpq $0x1,0x30(%rbp)
	je L_468754
L_217271:
	movl 0xC8(%rbp),%r15d
	movslq %r15d,%r14
	cmpq 0x90(%rbp),%r14
	jnb L_217131
L_217273:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0xD8(%rbp)
	cmpq $0x1,%r11
	jne L_468539
L_218088:
	decl %r15d
	jo L_217268
L_218089:
	movl %r15d,0xC8(%rbp)
	jmp loop_2377
.p2align 0x4
L_468539:
L_217274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217275
L_218086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_218087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218087
.p2align 0x4
.long 0x3330
L_218087:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217275:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x420(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_217932
	cmpq $0x2,%r13
	je L_468540
L_217276:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_218083(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x430(%rbp)
	addq $0x430,%rbp
	leaq (L_217277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468540:
L_218085:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_217280:
	subl 0xC8(%rbp),%ecx
	movl %ecx,0xCC(%rbp)
	jo L_217268
L_217281:
	movq 0x3B0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x420(%rbp)
	movq 0x0(%r15),%r14
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_468541
L_217282:
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_217283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1943
.p2align 0x4
L_468541:
L_218029:
	movq 0x420(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_217932
L_218030:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149A,%r13
	je L_468748
L_218032:
	movq 0x0(%r14),%r13
	movq %r13,0x428(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2067,%r15
	je L_468747
L_218044:
	movq 0x8(%r13),%r15
	movq %r15,0x430(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x438(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x440(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_468746
	cmpq $0x2,%r13
	je L_468542
L_218045:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_218074(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x450(%rbp)
	addq $0x450,%rbp
	leaq (L_218046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468542:
L_218079:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_218049:
	incl %ecx
	jo L_468745
L_218051:
	movslq %ecx,%rdx
	movq %rdx,0x430(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_468744
L_218052:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_218053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218053
.p2align 0x4
.long 0x3328
L_218053:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
	movq %rax,0x440(%rbp)
	movq $0x0,0x448(%rbp)
.p2align 0x4,,0x7
loop_2403:
	movq 0x448(%rbp),%r14
	cmpq 0x430(%rbp),%r14
	jnl L_468544
L_218058:
	movl %r14d,%r13d
	movq 0x438(%rbp),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x450(%rbp)
	testl %r13d,%r13d
	jnz L_468543
L_218070:
	movq $0x3,%r15
.p2align 0x4,,0x7
L_218068:
	movq 0x440(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x448(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x448(%rbp)
	jmp loop_2403
.p2align 0x4
L_468543:
L_218059:
	movl %r13d,0x24(%rbp)
	movq $0x5,0x458(%rbp)
	movq $0x3,0x460(%rbp)
next_16:
	leaq L_218039(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x470(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x474(%rbp)
	addq $0x470,%rbp
	leaq (L_218060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_468544:
L_218054:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218055
L_218056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x450,%rbp
	leaq (L_218057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218057
.p2align 0x4
.long 0x3329
L_218057:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
L_218055:
	movq 0x440(%rbp),%r15
L_218036:
	movq $0x2935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x420(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_217284:
	movslq 0xCC(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_217131
L_217286:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x420(%rbp)
	movq %r13,%r15
	movq 0x30(%rbp),%r14
	andq %r14,%r15
	andq $0x1,%r15
	jz L_468740
L_217287:
	cmpq %r14,%r13
	jnl L_468547
L_217948:
	movq 0x380(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217949:
	incl %ecx
	jo L_217268
L_217950:
	cmpq $0x1,%r15
	je L_468545
L_217951:
	movq 0x8(%r15),%r15
	jmp L_217949
.p2align 0x4
L_468545:
L_217952:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x430(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_217953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_468547:
L_217289:
	movl 0xC8(%rbp),%ecx
	decl %ecx
	jo L_217268
L_217290:
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_2378:
	cmpl $0x0,%ecx
	jl L_468552
L_217291:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	cmpq 0x90(%rbp),%r15
	jnb L_217131
L_217293:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_468550
L_217294:
	movq 0x0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
L_217295:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468549
.p2align 0x4,,0x7
L_217296:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468548
L_217297:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_217295
.p2align 0x4
L_468548:
L_217298:
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%ecx
	jmp loop_2378
.p2align 0x4
L_468549:
L_217299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217300
.p2align 0x4
.long 0x32D1
L_217300:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217296
.p2align 0x4
L_468550:
L_217301:
	movl 0x24(%rbp),%ecx
	jmp loop_2378
.p2align 0x4
L_468552:
L_217302:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217304
L_217946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217947
.p2align 0x4
.long 0x331E
L_217947:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217304:
	movslq 0xC8(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x90(%rbp)
	cmpq $0x1,0xD0(%rbp)
	je L_468734
L_217305:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468733
L_217306:
	movq 0x8(%r14),%r15
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217307:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_217268
L_217308:
	cmpq $0x1,%r15
	je L_468553
L_217309:
	movq 0x8(%r15),%r15
	jmp L_217307
.p2align 0x4
L_468553:
L_217310:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217311
L_217936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217937
.p2align 0x4
.long 0x331E
L_217937:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217311:
	movl 0x98(%rbp),%ecx
L_217312:
	testl %ecx,%ecx
	jz L_468589
L_217313:
	movq 0x3D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xC8(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_468554
L_217314:
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_217315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1943
.p2align 0x4
L_468554:
L_217880:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_468588
L_217881:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149A,%r13
	je L_468587
L_217883:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2067,%r15
	je L_468586
L_217895:
	movq 0x8(%r13),%r15
	movq %r15,0x380(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x388(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_468585
	cmpq $0x2,%r13
	je L_468555
L_217896:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_217925(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468555:
L_217930:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_217900:
	incl %ecx
	jo L_468584
L_217902:
	movslq %ecx,%rdx
	movq %rdx,0x380(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_468583
L_217903:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217904
.p2align 0x4
.long 0x3317
L_217904:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3A8(%rbp)
	movq $0x0,0x3B0(%rbp)
.p2align 0x4,,0x7
loop_2400:
	movq 0x3B0(%rbp),%r14
	cmpq 0x380(%rbp),%r14
	jnl L_468557
L_217909:
	movl %r14d,%r13d
	movq 0x388(%rbp),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x3C8(%rbp)
	testl %r13d,%r13d
	jnz L_468556
L_217921:
	movq $0x3,%r15
.p2align 0x4,,0x7
L_217919:
	movq 0x3A8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x3B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x3B0(%rbp)
	jmp loop_2400
.p2align 0x4
L_468556:
L_217910:
	movl %r13d,0x244(%rbp)
	movq $0x5,0x3D0(%rbp)
	movq $0x3,0x420(%rbp)
next_15:
	leaq L_217890(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x430(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x434(%rbp)
	addq $0x430,%rbp
	leaq (L_217911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_468557:
L_217905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217906
L_217907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217908
.p2align 0x4
.long 0x3318
L_217908:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217906:
	movq 0x3A8(%rbp),%r15
L_217887:
	movq $0x2935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_217316:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_217120
L_217318:
	decl %ecx
	jo L_217268
L_217319:
	movq $0x0,0x98(%rbp)
	xorl %r13d,%r13d
	movl %ecx,%ebx
	movl %r13d,%ecx
.p2align 0x4,,0x7
loop_2379:
	cmpl %ecx,%ebx
	jl L_468565
L_217320:
	movl %ebx,%r13d
	addl %ecx,%r13d
	jo L_217268
L_217321:
	movl %r13d,%r11d
	shrl $0x1F,%r11d
	addl %r11d,%r13d
	sarl $0x1,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jnb L_217131
L_217323:
	movq 0x0(%r15,%r11,8),%r10
	movq 0xC8(%rbp),%r11
	movq %r11,%r9
	andq %r10,%r9
	andq $0x1,%r9
	jz L_468561
L_217324:
	cmpq %r11,%r10
	jl L_468559
	xchgl %r13d,%ebx
L_217326:
	movl %ebx,%r13d
	decl %r13d
	jo L_217268
L_217327:
	movl %ebx,%r11d
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x98(%rbp)
	movl %r13d,%ebx
	jmp loop_2379
.p2align 0x4
L_468559:
	movl %ebx,%ecx
	movl %r13d,%ebx
L_217329:
	incl %ebx
	jo L_217268
	xchgl %ebx,%ecx
	jmp loop_2379
.p2align 0x4
L_468561:
L_217331:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	movl %ecx,%r12d
	call IntInf_compare
L_217332:
	cmpl $0x0,%eax
	jg L_468562
	movq (gcState+0x0)(%rip),%r11
	movl %r12d,(localWord32+0x4)(%rip)
	movq %r11,%r12
	xchgl %r13d,%ebx
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_217326
.p2align 0x4
L_468562:
	movq (gcState+0x0)(%rip),%r12
	movl %ebx,%ecx
	movl %r13d,%ebx
	jmp L_217329
.p2align 0x4
L_468565:
L_217335:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217336
L_217878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217879
.p2align 0x4
.long 0x32D3
L_217879:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217336:
	movq 0x98(%rbp),%r15
	andq $0x1,%r15
	jnz L_468566
L_217337:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5298)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468566:
L_217338:
	movq 0x98(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468578
L_217339:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217340:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_217268
L_217341:
	cmpq $0x1,%r15
	je L_468567
L_217342:
	movq 0x8(%r15),%r15
	jmp L_217340
.p2align 0x4
L_468567:
L_217343:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217344
L_217875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217876
.p2align 0x4
.long 0x32D3
L_217876:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217344:
	movl 0x98(%rbp),%ecx
L_217345:
	movslq %ecx,%r15
	movq %r15,0x98(%rbp)
	testq %r15,%r15
	jz L_468575
L_217346:
	cmpq $0x7FFFFFFF,%r15
	ja L_217218
L_217347:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217348
L_217871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217872
.p2align 0x4
.long 0x32D3
L_217872:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217348:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1601,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217349
.p2align 0x4
.long 0x32D3
L_217349:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0xD8(%rbp)
L_217350:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r15
	movq $0x0,0x30(%rbp)
loop_2380:
	movq 0x98(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jnl L_468571
L_217813:
	cmpq $0x1,%r15
	je L_468570
L_217814:
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x388(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x3A8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x3B0(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_217817
L_217867:
	movl %ecx,%r15d
	andl $0x3,%r15d
	jnz L_217817
L_217869:
	incl %ecx
L_217817:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x244(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x3C8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_217818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_468570:
L_217715:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4B0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468571:
L_217351:
	movq 0xD8(%rbp),%r15
	movq $0xBD5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x30(%rbp)
	cmpq %r14,%r11
	jne L_217120
L_217353:
	movl %r13d,0x430(%rbp)
	movq $0x3995,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_217354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_468575:
L_217874:
	movq (globalObjptr+0x52A8)(%rip),%r14
	movq %r14,0xD8(%rbp)
	jmp L_217350
.p2align 0x4
L_468578:
L_217877:
	xorl %ecx,%ecx
	jmp L_217345
.p2align 0x4
L_468583:
L_217922:
	movq $0x5,%r15
L_217892:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468584:
L_217901:
	movq $0x3,%r15
	jmp L_217892
.p2align 0x4
L_468585:
L_217929:
	movq $0x12,%r13
	xchgq %r13,%r15
	jmp L_217892
.p2align 0x4
L_468586:
L_217884:
	movq 0x18(%r13),%r15
	movq %r15,0x428(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x430(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x438(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x440(%rbp)
	leaq L_217890(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_217885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1944
.p2align 0x4
L_468587:
L_217882:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_217316
.p2align 0x4
L_468588:
L_217932:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468589:
L_217933:
	movq (globalObjptr+0xF28)(%rip),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_468638
L_217934:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
	movq $0x1,%r13
.p2align 0x4,,0x7
L_217374:
	incl %ecx
	jo L_217268
L_217375:
	cmpq $0x1,%r15
	je L_468590
L_217376:
	movq 0x8(%r15),%r15
	jmp L_217374
.p2align 0x4
L_468590:
L_217377:
	movq %r14,0x30(%rbp)
	movq %r13,0x90(%rbp)
L_217378:
	movslq %ecx,%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_468636
L_217379:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217380:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217381
.p2align 0x4
.long 0x32D7
L_217381:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0xC8(%rbp)
L_217382:
	movq 0x88(%rbp),%r15
	movq $0x0,0x88(%rbp)
loop_2383:
	movq 0x98(%rbp),%r14
	cmpq %r14,0x88(%rbp)
	jnl L_468592
L_217721:
	cmpq $0x1,%r15
	je L_217715
L_217722:
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x380(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x388(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x3A8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x3B0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x400(%rbp),%r15
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468592:
L_217383:
	movq 0xC8(%rbp),%r14
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468634
L_217384:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217385:
	incl %ecx
	jo L_217268
L_217386:
	cmpq $0x1,%r15
	je L_468593
L_217387:
	movq 0x8(%r15),%r15
	jmp L_217385
.p2align 0x4
L_468593:
L_217388:
L_217389:
	movslq %ecx,%rdx
	movq %rdx,0x88(%rbp)
	testq %rdx,%rdx
	jz L_468632
L_217390:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217391:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217392
.p2align 0x4
.long 0x32D8
L_217392:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x98(%rbp)
L_217393:
	movq $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
loop_2384:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468630
.p2align 0x4,,0x7
L_217394:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xD8(%rbp)
	jnl L_468608
L_217677:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_217715
L_217678:
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x388(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x3A8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_468595
L_217679:
	movq 0x0(%r13),%r15
	movq %r15,0xD0(%rbp)
.p2align 0x4,,0x7
L_217680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468594
.p2align 0x4,,0x7
L_217681:
	movq $0x1275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xD8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp loop_2384
.p2align 0x4
L_468594:
L_217682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217683
.p2align 0x4
.long 0x32EF
L_217683:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217681
.p2align 0x4
L_468595:
L_217684:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x418(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3C8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %rdx,%r14
	movq %r15,0xD0(%rbp)
	jne L_217120
L_217686:
	testq %rdx,%rdx
	jz L_468605
L_217687:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217688:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217689
.p2align 0x4
.long 0x32F0
L_217689:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3D8(%rbp)
L_217690:
	movq $0x0,0x3E0(%rbp)
.p2align 0x4,,0x7
loop_2394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468603
.p2align 0x4,,0x7
L_217691:
	movq 0x3E0(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_468600
L_217700:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xD0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	cmpq $0x1,%r11
	je L_468599
L_217701:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_468597
	cmpq $0x10CB,%r15
	je L_468596
L_217702:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5260)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468596:
L_217708:
	movq 0x0(%r11),%r15
	movq $0x2195,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
L_217706:
	movq 0x3D8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x3E0(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0x3E0(%rbp)
	jmp loop_2394
.p2align 0x4
L_468597:
L_217703:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq $0x1147,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x3B0(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468598
L_217707:
	movq 0x8(%r10),%r13
	movq %r11,%r15
L_217705:
	movq 0x8(%r13),%r11
	movq $0x2193,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_217706
.p2align 0x4
L_468598:
L_217704:
	movq 0x8(%r10),%r13
	movq %r11,%r15
	jmp L_217705
.p2align 0x4
L_468599:
L_217709:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_217706
.p2align 0x4
L_468600:
L_217692:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217693
L_217698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217699
.p2align 0x4
.long 0x32F3
L_217699:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217693:
	movq 0x3D8(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq 0x3B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217694
.p2align 0x4
.long 0x32F1
L_217694:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2395:
	cmpq $0x1,%r15
	jnl L_468601
L_217697:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2395
.p2align 0x4
L_468601:
L_217695:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x440(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x388(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movl $0x0,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x428,%rbp
	leaq (L_217696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1290
.p2align 0x4
L_468603:
L_217710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217711
.p2align 0x4
.long 0x32F4
L_217711:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217691
.p2align 0x4
L_468605:
L_217713:
	movq (globalObjptr+0x5258)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	jmp L_217690
.p2align 0x4
L_468608:
L_217395:
	movq 0x98(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x260B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x88(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_217396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468629
.p2align 0x4,,0x7
L_217397:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x297D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_468609
L_217398:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_217396
.p2align 0x4
L_468609:
L_217399:
	movq %r13,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_217400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468628
.p2align 0x4,,0x7
L_217401:
	movq $0x297D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_468610
L_217402:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_217400
.p2align 0x4
L_468610:
L_217403:
	movq 0xC8(%rbp),%r13
	cmpq $0x1,%r13
	je L_468622
L_217404:
	movq 0x98(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_217405:
	addq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r13
	je L_468611
L_217406:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_217405
.p2align 0x4
L_468611:
L_217407:
	testq %r15,%r15
	jz L_468621
L_217408:
	cmpq $0x7FFFFFFF,%r15
	ja L_217218
L_217409:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217410
.p2align 0x4
.long 0x32D9
L_217410:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq %rax,0xD0(%rbp)
L_217411:
	movq 0xC8(%rbp),%r11
	movq 0x98(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2385:
	cmpq 0x88(%rbp),%r15
	jnl L_468614
.p2align 0x4,,0x7
loop_2392:
	cmpq 0x0(%r13),%r14
	jl L_468613
L_217653:
	cmpq $0x1,%r11
	je L_468612
L_217654:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_2392
.p2align 0x4
L_468612:
L_217610:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468613:
L_217656:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0xD0(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_2385
.p2align 0x4
L_468614:
L_217412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217413
L_217650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217651
.p2align 0x4
.long 0x32EB
L_217651:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_217413:
	movq 0xD0(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
L_217414:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r14,%r11
	jne L_217120
L_217416:
	cmpl $0x1,%r13d
	je L_468615
L_217417:
	movl %r13d,0x428(%rbp)
	movq $0x3977,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x420(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x420,%rbp
	leaq (L_217418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_468615:
L_217639:
	cmpq $0x0,%r14
	jna L_217131
L_217641:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_217649
L_217642:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movl %r9d,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r10,0x18(%r15)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r10),%r15
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_217643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_468621:
L_217658:
	movq (globalObjptr+0x52D8)(%rip),%r14
	movq %r14,0xD0(%rbp)
	jmp L_217411
.p2align 0x4
L_468622:
L_217659:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xC8(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x88(%rbp)
	je L_217414
L_217660:
	testq %r13,%r13
	jz L_468626
L_217661:
	cmpq $0x7FFFFFFF,%r13
	ja L_217218
L_217662:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217663
.p2align 0x4
.long 0x32EC
L_217663:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq %rax,0x98(%rbp)
L_217664:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2393:
	cmpq 0xC8(%rbp),%r15
	jnl L_468623
L_217669:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x98(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2393
.p2align 0x4
L_468623:
L_217665:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217666
L_217667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217668
.p2align 0x4
.long 0x32ED
L_217668:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_217666:
	movq 0x98(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
	jmp L_217414
.p2align 0x4
L_468626:
L_217671:
	movq (globalObjptr+0x52E0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_217664
.p2align 0x4
L_468628:
L_217673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217674
.p2align 0x4
.long 0x32EE
L_217674:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	jmp L_217401
.p2align 0x4
L_468629:
L_217675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217676
.p2align 0x4
.long 0x32EE
L_217676:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	jmp L_217397
.p2align 0x4
L_468630:
L_217716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217717
.p2align 0x4
.long 0x32F5
L_217717:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217394
.p2align 0x4
L_468632:
L_217719:
	movq (globalObjptr+0x52D0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_217393
.p2align 0x4
L_468634:
L_217720:
	xorl %ecx,%ecx
	jmp L_217389
.p2align 0x4
L_468636:
L_217758:
	movq (globalObjptr+0x52C8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_217382
.p2align 0x4
L_468638:
L_217935:
	movq %r14,0x30(%rbp)
	movq $0x1,%r15
L_217760:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468647
L_217761:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x98(%rbp)
	cmpq $0x1,0x8(%r14)
	je L_468639
L_217762:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_217378
.p2align 0x4
L_468639:
L_217763:
	movq 0x90(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10CF,%r13
	je L_468640
L_217764:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_217378
.p2align 0x4
L_468640:
L_217765:
	movq 0x90(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_468645
L_217787:
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_468644
L_217789:
	shrq $0x1,%r10
	movl %r10d,%ecx
L_217769:
	testl %ecx,%ecx
	jz L_468642
L_217773:
	cmpq $0x1,%r15
	je L_217649
L_217774:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movl 0x0(%r15),%r8d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movl %r8d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r9,0x18(%r15)
	movq $0x1277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%r9),%r15
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_217775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_468642:
L_217770:
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_468643
L_217771:
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r14
	movq %r15,%r13
	movq %r10,%r15
	jmp L_217374
.p2align 0x4
L_468643:
L_217772:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_217378
.p2align 0x4
L_468644:
L_217788:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_217378
.p2align 0x4
L_468645:
L_217766:
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_468646
L_217768:
	shrq $0x1,%r10
	movl %r10d,%ecx
	jmp L_217769
.p2align 0x4
L_468646:
L_217767:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_217378
.p2align 0x4
L_468647:
L_217790:
	cmpq $0x1,%r15
	je L_217649
L_217791:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x21AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r9d,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF28)(%rip),%r13
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x30(%rbp),%r11
	movq %r15,0x30(%rbp)
	movq %r13,%r15
	xchgq %r11,%r14
L_217432:
	movq %r14,0x90(%rbp)
	movq $0x2609,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_217433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468729
.p2align 0x4,,0x7
L_217434:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x296F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_468648
L_217435:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_217433
.p2align 0x4
L_468648:
L_217436:
	movq %r13,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_217437:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468728
.p2align 0x4,,0x7
L_217438:
	movq $0x296F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_468649
L_217439:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_217437
.p2align 0x4
L_468649:
L_217440:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_468723
L_217441:
	movq 0x90(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_217442:
	addq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r13
	je L_468650
L_217443:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_217442
.p2align 0x4
L_468650:
L_217444:
	testq %r15,%r15
	jz L_468722
L_217445:
	cmpq $0x7FFFFFFF,%r15
	ja L_217218
L_217446:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217447
.p2align 0x4
.long 0x32DE
L_217447:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,%r15
L_217448:
	movq 0x98(%rbp),%r10
	movq 0x90(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2387:
	cmpq 0x88(%rbp),%r14
	jnl L_468653
.p2align 0x4,,0x7
loop_2390:
	cmpq 0x0(%r11),%r13
	jl L_468652
L_217607:
	cmpq $0x1,%r10
	je L_217610
L_217608:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2390
.p2align 0x4
L_468652:
L_217611:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2387
.p2align 0x4
L_468653:
L_217449:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
L_217450:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_217452:
	cmpl $0x0,%r13d
	jl L_217605
L_217453:
	movl $0x0,0x90(%rbp)
loop_2388:
	movl 0x24(%rbp),%r13d
	cmpl %r13d,0x90(%rbp)
	jl L_468718
L_217454:
	movq 0x78(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x88(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_468711
L_217455:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468704
	cmpq $0x10D6,%r15
	je L_468697
	cmpq $0x10D7,%r15
	je L_468690
	cmpq $0x10D8,%r15
	je L_468683
	cmpq $0x10D9,%r15
	je L_468662
L_217456:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_468661
L_217457:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468660
	cmpq $0x10D6,%r15
	je L_468659
	cmpq $0x10D7,%r15
	je L_468658
	cmpq $0x10D8,%r15
	je L_468657
	cmpq $0x10D9,%r15
	je L_468654
L_217458:
	movq 0x8(%r11),%r15
L_217459:
	movq 0x8(%r15),%r15
L_217460:
	movq %r15,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x3D0,%rbp
	leaq (L_217461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468654:
L_217521:
	movq 0x8(%r11),%r15
L_217522:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_468656
L_217524:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468655
L_217526:
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_217460
.p2align 0x4
L_468655:
L_217525:
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_217460
.p2align 0x4
L_468656:
L_217523:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r15
	jmp L_217460
.p2align 0x4
L_468657:
L_217519:
	movq 0x0(%r11),%r15
L_217520:
	movq 0x8(%r15),%r15
	jmp L_217460
.p2align 0x4
L_468658:
L_217517:
	movq 0x8(%r11),%r15
L_217518:
	movq 0x8(%r15),%r15
	jmp L_217460
.p2align 0x4
L_468659:
L_217515:
	movq 0x8(%r11),%r15
L_217516:
	movq 0x8(%r15),%r15
	jmp L_217460
.p2align 0x4
L_468660:
L_217513:
	movq 0x8(%r11),%r15
L_217514:
	movq 0x8(%r15),%r15
	jmp L_217460
.p2align 0x4
L_468661:
L_217527:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468662:
L_217564:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_468676
L_217574:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468669
L_217584:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r11
	je L_468668
L_217585:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10D5,%r14
	je L_468667
	cmpq $0x10D6,%r14
	je L_468666
	cmpq $0x10D7,%r14
	je L_468665
	cmpq $0x10D8,%r14
	je L_468664
	cmpq $0x10D9,%r14
	je L_468663
L_217586:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217459
.p2align 0x4
L_468663:
L_217591:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217522
.p2align 0x4
L_468664:
L_217590:
	movq 0x0(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217520
.p2align 0x4
L_468665:
L_217589:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217518
.p2align 0x4
L_468666:
L_217588:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217516
.p2align 0x4
L_468667:
L_217587:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217514
.p2align 0x4
L_468668:
L_217592:
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217460
.p2align 0x4
L_468669:
L_217575:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r11
	je L_468675
L_217576:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10D5,%r14
	je L_468674
	cmpq $0x10D6,%r14
	je L_468673
	cmpq $0x10D7,%r14
	je L_468672
	cmpq $0x10D8,%r14
	je L_468671
	cmpq $0x10D9,%r14
	je L_468670
L_217577:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217459
.p2align 0x4
L_468670:
L_217582:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217522
.p2align 0x4
L_468671:
L_217581:
	movq 0x0(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217520
.p2align 0x4
L_468672:
L_217580:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217518
.p2align 0x4
L_468673:
L_217579:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217516
.p2align 0x4
L_468674:
L_217578:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217514
.p2align 0x4
L_468675:
L_217583:
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_217460
.p2align 0x4
L_468676:
L_217565:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r14
	cmpq $0x1,%r11
	je L_468682
L_217566:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468681
	cmpq $0x10D6,%r15
	je L_468680
	cmpq $0x10D7,%r15
	je L_468679
	cmpq $0x10D8,%r15
	je L_468678
	cmpq $0x10D9,%r15
	je L_468677
L_217567:
	movq 0x8(%r11),%r15
	jmp L_217459
.p2align 0x4
L_468677:
L_217572:
	movq 0x8(%r11),%r15
	jmp L_217522
.p2align 0x4
L_468678:
L_217571:
	movq 0x0(%r11),%r15
	jmp L_217520
.p2align 0x4
L_468679:
L_217570:
	movq 0x8(%r11),%r15
	jmp L_217518
.p2align 0x4
L_468680:
L_217569:
	movq 0x8(%r11),%r15
	jmp L_217516
.p2align 0x4
L_468681:
L_217568:
	movq 0x8(%r11),%r15
	jmp L_217514
.p2align 0x4
L_468682:
L_217573:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468683:
L_217555:
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_468689
L_217556:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468688
	cmpq $0x10D6,%r15
	je L_468687
	cmpq $0x10D7,%r15
	je L_468686
	cmpq $0x10D8,%r15
	je L_468685
	cmpq $0x10D9,%r15
	je L_468684
L_217557:
	movq 0x8(%r11),%r15
	jmp L_217459
.p2align 0x4
L_468684:
L_217562:
	movq 0x8(%r11),%r15
	jmp L_217522
.p2align 0x4
L_468685:
L_217561:
	movq 0x0(%r11),%r15
	jmp L_217520
.p2align 0x4
L_468686:
L_217560:
	movq 0x8(%r11),%r15
	jmp L_217518
.p2align 0x4
L_468687:
L_217559:
	movq 0x8(%r11),%r15
	jmp L_217516
.p2align 0x4
L_468688:
L_217558:
	movq 0x8(%r11),%r15
	jmp L_217514
.p2align 0x4
L_468689:
L_217563:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468690:
L_217546:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_468696
L_217547:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468695
	cmpq $0x10D6,%r15
	je L_468694
	cmpq $0x10D7,%r15
	je L_468693
	cmpq $0x10D8,%r15
	je L_468692
	cmpq $0x10D9,%r15
	je L_468691
L_217548:
	movq 0x8(%r11),%r15
	jmp L_217459
.p2align 0x4
L_468691:
L_217553:
	movq 0x8(%r11),%r15
	jmp L_217522
.p2align 0x4
L_468692:
L_217552:
	movq 0x0(%r11),%r15
	jmp L_217520
.p2align 0x4
L_468693:
L_217551:
	movq 0x8(%r11),%r15
	jmp L_217518
.p2align 0x4
L_468694:
L_217550:
	movq 0x8(%r11),%r15
	jmp L_217516
.p2align 0x4
L_468695:
L_217549:
	movq 0x8(%r11),%r15
	jmp L_217514
.p2align 0x4
L_468696:
L_217554:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468697:
L_217537:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_468703
L_217538:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468702
	cmpq $0x10D6,%r15
	je L_468701
	cmpq $0x10D7,%r15
	je L_468700
	cmpq $0x10D8,%r15
	je L_468699
	cmpq $0x10D9,%r15
	je L_468698
L_217539:
	movq 0x8(%r11),%r15
	jmp L_217459
.p2align 0x4
L_468698:
L_217544:
	movq 0x8(%r11),%r15
	jmp L_217522
.p2align 0x4
L_468699:
L_217543:
	movq 0x0(%r11),%r15
	jmp L_217520
.p2align 0x4
L_468700:
L_217542:
	movq 0x8(%r11),%r15
	jmp L_217518
.p2align 0x4
L_468701:
L_217541:
	movq 0x8(%r11),%r15
	jmp L_217516
.p2align 0x4
L_468702:
L_217540:
	movq 0x8(%r11),%r15
	jmp L_217514
.p2align 0x4
L_468703:
L_217545:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468704:
L_217528:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_468710
L_217529:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468709
	cmpq $0x10D6,%r15
	je L_468708
	cmpq $0x10D7,%r15
	je L_468707
	cmpq $0x10D8,%r15
	je L_468706
	cmpq $0x10D9,%r15
	je L_468705
L_217530:
	movq 0x8(%r11),%r15
	jmp L_217459
.p2align 0x4
L_468705:
L_217535:
	movq 0x8(%r11),%r15
	jmp L_217522
.p2align 0x4
L_468706:
L_217534:
	movq 0x0(%r11),%r15
	jmp L_217520
.p2align 0x4
L_468707:
L_217533:
	movq 0x8(%r11),%r15
	jmp L_217518
.p2align 0x4
L_468708:
L_217532:
	movq 0x8(%r11),%r15
	jmp L_217516
.p2align 0x4
L_468709:
L_217531:
	movq 0x8(%r11),%r15
	jmp L_217514
.p2align 0x4
L_468710:
L_217536:
	movq (globalObjptr+0xBB8)(%rip),%r15
	jmp L_217460
.p2align 0x4
L_468711:
L_217593:
	cmpq $0x1,%r11
	je L_468717
L_217594:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_468716
	cmpq $0x10D6,%r15
	je L_468715
	cmpq $0x10D7,%r15
	je L_468714
	cmpq $0x10D8,%r15
	je L_468713
	cmpq $0x10D9,%r15
	je L_468712
L_217595:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217459
.p2align 0x4
L_468712:
L_217600:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217522
.p2align 0x4
L_468713:
L_217599:
	movq 0x0(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217520
.p2align 0x4
L_468714:
L_217598:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217518
.p2align 0x4
L_468715:
L_217597:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217516
.p2align 0x4
L_468716:
L_217596:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xBB8)(%rip),%r14
	jmp L_217514
.p2align 0x4
L_468717:
L_217601:
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,%r10
	movq %r15,%r14
	movq %r10,%r15
	jmp L_217460
.p2align 0x4
L_468718:
L_217602:
	movslq 0x90(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x98(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3D0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_468722:
L_217613:
	movq (globalObjptr+0x52F0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_217448
.p2align 0x4
L_468723:
L_217614:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x88(%rbp)
	je L_468727
L_217615:
	testq %r13,%r13
	jz L_468726
L_217616:
	cmpq $0x7FFFFFFF,%r13
	ja L_217218
L_217617:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217618
.p2align 0x4
.long 0x32E3
L_217618:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,%r15
L_217619:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2391:
	cmpq 0x98(%rbp),%r14
	jnl L_468724
L_217621:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x88(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2391
.p2align 0x4
L_468724:
L_217620:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_217450
.p2align 0x4
L_468726:
L_217623:
	movq (globalObjptr+0x52F8)(%rip),%r15
	jmp L_217619
.p2align 0x4
L_468727:
L_217624:
	movq 0x88(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_217450
.p2align 0x4
L_468728:
L_217625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217626
.p2align 0x4
.long 0x32E4
L_217626:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_217438
.p2align 0x4
L_468729:
L_217627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217628
.p2align 0x4
.long 0x32E4
L_217628:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_217434
.p2align 0x4
L_468733:
L_217938:
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_217312
.p2align 0x4
L_468734:
L_217939:
	cmpq $0x1,0x88(%rbp)
	je L_468736
L_217940:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468735
L_217941:
	movq 0x8(%r14),%r15
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_217307
.p2align 0x4
L_468735:
L_217942:
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_217312
.p2align 0x4
L_468736:
L_217943:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468737
L_217944:
	movq 0x8(%r14),%r15
	movl $0x0,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_217307
.p2align 0x4
L_468737:
L_217945:
	movl $0x0,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_217312
.p2align 0x4
L_468740:
L_218025:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_218026:
	cmpl $0x0,%eax
	jng L_217289
L_218028:
	movq 0x380(%rbp),%r15
	xorl %ecx,%ecx
	jmp L_217949
.p2align 0x4
L_468744:
L_218071:
	movq $0x5,%r15
L_218041:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468745:
L_218050:
	movq $0x3,%r15
	jmp L_218041
.p2align 0x4
L_468746:
L_218078:
	movq $0x12,%r13
	xchgq %r13,%r15
	jmp L_218041
.p2align 0x4
L_468747:
L_218033:
	movq 0x18(%r13),%r15
	movq %r15,0x438(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x440(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x448(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x450(%rbp)
	leaq L_218039(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x438,%rbp
	leaq (L_218034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1944
.p2align 0x4
L_468748:
L_218031:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_217284
.p2align 0x4
L_468754:
L_218090:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218091
L_218092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_218093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218093
.p2align 0x4
.long 0x3331
L_218093:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_218091:
	movq $0x1,0x30(%rbp)
	jmp L_217304
.p2align 0x4
L_468756:
L_218094:
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl %ecx,0xC8(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x88(%rbp)
	jmp loop_2377
.p2align 0x4
L_468759:
L_218098:
	movslq 0xD8(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x380(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x420(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x438(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x430(%rbp)
	movq %r10,0x440(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x430,%rbp
	leaq (L_218099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_468763:
L_218150:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218151
.p2align 0x4
.long 0x3338
L_218151:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2404:
	cmpq $0x2,%r15
	jnl L_468766
L_218153:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_468765
	cmpl $0x1,%r13d
	je L_468764
L_218154:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468764:
L_218157:
	movq 0xD8(%rbp),%r13
	movq 0xC8(%rbp),%r11
L_218156:
	movq %r15,%r10
	movq %r15,%r9
	movq %r14,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r10
	movq %r13,0x0(%r14,%r10,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r9
	movq %r11,0x8(%r14,%r9,1)
	incq %r15
	jmp loop_2404
.p2align 0x4
L_468765:
L_218155:
	movq 0xD0(%rbp),%r13
	movq 0x90(%rbp),%r11
	jmp L_218156
.p2align 0x4
L_468766:
L_218152:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_217450
.p2align 0x4
L_468770:
L_218159:
	cmpq $0x0,%r15
	jna L_217131
L_218161:
	movq 0x0(%r14),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_218162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_468772:
L_218169:
	movq (globalObjptr+0xF28)(%rip),%r15
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1,0x88(%rbp)
	jmp L_217450
.p2align 0x4
L_468775:
L_218193:
	movq (globalObjptr+0x7400)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_217248
.p2align 0x4
L_468777:
L_217229:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r11
	shrq $0x1,%r11
	cmpq $0x10CE,%r11
	je L_468784
L_217234:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CF,%r15
	jne L_217159
L_217235:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_468781
L_217240:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C7,%r14
	je L_468780
.p2align 0x4,,0x7
L_217159:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je loop_2372
L_217160:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_217161:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468779
.p2align 0x4,,0x7
L_217162:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_468778
L_217163:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movl $0x1,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je loop_2372
L_217164:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_217161
.p2align 0x4
L_468778:
L_217166:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je loop_2372
L_217167:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x50(%rbp)
	jmp L_217161
.p2align 0x4
L_468779:
L_217169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217170
.p2align 0x4
.long 0x32C7
L_217170:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_217162
.p2align 0x4
L_468780:
L_217241:
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468781:
L_217236:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	jne L_217159
L_217237:
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468784:
L_217230:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_217159
L_217231:
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq 0x0(%r14),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r11)
	je loop_2372
	jmp L_217159
.p2align 0x4
L_468786:
L_217220:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x12FE,%r10
	je L_468788
L_217227:
	movq 0x0(%r15),%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	jne L_468787
L_217228:
	movq %r11,%r15
	movq %r14,%r11
L_217223:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x8(%r11),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468787:
	movq %r14,%r11
L_217222:
	movq (globalObjptr+0x5290)(%rip),%r15
	jmp L_217223
.p2align 0x4
L_468788:
L_217221:
	movq 0x8(%r15),%r10
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	andq $0x1,%r8
	cmpq $0x1,%r8
	jne L_468789
L_217226:
	movq %r11,%r15
	movq %r14,%r11
	jmp L_217223
.p2align 0x4
L_468789:
	movq %r14,%r11
	jmp L_217222
.p2align 0x4
L_468790:
L_217185:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x98(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	movq %r10,0xC0(%rbp)
	cmpq %r15,%r10
	jne L_217120
L_217187:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_217120
L_217189:
	cmpl %r14d,%r11d
	je L_468791
L_217190:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468791:
L_217191:
	movq 0xC0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_468796
L_217192:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217193:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217194
.p2align 0x4
.long 0x32C8
L_217194:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_217195:
	movq $0x0,0xC8(%rbp)
.p2align 0x4,,0x7
loop_2373:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468794
.p2align 0x4,,0x7
L_217196:
	movq 0xC8(%rbp),%r15
	cmpq 0xC0(%rbp),%r15
	jnl L_468793
L_217211:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x88(%rbp),%r11
	movl 0x0(%r11,%r13,1),%ecx
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_468792
L_217214:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r13,%r14
L_217213:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xC8(%rbp),%r11
	movq %r11,%r9
	imulq $0x18,%r9
	movq %r14,0x8(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	imulq $0x18,%r14
	movq %r15,0x10(%r13,%r14,1)
	movq %r11,%r15
	imulq $0x18,%r15
	movl %ecx,0x0(%r13,%r15,1)
	incq %r11
	movq %r11,0xC8(%rbp)
	jmp loop_2373
.p2align 0x4
L_468792:
L_217212:
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_217213
.p2align 0x4
L_468793:
L_217197:
	movq 0x30(%rbp),%r14
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0x4AF0)(%rip),%r13
	movq %r13,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x3E0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_468794:
L_217215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217216
.p2align 0x4
.long 0x32CA
L_217216:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_217196
.p2align 0x4
L_468796:
L_217219:
	movq (globalObjptr+0x73F8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_217195
.p2align 0x4
L_468799:
L_218219:
	movq $0x1,%r15
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2407:
	movl 0x24(%rbp),%r14d
	cmpl 0x20(%rbp),%r14d
	jnl L_468803
L_219282:
	movslq %r14d,%r13
	imulq $0x18,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%r14,%r13,1),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_217120
L_219284:
	cmpl $0x0,%r13d
	jl L_217605
L_219285:
	movq %r15,0x50(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2424:
	movl 0x30(%rbp),%r14d
	cmpl %r14d,0x34(%rbp)
	jl L_468800
L_219286:
	incl 0x24(%rbp)
	movq 0x50(%rbp),%r15
	jmp loop_2407
.p2align 0x4
L_468800:
L_219287:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x78(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x3D0(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_219288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_468803:
L_218220:
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468828
L_218221:
	movq %r15,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_218222:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468827
.p2align 0x4,,0x7
L_218223:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21AE,%r14
	je L_468823
	cmpq $0x21AF,%r14
	je L_468818
L_218224:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_468816
L_219209:
	movq %r13,0x70(%rbp)
	movq 0x0(%r9),%r15
	movq 0x18(%r15),%r13
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_219210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468815
.p2align 0x4,,0x7
L_219211:
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_468804
L_219212:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_218222
.p2align 0x4
L_468804:
L_219213:
	movq %r14,0x28(%rbp)
L_218228:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_468814
L_218229:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218230:
	incl %ecx
	jo L_217268
L_218231:
	cmpq $0x1,%r15
	je L_468805
L_218232:
	movq 0x8(%r15),%r15
	jmp L_218230
.p2align 0x4
L_468805:
L_218233:
L_218234:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_468812
L_218235:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_218236:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218237
.p2align 0x4
.long 0x333F
L_218237:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x50(%rbp)
L_218238:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2408:
	cmpq 0x30(%rbp),%r15
	jnl L_468807
L_219203:
	cmpq $0x1,%r14
	je L_217715
L_219204:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x50(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2408
.p2align 0x4
L_468807:
L_218239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218240
L_219201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219202
.p2align 0x4
.long 0x3424
L_219202:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_218240:
	movq 0x50(%rbp),%r15
	movq $0xF51,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xBD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x187B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x50,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x38(%rbp),%r10
	movq %r10,0x10(%r14)
	movq 0x40(%rbp),%r9
	movq %r9,0x18(%r14)
	movq 0x48(%rbp),%r8
	movq %r8,0x20(%r14)
	movq 0x110(%rbp),%rsp
	movq %rsp,0x28(%r14)
	movq 0x108(%rbp),%rsp
	movq %rsp,0x30(%r14)
	movq 0x390(%rbp),%rsp
	movq %rsp,0x38(%r14)
	movq 0x3C0(%rbp),%rsi
	movq %rsi,0x40(%r14)
	movq $0x187D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movq 0x3A0(%rbp),%rsi
	movq %rsi,0x0(%r14)
	movq 0x398(%rbp),%rsi
	movq %rsi,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	movq $0x187F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x90,%r12
	movq %r10,0x0(%r13)
	movq %r9,0x8(%r13)
	movq %r8,0x10(%r13)
	movq 0x178(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x170(%rbp),%r11
	movq %r11,0x20(%r13)
	movq 0x168(%rbp),%r11
	movq %r11,0x28(%r13)
	movq 0x160(%rbp),%r11
	movq %r11,0x30(%r13)
	movq 0x158(%rbp),%r11
	movq %r11,0x38(%r13)
	movq 0x150(%rbp),%r11
	movq %r11,0x40(%r13)
	movq 0x148(%rbp),%r11
	movq %r11,0x48(%r13)
	movq 0x140(%rbp),%r11
	movq %r11,0x50(%r13)
	movq 0x138(%rbp),%r11
	movq %r11,0x58(%r13)
	movq 0x130(%rbp),%r11
	movq %r11,0x60(%r13)
	movq 0x128(%rbp),%r11
	movq %r11,0x68(%r13)
	movq %rsp,0x70(%r13)
	movq 0x120(%rbp),%r11
	movq %r11,0x78(%r13)
	movq %r14,0x80(%r13)
	movq $0x1881,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x28,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %rsi,0x10(%r13)
	movq %rsp,0x18(%r13)
	movq $0x1883,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x38,%r12
	movq %r10,0x0(%r14)
	movq %r9,0x8(%r14)
	movq %r8,0x10(%r14)
	movq 0x190(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x188(%rbp),%r11
	movq %r11,0x20(%r14)
	movq %r13,0x28(%r14)
	movq $0x1885,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r13,0x28(%r14)
	addq $0x38,%r12
	movq %r10,0x0(%r14)
	movq %r9,0x8(%r14)
	movq %r8,0x10(%r14)
	movq 0x1A0(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x198(%rbp),%r13
	movq %r13,0x20(%r14)
	movq $0x25EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_468809
L_218241:
	movq $0x11,0x10(%rbp)
L_218242:
	movq 0x1B8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468808
L_218243:
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x1C0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0xB0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq %r11,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_468808:
L_219195:
	movq %r14,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_468809:
L_219200:
	movq $0x9,0x10(%rbp)
	jmp L_218242
.p2align 0x4
L_468812:
L_219207:
	movq (globalObjptr+0xD80)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_218238
.p2align 0x4
L_468814:
L_219208:
	xorl %ecx,%ecx
	jmp L_218234
.p2align 0x4
L_468815:
L_219214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219215
.p2align 0x4
.long 0x3425
L_219215:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_219211
.p2align 0x4
L_468816:
L_218225:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_468817
L_218226:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_218222
.p2align 0x4
L_468817:
L_218227:
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_218228
.p2align 0x4
L_468818:
L_219222:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x10(%r15),%r14
	movq 0x78(%r14),%r13
	movq 0x70(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %rdx,%r15
	movq %r13,0x78(%rbp)
	jne L_217120
L_219224:
	testq %rdx,%rdx
	jz L_468821
L_219225:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_219226:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219227
.p2align 0x4
.long 0x3426
L_219227:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_219228:
	movq $0x0,0xC0(%rbp)
loop_2423:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xC0(%rbp)
	jl L_468819
L_219229:
	movq 0x30(%rbp),%r15
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x5F18)(%rip),%r14
	movq %r14,0x3D0(%rbp)
	movq %r15,0x3D8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_219230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_468819:
L_219270:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0xC8(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x3D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (x_728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_468821:
L_219278:
	movq (globalObjptr+0x7338)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_219228
.p2align 0x4
L_468823:
L_219216:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_468825
L_219220:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_218225
L_219221:
	movq %r13,%r14
L_219219:
	movq %r14,0x70(%rbp)
	movq $0x1EAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_219210
.p2align 0x4
L_468825:
L_219217:
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r9
	andq $0x1,%r9
	cmpq $0x1,%r9
	jne L_218225
L_219218:
	movq %r13,%r14
	jmp L_219219
.p2align 0x4
L_468827:
L_219279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219280
.p2align 0x4
.long 0x342C
L_219280:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_218223
.p2align 0x4
L_468828:
L_219281:
	movq %r15,0x28(%rbp)
	jmp L_218228
.p2align 0x4
.long 0x32C4
L_217146:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217147
L_219313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219314
.p2align 0x4
.long 0x3430
L_219314:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217147:
	movq $0x34A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x32C6
not_49:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x32C6
not_55:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x32C6
not_54:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x333C
x_725:
	addq $0xFFFFFFFFFFFFFC20,%rbp
	movq 0x3E0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218181
L_218185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E8,%rbp
	leaq (L_218186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218186
.p2align 0x4
.long 0x333D
L_218186:
	addq $0xFFFFFFFFFFFFFC18,%rbp
L_218181:
	movq 0x3D8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	je L_468831
L_218184:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_218183:
	movq 0x3B0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x3C8(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x3D0(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movl 0x24(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0x3C8(%rbp)
	jmp loop_2406
.p2align 0x4
L_468831:
L_218182:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_218183
.p2align 0x4
.long 0x32CC
L_217257:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_218141:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32CE
L_217265:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_218095:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32CF
L_217277:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq %r15,0x430(%rbp)
	addq $0x430,%rbp
	leaq (L_217278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_218083:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x420(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32D0
L_217283:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x420(%rbp)
	jmp L_217284
.p2align 0x4
.long 0x3327
L_218046:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movq 0x450(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq %r15,0x450(%rbp)
	addq $0x450,%rbp
	leaq (L_218047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_218074:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218075
L_218076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x450,%rbp
	leaq (L_218077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218077
.p2align 0x4
.long 0x332E
L_218077:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
L_218075:
	movq 0x430(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x440(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x368(%rbp),%r15
	jmp L_218041
.p2align 0x4
.long 0x332A
L_218060:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movl 0x470(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	movl $0x2,0x470(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x474(%rbp)
	addq $0x470,%rbp
	leaq (L_218061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x3314
L_218039:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218040
L_218042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218043
.p2align 0x4
.long 0x3326
L_218043:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_218040:
	movq 0x368(%rbp),%r15
	jmp L_218041
.p2align 0x4
.long 0x32CF
L_217953:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq %r15,%r14
	movq 0x420(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_468842
L_217954:
	cmpq %r15,%r13
	jl L_468835
L_217956:
	movq 0x420(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_217957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_468835:
L_218005:
	movl 0xC8(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	jo L_217268
L_218006:
	cmpq $0x1,0x88(%rbp)
	je L_468840
L_218007:
	movq 0x380(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD8(%rbp)
.p2align 0x4,,0x7
L_218008:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468839
.p2align 0x4,,0x7
L_218009:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468836
L_218010:
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_218008
.p2align 0x4
L_468836:
L_218011:
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xC8(%rbp)
.p2align 0x4,,0x7
L_218012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468838
.p2align 0x4,,0x7
L_218013:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468837
L_218014:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_218012
.p2align 0x4
L_468837:
L_218015:
	movq %r15,0x88(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	jmp loop_2377
.p2align 0x4
L_468838:
L_218016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218017
.p2align 0x4
.long 0x3322
L_218017:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	jmp L_218013
.p2align 0x4
L_468839:
L_218018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218019
.p2align 0x4
.long 0x3323
L_218019:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	jmp L_218009
.p2align 0x4
L_468840:
L_218020:
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	jmp loop_2377
.p2align 0x4
L_468842:
L_218021:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_218022:
	cmpl $0x0,%eax
	jg L_218005
	jmp L_217956
.p2align 0x4
.long 0x32D2
L_217315:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_217316
.p2align 0x4
.long 0x3316
L_217897:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_217925:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217926
L_217927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3B8,%rbp
	leaq (L_217928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217928
.p2align 0x4
.long 0x331D
L_217928:
	addq $0xFFFFFFFFFFFFFC48,%rbp
L_217926:
	movq 0x380(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x3A8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA0(%rbp),%r15
	jmp L_217892
.p2align 0x4
.long 0x3319
L_217911:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0x324(%rbp)
	movl $0x2,0x430(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x434(%rbp)
	addq $0x430,%rbp
	leaq (L_217912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x3314
L_217890:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217891
L_217893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_217894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217894
.p2align 0x4
.long 0x3315
L_217894:
	addq $0xFFFFFFFFFFFFFC90,%rbp
L_217891:
	movq 0xA0(%rbp),%r15
	jmp L_217892
.p2align 0x4
.long 0x3306
L_217818:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x3E0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x420(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x428(%rbp)
	movq %r15,0x438(%rbp)
	addq $0x438,%rbp
	leaq (L_217819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x32D4
L_217354:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x428(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_217355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x3312
L_217885:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217886
L_217888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217889
.p2align 0x4
.long 0x3313
L_217889:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217886:
	movq 0x380(%rbp),%r15
	jmp L_217887
.p2align 0x4
.long 0x32F6
L_217723:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq %r15,0x428(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_217724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
.long 0x32F2
L_217696:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_217680
.p2align 0x4
.long 0x32DA
L_217418:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0x420(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_217419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x32E8
L_217643:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x32FE
L_217775:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x32DF
L_217461:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x78(%rbp)
	jz L_217159
L_217463:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x88(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_217120
L_217465:
	cmpl 0x24(%rbp),%r15d
	jne L_217159
L_217467:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2389:
	movl 0x24(%rbp),%r15d
	cmpl 0x88(%rbp),%r15d
	je loop_2372
L_217468:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_217131
L_217470:
	movq %r14,%r15
	movq %r14,%r13
	movq %r14,%r11
	salq $0x4,%r15
	movq 0xB0(%rbp),%r10
	movq 0x0(%r10,%r15,1),%r9
	salq $0x4,%r13
	salq $0x4,%r11
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r11,1),%r8
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r11
	movq 0x8(%r10,%r13,1),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r11)
	jne L_217159
L_217472:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	movq %r15,%r14
	shrq $0x1,%r14
	cmpq $0x10D1,%r14
	je L_468861
	cmpq $0x10D2,%r14
	je L_468856
L_217473:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D0,%r14
	jne L_217159
L_217474:
	movq 0x0(%r8),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	jne L_468850
L_217475:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_217159
L_217476:
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_217159
.p2align 0x4,,0x7
L_217479:
	movl 0x24(%rbp),%r15d
	incl %r15d
	jo L_217268
L_217480:
	movl %r15d,0x24(%rbp)
	jmp loop_2389
.p2align 0x4
L_468850:
L_217481:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CF,%r15
	jne L_217159
L_217482:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_468852
L_217487:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C7,%r13
	jne L_217159
L_217488:
	movq 0x8(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468852:
L_217483:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	jne L_217159
L_217484:
	movq 0x8(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468856:
L_217497:
	movq 0x10(%r9),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D2,%r14
	jne L_217159
L_217498:
	movq 0x10(%r8),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r8),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_468858
L_217510:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C7,%r15
	jne L_217159
L_217511:
	movq 0x8(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468858:
L_217499:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	jne L_217159
L_217500:
	movq 0x8(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468861:
L_217489:
	movq 0x8(%r9),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D1,%r14
	jne L_217159
L_217490:
	movq 0x8(%r8),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x32E2
L_217603:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r14)
	incl 0x90(%rbp)
	jmp loop_2388
.p2align 0x4
.long 0x3324
L_218034:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x430(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218035
L_218037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x440,%rbp
	leaq (L_218038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218038
.p2align 0x4
.long 0x3325
L_218038:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
L_218035:
	movq 0x430(%rbp),%r15
	jmp L_218036
.p2align 0x4
.long 0x3332
L_218099:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218100
L_218136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218137
.p2align 0x4
.long 0x3337
L_218137:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_218100:
	movq 0x428(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_218102
L_218104:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_468870
L_218133:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	jnz L_468869
L_218134:
	movq %r13,%r15
L_218107:
	movq 0x0(%r15),%r14
	movq %r14,0x438(%rbp)
	addq $0x438,%rbp
	leaq (L_218108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_468869:
L_218102:
	movq $0x1155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r15
L_218103:
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	incl 0xD8(%rbp)
	jmp loop_2376
.p2align 0x4
L_468870:
L_218105:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	jnz L_218102
L_218106:
	movq %r13,%r15
	jmp L_218107
.p2align 0x4
.long 0x3339
L_218162:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218163
L_218167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218168
.p2align 0x4
.long 0x333A
L_218168:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_218163:
	movq $0x21A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq $0x21B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_218164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218164
.p2align 0x4
.long 0x32CB
L_218164:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2405:
	cmpq $0x1,%r15
	jnl L_468874
L_218166:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq 0x88(%rbp),%r10
	movq %r10,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2405
.p2align 0x4
L_468874:
L_218165:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_217450
.p2align 0x4
.long 0x32C6
not_52:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x32C6
not_51:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x32C9
L_217198:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_468880
L_217203:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CF,%r14
	jne L_217159
L_217204:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468877
L_217209:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C7,%r13
	jne L_217159
L_217210:
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468877:
L_217205:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	jne L_217159
L_217206:
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468880:
L_217199:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	jne L_217159
L_217200:
	movq 0x0(%r13),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r14)
	je loop_2372
	jmp L_217159
.p2align 0x4
.long 0x342D
L_219288:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10D0,%r14
	jne L_468890
L_219291:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_468889
L_219293:
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_217120
L_219295:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2425:
	cmpl %ebx,%ecx
	je L_468886
L_219296:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_217131
L_219298:
	salq $0x4,%r14
	movq 0x88(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_468883
L_219299:
	incl %ebx
	jo L_217268
L_219300:
	jmp loop_2425
.p2align 0x4
L_468883:
L_219301:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219302
L_219304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219305
.p2align 0x4
.long 0x342E
L_219305:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219302:
	movl $0x1,%ecx
L_219303:
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r15
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
L_219290:
	movq %r15,0x50(%rbp)
	incl 0x34(%rbp)
	jmp loop_2424
.p2align 0x4
L_468886:
L_219306:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219307
L_219308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219309
.p2align 0x4
.long 0x342E
L_219309:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219307:
	xorl %ecx,%ecx
	jmp L_219303
.p2align 0x4
L_468889:
L_219292:
	movq 0x50(%rbp),%r15
	jmp L_219290
.p2align 0x4
L_468890:
L_219289:
	movq 0x50(%rbp),%r15
	jmp L_219290
.p2align 0x4
.long 0x3340
L_218244:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq $0x1,%r15
	jne L_468891
L_218247:
	movq $0x11,0x3C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_468891:
L_218246:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3396
L_219196:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3427
L_219230:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219231
L_219268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219269
.p2align 0x4
.long 0x3429
L_219269:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219231:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x48F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x4451,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r15,0x8(%r8)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r8,0x8(%r11)
	movq %r10,0x10(%r11)
	addq $0x20,%r12
	movq %r9,0x0(%r11)
	movl 0x0(%r9),%r10d
	testl %r10d,%r10d
	jnz L_468907
L_219232:
	movq 0x0(%r14),%r10
	movq $0x21B5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	movq %r8,0x0(%r14)
	movl $0x1,0x0(%r9)
	movq %r15,%r14
	movq %r11,%r15
L_219233:
	movq $0x4CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x0(%r11),%r14
	movq 0x98(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_218548
L_219234:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_468905
L_219235:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_219237:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_468904
L_219258:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD98,%r11
	jne L_468903
L_219259:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_468900
L_219238:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_217268
L_219239:
	cmpq $0x1,%r15
	je L_468892
L_219240:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_219237
.p2align 0x4
L_468892:
L_219241:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219242
L_219256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219257
.p2align 0x4
.long 0x3428
L_219257:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219242:
	movl 0x98(%rbp),%ecx
L_219243:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_219244:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219246
L_219255:
	movl %ecx,0x0(%r15)
L_219246:
	movq $0x1B31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_468895
L_219252:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468894
L_219254:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
L_219248:
	cmpq $0x1,0x0(%r15)
	jne L_219250
L_219251:
	movq (globalObjptr+0x7418)(%rip),%r15
L_219250:
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	jmp L_219210
.p2align 0x4
L_468894:
L_219253:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219248
.p2align 0x4
L_468895:
L_219247:
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r13
	movq %r13,%r15
	jmp L_219248
.p2align 0x4
L_468900:
L_219261:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_219262:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219264
L_219265:
	movl %ecx,0x0(%r15)
	jmp L_219264
.p2align 0x4
L_468903:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_219238
.p2align 0x4
L_468904:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_219238
.p2align 0x4
L_468905:
L_219266:
	xorl %ecx,%ecx
	jmp L_219243
.p2align 0x4
L_468907:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_219233
.p2align 0x4
.long 0x342A
x_728:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219271
L_219275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219276
.p2align 0x4
.long 0x342B
L_219276:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_219271:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	je L_468909
L_219274:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_219273:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xC0(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0xD0(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movl 0xC8(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0xC0(%rbp)
	jmp loop_2423
.p2align 0x4
L_468909:
L_219272:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_219273
.p2align 0x4
.long 0x32C5
L_217148:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217149
L_219311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_219312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219312
.p2align 0x4
.long 0x342F
L_219312:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217149:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je loop_2372
L_217150:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_217145
.p2align 0x4
.long 0x32CC
L_217258:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%ecx
	movl %ecx,0x98(%rbp)
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp fromIntForLength_1
.p2align 0x4
.long 0x32CE
L_217266:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%ecx
	movl %ecx,0x24(%rbp)
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_217267
.p2align 0x4
.long 0x32CF
L_217278:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0xCC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217279
L_218081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_218082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218082
.p2align 0x4
.long 0x332F
L_218082:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217279:
	movl 0xCC(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_217280
.p2align 0x4
.long 0x3327
L_218047:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movl 0x450(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218048
L_218072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_218073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218073
.p2align 0x4
.long 0x332D
L_218073:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
L_218048:
	movl 0x24(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x430(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218049
.p2align 0x4
.long 0x332A
L_218061:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movl 0x470(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jz L_468914
L_218062:
	movq 0x458(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x478(%rbp)
	addq $0x468,%rbp
	leaq (L_218063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_468914:
L_218064:
	movl 0x244(%rbp),%r15d
	testl %r15d,%r15d
	jz L_468915
L_218065:
	movq 0x458(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq %r15,0x478(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x480(%rbp)
	addq $0x470,%rbp
	leaq (L_218066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_468915:
L_218067:
	movq 0x460(%rbp),%r15
	jmp L_218068
.p2align 0x4
.long 0x331F
L_217957:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3316
L_217898:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217899
L_217923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217924
.p2align 0x4
.long 0x331C
L_217924:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217899:
	movl 0x244(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x380(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_217900
.p2align 0x4
.long 0x3319
L_217912:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	testl %r15d,%r15d
	jz L_468917
L_217913:
	movq 0x3D0(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_217914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_468917:
L_217915:
	movl 0x324(%rbp),%r15d
	testl %r15d,%r15d
	jz L_468918
L_217916:
	movq 0x3D0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq %r15,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_217917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_468918:
L_217918:
	movq 0x420(%rbp),%r15
	jmp L_217919
.p2align 0x4
.long 0x3307
L_217819:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movl 0x438(%rbp),%r15d
	movl %r15d,0x324(%rbp)
	movl %r15d,0x438(%rbp)
	movq $0x3,0x440(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x438,%rbp
	leaq (L_217820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x32D4
L_217355:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217356
L_217811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217812
.p2align 0x4
.long 0x3305
L_217812:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217356:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%rdx
	testq %rdx,%rdx
	jz L_468930
L_217357:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217358:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217359
.p2align 0x4
.long 0x32D5
L_217359:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x90(%rbp)
L_217360:
	movq $0x0,0x380(%rbp)
.p2align 0x4,,0x7
loop_2381:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468928
.p2align 0x4,,0x7
L_217361:
	movq 0x380(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_468920
L_217803:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	imulq $0x30,%r14
	movq 0xD8(%rbp),%r8
	movq 0x8(%r8,%r14,1),%rsp
	imulq $0x30,%r13
	movq 0x10(%r8,%r13,1),%r14
	imulq $0x30,%r11
	movq 0x18(%r8,%r11,1),%r13
	imulq $0x30,%r10
	imulq $0x30,%r9
	movq 0x20(%r8,%r9,1),%r11
	imulq $0x30,%r15
	movq 0x28(%r8,%r15,1),%r9
	movl 0x0(%r8,%r10,1),%r15d
	testl %r15d,%r15d
	jnz L_468919
L_217804:
	movq $0x21A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %rsp,0x18(%r15)
	addq $0x28,%r12
	movq %r15,%r14
	movq %r11,%r13
L_217805:
	movq 0x90(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x380(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r15,%r9,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r13,0x8(%r15,%r14,1)
	incq %r11
	movq %r11,0x380(%rbp)
	jmp loop_2381
.p2align 0x4
L_468919:
L_217806:
	movq $0x21A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r11,%r13
	jmp L_217805
.p2align 0x4
L_468920:
L_217362:
	movq 0x90(%rbp),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r14d
	movl %r14d,0x24(%rbp)
	movslq %r14d,%r11
	cmpq %r13,%r11
	jne L_217120
L_217364:
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
loop_2382:
	cmpl 0x24(%rbp),%ecx
	je L_468925
L_217365:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_217131
L_217367:
	salq $0x4,%r14
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x10D1,%r10
	jne L_468922
L_217797:
	incl %ecx
	jo L_217268
L_217798:
	jmp loop_2382
.p2align 0x4
L_468922:
L_217368:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217369
L_217795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217796
.p2align 0x4
.long 0x3304
L_217796:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217369:
	movl $0x0,0x30(%rbp)
L_217370:
	movq $0x3A17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x428(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_217371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_468925:
L_217799:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217800
L_217801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217802
.p2align 0x4
.long 0x3304
L_217802:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217800:
	movl $0x1,0x30(%rbp)
	jmp L_217370
.p2align 0x4
L_468928:
L_217807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217808
.p2align 0x4
.long 0x3303
L_217808:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217361
.p2align 0x4
L_468930:
L_217810:
	movq (globalObjptr+0x52B0)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_217360
.p2align 0x4
.long 0x32F7
L_217724:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x418(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x380(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %r14,%rdx
	jne L_217120
L_217726:
	testq %rdx,%rdx
	jz L_468941
L_217727:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217728:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217729
.p2align 0x4
.long 0x32F8
L_217729:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3D8(%rbp)
L_217730:
	movq $0x0,0x3E0(%rbp)
.p2align 0x4,,0x7
loop_2396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468939
.p2align 0x4,,0x7
L_217731:
	movq 0x3E0(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_468936
L_217743:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x380(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	cmpq $0x1,%r11
	je L_468935
L_217744:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_468933
	cmpq $0x10CB,%r15
	je L_468932
	jmp L_217702
.p2align 0x4
L_468932:
L_217750:
	movq 0x0(%r11),%r15
	movq $0x2195,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
L_217748:
	movq 0x3D8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x3E0(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0x3E0(%rbp)
	jmp loop_2396
.p2align 0x4
L_468933:
L_217745:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq $0x1147,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x3B0(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468934
L_217749:
	movq 0x8(%r10),%r13
	movq %r11,%r15
L_217747:
	movq 0x8(%r13),%r11
	movq $0x2193,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_217748
.p2align 0x4
L_468934:
L_217746:
	movq 0x8(%r10),%r13
	movq %r11,%r15
	jmp L_217747
.p2align 0x4
L_468935:
L_217751:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_217748
.p2align 0x4
L_468936:
L_217732:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217733
L_217741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217742
.p2align 0x4
.long 0x32FC
L_217742:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217733:
	movq 0x3D8(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq 0x3B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x380(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217734
.p2align 0x4
.long 0x32F9
L_217734:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2397:
	cmpq $0x1,%r15
	jnl L_468937
L_217740:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x380(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2397
.p2align 0x4
L_468937:
L_217735:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x440(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movl $0x0,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x428,%rbp
	leaq (L_217736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1290
.p2align 0x4
L_468939:
L_217752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217753
.p2align 0x4
.long 0x32FD
L_217753:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217731
.p2align 0x4
L_468941:
L_217755:
	movq (globalObjptr+0x5258)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	jmp L_217730
.p2align 0x4
.long 0x32DA
L_217419:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217420
L_217637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_217638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217638
.p2align 0x4
.long 0x32E7
L_217638:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_217420:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0xFF8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1279,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	cmpq $0x1,0x90(%rbp)
	jne L_468947
L_217636:
	movq $0x21B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq %r13,0x8(%r14)
	movq %r14,0x90(%rbp)
L_217425:
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_468946
L_217426:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217427:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217428
.p2align 0x4
.long 0x32DD
L_217428:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0xC8(%rbp)
L_217429:
	movq $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2386:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468944
.p2align 0x4,,0x7
L_217430:
	movq 0xD0(%rbp),%r15
	cmpq 0x98(%rbp),%r15
	jnl L_468943
L_217629:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x219D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x21A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,%r11
	salq $0x4,%r11
	movq %r13,0x0(%r14,%r11,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,%r13
	salq $0x4,%r13
	movq %r9,0x8(%r14,%r13,1)
	incq %r15
	movq %r15,0xD0(%rbp)
	jmp loop_2386
.p2align 0x4
L_468943:
L_217431:
	movq 0xC8(%rbp),%r13
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x30(%rbp),%r14
	movq 0x90(%rbp),%r11
	movq %r11,0x30(%rbp)
	xchgq %r13,%r15
	jmp L_217432
.p2align 0x4
L_468944:
L_217630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217631
.p2align 0x4
.long 0x32E5
L_217631:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_217430
.p2align 0x4
L_468946:
L_217633:
	movq (globalObjptr+0x52E8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_217429
.p2align 0x4
L_468947:
L_217421:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movl %r9d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r10,0x18(%r15)
	movq 0x8(%r10),%r15
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x420(%rbp)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_217422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x32E9
L_217644:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217645
L_217646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217647
.p2align 0x4
.long 0x32EA
L_217647:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217645:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1008)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x90(%rbp)
	jmp L_217425
.p2align 0x4
.long 0x32FF
L_217776:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217777
L_217784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217785
.p2align 0x4
.long 0x3302
L_217785:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217777:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1008)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xD8(%rbp)
	movq $0x21A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x380(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217778
.p2align 0x4
.long 0x3300
L_217778:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2398:
	cmpq $0x1,%r15
	jnl L_468950
L_217783:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x88(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x380(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2398
.p2align 0x4
L_468950:
L_217779:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217780
L_217781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217782
.p2align 0x4
.long 0x3301
L_217782:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217780:
	movq 0x88(%rbp),%r15
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq 0xD8(%rbp),%r13
	movq %r13,0x30(%rbp)
	jmp L_217432
.p2align 0x4
.long 0x32DF
not_53:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jnz L_217479
	jmp L_217159
.p2align 0x4
.long 0x32E1
L_217501:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_217159
L_217503:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x32E0
L_217491:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_217159
L_217493:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_217494:
	testl %eax,%eax
	jz L_217159
L_217496:
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3333
L_218108:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movl 0x438(%rbp),%r15d
	movl %r15d,0xDC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218109
L_218130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218131
.p2align 0x4
.long 0x3337
L_218131:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_218109:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x430(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_217932
	cmpq $0x2,%r13
	je L_468957
L_218110:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_218127(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x440(%rbp)
	addq $0x440,%rbp
	leaq (L_218111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_468957:
L_218129:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_218114:
	cmpl %ecx,0xDC(%rbp)
	jl L_468958
L_218115:
	movq $0x1155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r15
	jmp L_218103
.p2align 0x4
L_468958:
L_218116:
	movq 0x428(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_468959
L_218118:
	movq 0x8(%r15),%r14
	movq %r14,0x430(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x438(%rbp)
	movq 0x3A8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x450(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x448(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x448,%rbp
	leaq (L_218119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_468959:
L_218117:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5300)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x32C6
not_50:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2372
	jmp L_217159
.p2align 0x4
.long 0x3341
L_218248:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468962
L_218249:
	movq 0x0(%r11),%r15
	movq %r15,0xC0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_468962:
L_219190:
	movq %r14,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
bug_543:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219197
L_219198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219199
.p2align 0x4
.long 0x339A
L_219199:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219197:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x332B
L_218063:
	addq $0xFFFFFFFFFFFFFB98,%rbp
	movq 0x468(%rbp),%r15
	movq %r15,0x460(%rbp)
	jmp L_218064
.p2align 0x4
.long 0x332C
L_218066:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movq 0x470(%rbp),%r15
	movq %r15,0x458(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	jmp next_16
.p2align 0x4
.long 0x331F
L_217958:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0xD8(%rbp)
.p2align 0x4,,0x7
loop_2401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468981
.p2align 0x4,,0x7
L_217959:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_468966
L_217960:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468965
L_217961:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	decl %r15d
	jo L_217268
L_217962:
	movq %r13,0x30(%rbp)
	movl %r15d,0x24(%rbp)
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	jmp loop_2401
.p2align 0x4
L_468965:
L_217963:
	movq (globalObjptr+0x52A0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468966:
L_217964:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_217978
L_217965:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r13,0x380(%rbp)
	movq $0x1,0x388(%rbp)
.p2align 0x4,,0x7
L_217966:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468979
.p2align 0x4,,0x7
L_217967:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x388(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_468967
L_217968:
	movq %r15,0x388(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x380(%rbp)
	jmp L_217966
.p2align 0x4
L_468967:
L_217969:
	movq 0x388(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq $0x1,0x388(%rbp)
.p2align 0x4,,0x7
L_217970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468978
.p2align 0x4,,0x7
L_217971:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x388(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_468968
L_217972:
	movq %r15,0x388(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x380(%rbp)
	jmp L_217970
.p2align 0x4
L_468968:
L_217973:
	movq 0x380(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_217974:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468977
.p2align 0x4,,0x7
L_217975:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_468969
L_217976:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_217974
.p2align 0x4
L_468969:
L_217977:
	movq %r15,0x88(%rbp)
L_217978:
	movl 0xC8(%rbp),%ecx
	decl %ecx
	jo L_217268
.p2align 0x4,,0x7
loop_2402:
	cmpl $0x0,%ecx
	jl L_468974
L_217980:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	cmpq 0x90(%rbp),%r15
	jnb L_217131
L_217982:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_468972
L_217983:
	movq 0x0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
L_217984:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468971
.p2align 0x4,,0x7
L_217985:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_468970
L_217986:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_217984
.p2align 0x4
L_468970:
L_217987:
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%ecx
	jmp loop_2402
.p2align 0x4
L_468971:
L_217988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217989
.p2align 0x4
.long 0x32D1
L_217989:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217985
.p2align 0x4
L_468972:
L_217990:
	movl 0x24(%rbp),%ecx
	jmp loop_2402
.p2align 0x4
L_468974:
L_217991:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217304
L_217993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217994
.p2align 0x4
.long 0x331E
L_217994:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217304
.p2align 0x4
L_468977:
L_217995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217996
.p2align 0x4
.long 0x32D1
L_217996:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217975
.p2align 0x4
L_468978:
L_217997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217998
.p2align 0x4
.long 0x3320
L_217998:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217971
.p2align 0x4
L_468979:
L_217999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_218000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218000
.p2align 0x4
.long 0x3320
L_218000:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217967
.p2align 0x4
L_468981:
L_218002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_218003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218003
.p2align 0x4
.long 0x3321
L_218003:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_217959
.p2align 0x4
.long 0x331A
L_217914:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x420(%rbp)
	jmp L_217915
.p2align 0x4
.long 0x331B
L_217917:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movl 0x324(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	jmp next_15
.p2align 0x4
.long 0x3308
L_217820:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x3C8(%rbp),%r14
	movq %r14,0x430(%rbp)
	movq 0x428(%rbp),%r14
	movq %r14,0x438(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_217821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x32D6
L_217371:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217372
L_217793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217794
.p2align 0x4
.long 0x3303
L_217794:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217372:
	movq $0x2607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x98(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0xC8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0xD8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_468982
L_217373:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
	movq 0x90(%rbp),%r14
	jmp L_217374
.p2align 0x4
L_468982:
L_217759:
	movq 0x90(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp L_217760
.p2align 0x4
.long 0x32FA
L_217736:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217737
L_217738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217739
.p2align 0x4
.long 0x32FB
L_217739:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217737:
	movq $0x1275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	movq 0xD8(%rbp),%r15
	jmp loop_2383
.p2align 0x4
.long 0x32DB
L_217422:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_217423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x32E1
L_217504:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_217159
L_217506:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_217507:
	testl %eax,%eax
	jnz L_217479
	jmp L_217159
.p2align 0x4
.long 0x3334
L_218111:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	movq 0x440(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq %r15,0x440(%rbp)
	addq $0x440,%rbp
	leaq (L_218112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3314
L_218127:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x430(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3335
L_218119:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
	movq 0x448(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218120
L_218123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_218124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218124
.p2align 0x4
.long 0x3336
L_218124:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
L_218120:
	movq $0x1157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x430(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x380(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x420(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x438(%rbp),%r13
	movq %r13,0x18(%r15)
	movslq 0xDC(%rbp),%r14
	cmpq 0x90(%rbp),%r14
	jnb L_217131
L_218122:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x2603,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13,%r14,8)
	movq 0xC8(%rbp),%r15
	movq 0xD0(%rbp),%r14
	jmp L_218103
.p2align 0x4
.long 0x3342
L_218250:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq $0x1,%r15
	jne L_218246
L_218252:
	movq $0x11,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3396
L_219191:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3309
L_217821:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217822
L_217865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_217866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217866
.p2align 0x4
.long 0x3311
L_217866:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_217822:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x3C8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x3D0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x3B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_468990
L_217864:
	movq 0x8(%r14),%r15
L_217824:
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x324(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_217825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_468990:
L_217823:
	movq 0x8(%r14),%r15
	jmp L_217824
.p2align 0x4
.long 0x32DC
L_217423:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217424
L_217634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_217635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217635
.p2align 0x4
.long 0x32E6
L_217635:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_217424:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1008)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x90(%rbp)
	jmp L_217425
.p2align 0x4
.long 0x3334
L_218112:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	movl 0x440(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218113
L_218125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_218126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218126
.p2align 0x4
.long 0x3337
L_218126:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_218113:
	movl 0x244(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218114
.p2align 0x4
.long 0x3343
L_218253:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_468994
L_218254:
	movq 0x0(%r15),%r13
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_468994:
L_219185:
	movq 0xD8(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
bug_542:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219192
L_219193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219194
.p2align 0x4
.long 0x339A
L_219194:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219192:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x330A
L_217825:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x388(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3C8(%rbp)
	cmpq %rdx,%r14
	jne L_217120
L_217827:
	testq %rdx,%rdx
	jz L_469003
L_217828:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_217829:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x430,%rbp
	leaq (L_217830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217830
.p2align 0x4
.long 0x330B
L_217830:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq %rax,0x428(%rbp)
L_217831:
	movq $0x0,0x430(%rbp)
.p2align 0x4,,0x7
loop_2399:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469001
.p2align 0x4,,0x7
L_217832:
	movq 0x430(%rbp),%r15
	cmpq 0x3C8(%rbp),%r15
	jnl L_468999
L_217849:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x388(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x438(%rbp)
	cmpq $0x1,%r11
	je L_468998
L_217850:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_468997
	cmpq $0x10CB,%r15
	je L_468996
L_217851:
	movq (globalObjptr+0x52C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468996:
L_217858:
	movq 0x0(%r11),%r15
	movq $0x2191,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
.p2align 0x4,,0x7
L_217855:
	movq 0x428(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x430(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x438(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x430(%rbp)
	jmp loop_2399
.p2align 0x4
L_468997:
L_217852:
	movq 0x8(%r11),%r15
	movq %r15,0x440(%rbp)
	movq 0x0(%r11),%r15
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x450(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x458(%rbp)
	addq $0x450,%rbp
	leaq (L_217853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_468998:
L_217859:
	movq $0x1,%r15
	jmp L_217855
.p2align 0x4
L_468999:
L_217833:
	movq 0x428(%rbp),%r13
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x3D0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x3B0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_469000
L_217848:
	movq 0x8(%r13),%r14
	xchgq %r11,%r15
L_217835:
	movq 0x8(%r14),%r13
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x438(%rbp)
	addq $0x18,%r12
	movl $0x2,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_217836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_469000:
L_217834:
	movq 0x8(%r13),%r14
	xchgq %r11,%r15
	jmp L_217835
.p2align 0x4
L_469001:
L_217860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x440,%rbp
	leaq (L_217861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217861
.p2align 0x4
.long 0x3310
L_217861:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	jmp L_217832
.p2align 0x4
L_469003:
L_217863:
	movq (globalObjptr+0x52B8)(%rip),%r15
	movq %r15,0x428(%rbp)
	jmp L_217831
.p2align 0x4
.long 0x3344
L_218255:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x3396
L_219186:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x330E
L_217853:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movq 0x450(%rbp),%r15
	movq %r15,0x448(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217854
L_217856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x458,%rbp
	leaq (L_217857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217857
.p2align 0x4
.long 0x330F
L_217857:
	addq $0xFFFFFFFFFFFFFBA8,%rbp
L_217854:
	movq $0x2191,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x440(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_217855
.p2align 0x4
.long 0x330C
L_217836:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq %r15,0x438(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_217837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x3345
L_218256:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq $0x1,%r15
	jne L_218246
L_218258:
	movq $0x11,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3396
bug_541:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219187
L_219188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219189
.p2align 0x4
.long 0x339A
L_219189:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219187:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x330C
L_217837:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469008
L_217838:
	movq %r15,0x438(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_217839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469008:
L_217844:
	movq 0x400(%rbp),%r14
	movq %r14,0x438(%rbp)
	addq $0x438,%rbp
	leaq (bits_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
.long 0x3344
L_218259:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218260
.p2align 0x4
.long 0x3346
L_218260:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2409:
	cmpq $0x1,%r15
	jnl L_469009
L_219184:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2409
.p2align 0x4
L_469009:
L_218261:
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x128(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_469010
L_218262:
	movq 0x0(%r15),%r13
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469010:
L_219179:
	movq 0x128(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x330C
L_217839:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217840
L_217842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_217843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217843
.p2align 0x4
.long 0x330D
L_217843:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_217840:
	movq 0x388(%rbp),%r15
L_217841:
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x420(%rbp),%r10
	movq %r10,0x10(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x428(%rbp),%r10
	movq %r10,0x18(%r14,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movl 0x324(%rbp),%r10d
	movl %r10d,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x3A8(%rbp),%r10
	movq %r10,0x20(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x3B0(%rbp),%r11
	movq %r11,0x28(%r14,%r15,1)
	incq %r13
	movq %r13,0x30(%rbp)
	movl 0x244(%rbp),%ecx
	movq 0x380(%rbp),%r15
	jmp loop_2380
.p2align 0x4
.long 0x330C
bits_19:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217845
L_217846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_217847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217847
.p2align 0x4
.long 0x330D
L_217847:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_217845:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	jmp L_217841
.p2align 0x4
.long 0x3347
L_218263:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x3396
L_219180:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3348
L_218264:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,%r15
	jne L_218246
L_218266:
	movq $0x11,0x3C8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3396
bug_540:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219181
L_219182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219183
.p2align 0x4
.long 0x339A
L_219183:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219181:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3349
L_218267:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218268
L_219177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219178
.p2align 0x4
.long 0x3423
L_219178:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218268:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x334A
L_218269:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218270
L_219175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219176
.p2align 0x4
.long 0x3422
L_219176:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218270:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x334B
L_218271:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218272
L_219173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219174
.p2align 0x4
.long 0x3421
L_219174:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218272:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x334C
L_218273:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1E8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq $0x3,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x334D
L_218274:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218275
L_219171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219172
.p2align 0x4
.long 0x3420
L_219172:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218275:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x334E
L_218276:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x334F
L_218277:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x3350
L_218278:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x3351
L_218279:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (bits_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x3352
bits_20:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218280
L_219169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219170
.p2align 0x4
.long 0x341F
L_219170:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218280:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x200(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469019
L_218281:
	movq %r14,0x3D0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (word_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469019:
L_219164:
	movq %r11,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3353
word_53:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218282
L_219162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219163
.p2align 0x4
.long 0x341E
L_219163:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218282:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469021
L_218283:
	movq 0x0(%r14),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469021:
L_219157:
	movq 0xD8(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
L_219165:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3354
L_218284:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218285
L_219155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219156
.p2align 0x4
.long 0x341D
L_219156:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218285:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218286
.p2align 0x4
.long 0x3355
L_218286:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,0x10(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2410:
	cmpq $0x1,%r15
	jnl L_469023
L_219154:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2410
.p2align 0x4
L_469023:
L_218287:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218288
L_219152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219153
.p2align 0x4
.long 0x341C
L_219153:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218288:
	movq 0x10(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469024
L_218289:
	movq 0x0(%r14),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469024:
L_219147:
	movq 0x128(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_219148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
L_219158:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
bug_539:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219166
L_219167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219168
.p2align 0x4
.long 0x339A
L_219168:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219166:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3356
L_218290:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218291
L_219145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219146
.p2align 0x4
.long 0x341B
L_219146:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218291:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x398B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x3C8(%rbp)
	movl $0x4,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x3396
L_219148:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3396
bug_538:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219159
L_219160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219161
.p2align 0x4
.long 0x339A
L_219161:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219159:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3357
L_218292:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3C8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x3396
bug_537:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219149
L_219150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_219151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219151
.p2align 0x4
.long 0x339A
L_219151:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_219149:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3358
L_218293:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218294
L_219143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219144
.p2align 0x4
.long 0x341A
L_219144:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218294:
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x210(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x7420)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x218(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x11,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3359
L_218295:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_469035
	cmpl $0x10,%r15d
	je L_469034
	cmpl $0x20,%r15d
	je L_469033
	cmpl $0x40,%r15d
	je L_469032
L_218296:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469032:
L_219142:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_218298:
	movq $0x11,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469033:
L_219141:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218298
.p2align 0x4
L_469034:
L_219140:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218298
.p2align 0x4
L_469035:
L_218297:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218298
.p2align 0x4
.long 0x335A
word_54:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218299
L_219138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219139
.p2align 0x4
.long 0x3419
L_219139:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218299:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x41,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x335B
L_218300:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_469040
	cmpl $0x10,%r15d
	je L_469039
	cmpl $0x20,%r15d
	je L_469038
	cmpl $0x40,%r15d
	je L_469037
	jmp L_218296
.p2align 0x4
L_469037:
L_219137:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_218302:
	movq $0x41,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469038:
L_219136:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218302
.p2align 0x4
L_469039:
L_219135:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218302
.p2align 0x4
L_469040:
L_218301:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218302
.p2align 0x4
.long 0x335C
word_55:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218303
L_219133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219134
.p2align 0x4
.long 0x33B8
L_219134:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218303:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x21,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x335D
L_218304:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_469045
	cmpl $0x10,%r15d
	je L_469044
	cmpl $0x20,%r15d
	je L_469043
	cmpl $0x40,%r15d
	je L_469042
	jmp L_218296
.p2align 0x4
L_469042:
L_219132:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_218306:
	movq $0x21,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469043:
L_219131:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218306
.p2align 0x4
L_469044:
L_219130:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218306
.p2align 0x4
L_469045:
L_218305:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218306
.p2align 0x4
.long 0x335E
word_56:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218307
L_219128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219129
.p2align 0x4
.long 0x33B9
L_219129:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218307:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x81,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x335F
L_218308:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_469050
	cmpl $0x10,%r15d
	je L_469049
	cmpl $0x20,%r15d
	je L_469048
	cmpl $0x40,%r15d
	je L_469047
	jmp L_218296
.p2align 0x4
L_469047:
L_219127:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_218310:
	movq $0x81,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469048:
L_219126:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218310
.p2align 0x4
L_469049:
L_219125:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218310
.p2align 0x4
L_469050:
L_218309:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_218310
.p2align 0x4
.long 0x3360
word_57:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218311
L_219123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219124
.p2align 0x4
.long 0x3418
L_219124:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218311:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_218312:
	incl %ecx
	jo L_217268
L_218313:
	cmpq $0x1,%r15
	je L_469051
L_218314:
	movq 0x8(%r15),%r15
	jmp L_218312
.p2align 0x4
L_469051:
L_218315:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_469078
L_218316:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_218317:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218318
.p2align 0x4
.long 0x3361
L_218318:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_218319:
	movq 0xB8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2411:
	cmpq 0x10(%rbp),%r14
	jnl L_469053
L_219118:
	cmpq $0x1,%r13
	je L_217715
L_219119:
	movq %r14,%r11
	movq %r14,%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r13),%r13
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsi
	movb $0x1,0x0(%rsi,%r9,1)
	salq $0x4,%r11
	movq %r8,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%rsi,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_2411
.p2align 0x4
L_469053:
L_218320:
	movq $0xF51,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_218321:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469076
.p2align 0x4,,0x7
L_218322:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_469054
L_218323:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_218321
.p2align 0x4
L_469054:
L_218324:
	movq %r13,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_218325:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469075
.p2align 0x4,,0x7
L_218326:
	movq $0x2989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_469055
L_218327:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_218325
.p2align 0x4
L_469055:
L_218328:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_469070
L_218329:
	movq 0x50(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_218330:
	addq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je L_469056
L_218331:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_218330
.p2align 0x4
L_469056:
L_218332:
	testq %r15,%r15
	jz L_469069
L_218333:
	cmpq $0x7FFFFFFF,%r15
	ja L_217218
L_218334:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A5,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218335
.p2align 0x4
.long 0x3362
L_218335:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_218336:
	movq 0x90(%rbp),%r10
	movq 0x50(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2412:
	cmpq 0x10(%rbp),%r14
	jnl L_469059
.p2align 0x4,,0x7
loop_2421:
	cmpq 0x0(%r11),%r13
	jl L_469058
L_219097:
	cmpq $0x1,%r10
	je L_217610
L_219098:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2421
.p2align 0x4
L_469058:
L_219100:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2412
.p2align 0x4
L_469059:
L_218337:
	movq $0xF51,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_218338:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x50(%rbp)
	cmpq %r13,%r14
	jne L_217120
L_218340:
	cmpl $0x0,%ecx
	jl L_217605
L_218341:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2413:
	cmpl %ecx,%ebx
	jnl L_469060
L_219094:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movl %ebx,0x0(%r13)
	incl %ebx
	jmp loop_2413
.p2align 0x4
L_469060:
L_218342:
	movq 0x50(%rbp),%rdx
	testq %rdx,%rdx
	jz L_469065
L_218343:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_218344:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1695,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218345
.p2align 0x4
.long 0x3363
L_218345:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,0x90(%rbp)
L_218346:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2414:
	cmpq 0x50(%rbp),%r15
	jnl L_469061
L_219091:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2414
.p2align 0x4
L_469061:
L_218347:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218348
L_219089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219090
.p2align 0x4
.long 0x3416
L_219090:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218348:
	movq 0x90(%rbp),%r15
	movq $0x77D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	cmpq $0x1,%r14
	je L_469062
L_218349:
	movq (globalObjptr+0x10270)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469062:
L_218356:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x99D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1887,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x1889,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x98(%rbp)
	movq %r13,0x8(%r10)
	addq $0x40,%r12
	movq 0x3A0(%rbp),%r13
	movq %r13,0x0(%r10)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r10)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r10)
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%r10)
	movq 0x68(%rbp),%r13
	movq %r13,0x28(%r10)
	movq 0x60(%rbp),%r13
	movq %r13,0x30(%r10)
	movq $0x7C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x7CB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xB0(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r9)
	movq 0x220(%rbp),%r8
	movq %r8,0x8(%r9)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x47B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0xC0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	movq $0x188B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x28,%r12
	movq %r13,0x0(%r15)
	movq 0x228(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r8,0x18(%r15)
	movq $0x188D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r8,0x8(%r13)
	movq $0x188F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x1891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x20,%r12
	movq 0x238(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x230(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3353,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x388(%rbp)
	leaq L_218533(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x370(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_469065:
L_219093:
	movq (globalObjptr+0x7438)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_218346
.p2align 0x4
L_469069:
L_219102:
	movq (globalObjptr+0x7428)(%rip),%r14
	xchgq %r14,%r15
	jmp L_218336
.p2align 0x4
L_469070:
L_219103:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x10(%rbp)
	je L_218338
L_219104:
	testq %r13,%r13
	jz L_469073
L_219105:
	cmpq $0x7FFFFFFF,%r13
	ja L_217218
L_219106:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A5,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219107
.p2align 0x4
.long 0x3363
L_219107:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_219108:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2422:
	cmpq 0x90(%rbp),%r14
	jnl L_469071
L_219110:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x10(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2422
.p2align 0x4
L_469071:
L_219109:
	movq $0xF51,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_218338
.p2align 0x4
L_469073:
L_219112:
	movq (globalObjptr+0x7430)(%rip),%r15
	jmp L_219108
.p2align 0x4
L_469075:
L_219114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219115
.p2align 0x4
.long 0x3417
L_219115:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	jmp L_218326
.p2align 0x4
L_469076:
L_219116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219117
.p2align 0x4
.long 0x3417
L_219117:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	jmp L_218322
.p2align 0x4
L_469078:
L_219122:
	movq (globalObjptr+0xD80)(%rip),%r15
	jmp L_218319
.p2align 0x4
.long 0x3364
L_218350:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218351
L_219086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219087
.p2align 0x4
.long 0x3415
L_219087:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218351:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x3D0(%rbp)
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x3366
L_218357:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218358
L_218541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218542
.p2align 0x4
.long 0x3393
L_218542:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218358:
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je L_469082
L_218359:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_218360:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x390(%rbp)
	movq $0x3453,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_469082:
L_218365:
	movl $0x0,0x38(%rbp)
L_218366:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x220(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3314
L_218533:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_218534:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_218535
L_218536:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_469085
L_218537:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	cmpq %r13,0xE8(%rbp)
	je L_469084
L_218538:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469084:
L_218539:
	movl %r14d,0x38(%rbp)
	jmp L_218366
.p2align 0x4
L_469085:
L_218535:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3365
L_218352:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3367
L_218361:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218362
L_218531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218532
.p2align 0x4
.long 0x3392
L_218532:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218362:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_218365
L_218363:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_218360
.p2align 0x4
.long 0x3368
L_218367:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218368
L_218529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218530
.p2align 0x4
.long 0x3391
L_218530:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218368:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x220(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3365
L_218353:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218354
L_219084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219085
.p2align 0x4
.long 0x33AB
L_219085:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218354:
	movl $0x0,0x24(%rbp)
loop_2415:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_218356
L_218543:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	imulq $0x18,%r14
	movq 0x10(%r13,%r14,1),%r15
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%r11),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	jne L_469090
L_219082:
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469090:
	movq %r11,%r15
L_218545:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3369
L_218369:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218370
L_218527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218528
.p2align 0x4
.long 0x3390
L_218528:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218370:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x3394
L_219083:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218545
.p2align 0x4
.long 0x3394
L_218546:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x336A
L_218371:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x3395
L_218547:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r13
	movq %r13,0xD0(%rbp)
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_218548
L_218549:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_469110
L_218550:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_218552:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_218553
L_218595:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD99,%r13
	jne L_218553
L_218596:
	movq 0x8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x3B8(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_469098
L_218553:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_217268
L_218554:
	cmpq $0x1,%r14
	je L_469094
L_218555:
	movl %r13d,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218552
.p2align 0x4
L_469094:
	movl %r13d,%ecx
L_218557:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_218558
L_218559:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_726
L_218594:
	movl %ecx,0x0(%r15)
x_726:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_469095
L_218592:
	movq 0xC0(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_218593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469095:
	movq %r14,%r15
L_218562:
	movq %r15,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_218563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469098:
L_218598:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218599
L_219079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219080
.p2align 0x4
.long 0x3414
L_219080:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218599:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_218558
L_218600:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_469105
L_218601:
	movq 0xD8(%rbp),%r15
L_218602:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xF0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	cmpq $0x1,%r13
	je L_469104
L_218603:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_469103
	cmpq $0x10D6,%r15
	je L_469102
	cmpq $0x10D7,%r15
	je L_469101
	cmpq $0x10D8,%r15
	je L_469100
	cmpq $0x10D9,%r15
	je L_469099
L_218604:
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0x10278)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469099:
L_218975:
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0x102B0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469100:
L_218918:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0x102A8)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469101:
L_218904:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq $0x1271,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movl %r10d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r11,0x18(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x102A0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469102:
L_218803:
	movq 0x10(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq (globalObjptr+0x10298)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469103:
L_218733:
	movq 0x10(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq (globalObjptr+0x10290)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469104:
L_219073:
	movq (globalObjptr+0x102C0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469105:
L_219078:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_218602
.p2align 0x4
L_469110:
L_219081:
	xorl %ecx,%ecx
	jmp L_218557
.p2align 0x4
.long 0x336B
L_218372:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x339E
L_218593:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218562
.p2align 0x4
.long 0x3396
L_218563:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x378,%rbp
	leaq (L_218564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x339F
L_218605:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,%r15
	andq $0x1,%r15
	jz L_469112
L_218711:
	shrq $0x1,%r13
	movl %r13d,0xC0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469112:
L_218606:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33F9
L_218976:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_469113
L_219071:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219072+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469113:
L_218977:
L_218978:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33EF
L_218919:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_469114
L_218953:
	shrq $0x1,%r14
	movl %r14d,0xB0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469114:
L_218920:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33EB
L_218905:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
.long 0x33C0
L_218804:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_469115
L_218902:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218903+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469115:
L_218805:
L_218806:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33C0
L_218734:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_24
.p2align 0x4
.long 0x3412
L_219074:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219075
L_219076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219077
.p2align 0x4
.long 0x3413
L_219077:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219075:
	movq 0x50(%rbp),%r15
L_218639:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218640:
	addl 0x0(%r14),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_217268
L_218641:
	cmpq $0x1,%r15
	je L_469116
L_218642:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_218640
.p2align 0x4
L_469116:
L_218643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218644
L_218664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218665
.p2align 0x4
.long 0x33AE
L_218665:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218644:
	movl 0xB0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469117
L_218645:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_727:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x3D0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_469117:
L_218663:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_727
.p2align 0x4
.long 0x336C
L_218373:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218374
L_218525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218526
.p2align 0x4
.long 0x338F
L_218526:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218374:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x368(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x3397
L_218564:
	addq $0xFFFFFFFFFFFFFC88,%rbp
	movq 0x378(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xEA28)(%rip),%r15
	movq %r15,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_218565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33A0
L_218712:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469122
L_218713:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_218714:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469122:
L_218732:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_218714
.p2align 0x4
.long 0x33A0
L_218607:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218608
L_218709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218710
.p2align 0x4
.long 0x33BC
L_218710:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218608:
	movq 0xC0(%rbp),%r15
L_218609:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x128(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x3411
L_219072:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218978
.p2align 0x4
.long 0x33FA
L_218979:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218980
L_219069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219070
.p2align 0x4
.long 0x3410
L_219070:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218980:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_469124
L_219043:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq (globalObjptr+0xDE88)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469124:
L_218981:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDE48)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33F0
L_218954:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469126
L_218955:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_218956:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469126:
L_218974:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_218956
.p2align 0x4
.long 0x33F0
L_218921:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218922
L_218951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218952
.p2align 0x4
.long 0x33F7
L_218952:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218922:
	movq 0xB0(%rbp),%r15
L_218923:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33EC
L_218906:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218907
L_218916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218917
.p2align 0x4
.long 0x33EE
L_218917:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218907:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218908:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218909:
	cmpq $0x1,%r14
	je L_469128
L_218910:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218908
.p2align 0x4
L_469128:
L_218911:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218912
L_218914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218915
.p2align 0x4
.long 0x33ED
L_218915:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218912:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469129
L_218913:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
.p2align 0x4
L_469129:
L_218666:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_218639
.p2align 0x4
.long 0x33EA
L_218903:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x110(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218806
.p2align 0x4
.long 0x33CE
L_218807:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218808
L_218900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218901
.p2align 0x4
.long 0x33D0
L_218901:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218808:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x120(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x148(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x150(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x158(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x170(%rbp)
	movq 0x20(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r15,%r9
	jne L_217120
L_218810:
	movl %r10d,0x3D0(%rbp)
	movq $0x3B29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x20,%r12
	addq $0x3C8,%rbp
	leaq (L_218811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33C1
L_218735:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218736
L_218801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218802
.p2align 0x4
.long 0x33D0
L_218802:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218736:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x100(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE90)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_469135
L_218799:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218800+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469135:
L_218737:
L_218738:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33AA
L_218646:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x336D
L_218375:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218376
.p2align 0x4
.long 0x336E
L_218376:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x100(%rbp)
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_2416:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469140
.p2align 0x4,,0x7
L_218377:
	movq 0x108(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_469139
L_218519:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_469138
	cmpl $0x1,%r14d
	je L_469137
	jmp L_218154
.p2align 0x4
L_469137:
L_218522:
	movq $0x1,%r11
	movq (globalObjptr+0xF38)(%rip),%r13
	movq 0x60(%rbp),%r14
	movq 0xF0(%rbp),%r15
L_218521:
	movq $0x23,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x108(%rbp),%r14
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x108(%rbp)
	jmp loop_2416
.p2align 0x4
L_469138:
L_218520:
	movq 0xF8(%rbp),%r11
	movq 0x370(%rbp),%r13
	movq 0x48(%rbp),%r14
	movq 0xE8(%rbp),%r15
	jmp L_218521
.p2align 0x4
L_469139:
L_218378:
	movq 0x100(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x340(%rbp),%r14
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469140:
L_218523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218524
.p2align 0x4
.long 0x338E
L_218524:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218377
.p2align 0x4
.long 0x3398
L_218565:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0x378(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33BD
L_218715:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218716
L_218730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218731
.p2align 0x4
.long 0x33BF
L_218731:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218716:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33A1
L_218610:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218611
L_218707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218708
.p2align 0x4
.long 0x33BB
L_218708:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218611:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x335E
L_219044:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_24
.p2align 0x4
.long 0x33FB
L_218982:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218983
L_219041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219042
.p2align 0x4
.long 0x3409
L_219042:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218983:
	movq 0x100(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0xE0(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xE8(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x108(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x120(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0x20(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r15
	jne L_217120
L_218985:
	movl %r10d,0x3D0(%rbp)
	movq $0x3B29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x20,%r12
	addq $0x3C8,%rbp
	leaq (L_218986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33B5
L_218957:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218958
L_218972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218973
.p2align 0x4
.long 0x33B7
L_218973:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218958:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33A4
L_218924:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218925
L_218949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218950
.p2align 0x4
.long 0x33B8
L_218950:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218925:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33D4
L_218811:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33D3
L_218800:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x120(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_218738
.p2align 0x4
.long 0x33C2
L_218739:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218740
L_218797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218798
.p2align 0x4
.long 0x33D2
L_218798:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218740:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33AA
L_218647:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218648
L_218661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218662
.p2align 0x4
.long 0x33AD
L_218662:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218648:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_218650:
	movl %r13d,0x3D0(%rbp)
	movq $0x3B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x390(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x336F
L_218379:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218380
L_218517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218518
.p2align 0x4
.long 0x338D
L_218518:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218380:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x10078)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq %r13,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0x350(%rbp),%r13
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq %r10,0xE8(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0xF0(%rbp)
	movq 0x38(%r13),%r8
	cmpb $0x7,0x0(%r8)
	je L_218383
L_218381:
	cmpb $0x2,0x0(%r11)
	jne L_469151
L_218409:
	movq 0x0(%r10),%r13
	movq %r13,0xF8(%rbp)
	cmpq $0x1,%r13
	je L_469150
L_218410:
	movq %r15,0x388(%rbp)
	movq %r9,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_54
.p2align 0x4
L_469150:
L_218416:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x347B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_469151:
L_218383:
	xchgq %r14,%r15
L_218384:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x388(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x398(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x3A0(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x3A8(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3B8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x3C0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movb 0x320(%rbp),%r15b
	movb %r15b,0x3D0(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x3F0(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x400(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x408(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x410(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x418(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x440(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x450(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x458(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x460(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x478(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x480(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x488(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x490(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x498(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x4B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4C0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x4C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x4D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x4D8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movb 0x240(%rbp),%r15b
	movb %r15b,0x540(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	addq $0x388,%rbp
	leaq (L_218385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateFunction_0
.p2align 0x4
.long 0x3399
L_218566:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218567
L_218590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x390,%rbp
	leaq (L_218591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218591
.p2align 0x4
.long 0x339D
L_218591:
	addq $0xFFFFFFFFFFFFFC70,%rbp
L_218567:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x378(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x370(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x388(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x368(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_218568:
	addl 0x0(%r15),%ecx
	movl %ecx,0x368(%rbp)
	jo L_217268
L_218569:
	cmpq $0x1,%r14
	je L_469154
L_218570:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218568
.p2align 0x4
L_469154:
L_218571:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218572
L_218588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x398,%rbp
	leaq (L_218589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218589
.p2align 0x4
.long 0x339C
L_218589:
	addq $0xFFFFFFFFFFFFFC68,%rbp
L_218572:
	movl 0x368(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469155
L_218573:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
toString_338:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x378(%rbp)
	movq $0x1,0x370(%rbp)
	addq $0x370,%rbp
	leaq (rev_336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_469155:
L_218587:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_338
.p2align 0x4
.long 0x33BD
L_218717:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218718
L_218728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218729
.p2align 0x4
.long 0x33BF
L_218729:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218718:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218719:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC0(%rbp)
	jo L_217268
L_218720:
	cmpq $0x1,%r14
	je L_469159
L_218721:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218719
.p2align 0x4
L_469159:
L_218722:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218723
L_218726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218727
.p2align 0x4
.long 0x33BE
L_218727:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218723:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469160
L_218724:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x148(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218609
.p2align 0x4
L_469160:
L_218725:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218609
.p2align 0x4
.long 0x33A2
L_218612:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218613
L_218705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218706
.p2align 0x4
.long 0x33BA
L_218706:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218613:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_218615:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x340A
L_219045:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219046
L_219067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219068
.p2align 0x4
.long 0x33B8
L_219068:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219046:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xE0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE90)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_217120
L_219048:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33FC
L_218986:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33B5
L_218959:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218960
L_218970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218971
.p2align 0x4
.long 0x33B7
L_218971:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218960:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218961:
	addl 0x0(%r15),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_217268
L_218962:
	cmpq $0x1,%r14
	je L_469168
L_218963:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218961
.p2align 0x4
L_469168:
L_218964:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218965
L_218968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218969
.p2align 0x4
.long 0x33F8
L_218969:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218965:
	movl 0xB0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469169
L_218966:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218923
.p2align 0x4
L_469169:
L_218967:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218923
.p2align 0x4
.long 0x33F1
L_218926:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218927
L_218947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218948
.p2align 0x4
.long 0x33F6
L_218948:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218927:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_218929:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33D4
L_218812:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218813
L_218898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218899
.p2align 0x4
.long 0x33E9
L_218899:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218813:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33C3
L_218741:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218742
L_218795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218796
.p2align 0x4
.long 0x33D1
L_218796:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218742:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD3A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_469176
L_218773:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469176:
L_218743:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3365
L_218651:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x3378
L_218411:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0x390(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218412
L_218513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218514
.p2align 0x4
.long 0x338C
L_218514:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218412:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x390(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x398(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x3378
L_218417:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218418
.p2align 0x4
.long 0x337A
L_218418:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x108(%rbp)
	movq $0x1,0x110(%rbp)
	movq $0x0,0x118(%rbp)
.p2align 0x4,,0x7
loop_2417:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469195
.p2align 0x4,,0x7
L_218419:
	movq 0x118(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_469194
L_218460:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x100(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x128(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x148(%rbp)
	movq 0x18(%r13),%r9
	movq %r9,0x150(%rbp)
	movq 0x40(%rbp),%r15
	cmpq %r15,0x10(%r10)
	je L_469190
L_218462:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_218464
L_218468:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF31,%r15
	je addLeave_1
	cmpq $0xF32,%r15
	je addLeave_1
	cmpq $0xF35,%r15
	je L_469180
.p2align 0x4,,0x7
L_218464:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469179
.p2align 0x4,,0x7
L_218465:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x118(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x118(%rbp)
	jmp loop_2417
.p2align 0x4
L_469179:
L_218466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218467
.p2align 0x4
.long 0x3384
L_218467:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218465
.p2align 0x4
L_469180:
L_218481:
	movq 0x120(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
.p2align 0x4,,0x7
L_218482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469188
.p2align 0x4,,0x7
L_218483:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_469184
	cmpq $0x2,%r15
	je L_469183
L_218484:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_469182
	cmpq $0x2,%r13
	je L_469181
L_218485:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_218464
.p2align 0x4
L_469181:
L_218487:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x2,0x8(%r15)
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x120(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_218464
.p2align 0x4
L_469182:
L_218486:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_218464
.p2align 0x4
L_469183:
L_218489:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_218464
.p2align 0x4
L_469184:
L_218488:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
addLeave_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218470
L_218478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218479
.p2align 0x4
.long 0x3384
L_218479:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218470:
	movq $0x1C85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x348(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218471
.p2align 0x4
.long 0x3385
L_218471:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x170(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2419:
	cmpq $0x1,%r15
	jnl L_469185
L_218477:
	movq 0x170(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2419
.p2align 0x4
L_469185:
L_218472:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218473
L_218475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218476
.p2align 0x4
.long 0x3387
L_218476:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218473:
	movq 0x170(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_469188:
L_218490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218491
.p2align 0x4
.long 0x3388
L_218491:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218483
.p2align 0x4
L_469190:
L_218492:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218493
L_218507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218508
.p2align 0x4
.long 0x3384
L_218508:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218493:
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq $0x1C87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x348(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218494
.p2align 0x4
.long 0x3389
L_218494:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x128(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2420:
	cmpq $0x1,%r15
	jnl L_469191
L_218506:
	movq 0x128(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x170(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2420
.p2align 0x4
L_469191:
L_218495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218496
L_218504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218505
.p2align 0x4
.long 0x3385
L_218505:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218496:
	movq 0x128(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_469194:
L_218420:
	movq 0x108(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x347F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xF8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x388(%rbp)
	movq %r14,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_469195:
L_218509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218510
.p2align 0x4
.long 0x338A
L_218510:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218419
.p2align 0x4
.long 0x3370
L_218385:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218386
L_218407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218408
.p2align 0x4
.long 0x3377
L_218408:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218386:
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x38,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je L_469196
L_218387:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x48(%rbp)
L_218388:
	movq %r15,0x370(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x378(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x398(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3A0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x3A8(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movb 0x320(%rbp),%r15b
	movb %r15b,0x3B8(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x3C0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x3F0(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x400(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x408(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x410(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x418(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x440(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x450(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x458(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x460(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x478(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x480(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x488(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x490(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x498(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x4B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x4C0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x4C8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x4D0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x4D8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movb 0x240(%rbp),%r15b
	movb %r15b,0x528(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x370,%rbp
	leaq (L_218389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateFunction_0
.p2align 0x4
L_469196:
L_218406:
	movq $0x1,%r15
L_218393:
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x28,%r12
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	cmpq $0x1,%r15
	je L_469197
L_218394:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
L_218395:
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_218396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_469197:
L_218400:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq $0x1,0x370(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_218401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x3396
rev_336:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq $0x1,%r15
	je L_469201
L_218574:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x368(%rbp)
	movq %r14,0x370(%rbp)
	movq $0x1,0x378(%rbp)
.p2align 0x4,,0x7
L_218575:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469200
.p2align 0x4,,0x7
L_218576:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x370(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x378(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x368(%rbp),%r14
	cmpq $0x1,%r14
	je L_469199
L_218577:
	movq %r15,0x378(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x368(%rbp)
	movq %r15,0x370(%rbp)
	jmp L_218575
.p2align 0x4
L_469199:
L_218579:
	movq %r15,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_218580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_469200:
L_218584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218585
.p2align 0x4
.long 0x339B
L_218585:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218576
.p2align 0x4
L_469201:
L_218586:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_218579
.p2align 0x4
.long 0x33A3
L_218616:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x340B
L_219049:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33FC
L_218987:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218988
L_219039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219040
.p2align 0x4
.long 0x3408
L_219040:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218988:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33F2
L_218930:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33D5
L_218814:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218815
L_218896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218897
.p2align 0x4
.long 0x33E8
L_218897:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218815:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_217120
L_218817:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33C4
L_218774:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469205
L_218775:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_218776:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469205:
L_218794:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_218776
.p2align 0x4
.long 0x33C4
L_218744:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218745
L_218771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218772
.p2align 0x4
.long 0x33CD
L_218772:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218745:
	movq 0x50(%rbp),%r15
L_218746:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x3365
L_218652:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218653
L_218659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218660
.p2align 0x4
.long 0x33AC
L_218660:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218653:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x3378
L_218413:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x388(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3386
L_218474:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_218464
.p2align 0x4
.long 0x3386
L_218497:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x128(%rbp)
L_218498:
	movq 0x120(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_218464
L_218500:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je addLeave_1
	cmpq $0xF32,%r14
	je addLeave_1
	cmpq $0xF35,%r14
	je L_469208
	jmp L_218464
.p2align 0x4
L_469208:
L_218503:
	movq 0x120(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	jmp L_218482
.p2align 0x4
.long 0x337B
L_218421:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218422
L_218458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218459
.p2align 0x4
.long 0x3383
L_218459:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218422:
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_469217
L_218423:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218424:
	incl %ecx
	jo L_217268
L_218425:
	cmpq $0x1,%r15
	je L_469210
L_218426:
	movq 0x8(%r15),%r15
	jmp L_218424
.p2align 0x4
L_469210:
L_218427:
L_218428:
	movslq %ecx,%rdx
	movq %rdx,0xF8(%rbp)
	testq %rdx,%rdx
	jz L_469215
L_218429:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217218
L_218430:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218431
.p2align 0x4
.long 0x337C
L_218431:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x100(%rbp)
L_218432:
	movq 0x110(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2418:
	cmpq 0xF8(%rbp),%r15
	jnl L_469212
L_218452:
	cmpq $0x1,%r14
	je L_217715
L_218453:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x100(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2418
.p2align 0x4
L_469212:
L_218433:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218434
L_218450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218451
.p2align 0x4
.long 0x3382
L_218451:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218434:
	movq 0x100(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_469215:
L_218456:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x100(%rbp)
	jmp L_218432
.p2align 0x4
L_469217:
L_218457:
	xorl %ecx,%ecx
	jmp L_218428
.p2align 0x4
.long 0x3371
L_218389:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218390
L_218404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_218405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218405
.p2align 0x4
.long 0x3376
L_218405:
	addq $0xFFFFFFFFFFFFFC90,%rbp
L_218390:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_469219
L_218391:
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_218388
.p2align 0x4
L_469219:
L_218392:
	movq %r14,%r15
	jmp L_218393
.p2align 0x4
.long 0x3372
L_218396:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq $0x2,0x370(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_218397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3374
L_218401:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq $0x2,0x370(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_218402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3396
L_218580:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218581
L_218582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_218583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218583
.p2align 0x4
.long 0x339A
L_218583:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_218581:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x33A3
L_218617:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218618
L_218703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218704
.p2align 0x4
.long 0x33B9
L_218704:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218618:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10280)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x340B
L_219050:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219051
L_219065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219066
.p2align 0x4
.long 0x340F
L_219066:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219051:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33D8
L_218989:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218990
L_219037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219038
.p2align 0x4
.long 0x33E5
L_219038:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218990:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217120
L_218992:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x33F2
L_218931:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218932
L_218945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218946
.p2align 0x4
.long 0x33F5
L_218946:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218932:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10280)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33D6
L_218818:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33CE
L_218777:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218778
L_218792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218793
.p2align 0x4
.long 0x33D0
L_218793:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218778:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33C5
L_218747:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218748
L_218769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218770
.p2align 0x4
.long 0x33CC
L_218770:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218748:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x3365
L_218654:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3379
L_218414:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218416
L_218511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218512
.p2align 0x4
.long 0x338B
L_218512:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_218416
.p2align 0x4
.long 0x337D
L_218435:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218436
L_218448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218449
.p2align 0x4
.long 0x3377
L_218449:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218436:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x108(%rbp)
	cmpq $0x1,%r13
	je L_469230
L_218437:
	movq %r15,0x388(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_54
.p2align 0x4
L_469230:
L_218447:
	movq 0x100(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_218384
.p2align 0x4
.long 0x3373
L_218397:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_218400
L_218398:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_218395
.p2align 0x4
.long 0x3375
L_218402:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x33A4
L_218619:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218620
L_218701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218702
.p2align 0x4
.long 0x33B8
L_218702:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218620:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10288)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_469233
L_218679:
	shrq $0x1,%r14
	movl %r14d,0xB0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469233:
L_218621:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x340C
L_219052:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219053
L_219063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219064
.p2align 0x4
.long 0x340E
L_219064:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219053:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_219054:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_219055:
	cmpq $0x1,%r14
	je L_469235
L_219056:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_219054
.p2align 0x4
L_469235:
L_219057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219058
L_219061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219062
.p2align 0x4
.long 0x340D
L_219062:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219058:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469236
L_219059:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
L_219011:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
L_469236:
L_219060:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_219011
.p2align 0x4
.long 0x33FD
L_218993:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x33F3
L_218933:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218934
L_218943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218944
.p2align 0x4
.long 0x33F4
L_218944:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218934:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218935:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218936:
	cmpq $0x1,%r14
	je L_469240
L_218937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218935
.p2align 0x4
L_469240:
L_218938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218939
L_218941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218942
.p2align 0x4
.long 0x33AF
L_218942:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218939:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_218666
L_218940:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
.p2align 0x4
.long 0x33D6
L_218819:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218820
L_218894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218895
.p2align 0x4
.long 0x33E7
L_218895:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218820:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33CE
L_218779:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218780
L_218790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218791
.p2align 0x4
.long 0x33D0
L_218791:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218780:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218781:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218782:
	cmpq $0x1,%r14
	je L_469246
L_218783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218781
.p2align 0x4
L_469246:
L_218784:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218785
L_218788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218789
.p2align 0x4
.long 0x33CF
L_218789:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218785:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469247
L_218786:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218746
.p2align 0x4
L_469247:
L_218787:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218746
.p2align 0x4
.long 0x33C6
L_218749:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218750
L_218767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218768
.p2align 0x4
.long 0x33CB
L_218768:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218750:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
.long 0x3365
L_218655:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218656
L_218657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218658
.p2align 0x4
.long 0x33AB
L_218658:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218656:
	incl 0x24(%rbp)
	jmp loop_2415
.p2align 0x4
.long 0x337E
L_218438:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x390(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218439
L_218445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218446
.p2align 0x4
.long 0x3381
L_218446:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218439:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x390(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x398(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_218440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x33A5
L_218680:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469254
L_218681:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_218682:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469254:
L_218700:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_218682
.p2align 0x4
.long 0x33A5
L_218622:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218623
L_218677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218678
.p2align 0x4
.long 0x33B4
L_218678:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218623:
	movq 0xB0(%rbp),%r15
L_218624:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x3401
L_219012:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219013
L_219022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219023
.p2align 0x4
.long 0x3402
L_219023:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219013:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_219014:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_219015:
	cmpq $0x1,%r14
	je L_469256
L_219016:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_219014
.p2align 0x4
L_469256:
L_219017:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219018
L_219020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219021
.p2align 0x4
.long 0x33AF
L_219021:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219018:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_218666
L_219019:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
.p2align 0x4
.long 0x33FD
L_218994:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218995
L_219035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219036
.p2align 0x4
.long 0x3407
L_219036:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218995:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33D7
L_218821:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218822
L_218892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218893
.p2align 0x4
.long 0x33E6
L_218893:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218822:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x3C8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x33C7
L_218751:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218752
L_218765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218766
.p2align 0x4
.long 0x33CA
L_218766:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218752:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x337E
L_218440:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x388(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_218441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x33B5
L_218683:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218684
L_218698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218699
.p2align 0x4
.long 0x33B7
L_218699:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218684:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33A6
L_218625:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218626
L_218675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218676
.p2align 0x4
.long 0x33B3
L_218676:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218626:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33FE
L_218996:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218997
L_219033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219034
.p2align 0x4
.long 0x3406
L_219034:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218997:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x3C8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x33D8
L_218823:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218824
L_218890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218891
.p2align 0x4
.long 0x33E5
L_218891:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218824:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x33C8
L_218753:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218754
L_218763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218764
.p2align 0x4
.long 0x33C9
L_218764:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218754:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218755:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218756:
	cmpq $0x1,%r14
	je L_469268
L_218757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218755
.p2align 0x4
L_469268:
L_218758:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218759
L_218761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218762
.p2align 0x4
.long 0x33AF
L_218762:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218759:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_218666
L_218760:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
.p2align 0x4
.long 0x337F
L_218441:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218442
L_218443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_218444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218444
.p2align 0x4
.long 0x3380
L_218444:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_218442:
	movq 0xF8(%rbp),%r14
	movq 0x100(%rbp),%r15
	jmp L_218384
.p2align 0x4
.long 0x33B5
L_218685:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218686
L_218696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218697
.p2align 0x4
.long 0x33B7
L_218697:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218686:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218687:
	addl 0x0(%r15),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_217268
L_218688:
	cmpq $0x1,%r14
	je L_469274
L_218689:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218687
.p2align 0x4
L_469274:
L_218690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218691
L_218694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218695
.p2align 0x4
.long 0x33B6
L_218695:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218691:
	movl 0xB0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469275
L_218692:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218624
.p2align 0x4
L_469275:
L_218693:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218624
.p2align 0x4
.long 0x33A7
L_218627:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218628
L_218673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218674
.p2align 0x4
.long 0x33B2
L_218674:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218628:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
.long 0x33FF
L_218998:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218999
L_219031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219032
.p2align 0x4
.long 0x3405
L_219032:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218999:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x33D8
L_218825:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33A8
L_218629:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218630
L_218671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218672
.p2align 0x4
.long 0x33B1
L_218672:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218630:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33FF
L_219000:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33D8
L_218826:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218827
L_218888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218889
.p2align 0x4
.long 0x33E5
L_218889:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218827:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE78)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33A9
L_218631:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218632
L_218669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218670
.p2align 0x4
.long 0x33B0
L_218670:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218632:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218633:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218634:
	cmpq $0x1,%r14
	je L_469283
L_218635:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218633
.p2align 0x4
L_469283:
L_218636:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218637
L_218667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218668
.p2align 0x4
.long 0x33AF
L_218668:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218637:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_218666
L_218638:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
.p2align 0x4
.long 0x33FF
L_219001:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219002
L_219029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219030
.p2align 0x4
.long 0x3405
L_219030:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219002:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE78)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_219003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33D9
L_218828:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218829
L_218886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218887
.p2align 0x4
.long 0x33E4
L_218887:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218829:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD3A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x3400
L_219003:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219004
L_219027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219028
.p2align 0x4
.long 0x3404
L_219028:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219004:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_219005:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_219006:
	cmpq $0x1,%r14
	je L_469290
L_219007:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_219005
.p2align 0x4
L_469290:
L_219008:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219009
L_219025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_219026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219026
.p2align 0x4
.long 0x3403
L_219026:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_219009:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469291
L_219010:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219011
.p2align 0x4
L_469291:
L_219024:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_219011
.p2align 0x4
.long 0x33DA
L_218830:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218831
L_218884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218885
.p2align 0x4
.long 0x33CC
L_218885:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218831:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xFF98)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_469295
L_218862:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469295:
L_218832:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33DB
L_218863:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469297
L_218864:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_218865:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469297:
L_218883:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_218865
.p2align 0x4
.long 0x33DB
L_218833:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218834
L_218860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218861
.p2align 0x4
.long 0x33E2
L_218861:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218834:
	movq 0x50(%rbp),%r15
L_218835:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x33CE
L_218866:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218867
L_218881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218882
.p2align 0x4
.long 0x33D0
L_218882:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218867:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33DC
L_218836:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218837
L_218858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218859
.p2align 0x4
.long 0x33E1
L_218859:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218837:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33CE
L_218868:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218869
L_218879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218880
.p2align 0x4
.long 0x33D0
L_218880:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218869:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218870:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218871:
	cmpq $0x1,%r14
	je L_469301
L_218872:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218870
.p2align 0x4
L_469301:
L_218873:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218874
L_218877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218878
.p2align 0x4
.long 0x33E3
L_218878:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218874:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469302
L_218875:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218835
.p2align 0x4
L_469302:
L_218876:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218835
.p2align 0x4
.long 0x33DD
L_218838:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218839
L_218856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218857
.p2align 0x4
.long 0x33E0
L_218857:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218839:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
.long 0x33DE
L_218840:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218841
L_218854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218855
.p2align 0x4
.long 0x33DF
L_218855:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218841:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_218842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x33C8
L_218842:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218843
L_218852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218853
.p2align 0x4
.long 0x33C9
L_218853:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218843:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218844:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_217268
L_218845:
	cmpq $0x1,%r14
	je L_469308
L_218846:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218844
.p2align 0x4
L_469308:
L_218847:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218848
L_218850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_218851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218851
.p2align 0x4
.long 0x33AF
L_218851:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_218848:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_218666
L_218849:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218639
