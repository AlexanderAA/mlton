/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:19:31 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_130
.hidden get_130
get_130:
L_334293:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334294
L_334347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334348
.p2align 0x4
.long 0x45C
L_334348:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_334294:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_515688
L_334296:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_515687
L_334297:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_334299:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334300
L_334339:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD77,%r13
	jne L_334300
L_334340:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x10(%rbp)
	je L_515682
L_334300:
	incl %ecx
	jo L_515681
L_334302:
	cmpq $0x1,%r14
	je L_515679
L_334303:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334299
.p2align 0x4
L_515679:
L_334304:
L_334305:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515680
L_334307:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1053
L_334338:
	movl %ecx,0x0(%r15)
x_1053:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_334309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_515680:
L_334306:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515681:
L_334301:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515682:
L_334342:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334306
L_334343:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_515683
L_334345:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515683:
L_334344:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515687:
L_334346:
	xorl %ecx,%ecx
	jmp L_334305
.p2align 0x4
L_515688:
L_334295:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_334309:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_334310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_334310:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_334311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_334311:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF178)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_334312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_334312:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_334313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_334313:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334314
L_334336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334337
.p2align 0x4
.long 0x4AF
L_334337:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_334314:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_334315:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_334301
L_334316:
	cmpq $0x1,%r14
	je L_515690
L_334317:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334315
.p2align 0x4
L_515690:
L_334318:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334319
L_334334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_334335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334335
.p2align 0x4
.long 0x4E7
L_334335:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_334319:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_515691
L_334320:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_471:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_515691:
L_334333:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_471
.p2align 0x4
.long 0x1
rev_474:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_515697
L_334321:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_334322:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515696
.p2align 0x4,,0x7
L_334323:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_515695
L_334324:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_334322
.p2align 0x4
L_515695:
L_334326:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_515696:
L_334330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334331
.p2align 0x4
.long 0x45C
L_334331:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334323
.p2align 0x4
L_515697:
L_334332:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_334326
.p2align 0x4
.long 0x1
bug_673:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334327
L_334328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_334329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334329
.p2align 0x4
.long 0x452
L_334329:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_334327:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl setLiveOperands_0
.hidden setLiveOperands_0
setLiveOperands_0:
L_334349:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_334431
L_334350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515731
L_334351:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_515730
L_334352:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_334353:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515729
.p2align 0x4,,0x7
L_334354:
L_334355:
	movq 0x28(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_334356
L_334388:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E8,%r15
	jne L_515726
L_334389:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%r10),%r11
	movq 0x28(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_334422
L_334390:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_334391:
	movl 0x0(%r15),%r11d
	movl %r11d,0x28(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x2C(%rbp)
	cmpl %r10d,%r11d
	jnl L_515714
L_334418:
	cmpq $0x1,%r13
	je L_515699
L_334419:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_334391
.p2align 0x4
L_515699:
L_334420:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515713
.p2align 0x4,,0x7
L_334422:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515700
L_334423:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334353
.p2align 0x4
L_515700:
L_334424:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
L_334359:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515712
L_334361:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_515711
L_334362:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334364:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_515710
L_334379:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7E,%r11
	jne L_515709
L_334380:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_515706
L_334365:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_515705
L_334367:
	cmpq $0x1,%r15
	je L_515701
L_334368:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_334364
.p2align 0x4
L_515701:
L_334369:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334370
L_334377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_334378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334378
.p2align 0x4
.long 0x4F3
L_334378:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_334370:
	movl 0x20(%rbp),%ecx
L_334371:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515703
L_334373:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334375
L_334376:
	movl %ecx,0x0(%r15)
L_334375:
	movq $0x1AFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515703:
L_334372:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515705:
L_334366:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515706:
L_334382:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334372
L_334383:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515707
L_334386:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_334385:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515707:
L_334384:
	movq %r13,%r15
	jmp L_334385
.p2align 0x4
L_515709:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_334365
.p2align 0x4
L_515710:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_334365
.p2align 0x4
L_515711:
L_334387:
	xorl %ecx,%ecx
	jmp L_334371
.p2align 0x4
L_515712:
L_334360:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515713:
L_334425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334426
.p2align 0x4
.long 0xA2B
L_334426:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334422
.p2align 0x4
L_515714:
L_334392:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515724
.p2align 0x4,,0x7
L_334393:
	movl 0x28(%rbp),%r13d
	cmpl %r13d,0x2C(%rbp)
	jl L_515722
L_334394:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_334401
L_334395:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_334396:
	movq 0x38(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_515718
L_334397:
	cmpq $0x1,%r14
	je L_515715
L_334398:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334396
.p2align 0x4
L_515715:
L_334399:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515717
.p2align 0x4,,0x7
L_334401:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_515716
L_334402:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_334353
.p2align 0x4
L_515716:
L_334403:
	movq %r15,0x10(%rbp)
	jmp L_334359
.p2align 0x4
L_515717:
L_334404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334405
.p2align 0x4
.long 0x736
L_334405:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334401
.p2align 0x4
L_515718:
L_334406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515720
.p2align 0x4,,0x7
L_334407:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515719
L_334408:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334353
.p2align 0x4
L_515719:
L_334409:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334359
.p2align 0x4
L_515720:
L_334410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334411
.p2align 0x4
.long 0xA2B
L_334411:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334407
.p2align 0x4
L_515722:
L_334413:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515723
L_334414:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334353
.p2align 0x4
L_515723:
L_334415:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334359
.p2align 0x4
L_515724:
L_334416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334417
.p2align 0x4
.long 0x736
L_334417:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334393
.p2align 0x4
L_515726:
L_334356:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515727
L_334357:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334353
.p2align 0x4
L_515727:
L_334358:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334359
.p2align 0x4
L_515729:
L_334428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334429
.p2align 0x4
.long 0x4F1
L_334429:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334354
.p2align 0x4
L_515730:
L_334430:
	movq $0x1,0x10(%rbp)
	jmp L_334359
.p2align 0x4
L_515731:
L_334431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334432
.p2align 0x4
.long 0x4AF
L_334432:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334351
.text
.p2align 0x4
.globl mayAlias_1
.hidden mayAlias_1
mayAlias_1:
L_334433:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334434
L_334555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_334556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334556
.p2align 0x4
.long 0x6FF
L_334556:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_334434:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x28(%r13),%r14
	movq 0x28(%r15),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r14)
	jne L_334436
L_334437:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r10
	movq %r10,%r11
	movq 0x18(%r15),%r9
	movq 0x20(%r15),%r10
	cmpq $0x1,%r10
	je L_515766
L_334438:
	cmpq $0x1,%r11
	jne L_334439
L_334440:
	cmpq $0x1,%r14
	je L_515760
L_334441:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r8
	movq 0x20(%r13),%rsp
L_334442:
	movq %rsp,%r13
	andq $0x3,%r13
	jnz L_334439
L_334443:
	cmpq $0x1,%r11
	jne L_334439
L_334445:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334439
L_334446:
	movq 0x8(%rsp),%r13
	cmpq %r13,0x8(%r10)
	je L_515756
L_334447:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_334439
L_334449:
	movq %r8,%r15
	movq %r9,%r11
mayAliasImmIndex_1:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	cmpb $0x1,%dl
	je L_334520
	cmpb $0x2,%dl
	je L_515753
	cmpb $0x3,%dl
	je L_515752
	cmpb $0x6,%dl
	je L_515751
	cmpb $0x7,%dl
	je L_515750
L_334451:
	movl $0x4,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
L_334452:
	movslq %ecx,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x38(%rbp)
	cmpb $0x1,%dl
	je L_334512
	cmpb $0x2,%dl
	je L_515748
	cmpb $0x3,%dl
	je L_515747
	cmpb $0x6,%dl
	je L_515746
	cmpb $0x7,%dl
	je L_515745
L_334454:
	movl $0x4,%ecx
L_334455:
	movslq %ecx,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r11
	je L_515744
L_334456:
	movq %r11,%r13
L_334457:
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x10E3,%r13
	je L_515742
	cmpq $0x10E4,%r13
	je L_515740
L_334458:
	cmpq $0x1,%r15
	je L_515739
L_334459:
	movq $0x1,%r14
L_334460:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_515737
	cmpq $0x10E4,%r15
	je L_515735
L_334462:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_334439
L_334463:
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
L_334465:
	movq 0x48(%rbp),%r14
	andq $0x3,%r14
	jnz L_515733
L_334466:
	movq %r15,0x58(%rbp)
	leaq L_334477(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_515733:
L_334439:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515735:
L_334500:
	movq 0x0(%r13),%r15
L_334501:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334439
L_334502:
	movq %r15,0x48(%rbp)
	movq %r14,%r15
	jmp L_334465
.p2align 0x4
L_515737:
L_334498:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_334439
L_334499:
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
	jmp L_334465
.p2align 0x4
L_515739:
L_334503:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334460
.p2align 0x4
L_515740:
L_334507:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_515741
L_334508:
	movq %r13,%r14
	jmp L_334460
.p2align 0x4
L_515741:
L_334509:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334460
.p2align 0x4
L_515742:
L_334504:
	cmpq $0x1,%r15
	je L_515743
L_334505:
	movq $0x1,%r14
	jmp L_334460
.p2align 0x4
L_515743:
L_334506:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334460
.p2align 0x4
L_515744:
L_334510:
	movq %r14,%r13
	jmp L_334457
.p2align 0x4
L_515745:
L_334518:
	movl $0x1,%ecx
	jmp L_334455
.p2align 0x4
L_515746:
L_334512:
	movl $0x2,%ecx
	jmp L_334455
.p2align 0x4
L_515747:
L_334514:
	movl $0x8,%ecx
	jmp L_334455
.p2align 0x4
L_515748:
L_334513:
	movl $0xA,%ecx
	jmp L_334455
.p2align 0x4
L_515750:
L_334526:
	movl $0x1,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334452
.p2align 0x4
L_515751:
L_334520:
	movl $0x2,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334452
.p2align 0x4
L_515752:
L_334522:
	movl $0x8,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334452
.p2align 0x4
L_515753:
L_334521:
	movl $0xA,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334452
.p2align 0x4
L_515756:
L_334436:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515760:
L_334528:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x20(%r13),%r8
L_334529:
	movq %r8,%r13
	andq $0x3,%r13
	jnz L_334439
L_334530:
	cmpq $0x1,%r14
	jne L_334439
L_334531:
	cmpq $0x1,%r15
	jne L_334439
L_334532:
	movq 0x8(%r10),%r14
	cmpq %r14,0x8(%r8)
	jne L_334436
L_334534:
	movq %r11,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
L_515766:
L_334536:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_334439
L_334537:
	cmpq $0x1,%r14
	je L_515772
L_334538:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r8
	cmpq $0x1,0x20(%r13)
	jne L_334439
L_334540:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_334439
L_334542:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334439
L_334543:
	movq 0x10(%r10),%r13
	cmpq %r13,0x10(%r11)
	jne L_334439
L_334545:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_334439
L_334547:
	movq %r8,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
L_515772:
L_334548:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x18(%r13),%r10
	cmpq $0x1,0x20(%r13)
	jne L_334439
L_334550:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334439
L_334551:
	cmpq $0x1,%r15
	jne L_334439
L_334552:
	movq 0x10(%r11),%r13
	cmpq %r13,0x10(%r14)
	jne L_334439
L_334554:
	movq %r10,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
.long 0x213F
L_334467:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_334468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x48B
L_334477:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_334436
L_334478:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_334479
L_334480:
L_334479:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_334468:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334469
L_334495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334496
.p2align 0x4
.long 0xD1B
L_334496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334469:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	movq 0x50(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_515783
L_334470:
	cmpq %r15,%r13
	jl L_515782
L_334472:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_334473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_515782:
L_334483:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_334484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_515783:
L_334488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334489
L_334493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334494
.p2align 0x4
.long 0xD1B
L_334494:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rsi
	movq 0x50(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334490:
	cmpl $0x0,%eax
	jl L_334483
	jmp L_334472
.p2align 0x4
.long 0x61C
L_334473:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_515787
L_334474:
	cmpq %r15,%r14
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515787:
L_334475:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334476:
	cmpl $0x0,%eax
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51B
L_334484:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_515788
L_334485:
	cmpq %r15,%r14
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515788:
L_334486:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334487:
	cmpl $0x0,%eax
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_4384
.hidden loop_4384
loop_4384:
L_334557:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_334619
L_334558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515808
L_334559:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_515807
L_334560:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12EF,%r14
	je L_515806
	cmpq $0x12F0,%r14
	je L_515805
	cmpq $0x12F1,%r14
	je L_515804
	cmpq $0x12F2,%r14
	je L_515803
L_334561:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
.p2align 0x4,,0x7
L_334562:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515802
.p2align 0x4,,0x7
L_334563:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515801
L_334564:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x12EF,%r13
	je L_515800
	cmpq $0x12F0,%r13
	je L_515794
	cmpq $0x12F1,%r13
	je L_515790
	cmpq $0x12F2,%r13
	je L_515789
L_334565:
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_334562
.p2align 0x4
L_515789:
L_334598:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_334599:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_334600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4384
.p2align 0x4
L_515790:
L_334584:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
L_334585:
	cmpq $0x1,%r15
	je L_515793
L_334586:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_334587:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515792
.p2align 0x4,,0x7
L_334588:
	movq $0x25E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515791
L_334589:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_334587
.p2align 0x4
L_515791:
L_334590:
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%rbp)
	xchgq %r13,%r14
L_334591:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_334592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4384
.p2align 0x4
L_515792:
L_334595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334596
.p2align 0x4
.long 0x4AF
L_334596:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334588
.p2align 0x4
L_515793:
L_334597:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515794:
L_334568:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
L_334569:
	cmpq $0x1,%r15
	je L_515799
L_334570:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_334571:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515798
.p2align 0x4,,0x7
L_334572:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515795
L_334573:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_334571
.p2align 0x4
L_515795:
L_334574:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
L_334575:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515797
.p2align 0x4,,0x7
L_334576:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_515796
L_334577:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_334575
.p2align 0x4
L_515796:
L_334578:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515797:
L_334579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334580
.p2align 0x4
.long 0x45C
L_334580:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334576
.p2align 0x4
L_515798:
L_334581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334582
.p2align 0x4
.long 0x4AF
L_334582:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334572
.p2align 0x4
L_515799:
L_334583:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515800:
L_334566:
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r9,%r14
	movq %r15,%r10
	movq %r8,%r15
L_334567:
	movq $0x1163,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515801:
L_334611:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515802:
L_334612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334613
.p2align 0x4
.long 0x45C
L_334613:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334563
.p2align 0x4
L_515803:
L_334617:
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r15
	jmp L_334599
.p2align 0x4
L_515804:
L_334616:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_334585
.p2align 0x4
L_515805:
L_334615:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_334569
.p2align 0x4
L_515806:
L_334614:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r9
	movq 0x0(%rbp),%r10
	movq %r9,%r15
	jmp L_334567
.p2align 0x4
L_515807:
L_334618:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515808:
L_334619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_334620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334620
.p2align 0x4
.long 0x460
L_334620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_334559
.p2align 0x4
.long 0x4B0
L_334600:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334601
L_334609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_334610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334610
.p2align 0x4
.long 0x460
L_334610:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_334601:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_515814
L_334602:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12EF,%r14
	je L_515813
	cmpq $0x12F0,%r14
	je L_515812
	cmpq $0x12F1,%r14
	je L_515811
	cmpq $0x12F2,%r14
	je L_515810
L_334603:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_334562
.p2align 0x4
L_515810:
L_334607:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_334599
.p2align 0x4
L_515811:
L_334606:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_334585
.p2align 0x4
L_515812:
L_334605:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_334569
.p2align 0x4
L_515813:
L_334604:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r9
	movq 0x8(%rbp),%r10
	movq %r9,%r15
	jmp L_334567
.p2align 0x4
L_515814:
L_334608:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_334592:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_515816
L_334593:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_334591
.p2align 0x4
L_515816:
L_334594:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplify_2
.hidden simplify_2
simplify_2:
L_334621:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334622
L_334799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334800
.p2align 0x4
.long 0x96B
L_334800:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_334622:
	movq 0x28(%rbp),%r15
	movq 0x118(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0x150(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x158(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x168(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x170(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x0,%r13b
	je L_334775
	cmpb $0x1,%r13b
	je L_515817
L_334623:
	movq 0x8(%rbp),%r14
	movq %r14,0x158(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_334624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
L_515817:
L_334775:
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_334776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48C6
L_334624:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334626
L_334772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334773
.p2align 0x4
.long 0x48D9
L_334773:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334626:
	movq 0x70(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_515841
L_334627:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_515838
L_334628:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_334629:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515837
	cmpq $0x1131,%r15
	je L_515836
	cmpq $0x1132,%r15
	je L_515835
	cmpq $0x1133,%r15
	je L_334632
L_334630:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movl 0x14(%r13),%r11d
	testl %r11d,%r11d
	jz L_334632
get_9:
	movq 0x10(%r15),%r13
	movq %r13,0x150(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515832
L_334658:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_515831
L_334659:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334661:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334662
L_334679:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_334662
L_334680:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x10(%rbp)
	je L_515826
L_334662:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_515825
L_334664:
	cmpq $0x1,%r15
	je L_515820
L_334665:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334661
.p2align 0x4
L_515820:
L_334666:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334667
L_334677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_334678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334678
.p2align 0x4
.long 0x48CB
L_334678:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_334667:
	movl 0x4(%rbp),%ecx
L_334668:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515823
L_334670:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334672
L_334676:
	movl %ecx,0x0(%r15)
L_334672:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1080)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x150(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_334673:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jz L_334632
L_334675:
	movq $0x0,0x0(%r15)
L_334632:
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (loop_3620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515823:
L_334669:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515825:
L_334663:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515826:
L_334682:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334669
L_334683:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515827
L_334685:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_334673
.p2align 0x4
L_515827:
L_334684:
	movq %r13,%r15
	jmp L_334673
.p2align 0x4
L_515831:
L_334686:
	xorl %ecx,%ecx
	jmp L_334668
.p2align 0x4
L_515832:
L_334657:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515835:
L_334689:
	movq 0x0(%r14),%r15
	jmp get_9
.p2align 0x4
L_515836:
L_334688:
	movq 0x8(%r14),%r15
	jmp get_9
.p2align 0x4
L_515837:
L_334687:
	movq 0x8(%r14),%r15
	jmp get_9
.p2align 0x4
L_515838:
L_334643:
	movl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_515840
	cmpl $0x1,%r14d
	je L_515839
L_334644:
	movq 0x20(%rbp),%r15
loop_3621:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x228(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x230(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x158,%rbp
	leaq (L_334645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp optimizer_1
.p2align 0x4
L_515839:
L_334649:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x138(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xE8(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0xD8(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0x48,%rbp
	leaq (L_334650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp optimizer_1
.p2align 0x4
L_515840:
L_334648:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515841:
L_334692:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_334693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48DA
L_334776:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x188(%rbp)
	leaq L_334788(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
.long 0x48C7
loop_3620:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334633
L_334654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334655
.p2align 0x4
.long 0x48CA
L_334655:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334633:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_515843
L_334634:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
L_334635:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_334636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_515843:
L_334640:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_334643
L_334641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_334629
.p2align 0x4
.long 0x48C9
L_334645:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x160(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	testl %r14d,%r14d
	jnz loop_3621
L_334646:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x905
L_334650:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48CC
L_334693:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334694
L_334770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_334771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334771
.p2align 0x4
.long 0x48D8
L_334771:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_334694:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_515865
L_334695:
	movq 0x8(%r13),%r14
	movq %r14,0x180(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_334696:
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515864
	cmpq $0x1131,%r15
	je L_515863
	cmpq $0x1132,%r15
	je L_515862
	cmpq $0x1133,%r15
	je L_334699
L_334697:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movl 0x14(%r13),%r11d
	testl %r11d,%r11d
	jz L_334699
get_10:
	movq 0x10(%r15),%r13
	movq %r13,0x190(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515859
L_334736:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_515858
L_334737:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334739:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334740
L_334757:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_334740
L_334758:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x10(%rbp)
	je L_515853
L_334740:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_515852
L_334742:
	cmpq $0x1,%r15
	je L_515847
L_334743:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334739
.p2align 0x4
L_515847:
L_334744:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334745
L_334755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_334756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334756
.p2align 0x4
.long 0x48D7
L_334756:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_334745:
	movl 0x4(%rbp),%ecx
L_334746:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515850
L_334748:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334750
L_334754:
	movl %ecx,0x0(%r15)
L_334750:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1080)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x190(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_334751:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jz L_334699
L_334753:
	movq $0x0,0x0(%r15)
L_334699:
	movq 0x188(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (loop_3622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515850:
L_334747:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,0x40(%rbp)
L_334719:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5668)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_334720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_515852:
L_334741:
	movq $0x3,0x40(%rbp)
	jmp L_334719
.p2align 0x4
L_515853:
L_334760:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334747
L_334761:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515854
L_334763:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_334751
.p2align 0x4
L_515854:
L_334762:
	movq %r13,%r15
	jmp L_334751
.p2align 0x4
L_515858:
L_334764:
	xorl %ecx,%ecx
	jmp L_334746
.p2align 0x4
L_515859:
L_334735:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_334719
.p2align 0x4
L_515862:
L_334767:
	movq 0x0(%r14),%r15
	jmp get_10
.p2align 0x4
L_515863:
L_334766:
	movq 0x8(%r14),%r15
	jmp get_10
.p2align 0x4
L_515864:
L_334765:
	movq 0x8(%r14),%r15
	jmp get_10
.p2align 0x4
L_515865:
L_334710:
	leaq L_334718(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_334711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48DB
L_334777:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_334778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x652
L_334788:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5660)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_334789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48C8
L_334636:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334637
L_334651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334652
.p2align 0x4
.long 0x48CA
L_334652:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334637:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_334640
L_334638:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_334635
.p2align 0x4
.long 0x48CD
loop_3622:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334700
L_334732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334733
.p2align 0x4
.long 0x48D6
L_334733:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334700:
	movq 0x188(%rbp),%r14
	cmpq $0x1,%r14
	je L_515869
L_334701:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x188(%rbp)
L_334702:
	movq %r15,0x198(%rbp)
	leaq L_334718(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_334703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_515869:
L_334707:
	movq 0x180(%rbp),%r14
	cmpq $0x1,%r14
	je L_334710
L_334708:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x180(%rbp)
	jmp L_334696
.p2align 0x4
.long 0x6DB
L_334720:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334721
L_334723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334724
.p2align 0x4
.long 0x9DF
L_334724:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334721:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x0,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48CF
L_334711:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x178(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x652
L_334718:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_334719
.p2align 0x4
.long 0x48D0
L_334778:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x170(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x188(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_334779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48E1
L_334789:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334790
L_334792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_334793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334793
.p2align 0x4
.long 0x48E2
L_334793:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_334790:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48CE
L_334703:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334704
L_334729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334730
.p2align 0x4
.long 0x48D6
L_334730:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334704:
	movq 0x188(%rbp),%r14
	cmpq $0x1,%r14
	je L_334707
L_334705:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x188(%rbp)
	jmp L_334702
.p2align 0x4
.long 0x848
L_334722:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48D0
L_334712:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334713
L_334727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334728
.p2align 0x4
.long 0x48D5
L_334728:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334713:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_334714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48DC
L_334779:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334780
L_334796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_334797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334797
.p2align 0x4
.long 0x48E4
L_334797:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_334780:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x190(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x188(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_334781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x848
L_334791:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48D1
L_334714:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x168(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x150(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x190,%rbp
	leaq (L_334715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48DD
L_334781:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48D2
L_334715:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334716
L_334725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_334726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334726
.p2align 0x4
.long 0x48D4
L_334726:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_334716:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_334717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48DE
L_334782:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334783
L_334794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334795
.p2align 0x4
.long 0x48E3
L_334795:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334783:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_334784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48D3
L_334717:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x150(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_334643
.p2align 0x4
.long 0x48DF
L_334784:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334785
L_334786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_334787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334787
.p2align 0x4
.long 0x48E0
L_334787:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_334785:
	movq 0x158(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_334626
.text
.p2align 0x4
.globl completeLiveInfo_1
.hidden completeLiveInfo_1
completeLiveInfo_1:
L_334801:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335100
L_334802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515892
L_334803:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x703,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	cmpq $0x1,%r14
	je L_515885
L_334804:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_334805:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515884
	cmpq $0x1131,%r15
	je L_515883
	cmpq $0x1132,%r15
	je L_515882
	cmpq $0x1133,%r15
	je L_515881
L_334806:
	movq 0x18(%r14),%r15
	movq %r15,0x48(%rbp)
L_334807:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515881:
L_335098:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334807
.p2align 0x4
L_515882:
L_335097:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334807
.p2align 0x4
L_515883:
L_335096:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334807
.p2align 0x4
L_515884:
L_335095:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334807
.p2align 0x4
L_515885:
L_335099:
	movq $0x1,%r15
L_334824:
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	cmpq $0x1,%r15
	je L_515886
L_334825:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl $0x0,0x38(%rbp)
L_334826:
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_334827:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515886:
L_334884:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_515891
L_334885:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_334886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515890
.p2align 0x4,,0x7
L_334887:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_515887
L_334888:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_334886
.p2align 0x4
L_515887:
L_334890:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
loop_3623:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_515888
L_334891:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_334892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515888:
L_335043:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_515889
L_335044:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
L_335045:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_335046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_515889:
L_335050:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515890:
L_335054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335055
.p2align 0x4
.long 0x63C
L_335055:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_334887
.p2align 0x4
L_515891:
L_335056:
	movq $0x1,%r15
	jmp L_334890
.p2align 0x4
L_515892:
L_335100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335101
.p2align 0x4
.long 0x45C
L_335101:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334803
.p2align 0x4
.long 0x7F0
L_334808:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_334809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
.long 0x1F7C
L_334828:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_515894
L_334829:
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_334830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515894:
L_335042:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x656
L_334892:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r13
	je L_335042
L_334893:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x511
L_335046:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335047
L_335051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335052
.p2align 0x4
.long 0x5E8
L_335052:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_335047:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_335050
L_335048:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335045
.p2align 0x4
.long 0x48E5
L_334809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334810
L_335093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335094
.p2align 0x4
.long 0x266A
L_335094:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334810:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515898
L_334811:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_334812:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515898:
L_334817:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515899
L_334818:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_334805
.p2align 0x4
L_515899:
L_334819:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_334820:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515901
.p2align 0x4,,0x7
L_334821:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_334824
L_334822:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_334820
.p2align 0x4
L_515901:
L_335088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335089
.p2align 0x4
.long 0x658
L_335089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334821
.p2align 0x4
.long 0x1F7C
L_334830:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334831
L_335084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335085
.p2align 0x4
.long 0x48E9
L_335085:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334831:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_515903
L_334832:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movl $0x0,0x3C(%rbp)
L_334833:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_334834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515903:
L_335083:
	xorl %ecx,%ecx
L_334841:
	cmpl 0x38(%rbp),%ecx
	je L_515910
L_334842:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515904
L_334843:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_334827
.p2align 0x4
L_515904:
L_334844:
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
L_334845:
	cmpq $0x1,%r15
	je L_515905
L_334846:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_334847:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515905:
L_335074:
	movq $0x1,0x48(%rbp)
L_334858:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_515906
L_334859:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_334860:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515906:
L_334866:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515907
L_334867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
L_334868:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515907:
L_334880:
	movl 0x38(%rbp),%r13d
	incl %r13d
	jo L_515909
L_334881:
	movq 0x40(%rbp),%r11
	cmpq $0x1,%r11
	je L_334884
L_334882:
	movl %r13d,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	jmp L_334826
.p2align 0x4
L_515909:
L_334837:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515910:
L_335075:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515911
L_335076:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_334827
.p2align 0x4
L_515911:
L_335077:
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_334845
.p2align 0x4
.long 0x7F2
L_334894:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_515915
L_334895:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_334896:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515914
.p2align 0x4,,0x7
L_334897:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_515913
L_334898:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_334896
.p2align 0x4
L_515913:
L_334899:
	movq 0x70(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
L_334900:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x78,%rbp
	leaq (L_334901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_0
.p2align 0x4
L_515914:
L_335038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_335039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335039
.p2align 0x4
.long 0x679
L_335039:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_334897
.p2align 0x4
L_515915:
L_335040:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_334906:
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x1F76
L_334813:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334814
L_335090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335091
.p2align 0x4
.long 0x80B
L_335091:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334814:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_334817
L_334815:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_334812
.p2align 0x4
.long 0x48E6
L_334834:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334835
L_335081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_335082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335082
.p2align 0x4
.long 0x48EA
L_335082:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_334835:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpl $0xFFFFFFFF,0x0(%r13)
	je L_515920
L_334836:
	movl 0x3C(%rbp),%r14d
	incl %r14d
	jo L_334837
L_334838:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_515918
L_334839:
	movl %r14d,0x3C(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_334833
.p2align 0x4
L_515918:
	movl %r14d,%ecx
	jmp L_334841
.p2align 0x4
L_515920:
L_335078:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_515921
L_335079:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_334833
.p2align 0x4
L_515921:
L_335080:
	movl 0x3C(%rbp),%ecx
	jmp L_334841
.p2align 0x4
.long 0x1F7C
L_334848:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334849
L_335072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335073
.p2align 0x4
.long 0x48E9
L_335073:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334849:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_515927
L_334850:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_515923
L_334851:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_334847
.p2align 0x4
L_515923:
L_334852:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_515926
L_334853:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_334854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515925
.p2align 0x4,,0x7
L_334855:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515924
L_334856:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_334854
.p2align 0x4
L_515924:
L_334857:
	movq %r15,0x48(%rbp)
	jmp L_334858
.p2align 0x4
L_515925:
L_335066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_335067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335067
.p2align 0x4
.long 0x1F7F
L_335067:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_334855
.p2align 0x4
L_515926:
L_335068:
	movq $0x1,0x48(%rbp)
	jmp L_334858
.p2align 0x4
L_515927:
L_335069:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515928
L_335070:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_334847
.p2align 0x4
L_515928:
L_335071:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_334854
.p2align 0x4
.long 0x1F7C
L_334861:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334862
L_335063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335064
.p2align 0x4
.long 0x48E9
L_335064:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334862:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_334837
L_334863:
	movl %r13d,0x0(%r15)
	movl %r11d,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_334866
L_334864:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_334860
.p2align 0x4
.long 0x1F7D
L_334869:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334870
L_335060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_335061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335061
.p2align 0x4
.long 0x1F7E
L_335061:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334870:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_515933
L_334871:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_334872:
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_334873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp topo_sort_1
.p2align 0x4
L_515933:
L_334877:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_334880
L_334878:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_334868
.p2align 0x4
.long 0x660
L_334901:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_334902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
.long 0x1F75
L_334907:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x19CD
L_334873:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334874
L_335057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_335058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335058
.p2align 0x4
.long 0x1F7E
L_335058:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334874:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_334877
L_334875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_334872
.p2align 0x4
.long 0x65F
L_334902:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_1
.p2align 0x4
.long 0x1F7D
L_334908:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334909
L_335036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335037
.p2align 0x4
.long 0x80B
L_335037:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334909:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_335007
L_334910:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
.p2align 0x4,,0x7
L_334911:
	movq 0x38(%rbp),%r10
	cmpq $0x1,%r10
	je L_515968
L_334912:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
.p2align 0x4,,0x7
L_334913:
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r13)
	je L_515959
L_334914:
	cmpq $0x1,%r11
	je L_515938
L_334915:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_334913
.p2align 0x4
L_515938:
L_334916:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334918
L_335001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335002
.p2align 0x4
.long 0x21EE
L_335002:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334918:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_515957
L_334920:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_515956
L_334921:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_334923:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_515955
L_334989:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7E,%r11
	jne L_515954
L_334990:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_515950
L_334924:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_334837
L_334925:
	cmpq $0x1,%r15
	je L_515939
L_334926:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	movq %r14,0x30(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_334923
.p2align 0x4
L_515939:
L_334927:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334928
L_334987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334988
.p2align 0x4
.long 0x106F
L_334988:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334928:
	movl 0x30(%rbp),%ecx
L_334929:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515947
L_334931:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334933
L_334986:
	movl %ecx,0x0(%r15)
L_334933:
	movq $0x1AFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_334934:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je loop_3623
L_334935:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_334936:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_515945
L_334984:
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_334970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515944
.p2align 0x4,,0x7
L_334971:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515943
L_334972:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
L_334973:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515942
.p2align 0x4,,0x7
L_334974:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515940
L_334975:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334973
.p2align 0x4
L_515940:
L_334976:
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_334949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515941
.p2align 0x4,,0x7
L_334950:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je loop_3623
L_334951:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_334936
.p2align 0x4
L_515941:
L_334953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334954
.p2align 0x4
.long 0x658
L_334954:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334950
.p2align 0x4
L_515942:
L_334977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334978
.p2align 0x4
.long 0x80B
L_334978:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334974
.p2align 0x4
L_515943:
L_334979:
	movq %r15,0x38(%rbp)
	jmp L_334949
.p2align 0x4
L_515944:
L_334980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_334981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334981
.p2align 0x4
.long 0x63C
L_334981:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_334971
.p2align 0x4
L_515945:
L_334937:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x50(%rbp)
L_334938:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515947:
L_334930:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515950:
L_334992:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334993
L_334998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_334999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334999
.p2align 0x4
.long 0x48E8
L_334999:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_334993:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_334930
L_334994:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_515951
L_334995:
	movq 0x30(%rbp),%r15
L_334996:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_334934
.p2align 0x4
L_515951:
L_334997:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_334996
.p2align 0x4
L_515954:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_334924
.p2align 0x4
L_515955:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_334924
.p2align 0x4
L_515956:
L_335000:
	xorl %ecx,%ecx
	jmp L_334929
.p2align 0x4
L_515957:
L_334919:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515959:
L_335003:
	cmpq $0x1,%r15
	je L_515960
L_335004:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334911
.p2align 0x4
L_515960:
L_335005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335007
L_335029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335030
.p2align 0x4
.long 0x80B
L_335030:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_335007:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je loop_3623
L_335008:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
.p2align 0x4,,0x7
L_335009:
	movq 0x48(%rbp),%r10
	cmpq $0x1,%r10
	je L_515965
L_335010:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
.p2align 0x4,,0x7
L_335011:
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_515963
L_335012:
	cmpq $0x1,%r11
	je L_515961
L_335013:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_335011
.p2align 0x4
L_515961:
L_335014:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334918
L_335016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335017
.p2align 0x4
.long 0x21EE
L_335017:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334918
.p2align 0x4
L_515963:
L_335018:
	cmpq $0x1,%r15
	je L_515964
L_335019:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_335009
.p2align 0x4
L_515964:
L_335020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3623
L_335022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335023
.p2align 0x4
.long 0x4DF
L_335023:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp loop_3623
.p2align 0x4
L_515965:
L_335024:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334918
L_335026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335027
.p2align 0x4
.long 0x21EE
L_335027:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334918
.p2align 0x4
L_515968:
L_335031:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334918
L_335033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335034
.p2align 0x4
.long 0x21EE
L_335034:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334918
.p2align 0x4
.long 0x7F2
L_334903:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r13
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_515972
L_334904:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_334900
.p2align 0x4
L_515972:
L_334905:
	movq %r14,%r15
	jmp L_334906
.p2align 0x4
.long 0x7F2
L_334939:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_334940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
.long 0x48E7
L_334940:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334941
L_334982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_334983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334983
.p2align 0x4
.long 0x7F5
L_334983:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_334941:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl 0x68(%rbp),%r15d
	cmpl %r13d,%r15d
	jl L_515980
L_334942:
	cmpl %r15d,%r13d
	jl L_515976
L_334943:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_515975
L_334944:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_334945:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515974
.p2align 0x4,,0x7
L_334946:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515973
L_334947:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334945
.p2align 0x4
L_515973:
L_334948:
	movq %r15,0x38(%rbp)
	jmp L_334949
.p2align 0x4
L_515974:
L_334955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334956
.p2align 0x4
.long 0x80B
L_334956:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334946
.p2align 0x4
L_515975:
L_334957:
	movq 0x58(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_334949
.p2align 0x4
L_515976:
L_334958:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_515979
L_334959:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_334960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515978
.p2align 0x4,,0x7
L_334961:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515977
L_334962:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334960
.p2align 0x4
L_515977:
L_334963:
	movq %r15,0x38(%rbp)
	jmp L_334949
.p2align 0x4
L_515978:
L_334964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334965
.p2align 0x4
.long 0x80B
L_334965:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334961
.p2align 0x4
L_515979:
L_334966:
	movq %r15,0x38(%rbp)
	jmp L_334949
.p2align 0x4
L_515980:
L_334967:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_515981
L_334968:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
	movq %r13,0x58(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_334938
.p2align 0x4
L_515981:
L_334969:
	movq %r14,0x40(%rbp)
	jmp L_334970
.text
.p2align 0x4
.globl get_131
.hidden get_131
get_131:
L_335102:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335132
L_335103:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515995
L_335104:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_515994
L_335106:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_515993
L_335107:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_335109:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_335110
L_335124:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD76,%r13
	jne L_335110
L_335125:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x10(%rbp)
	je L_515988
L_335110:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_515987
L_335112:
	cmpq $0x1,%r15
	je L_515983
L_335113:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_335109
.p2align 0x4
L_515983:
L_335114:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335115
L_335122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335123
.p2align 0x4
.long 0x651
L_335123:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_335115:
	movl 0x28(%rbp),%ecx
L_335116:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515985
L_335118:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_335120
L_335121:
	movl %ecx,0x0(%r15)
L_335120:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1339,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x133B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq $0x1AED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	movq %r9,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515985:
L_335117:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515987:
L_335111:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515988:
L_335127:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_335117
L_335128:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_515989
L_335130:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515989:
L_335129:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515993:
L_335131:
	xorl %ecx,%ecx
	jmp L_335116
.p2align 0x4
L_515994:
L_335105:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515995:
L_335132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_335133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335133
.p2align 0x4
.long 0x460
L_335133:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_335104
.text
.p2align 0x4
.globl nearTargets_1
.hidden nearTargets_1
nearTargets_1:
L_335134:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335163
L_335135:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516009
L_335136:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1134,%r14
	je L_516007
	cmpq $0x1137,%r14
	je L_516005
	cmpq $0x1139,%r14
	je L_515999
	cmpq $0x113A,%r14
	je L_515998
	cmpq $0x113B,%r14
	je L_515997
L_335137:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515997:
L_335162:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515998:
L_335161:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515999:
L_335145:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516004
L_335146:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_335147:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516003
.p2align 0x4,,0x7
L_335148:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516000
L_335149:
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335147
.p2align 0x4
L_516000:
L_335150:
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_335151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516002
.p2align 0x4,,0x7
L_335152:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516001
L_335153:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335151
.p2align 0x4
L_516001:
L_335155:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516002:
L_335156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335157
.p2align 0x4
.long 0x4EA
L_335157:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_335152
.p2align 0x4
L_516003:
L_335158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335159
.p2align 0x4
.long 0x4EA
L_335159:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_335148
.p2align 0x4
L_516004:
L_335160:
	movq $0x1,%r15
	jmp L_335155
.p2align 0x4
L_516005:
L_335141:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516006
L_335142:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
L_335143:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516006:
L_335144:
	movq $0x1,%r14
	jmp L_335143
.p2align 0x4
L_516007:
L_335138:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_335137
L_335139:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516009:
L_335163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_335164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335164
.p2align 0x4
.long 0x452
L_335164:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_335136
.text
.p2align 0x4
.globl topo_sort_1
.hidden topo_sort_1
topo_sort_1:
L_335165:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335166
L_335182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_335183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335183
.p2align 0x4
.long 0x4AF
L_335183:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_335166:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_335167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
.long 0x65C
L_335167:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335168
L_335180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335181
.p2align 0x4
.long 0x63D
L_335181:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_335168:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_516014
L_335170:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r11d
	movl %r11d,%r10d
	incl %r11d
	jo L_516013
L_335172:
	movl %r11d,0x0(%r14)
	movl %r10d,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_516012
L_335173:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_335174:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_335175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp topo_sort_1
.p2align 0x4
L_516012:
L_335178:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516013:
L_335171:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516014:
L_335169:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_335175:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_335178
L_335176:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335174
.text
.p2align 0x4
.globl livenessTransfer_1
.hidden livenessTransfer_1
livenessTransfer_1:
L_335184:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335185
L_335306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335307
.p2align 0x4
.long 0x45C
L_335307:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335185:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_335186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
.long 0x51F
L_335186:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335187
L_335304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_335305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335305
.p2align 0x4
.long 0x4AF
L_335305:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_335187:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516018
L_335188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_335189:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_335190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_516018:
L_335303:
	movq $0x1,0x8(%rbp)
L_335207:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1134,%r15
	je L_516020
	cmpq $0x1139,%r15
	je L_516019
L_335208:
	movq $0x1,%r14
	movq $0x1,%r15
L_335209:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_335210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
L_516019:
L_335288:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_335209
.p2align 0x4
L_516020:
L_335257:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_335258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
.long 0x4DE
L_335190:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335191
L_335301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335302
.p2align 0x4
.long 0x4DF
L_335302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_335191:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516031
L_335192:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_335193:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516030
.p2align 0x4,,0x7
L_335194:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_335201
L_335195:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335196:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516026
L_335197:
	cmpq $0x1,%r14
	je L_516022
L_335198:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335196
.p2align 0x4
L_516022:
L_335199:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516025
.p2align 0x4,,0x7
L_335201:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516023
L_335202:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335193
.p2align 0x4
L_516023:
L_335204:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516024
L_335205:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_335189
.p2align 0x4
L_516024:
L_335206:
	movq %r15,0x8(%rbp)
	jmp L_335207
.p2align 0x4
L_516025:
L_335289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335290
.p2align 0x4
.long 0x658
L_335290:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335201
.p2align 0x4
L_516026:
L_335291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516028
.p2align 0x4,,0x7
L_335292:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516027
L_335293:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335193
.p2align 0x4
L_516027:
L_335294:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335204
.p2align 0x4
L_516028:
L_335295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335296
.p2align 0x4
.long 0x648
L_335296:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335292
.p2align 0x4
L_516030:
L_335298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335299
.p2align 0x4
.long 0x658
L_335299:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335194
.p2align 0x4
L_516031:
L_335300:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335204
.p2align 0x4
.long 0x457
L_335210:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1135,%r15
	je L_516052
	cmpq $0x1136,%r15
	je L_516050
	cmpq $0x1137,%r15
	je L_516048
	cmpq $0x1138,%r15
	je L_516033
L_335211:
	movq 0x8(%rbp),%r15
L_335212:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp liveness_1
.p2align 0x4
L_516033:
L_335254:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516047
L_335255:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_335216:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335245
L_335217:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335218:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516036
L_335242:
	cmpq $0x1,%r13
	je L_516034
L_335243:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335218
.p2align 0x4
L_516034:
L_335245:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516035
L_335246:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335216
.p2align 0x4
L_516035:
L_335247:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335212
.p2align 0x4
L_516036:
L_335219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516045
.p2align 0x4,,0x7
L_335220:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516043
L_335221:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335228
L_335222:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335223:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516040
L_335224:
	cmpq $0x1,%r14
	je L_516037
L_335225:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335223
.p2align 0x4
L_516037:
L_335226:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516039
.p2align 0x4,,0x7
L_335228:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335212
L_335229:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335216
.p2align 0x4
L_516039:
L_335231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335232
.p2align 0x4
.long 0x4B1
L_335232:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335228
.p2align 0x4
L_516040:
L_335233:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516041
L_335234:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335216
.p2align 0x4
L_516041:
L_335235:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335212
.p2align 0x4
L_516043:
L_335237:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516044
L_335238:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335216
.p2align 0x4
L_516044:
L_335239:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335212
.p2align 0x4
L_516045:
L_335240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335241
.p2align 0x4
.long 0x517
L_335241:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335220
.p2align 0x4
L_516047:
L_335256:
	movq 0x8(%rbp),%r15
	jmp L_335212
.p2align 0x4
L_516048:
L_335251:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_516049
L_335252:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_335216
.p2align 0x4
L_516049:
L_335253:
	movq 0x8(%rbp),%r15
	jmp L_335212
.p2align 0x4
L_516050:
L_335250:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
L_335214:
	cmpq $0x1,%r15
	je L_516051
L_335215:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_335216
.p2align 0x4
L_516051:
L_335249:
	movq 0x8(%rbp),%r15
	jmp L_335212
.p2align 0x4
L_516052:
L_335213:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_335214
.p2align 0x4
.long 0x4DE
L_335258:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_516062
L_335259:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516061
.p2align 0x4,,0x7
L_335261:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_516053
L_335262:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335260
.p2align 0x4
L_516053:
L_335263:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335264:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516060
.p2align 0x4,,0x7
L_335265:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516054
L_335266:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335264
.p2align 0x4
L_516054:
L_335267:
	movq %r15,0x28(%rbp)
L_335268:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516059
L_335269:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335270:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516058
.p2align 0x4,,0x7
L_335271:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516055
L_335272:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335270
.p2align 0x4
L_516055:
L_335273:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335274:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516057
.p2align 0x4,,0x7
L_335275:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516056
L_335276:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335274
.p2align 0x4
L_516056:
L_335277:
	movq 0x28(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_335209
.p2align 0x4
L_516057:
L_335278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335279
.p2align 0x4
.long 0x658
L_335279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335275
.p2align 0x4
L_516058:
L_335280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335281
.p2align 0x4
.long 0x658
L_335281:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335271
.p2align 0x4
L_516059:
L_335282:
	movq $0x1,%r14
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_335209
.p2align 0x4
L_516060:
L_335283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335284
.p2align 0x4
.long 0x658
L_335284:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335265
.p2align 0x4
L_516061:
L_335285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335286
.p2align 0x4
.long 0x658
L_335286:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335261
.p2align 0x4
L_516062:
L_335287:
	movq $0x1,0x28(%rbp)
	jmp L_335268
.text
.p2align 0x4
.globl liveness_uses_defs_1
.hidden liveness_uses_defs_1
liveness_uses_defs_1:
L_335308:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335309
L_335489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335490
.p2align 0x4
.long 0x45C
L_335490:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335309:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516134
L_335310:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335311:
L_335312:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_335313
L_335454:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_516131
L_335455:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335484
L_335456:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335457:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_516120
L_335481:
	cmpq $0x1,%r13
	je L_516063
L_335482:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335457
.p2align 0x4
L_516063:
L_335484:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516064
L_335485:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335311
.p2align 0x4
L_516064:
L_335486:
	movq 0x28(%rbp),%r15
L_335316:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_335323
L_335317:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_335318:
L_335319:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_516118
L_335413:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_516116
L_335414:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_516115
L_335415:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335416:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335448
L_335417:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335418:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516104
L_335445:
	cmpq $0x1,%r13
	je L_516065
L_335446:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335418
.p2align 0x4
L_516065:
L_335448:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516066
L_335449:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335416
.p2align 0x4
L_516066:
L_335450:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_335431:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516067
L_335432:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	xchgq %r14,%r15
	jmp L_335318
.p2align 0x4
L_516067:
L_335323:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516103
L_335324:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_335325:
L_335326:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_516102
L_335372:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_516100
L_335373:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_516099
L_335374:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335375:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335407
L_335376:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335377:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516088
L_335404:
	cmpq $0x1,%r13
	je L_516068
L_335405:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335377
.p2align 0x4
L_516068:
L_335407:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516069
L_335408:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335375
.p2align 0x4
L_516069:
L_335409:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_335390:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516070
L_335391:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	xchgq %r14,%r15
	jmp L_335325
.p2align 0x4
L_516070:
L_335392:
	movq %r15,0x10(%rbp)
L_335330:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516087
L_335331:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335332:
L_335333:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_335334
L_335337:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_516084
L_335338:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335367
L_335339:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335340:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_516073
L_335364:
	cmpq $0x1,%r13
	je L_516071
L_335365:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335340
.p2align 0x4
L_516071:
L_335367:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516072
L_335368:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335332
.p2align 0x4
L_516072:
L_335369:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516073:
L_335341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516082
.p2align 0x4,,0x7
L_335342:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_516080
L_335343:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335350
L_335344:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335345:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516077
L_335346:
	cmpq $0x1,%r14
	je L_516074
L_335347:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335345
.p2align 0x4
L_516074:
L_335348:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516076
.p2align 0x4,,0x7
L_335350:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516075
L_335351:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335332
.p2align 0x4
L_516075:
L_335352:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516076:
L_335353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335354
.p2align 0x4
.long 0x721
L_335354:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335350
.p2align 0x4
L_516077:
L_335355:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516078
L_335356:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335332
.p2align 0x4
L_516078:
L_335357:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516080:
L_335359:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516081
L_335360:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335332
.p2align 0x4
L_516081:
L_335361:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516082:
L_335362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335363
.p2align 0x4
.long 0x788
L_335363:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335342
.p2align 0x4
L_516084:
L_335334:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516085
L_335335:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335332
.p2align 0x4
L_516085:
L_335336:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516087:
L_335371:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516088:
L_335378:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516097
.p2align 0x4,,0x7
L_335379:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516095
L_335380:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335387
L_335381:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335382:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516092
L_335383:
	cmpq $0x1,%r14
	je L_516089
L_335384:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335382
.p2align 0x4
L_516089:
L_335385:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516091
.p2align 0x4,,0x7
L_335387:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335390
L_335388:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335375
.p2align 0x4
L_516091:
L_335393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335394
.p2align 0x4
.long 0x4EC
L_335394:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335387
.p2align 0x4
L_516092:
L_335395:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516093
L_335396:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335375
.p2align 0x4
L_516093:
L_335397:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335390
.p2align 0x4
L_516095:
L_335399:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516096
L_335400:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335375
.p2align 0x4
L_516096:
L_335401:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335390
.p2align 0x4
L_516097:
L_335402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335403
.p2align 0x4
.long 0x67E
L_335403:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335379
.p2align 0x4
L_516099:
L_335411:
	movq %r14,%r15
	jmp L_335390
.p2align 0x4
L_516100:
	movq %r14,(localObjptr+0x8)(%rip)
L_335327:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516101
L_335328:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_335325
.p2align 0x4
L_516101:
L_335329:
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_335330
.p2align 0x4
L_516102:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_335327
.p2align 0x4
L_516103:
L_335412:
	movq %r15,0x10(%rbp)
	jmp L_335330
.p2align 0x4
L_516104:
L_335419:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516113
.p2align 0x4,,0x7
L_335420:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516111
L_335421:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335428
L_335422:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335423:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516108
L_335424:
	cmpq $0x1,%r14
	je L_516105
L_335425:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335423
.p2align 0x4
L_516105:
L_335426:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516107
.p2align 0x4,,0x7
L_335428:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335431
L_335429:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335416
.p2align 0x4
L_516107:
L_335434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335435
.p2align 0x4
.long 0x4EC
L_335435:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335428
.p2align 0x4
L_516108:
L_335436:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516109
L_335437:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335416
.p2align 0x4
L_516109:
L_335438:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335431
.p2align 0x4
L_516111:
L_335440:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516112
L_335441:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335416
.p2align 0x4
L_516112:
L_335442:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335431
.p2align 0x4
L_516113:
L_335443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335444
.p2align 0x4
.long 0x67E
L_335444:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335420
.p2align 0x4
L_516115:
L_335452:
	movq %r14,%r15
	jmp L_335431
.p2align 0x4
L_516116:
	movq %r14,(localObjptr+0x8)(%rip)
L_335320:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516117
L_335321:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_335318
.p2align 0x4
L_516117:
L_335322:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_335323
.p2align 0x4
L_516118:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_335320
.p2align 0x4
L_516120:
L_335458:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516129
.p2align 0x4,,0x7
L_335459:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_516127
L_335460:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335467
L_335461:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335462:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516124
L_335463:
	cmpq $0x1,%r14
	je L_516121
L_335464:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335462
.p2align 0x4
L_516121:
L_335465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516123
.p2align 0x4,,0x7
L_335467:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_335316
L_335468:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335311
.p2align 0x4
L_516123:
L_335470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335471
.p2align 0x4
.long 0x647
L_335471:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335467
.p2align 0x4
L_516124:
L_335472:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516125
L_335473:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335311
.p2align 0x4
L_516125:
L_335474:
	movq 0x28(%rbp),%r15
	jmp L_335316
.p2align 0x4
L_516127:
L_335476:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516128
L_335477:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335311
.p2align 0x4
L_516128:
L_335478:
	movq 0x28(%rbp),%r15
	jmp L_335316
.p2align 0x4
L_516129:
L_335479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335480
.p2align 0x4
.long 0x635
L_335480:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335459
.p2align 0x4
L_516131:
L_335313:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516132
L_335314:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335311
.p2align 0x4
L_516132:
L_335315:
	movq 0x28(%rbp),%r15
	jmp L_335316
.p2align 0x4
L_516134:
L_335488:
	movq $0x1,%r15
	jmp L_335316
.text
.p2align 0x4
.globl liveness_1
.hidden liveness_1
liveness_1:
L_335491:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335492
L_335580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335581
.p2align 0x4
.long 0x45C
L_335581:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335492:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516167
L_335493:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335494:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516166
.p2align 0x4,,0x7
L_335495:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_335502
L_335496:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335497:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516163
L_335498:
	cmpq $0x1,%r14
	je L_516136
L_335499:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335497
.p2align 0x4
L_516136:
L_335500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516162
.p2align 0x4,,0x7
L_335502:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516137
L_335503:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_335494
.p2align 0x4
L_516137:
L_335504:
	movq %r15,0x18(%rbp)
L_335505:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_335518
L_335506:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335507:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516160
.p2align 0x4,,0x7
L_335508:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_335515
L_335509:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335510:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516157
L_335511:
	cmpq $0x1,%r14
	je L_516138
L_335512:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335510
.p2align 0x4
L_516138:
L_335513:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516156
.p2align 0x4,,0x7
L_335515:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516139
L_335516:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_335507
.p2align 0x4
L_516139:
L_335517:
	movq %r15,0x18(%rbp)
L_335518:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516155
L_335519:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335520:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516154
.p2align 0x4,,0x7
L_335521:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_335528
L_335522:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335523:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516150
L_335524:
	cmpq $0x1,%r14
	je L_516140
L_335525:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335523
.p2align 0x4
L_516140:
L_335526:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516149
.p2align 0x4,,0x7
L_335528:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516141
L_335529:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_335520
.p2align 0x4
L_516141:
L_335530:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335531:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516148
.p2align 0x4,,0x7
L_335532:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_335539
L_335533:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335534:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516145
L_335535:
	cmpq $0x1,%r14
	je L_516142
L_335536:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335534
.p2align 0x4
L_516142:
L_335537:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516144
.p2align 0x4,,0x7
L_335539:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516143
L_335540:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_335531
.p2align 0x4
L_516143:
L_335541:
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516144:
L_335542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335543
.p2align 0x4
.long 0x638
L_335543:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335539
.p2align 0x4
L_516145:
L_335544:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516146
L_335545:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_335531
.p2align 0x4
L_516146:
L_335546:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516148:
L_335548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335549
.p2align 0x4
.long 0x638
L_335549:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335532
.p2align 0x4
L_516149:
L_335550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335551
.p2align 0x4
.long 0x4F1
L_335551:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335528
.p2align 0x4
L_516150:
L_335552:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516151
L_335553:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_335520
.p2align 0x4
L_516151:
L_335554:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_335555:
	cmpq $0x1,%r15
	je L_516152
L_335556:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_335531
.p2align 0x4
L_516152:
L_335557:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516154:
L_335559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335560
.p2align 0x4
.long 0x4F1
L_335560:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335521
.p2align 0x4
L_516155:
L_335561:
	movq 0x10(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335555
.p2align 0x4
L_516156:
L_335562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335563
.p2align 0x4
.long 0x4F1
L_335563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335515
.p2align 0x4
L_516157:
L_335564:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516158
L_335565:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_335507
.p2align 0x4
L_516158:
L_335566:
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_335518
.p2align 0x4
L_516160:
L_335568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335569
.p2align 0x4
.long 0x4F1
L_335569:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335508
.p2align 0x4
L_516162:
L_335571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335572
.p2align 0x4
.long 0x4DF
L_335572:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335502
.p2align 0x4
L_516163:
L_335573:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516164
L_335574:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_335494
.p2align 0x4
L_516164:
L_335575:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_335505
.p2align 0x4
L_516166:
L_335577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335578
.p2align 0x4
.long 0x4DF
L_335578:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335495
.p2align 0x4
L_516167:
L_335579:
	movq $0x1,0x18(%rbp)
	jmp L_335505
.text
.p2align 0x4
.globl livenessEntry_1
.hidden livenessEntry_1
livenessEntry_1:
L_335582:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335583
L_335655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335656
.p2align 0x4
.long 0x45C
L_335656:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335583:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112F,%r13
	jne L_516169
L_335629:
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_335630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_516169:
L_335584:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
L_335585:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_335586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
.long 0x4DE
L_335630:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_516179
L_335631:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516178
.p2align 0x4,,0x7
L_335633:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_516171
L_335634:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335632
.p2align 0x4
L_516171:
L_335635:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516177
.p2align 0x4,,0x7
L_335637:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516172
L_335638:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335636
.p2align 0x4
L_516172:
L_335639:
	movq %r15,0x28(%rbp)
L_335640:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_516176
L_335642:
	decl %r13d
	jo L_516175
L_335644:
	movl %r13d,0x38(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
loop_3624:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516174
.p2align 0x4,,0x7
L_335645:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_516173
L_335646:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_3624
.p2align 0x4
L_516173:
L_335647:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r13
	movq %r13,%r15
	jmp L_335585
.p2align 0x4
L_516174:
L_335648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335649
.p2align 0x4
.long 0x635
L_335649:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335645
.p2align 0x4
L_516175:
L_335643:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516176:
L_335641:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516177:
L_335650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335651
.p2align 0x4
.long 0x658
L_335651:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335637
.p2align 0x4
L_516178:
L_335652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335653
.p2align 0x4
.long 0x658
L_335653:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335633
.p2align 0x4
L_516179:
L_335654:
	movq $0x1,0x28(%rbp)
	jmp L_335640
.p2align 0x4
.long 0x457
L_335586:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1130,%r13
	je L_335588
	cmpq $0x1131,%r13
	je L_516195
	cmpq $0x1132,%r13
	je L_516180
L_335587:
L_335588:
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp liveness_1
.p2align 0x4
L_516180:
L_335626:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_335588
L_335627:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_335592:
	movq 0x18(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335621
L_335593:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335594:
	movl 0x0(%r15),%r11d
	movl %r11d,0x30(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x34(%rbp)
	cmpl %r10d,%r11d
	jnl L_516183
L_335618:
	cmpq $0x1,%r13
	je L_516181
L_335619:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335594
.p2align 0x4
L_516181:
L_335621:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516182
L_335622:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335592
.p2align 0x4
L_516182:
L_335623:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335588
.p2align 0x4
L_516183:
L_335595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516192
.p2align 0x4,,0x7
L_335596:
	movl 0x30(%rbp),%r13d
	cmpl %r13d,0x34(%rbp)
	jl L_516190
L_335597:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335604
L_335598:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335599:
	movq 0x18(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516187
L_335600:
	cmpq $0x1,%r14
	je L_516184
L_335601:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335599
.p2align 0x4
L_516184:
L_335602:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516186
.p2align 0x4,,0x7
L_335604:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_335588
L_335605:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335592
.p2align 0x4
L_516186:
L_335607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335608
.p2align 0x4
.long 0x4DF
L_335608:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335604
.p2align 0x4
L_516187:
L_335609:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516188
L_335610:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335592
.p2align 0x4
L_516188:
L_335611:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335588
.p2align 0x4
L_516190:
L_335613:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516191
L_335614:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335592
.p2align 0x4
L_516191:
L_335615:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335588
.p2align 0x4
L_516192:
L_335616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335617
.p2align 0x4
.long 0x5F7
L_335617:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335596
.p2align 0x4
L_516195:
L_335590:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_335588
L_335591:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	jmp L_335592
.text
.p2align 0x4
.globl optimizer_1
.hidden optimizer_1
optimizer_1:
L_335657:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x130(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335658
L_336003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_336004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336004
.p2align 0x4
.long 0x4945
L_336004:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335658:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516198
L_335659:
	movq 0x118(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_335660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimGoto_1
.p2align 0x4
L_516198:
L_335980:
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48EB
L_335660:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movl 0x148(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335661
L_335978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335979
.p2align 0x4
.long 0x493A
L_335979:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335661:
	movq 0xE0(%rbp),%r15
	movl 0xF8(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
L_335662:
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_516201
L_335663:
	movq 0x8(%r14),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x118(%rbp)
	movl $0x0,0xE4(%rbp)
	movq $0x1,0x120(%rbp)
L_335664:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516200
L_335665:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516200:
L_335955:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516201:
L_335977:
	xorl %ecx,%ecx
	movq $0x1,%r15
L_335718:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0xE0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516204
L_335719:
	movl %ecx,0x18(%rbp)
L_335720:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x0,%r13b
	je L_335725
	cmpb $0x1,%r13b
	je L_516202
L_335721:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq %r14,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
L_516202:
L_335725:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516204:
L_335746:
	movl $0x1,0x18(%rbp)
	jmp L_335720
.p2align 0x4
.long 0x493B
L_335981:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335993(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x150,%rbp
	leaq (L_335982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimGoto_1
.p2align 0x4
.long 0x48EC
L_335666:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x138(%rbp)
	movl 0xE4(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_516207
L_335667:
	movl %r15d,0xE4(%rbp)
	movq %r14,0x118(%rbp)
L_335668:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516206
L_335669:
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x170(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
L_516206:
L_335923:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516207:
L_335954:
	movl $0x1,0xE4(%rbp)
	movq %r14,0x118(%rbp)
	jmp L_335668
.p2align 0x4
.long 0x4900
L_335956:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335967(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
.long 0x48F2
L_335722:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335723:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F3
L_335726:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_335735(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
.long 0x493C
L_335982:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x158(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_335983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335993:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AE0)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48ED
L_335670:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335671
L_335921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_335922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335922
.p2align 0x4
.long 0x492A
L_335922:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_335671:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x18EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq %r14,0x190(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_335672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLivenessStatements_0
.p2align 0x4
.long 0x4900
L_335924:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x168(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x170(%rbp)
	leaq L_335940(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x180(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_335925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x4901
L_335957:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335967:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AE8)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48F4
L_335727:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335735:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5660)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x493D
L_335983:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_335984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335994:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335995
L_335997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335998
.p2align 0x4
.long 0x490A
L_335998:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335995:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x50F2
L_335672:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x188(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_335673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x492B
L_335925:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335926
L_335952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_335953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335953
.p2align 0x4
.long 0x4928
L_335953:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_335926:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x18EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x188(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq %r14,0x1A0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLivenessStatements_0
.p2align 0x4
.long 0x300C
L_335940:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AF0)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4902
L_335958:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335968:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335969
L_335971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335972
.p2align 0x4
.long 0x490A
L_335972:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335969:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48F5
L_335728:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48FA
L_335736:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335737
L_335739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335740
.p2align 0x4
.long 0x48FC
L_335740:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335737:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x1,0x148(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x493E
L_335984:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335985
L_336001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_336002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336002
.p2align 0x4
.long 0x4944
L_336002:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_335985:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335996:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F0
L_335673:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335674
L_335919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_335920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335920
.p2align 0x4
.long 0x4927
L_335920:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_335674:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x18ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x148(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
L_335675:
	movq $0x18EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_516214
L_335676:
	movq %r15,0x138(%rbp)
	movl $0x0,0x118(%rbp)
L_335677:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11040)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_516214:
L_335896:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516215
L_335897:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x140(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp moveHoist_1
.p2align 0x4
L_516215:
L_335899:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x50F3
L_335927:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq %r15,0x198(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x4908
L_335941:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335942
L_335944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335945
.p2align 0x4
.long 0x490A
L_335945:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335942:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4903
L_335959:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335960
L_335975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335976
.p2align 0x4
.long 0x490C
L_335976:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335960:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335970:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F6
L_335729:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335730
L_335743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335744
.p2align 0x4
.long 0x48FE
L_335744:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335730:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48FB
L_335738:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x493F
L_335986:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_335987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48F1
L_335678:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516221
L_335679:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335680:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516220
L_335681:
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
L_516220:
L_335875:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516221:
L_335895:
	movl $0x1,0xE4(%rbp)
	jmp L_335680
.p2align 0x4
.long 0x48EC
L_335898:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335677
.p2align 0x4
.long 0x4920
L_335900:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	leaq L_335909(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_335901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp moveHoist_1
.p2align 0x4
.long 0x492E
L_335928:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335929
L_335950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335951
.p2align 0x4
.long 0x4937
L_335951:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335929:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x18ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x108(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_335930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4909
L_335943:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4904
L_335961:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48F7
L_335731:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4940
L_335987:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335988
L_335999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_336000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336000
.p2align 0x4
.long 0x4943
L_336000:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_335988:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48EC
L_335682:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
L_335683:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11050)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x48F1
L_335876:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335885(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
.long 0x4921
L_335901:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_335902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335909:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AF8)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x492F
L_335930:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335962:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335963
L_335973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335974
.p2align 0x4
.long 0x490B
L_335974:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335963:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48F8
L_335732:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335733
L_335741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335742
.p2align 0x4
.long 0x48FD
L_335742:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335733:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4941
L_335989:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335990
L_335991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335992
.p2align 0x4
.long 0x4942
L_335992:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335990:
	movq 0xE0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x100(%rbp),%r15
	movl 0x118(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
	jmp L_335662
.p2align 0x4
.long 0x48F1
L_335684:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516233
L_335685:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335686:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_516227
L_335687:
	movl $0x0,0x118(%rbp)
L_335688:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11058)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_516227:
L_335842:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516232
L_335843:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_335844:
	incl %ecx
	jo L_516231
L_335845:
	cmpq $0x1,%r15
	je L_516228
L_335846:
	movq 0x8(%r15),%r15
	jmp L_335844
.p2align 0x4
L_516228:
L_335847:
L_335848:
	cmpl $0x3E8,%ecx
	jg L_516230
L_335849:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516229
L_335850:
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp copyPropagate_1
.p2align 0x4
L_516229:
L_335852:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516230:
L_335872:
	movl $0x0,0x118(%rbp)
	jmp L_335688
.p2align 0x4
L_516231:
L_335806:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516232:
L_335873:
	xorl %ecx,%ecx
	jmp L_335848
.p2align 0x4
L_516233:
L_335874:
	movl $0x1,0xE4(%rbp)
	jmp L_335686
.p2align 0x4
.long 0x491A
L_335877:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335885:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B00)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4922
L_335902:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x158(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335910:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335911
L_335913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335914
.p2align 0x4
.long 0x490A
L_335914:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335911:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4930
L_335931:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335932
L_335948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335949
.p2align 0x4
.long 0x4936
L_335949:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335932:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_335933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335964:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516236
L_335965:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335668
.p2align 0x4
L_516236:
L_335966:
	movl $0x1,0xE4(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335668
.p2align 0x4
.long 0x48F9
L_335734:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_335723
.p2align 0x4
.long 0x48F1
L_335689:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516238
L_335690:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335691:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516237
L_335692:
	movq 0x40(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
L_516237:
L_335821:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516238:
L_335841:
	movl $0x1,0xE4(%rbp)
	jmp L_335691
.p2align 0x4
.long 0x48EC
L_335851:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335688
.p2align 0x4
.long 0x48F1
L_335853:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335862(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x150,%rbp
	leaq (L_335854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp copyPropagate_1
.p2align 0x4
.long 0x491B
L_335878:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335886:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335887
L_335889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335890
.p2align 0x4
.long 0x490A
L_335890:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335887:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4923
L_335903:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335904
L_335917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335918
.p2align 0x4
.long 0x490C
L_335918:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335904:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335912:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4931
L_335933:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48EC
L_335693:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
L_335694:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11060)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x48F1
L_335822:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335831(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
.long 0x491A
L_335854:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335862:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B08)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491C
L_335879:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335880
L_335893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335894
.p2align 0x4
.long 0x491F
L_335894:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335880:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335888:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4924
L_335905:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4932
L_335934:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335935
L_335946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335947
.p2align 0x4
.long 0x4935
L_335947:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335935:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_335936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48F1
L_335695:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335696
L_335819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_335820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335820
.p2align 0x4
.long 0x48FF
L_335820:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_335696:
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516250
L_335697:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335698:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516249
L_335699:
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x18(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x148(%rbp)
	cmpq $0x1,%r14
	je L_516248
L_335700:
	movq 0x8(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x150(%rbp)
	movq $0x1,0x158(%rbp)
.p2align 0x4,,0x7
L_335701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516247
.p2align 0x4,,0x7
L_335702:
	movq 0x150(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x138(%rbp),%r13
	cmpq $0x1,%r13
	je L_516243
L_335703:
	movq %r15,0x158(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x150(%rbp)
	jmp L_335701
.p2align 0x4
L_516243:
L_335704:
	movq %r14,0x150(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq $0x1,0x158(%rbp)
.p2align 0x4,,0x7
L_335705:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516246
.p2align 0x4,,0x7
L_335706:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_516244
L_335707:
	movq %r15,0x158(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x138(%rbp)
	movq %r15,0x150(%rbp)
	jmp L_335705
.p2align 0x4
L_516244:
L_335709:
	movq 0x118(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x140(%rbp),%r13
	movq 0x148(%rbp),%r14
	movq %r15,%r11
	movq %r9,%r15
L_335710:
	movq $0x1165,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x118(%rbp)
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	addq $0x28,%r12
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516245
L_335711:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59A0)(%rip),%r15
	movq %r15,0x140(%rbp)
	movq %r10,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516245:
L_335750:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516246:
L_335775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335776
.p2align 0x4
.long 0x490D
L_335776:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_335706
.p2align 0x4
L_516247:
L_335777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335778
.p2align 0x4
.long 0x490D
L_335778:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_335702
.p2align 0x4
L_516248:
L_335779:
	movq $0x1,%r15
	jmp L_335709
.p2align 0x4
L_516249:
L_335780:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516250:
L_335818:
	movl $0x1,0xE4(%rbp)
	jmp L_335698
.p2align 0x4
.long 0x491A
L_335823:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335831:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B10)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491B
L_335855:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335863:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335864
L_335866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335867
.p2align 0x4
.long 0x490A
L_335867:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335864:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x491D
L_335881:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4925
L_335906:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335907
L_335915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335916
.p2align 0x4
.long 0x4926
L_335916:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335907:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4933
L_335936:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335937
L_335938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335939
.p2align 0x4
.long 0x4934
L_335939:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335937:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335675
.p2align 0x4
.long 0x48EC
L_335712:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335713
L_335748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_335749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335749
.p2align 0x4
.long 0x48FF
L_335749:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_335713:
	movl 0xE4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516256
L_335714:
	movl 0x118(%rbp),%ecx
	movq 0x138(%rbp),%r15
L_335715:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	cmpq $0x1,%r15
	je L_516255
L_335716:
	movl %ecx,0xE4(%rbp)
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x100(%rbp)
	movq %r14,0x118(%rbp)
	jmp L_335664
.p2align 0x4
L_516255:
L_335717:
	xchgq %r14,%r15
	jmp L_335718
.p2align 0x4
L_516256:
L_335747:
	movl $0x1,%ecx
	movq 0x138(%rbp),%r15
	jmp L_335715
.p2align 0x4
.long 0x4900
L_335751:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335765(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59A0)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
.long 0x48F1
L_335781:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x18(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x158(%rbp)
	cmpq $0x1,%r14
	je L_516262
L_335782:
	movq 0x8(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x160(%rbp)
	movq $0x1,0x168(%rbp)
.p2align 0x4,,0x7
L_335783:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516261
.p2align 0x4,,0x7
L_335784:
	movq 0x160(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x138(%rbp),%r13
	cmpq $0x1,%r13
	je L_516258
L_335785:
	movq %r15,0x168(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x160(%rbp)
	jmp L_335783
.p2align 0x4
L_516258:
L_335786:
	movq %r14,0x160(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq $0x1,0x168(%rbp)
.p2align 0x4,,0x7
L_335787:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516260
.p2align 0x4,,0x7
L_335788:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_516259
L_335789:
	movq %r15,0x168(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x138(%rbp)
	movq %r15,0x160(%rbp)
	jmp L_335787
.p2align 0x4
L_516259:
L_335790:
	movq %r15,0x138(%rbp)
L_335791:
	movq 0x148(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	leaq L_335802(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_335792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516260:
L_335813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335814
.p2align 0x4
.long 0x4919
L_335814:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_335788
.p2align 0x4
L_516261:
L_335815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335816
.p2align 0x4
.long 0x4919
L_335816:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_335784
.p2align 0x4
L_516262:
L_335817:
	movq $0x1,0x138(%rbp)
	jmp L_335791
.p2align 0x4
.long 0x491B
L_335824:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335832:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335833
L_335835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335836
.p2align 0x4
.long 0x490A
L_335836:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335833:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x491C
L_335856:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335857
L_335870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335871
.p2align 0x4
.long 0x491F
L_335871:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335857:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335865:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4905
L_335882:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335883
L_335891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335892
.p2align 0x4
.long 0x491E
L_335892:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335883:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48F1
L_335908:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_335677
.p2align 0x4
.long 0x4901
L_335752:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x300C
L_335765:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B20)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x490E
L_335792:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x188(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_335793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x300C
L_335802:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B18)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491C
L_335825:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335826
L_335839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335840
.p2align 0x4
.long 0x491F
L_335840:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335826:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335834:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491D
L_335858:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4906
L_335884:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335683
.p2align 0x4
.long 0x4902
L_335753:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4908
L_335766:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335767
L_335769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335770
.p2align 0x4
.long 0x490A
L_335770:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335767:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x490F
L_335793:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335794
L_335811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_335812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335812
.p2align 0x4
.long 0x4918
L_335812:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_335794:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4914
L_335803:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335804
L_335807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335808
.p2align 0x4
.long 0x4916
L_335808:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335804:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x491D
L_335827:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335859:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335860
L_335868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335869
.p2align 0x4
.long 0x491E
L_335869:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335860:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4903
L_335754:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335755
L_335773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335774
.p2align 0x4
.long 0x490C
L_335774:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335755:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4909
L_335768:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4910
L_335795:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_335796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4915
L_335805:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_335806
.p2align 0x4
.long 0x4905
L_335828:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335829
L_335837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335838
.p2align 0x4
.long 0x491E
L_335838:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335829:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335861:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335688
.p2align 0x4
.long 0x4904
L_335756:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4911
L_335796:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335797
L_335809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335810
.p2align 0x4
.long 0x4917
L_335810:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_335797:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335830:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335694
.p2align 0x4
.long 0x4905
L_335757:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335758
L_335771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335772
.p2align 0x4
.long 0x490B
L_335772:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335758:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4912
L_335798:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335799
L_335800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335801
.p2align 0x4
.long 0x4913
L_335801:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335799:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq 0x118(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x160(%rbp),%r15
	movq 0x138(%rbp),%r11
	movq 0x150(%rbp),%r13
	movq 0x158(%rbp),%r14
	jmp L_335710
.p2align 0x4
.long 0x4906
L_335759:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335760
L_335763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_335764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335764
.p2align 0x4
.long 0x4907
L_335764:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_335760:
	movq 0x10(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0xE4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516276
L_335761:
	movl 0x118(%rbp),%ecx
	movq 0x148(%rbp),%r15
	jmp L_335715
.p2align 0x4
L_516276:
L_335762:
	movl $0x1,%ecx
	movq 0x148(%rbp),%r15
	jmp L_335715
.text
.p2align 0x4
.globl elimGoto_1
.hidden elimGoto_1
elimGoto_1:
L_336005:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_336006
L_336113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336114
.p2align 0x4
.long 0x75D
L_336114:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_336006:
	movq 0x18(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movl $0x0,0x18(%rbp)
loop_3625:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516278
L_336007:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimSimpleGoto_1
.p2align 0x4
L_516278:
L_336090:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4946
L_336008:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336009
L_336088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336089
.p2align 0x4
.long 0x6EA
L_336089:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336009:
	movq 0x10(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x10(%rbp)
L_336010:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq $0x443D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1263,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq (globalObjptr+0x5A08)(%rip),%r15
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x59E8)(%rip),%r15
	movq %r15,0x10(%r11)
	movq $0x2283,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x4443,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x1263,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq (globalObjptr+0x5A20)(%rip),%r11
	movq %r11,0x0(%r10)
	movq (globalObjptr+0x59D0)(%rip),%r11
	movq %r11,0x10(%r10)
	movq $0x2283,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x443B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1263,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq (globalObjptr+0x5A28)(%rip),%r15
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x59B8)(%rip),%r15
	movq %r15,0x10(%r13)
	movq $0x2283,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_516282
L_336011:
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_336012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516281
.p2align 0x4,,0x7
L_336013:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516280
L_336014:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_336012
.p2align 0x4
L_516280:
L_336015:
	movq 0xC0(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movl $0x0,0x14(%rbp)
	movq $0x1,0xB8(%rbp)
L_336016:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_336017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516281:
L_336085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336086
.p2align 0x4
.long 0x495D
L_336086:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_336013
.p2align 0x4
L_516282:
L_336087:
	xorl %ecx,%ecx
	movq $0x1,%r15
L_336022:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_336078
L_336023:
	testl %ecx,%ecx
	jnz L_516284
L_336024:
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jz L_516283
L_336025:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimComplexGoto_1
.p2align 0x4
L_516283:
L_336057:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516284:
L_336078:
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x18(%rbp)
	jmp loop_3625
.p2align 0x4
.long 0x6E4
L_336091:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	leaq L_336103(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimSimpleGoto_1
.p2align 0x4
.long 0x4947
L_336017:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336018
L_336083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336084
.p2align 0x4
.long 0x495D
L_336084:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_336018:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516288
L_336019:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516287
L_336020:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	jmp L_336016
.p2align 0x4
L_516287:
L_336021:
	movl 0x1C(%rbp),%ecx
	jmp L_336022
.p2align 0x4
L_516288:
L_336080:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516289
L_336081:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl $0x1,0x14(%rbp)
	jmp L_336016
.p2align 0x4
L_516289:
L_336082:
	movl $0x1,%ecx
	jmp L_336022
.p2align 0x4
.long 0x4948
L_336026:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
L_336027:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516291
L_336028:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_336029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimBlocks_1
.p2align 0x4
L_516291:
L_336035:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4954
L_336058:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%rbp)
	leaq L_336067(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimComplexGoto_1
.p2align 0x4
.long 0x495E
L_336092:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x474
L_336103:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59F0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x652
L_336029:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%ecx
	movl %ecx,0x14(%rbp)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516293
L_336030:
L_336031:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516292
L_336032:
	movq %r15,0x0(%rbp)
	movl %ecx,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516292:
L_336033:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516293:
L_336034:
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4949
L_336036:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	leaq L_336047(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimBlocks_1
.p2align 0x4
.long 0x4955
L_336059:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x474
L_336067:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A30)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xF5D
L_336093:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_336094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4950
L_336104:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336105
L_336107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336108
.p2align 0x4
.long 0x4951
L_336108:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336105:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x494A
L_336037:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x474
L_336047:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A38)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4956
L_336060:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4950
L_336068:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336069
L_336071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336072
.p2align 0x4
.long 0x4951
L_336072:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336069:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x495F
L_336094:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336095
L_336111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336112
.p2align 0x4
.long 0x4964
L_336112:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_336095:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_336096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69C
L_336106:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x494B
L_336038:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4950
L_336048:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336049
L_336051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336052
.p2align 0x4
.long 0x4951
L_336052:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336049:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4957
L_336061:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336062
L_336075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336076
.p2align 0x4
.long 0x495C
L_336076:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336062:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69C
L_336070:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4960
L_336096:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_336097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x494C
L_336039:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336040
L_336055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336056
.p2align 0x4
.long 0x4953
L_336056:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336040:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69C
L_336050:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4958
L_336063:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4961
L_336097:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336098
L_336109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_336110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336110
.p2align 0x4
.long 0x4963
L_336110:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_336098:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x494D
L_336041:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4959
L_336064:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336065
L_336073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336074
.p2align 0x4
.long 0x495B
L_336074:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336065:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x6E4
L_336099:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336100
L_336101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_336102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336102
.p2align 0x4
.long 0x4962
L_336102:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_336100:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	jmp L_336010
.p2align 0x4
.long 0x494E
L_336042:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336043
L_336053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336054
.p2align 0x4
.long 0x4952
L_336054:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336043:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x495A
L_336066:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp L_336027
.p2align 0x4
.long 0x494F
L_336044:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516304
L_336045:
	movq 0x48(%rbp),%r15
	movl 0x14(%rbp),%ecx
	jmp L_336031
.p2align 0x4
L_516304:
L_336046:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elimSimpleGoto_1
.hidden elimSimpleGoto_1
elimSimpleGoto_1:
L_336115:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_336394
L_336116:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516357
L_336117:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpq $0x1,%r13
	je L_516356
L_336118:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336119:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1133,%r15
	jne L_516354
L_336332:
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x113B,%r15
	jne L_516352
L_336336:
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r13
	je L_516350
L_336337:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_336338:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112E,%r13
	jne L_516320
L_336342:
	cmpq $0x1,%r14
	je L_516305
L_336343:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_336338
.p2align 0x4
L_516305:
L_336344:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336346
L_336387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336388
.p2align 0x4
.long 0x61E
L_336388:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_336346:
	movq 0x40(%rbp),%r11
	cmpq $0x1,%r11
	je L_336364
L_336347:
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x60(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_516317
L_336349:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_516316
L_336350:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_336352:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516315
L_336377:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_516314
L_336378:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_516311
L_336353:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_516310
L_336355:
	cmpq $0x1,%r15
	je L_516306
L_336356:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_336352
.p2align 0x4
L_516306:
L_336357:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336358
L_336375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336376
.p2align 0x4
.long 0x496B
L_336376:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336358:
	movl 0x40(%rbp),%ecx
L_336359:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_516308
L_336361:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_336363
L_336374:
	movl %ecx,0x0(%r15)
L_336363:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_336364:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_336365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516308:
L_336360:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516310:
L_336354:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516311:
L_336380:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_336360
L_336381:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_516312
L_336384:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_336383:
	movl $0xFFFFFFFF,0x0(%r15)
	jmp L_336364
.p2align 0x4
L_516312:
L_336382:
	movq %r11,%r15
	jmp L_336383
.p2align 0x4
L_516314:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_336353
.p2align 0x4
L_516315:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_336353
.p2align 0x4
L_516316:
L_336385:
	xorl %ecx,%ecx
	jmp L_336359
.p2align 0x4
L_516317:
L_336348:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516320:
L_336339:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516321
L_336340:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336119
.p2align 0x4
L_516321:
L_336341:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
L_336123:
	cmpq $0x1,%r15
	je L_516349
L_336124:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336125:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516348
.p2align 0x4,,0x7
L_336126:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516322
L_336127:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336125
.p2align 0x4
L_516322:
L_336128:
	movq %r15,0x10(%rbp)
loop_3626:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516323
L_336129:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x38(%rbp)
L_336130:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516323:
L_336328:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_336145:
	testl %ecx,%ecx
	jz L_516325
L_336297:
	cmpq $0x1,0x10(%rbp)
	jne L_516324
L_336299:
	xorl %ecx,%ecx
	jmp L_336145
.p2align 0x4
L_516324:
L_336298:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x38(%rbp)
	jmp L_336130
.p2align 0x4
L_516325:
L_336146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336147
L_336295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336296
.p2align 0x4
.long 0x45B
L_336296:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_336147:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516346
L_336148:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl $0x0,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_336149:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1139,%r15
	je L_516341
	cmpq $0x113A,%r15
	je L_516340
	cmpq $0x113B,%r15
	je L_516339
L_336150:
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_336151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516338
.p2align 0x4,,0x7
L_336152:
	movq $0x1165,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x25BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516326
L_336153:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336149
.p2align 0x4
L_516326:
L_336154:
	movl 0x10(%rbp),%r11d
	movl %r11d,0x8(%rbp)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%rbp)
	movq %r14,%r15
L_336155:
	cmpq $0x1,%r15
	je L_516333
L_336156:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336157:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516332
.p2align 0x4,,0x7
L_336158:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516327
L_336159:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336157
.p2align 0x4
L_516327:
L_336160:
	movl 0x8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x30(%rbp)
L_336161:
	movq 0x10(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_516331
	cmpq $0x1131,%r15
	je L_516330
	cmpq $0x1132,%r15
	je L_516329
	cmpq $0x1133,%r15
	je L_516328
L_336162:
	movq 0x18(%r13),%r13
	movq %r13,%r15
L_336163:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516328:
L_336203:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_336163
.p2align 0x4
L_516329:
L_336202:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_336163
.p2align 0x4
L_516330:
L_336201:
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_336163
.p2align 0x4
L_516331:
L_336200:
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_336163
.p2align 0x4
L_516332:
L_336204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336205
.p2align 0x4
.long 0x1F01
L_336205:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336158
.p2align 0x4
L_516333:
L_336206:
	movl 0x8(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,%r15
L_336172:
	cmpq $0x1,%r15
	je L_516337
L_336173:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_336174:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516336
.p2align 0x4,,0x7
L_336175:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_516334
L_336176:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_336174
.p2align 0x4
L_516334:
L_336177:
	movq %r15,0x38(%rbp)
L_336178:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516335
L_336179:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
L_336180:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_336181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_516335:
L_336185:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516336:
L_336189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336190
.p2align 0x4
.long 0x707
L_336190:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336175
.p2align 0x4
L_516337:
L_336191:
	movq $0x1,0x38(%rbp)
	jmp L_336178
.p2align 0x4
L_516338:
L_336207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336208
.p2align 0x4
.long 0x567
L_336208:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336152
.p2align 0x4
L_516339:
L_336279:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516340:
L_336253:
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x14(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516341:
L_336209:
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_516342
L_336210:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq 0x20(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq %r15,0x10(%rbp)
	movq %r13,%r15
L_336211:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516342:
L_336252:
	movq $0x1,%r15
L_336222:
	cmpq $0x1,%r15
	je L_516345
L_336223:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_336224:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516344
.p2align 0x4,,0x7
L_336225:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516343
L_336226:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_336224
.p2align 0x4
L_516343:
L_336227:
	movq %r15,0x60(%rbp)
L_336228:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516344:
L_336243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336244
.p2align 0x4
.long 0xA00
L_336244:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_336225
.p2align 0x4
L_516345:
L_336245:
	movq $0x1,0x60(%rbp)
	jmp L_336228
.p2align 0x4
L_516346:
L_336294:
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,%r14
	movl $0x0,0x8(%rbp)
	xchgq %r14,%r15
	jmp L_336155
.p2align 0x4
L_516348:
L_336329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336330
.p2align 0x4
.long 0x658
L_336330:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336126
.p2align 0x4
L_516349:
L_336331:
	movq $0x1,0x10(%rbp)
	jmp loop_3626
.p2align 0x4
L_516350:
L_336389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336346
L_336391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336392
.p2align 0x4
.long 0x61E
L_336392:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336346
.p2align 0x4
L_516352:
L_336333:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516353
L_336334:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336119
.p2align 0x4
L_516353:
L_336335:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_336123
.p2align 0x4
L_516354:
L_336120:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516355
L_336121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336119
.p2align 0x4
L_516355:
L_336122:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_336123
.p2align 0x4
L_516356:
L_336393:
	movq $0x1,0x8(%rbp)
	movq $0x1,%r15
	jmp L_336123
.p2align 0x4
L_516357:
L_336394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_336395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336395
.p2align 0x4
.long 0x45C
L_336395:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_336117
.p2align 0x4
.long 0x7F1
L_336365:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336366
L_336372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336373
.p2align 0x4
.long 0x80A
L_336373:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_336366:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_516360
L_336367:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r15
L_336368:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516359
L_336369:
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_336119
.p2align 0x4
L_516359:
L_336370:
	movq %r15,0x8(%rbp)
	movq %r14,%r15
	jmp L_336123
.p2align 0x4
L_516360:
L_336371:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1959,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	jmp L_336368
.p2align 0x4
.long 0x1F75
L_336131:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336132
L_336326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336327
.p2align 0x4
.long 0x21EE
L_336327:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336132:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_516364
L_336133:
x_1054:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516362
L_336134:
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516362:
L_336322:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516363
L_336323:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336130
.p2align 0x4
L_516363:
L_336324:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336145
.p2align 0x4
L_516364:
L_336325:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1054
.p2align 0x4
.long 0x1135
L_336164:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336165
L_336198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336199
.p2align 0x4
.long 0x3D4D
L_336199:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336165:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_516368
L_336166:
x_1056:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516366
L_336167:
	movq %r14,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_336168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516366:
L_336194:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336172
L_336195:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_336161
.p2align 0x4
L_516368:
L_336197:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1056
.p2align 0x4
.long 0x4AA
L_336181:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336182
L_336186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336187
.p2align 0x4
.long 0x707
L_336187:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336182:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_336185
L_336183:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_336180
.p2align 0x4
.long 0x54A
L_336280:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336281
L_336292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336293
.p2align 0x4
.long 0x53E
L_336293:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336281:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_516373
L_336282:
x_1061:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_516372
L_336283:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516372:
L_336290:
	movl 0x10(%rbp),%ecx
	movq 0x50(%rbp),%r15
L_336287:
	movl %ecx,0x10(%rbp)
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	jmp L_336151
.p2align 0x4
L_516373:
L_336291:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1061
.p2align 0x4
.long 0x9FD
L_336254:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336255
L_336277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336278
.p2align 0x4
.long 0xA02
L_336278:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336255:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516376
L_336256:
x_1059:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_516375
L_336257:
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516375:
L_336260:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516376:
L_336276:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1059
.p2align 0x4
.long 0x4965
L_336212:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336213
L_336250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_336251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336251
.p2align 0x4
.long 0x4968
L_336251:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_336213:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_516380
L_336214:
x_1057:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	cmpq $0x1,%r14
	je L_516378
L_336215:
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516378:
L_336248:
	movl 0x20(%rbp),%ecx
	movq 0x70(%rbp),%r15
L_336219:
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516379
L_336220:
	movl %ecx,0x20(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336211
.p2align 0x4
L_516379:
L_336221:
	movl %ecx,0x10(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_336222
.p2align 0x4
L_516380:
L_336249:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x60(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1057
.p2align 0x4
.long 0x9FF
L_336229:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336230
L_336241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336242
.p2align 0x4
.long 0xA00
L_336242:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336230:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_516383
L_336231:
x_1058:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r14
	je L_516382
L_336232:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516382:
L_336239:
	movl 0x10(%rbp),%ecx
	movq 0x58(%rbp),%r15
L_336236:
	movl %ecx,0x10(%rbp)
	movq $0x2273,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	jmp L_336151
.p2align 0x4
L_516383:
L_336240:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1058
.p2align 0x4
.long 0x1F7D
L_336135:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336136
L_336320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336321
.p2align 0x4
.long 0x1F7E
L_336321:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_336136:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_516388
L_336137:
x_1055:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_516386
L_336138:
	movq 0x40(%rbp),%r15
	cmpq 0x10(%r14),%r15
	je L_516385
L_336139:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516385:
L_336305:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516386:
L_336316:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516387
L_336317:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336130
.p2align 0x4
L_516387:
L_336318:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336145
.p2align 0x4
L_516388:
L_336319:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1055
.p2align 0x4
.long 0x580
L_336168:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336169
L_336192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336193
.p2align 0x4
.long 0x5C4
L_336193:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336169:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516390
L_336170:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x20(%rbp)
	jmp L_336161
.p2align 0x4
L_516390:
L_336171:
	movl $0x1,0x20(%rbp)
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_336172
.p2align 0x4
.long 0x496A
L_336284:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4969
L_336258:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x9FD
L_336261:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336262
L_336273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336274
.p2align 0x4
.long 0xA02
L_336274:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336262:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516393
L_336263:
x_1060:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_516392
L_336264:
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516392:
L_336271:
	movl 0x10(%rbp),%ecx
	movq 0x58(%rbp),%r15
L_336268:
	movl %ecx,0x10(%rbp)
	movq $0x2275,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0x14(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	jmp L_336151
.p2align 0x4
L_516393:
L_336272:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1959,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1060
.p2align 0x4
.long 0x4966
L_336216:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0xCE7
L_336233:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x1F7D
L_336140:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336141
L_336303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336304
.p2align 0x4
.long 0x80B
L_336304:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336141:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_516396
L_336142:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516395
L_336143:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl $0x1,0x38(%rbp)
	jmp L_336130
.p2align 0x4
L_516395:
L_336144:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_336145
.p2align 0x4
L_516396:
L_336300:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1959,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516397
L_336301:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movl $0x1,0x38(%rbp)
	jmp L_336130
.p2align 0x4
L_516397:
L_336302:
	movq %r15,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_336145
.p2align 0x4
.long 0x1F75
L_336306:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336307
L_336314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336315
.p2align 0x4
.long 0x21EE
L_336315:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336307:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_516400
L_336308:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516399
L_336309:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336130
.p2align 0x4
L_516399:
L_336310:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336145
.p2align 0x4
L_516400:
L_336311:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1959,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516401
L_336312:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336130
.p2align 0x4
L_516401:
L_336313:
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336145
.p2align 0x4
.long 0x496A
L_336285:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336286
L_336288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336289
.p2align 0x4
.long 0x1DCA
L_336289:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_336286:
	movl $0x1,%ecx
	movq 0x58(%rbp),%r15
	jmp L_336287
.p2align 0x4
.long 0x4969
L_336259:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl $0x1,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_336260
.p2align 0x4
.long 0x1106
L_336265:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4966
L_336217:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336218
L_336246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336247
.p2align 0x4
.long 0x4967
L_336247:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336218:
	movl $0x1,%ecx
	movq 0x80(%rbp),%r15
	jmp L_336219
.p2align 0x4
.long 0xCE7
L_336234:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336235
L_336237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336238
.p2align 0x4
.long 0x1108
L_336238:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336235:
	movl $0x1,%ecx
	movq 0x68(%rbp),%r15
	jmp L_336236
.p2align 0x4
.long 0x1106
L_336266:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336267
L_336269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336270
.p2align 0x4
.long 0x554
L_336270:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336267:
	movl $0x1,%ecx
	movq 0x60(%rbp),%r15
	jmp L_336268
.text
.p2align 0x4
.globl decNear_1
.hidden decNear_1
decNear_1:
L_336396:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_336430
L_336397:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516421
L_336398:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_516420
L_336400:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_516419
L_336401:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_336403:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336404
L_336422:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_336404
L_336423:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_516414
L_336404:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_336405
L_336406:
	cmpq $0x1,%r15
	je L_516407
L_336407:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_336403
.p2align 0x4
L_516407:
L_336408:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336409
L_336420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_336421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336421
.p2align 0x4
.long 0x49C
L_336421:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_336409:
	movl 0x18(%rbp),%ecx
L_336410:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_516411
L_336412:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_336414
L_336419:
	movl %ecx,0x0(%r15)
L_336414:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1080)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_336415:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_516409
L_336417:
	shrq $0x1,%r14
	movl %r14d,%r13d
	decl %r13d
	jo L_516408
L_336418:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516408:
L_336405:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516409:
L_336416:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516411:
L_336411:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516414:
L_336425:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_336411
L_336426:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_516415
L_336428:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_336415
.p2align 0x4
L_516415:
L_336427:
	movq %r13,%r15
	jmp L_336415
.p2align 0x4
L_516419:
L_336429:
	xorl %ecx,%ecx
	jmp L_336410
.p2align 0x4
L_516420:
L_336399:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516421:
L_336430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_336431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336431
.p2align 0x4
.long 0x460
L_336431:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_336398
.text
.p2align 0x4
.globl peepholeBlockP_1
.hidden peepholeBlockP_1
peepholeBlockP_1:
L_336432:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_336433
L_338668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_338669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338669
.p2align 0x4
.long 0x460
L_338669:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_336433:
	cmpq $0x1,0x0(%rbp)
	je L_517158
L_336434:
	movq 0x8(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_336435:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x18(%r15),%r10
L_336436:
	movq 0x0(%rbp),%r15
	movq %r15,%r9
	andq $0x3,%r9
	jnz L_517157
L_336438:
	movq %r14,0x18(%rbp)
	movq %r11,0x28(%rbp)
	movq %r13,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movl %ecx,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_336439:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movb 0x1(%r14),%r13b
	movb %r13b,0x4C(%rbp)
	movb 0x2(%r14),%r13b
	movb %r13b,0x4D(%rbp)
	movzbq 0x0(%r14),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_516423
	jmp *jumpTable_843(,%rax,8)
.data
.p2align 0x4
jumpTable_843:
.quad L_517156,L_336464,L_517152,L_336464,L_336464,L_336464,L_336464,L_517145,L_336464,L_517139
.text
.p2align 0x4
L_516423:
L_336440:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_336461:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_516431
.p2align 0x4,,0x7
loop_3627:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516424
L_336441:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516424:
L_336443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516430
.p2align 0x4,,0x7
L_336444:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516426
L_336445:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
L_336446:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516425
L_336448:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336439
.p2align 0x4
L_516425:
L_336447:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516426:
L_336449:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516429
L_336450:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq %r13,0x30(%rbp)
.p2align 0x4,,0x7
L_336451:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516428
.p2align 0x4,,0x7
L_336452:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516427
L_336453:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336451
.p2align 0x4
L_516427:
L_336454:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
L_336455:
	movl %ecx,0x0(%rbp)
	movq $0x1165,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r10,0x8(%rbp)
	addq $0x28,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516428:
L_336456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336457
.p2align 0x4
.long 0xC49
L_336457:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336452
.p2align 0x4
L_516429:
L_336458:
	movq 0x18(%rbp),%r10
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r9
	movl 0x48(%rbp),%ecx
	xchgq %r9,%r14
	movq %r15,%r11
	movq %r10,%r15
	jmp L_336455
.p2align 0x4
L_516430:
L_336459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336460
.p2align 0x4
.long 0x496C
L_336460:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336444
.p2align 0x4
L_516431:
.p2align 0x4,,0x7
L_336464:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517138
.p2align 0x4,,0x7
L_336465:
	cmpb $0x1,0x4C(%rbp)
	jne L_336467
L_338625:
	cmpq $0x1,0x20(%rbp)
	je L_516433
L_338626:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338627:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516433:
L_336467:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_517136
L_336468:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x30(%rbp),%r14
L_336469:
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movl 0x8(%r13),%ecx
L_336470:
	movq %r14,%r15
	andq $0x3,%r15
	jz L_516760
L_336471:
	movq %r14,0x70(%rbp)
	movq $0x1,0x68(%rbp)
	movq %r11,%r15
L_336472:
	cmpl $0x0,%ecx
	je L_516435
	cmpl $0x1,%ecx
	je L_516434
	jmp loop_3627
.p2align 0x4
L_516434:
L_337841:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne loop_3627
L_337842:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	jne loop_3627
L_337843:
	cmpq $0x1,0x70(%rbp)
	je loop_3627
L_337844:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516435:
L_336473:
	movq %r15,%r14
	andq $0x1,%r14
	jz L_516759
L_337810:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je x_2212
	cmpl $0x1,%r14d
	je L_516751
L_337811:
	cmpq $0x1,0x70(%rbp)
	jne L_516750
L_337813:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516749
L_337814:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
L_337815:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516748
.p2align 0x4,,0x7
L_337816:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516436
L_337817:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337815
.p2align 0x4
L_516436:
L_337818:
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_336481:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516747
.p2align 0x4,,0x7
L_336482:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_516437
L_336483:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq 0x68(%rbp),%r14
	jmp L_336469
.p2align 0x4
L_516437:
L_336484:
	movq 0x68(%rbp),%r14
	movq %r14,0x50(%rbp)
L_336485:
	cmpq $0x1,%r15
	je L_516746
L_336486:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_336487:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516745
.p2align 0x4,,0x7
L_336488:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_516438
L_336489:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336487
.p2align 0x4
L_516438:
L_336490:
	movq %r15,0x58(%rbp)
L_336491:
	cmpb $0x1,0x4D(%rbp)
	jne L_336493
L_337797:
	cmpq $0x1,0x50(%rbp)
	je L_516440
L_337798:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_337799:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516440:
L_336493:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r14
	je L_516723
	cmpq $0x2,%r14
	je L_516703
	cmpq $0x3,%r14
	je L_516688
	cmpq $0x5,%r14
	je L_516667
	cmpq $0x6,%r14
	je L_516639
	cmpq $0x7,%r14
	je L_516618
L_336494:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x221E,%r15
	je L_516602
	cmpq $0x221F,%r15
	je L_516532
	cmpq $0x2220,%r15
	je L_516458
	cmpq $0x2221,%r15
	je L_516444
L_336495:
	movq 0x0(%r14),%r15
	cmpq $0x1,0x50(%rbp)
	jne L_336496
L_336497:
	cmpq $0x1,0x58(%rbp)
	jne L_336496
L_336498:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x113A,%r13
	jne L_516441
L_336499:
	movq %r15,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516441:
L_336496:
	movq (globalObjptr+0x5778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516444:
L_337323:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,0x50(%rbp)
	jne L_337324
L_337325:
	cmpq $0x1,0x20(%rbp)
	jne L_337324
L_337327:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337324
L_337328:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_337324
L_337329:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne L_337324
L_337330:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
L_337331:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337324
L_337332:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10EB,%r15
	jne L_516451
L_337333:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E4,%r15
	jne L_516450
L_337337:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	jne L_516449
.p2align 0x4,,0x7
L_337361:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516448
.p2align 0x4,,0x7
L_337362:
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_336508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516447
.p2align 0x4,,0x7
L_336509:
	movq $0x1165,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r14d
	incl %r14d
	jo L_336510
L_336511:
	movl %r14d,0x0(%r11)
	movl 0x0(%r13),%r14d
	incl %r14d
	jo L_516445
L_336512:
	movl %r14d,0x0(%r13)
	movl $0x1,%ecx
	jmp L_336435
.p2align 0x4
L_516445:
L_336510:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516447:
L_336513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336514
.p2align 0x4
.long 0x4DF
L_336514:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_336509
.p2align 0x4
L_516448:
L_337363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337364
.p2align 0x4
.long 0xF2D
L_337364:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337362
.p2align 0x4
L_516449:
L_337338:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_337339:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_337340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516450:
L_337335:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516451:
L_337324:
	movq (globalObjptr+0x5800)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516458:
L_336739:
	movq 0x30(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpq $0x1,0x50(%rbp)
	je L_516494
L_336741:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336742
L_336743:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_336744:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336742
L_336745:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x112A,%r11
	jne L_336742
L_336746:
	movq 0x0(%r10),%r11
L_336747:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_336742
L_336748:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1111,%r10
	je L_516484
	cmpq $0x1113,%r10
	je L_516459
L_336742:
	movq (globalObjptr+0x57C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516459:
L_336841:
	movq 0x10(%r11),%r10
	movb 0x1(%r11),%r9b
	movq 0x8(%r11),%r8
	movb 0x0(%r11),%spl
	cmpb $0x2,%spl
	je L_516478
	cmpb $0x3,%spl
	je L_516472
	cmpb $0x4,%spl
	je L_516466
	cmpb $0x5,%spl
	je L_516460
	jmp L_336742
.p2align 0x4
L_516460:
L_337094:
L_337095:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337096:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337097:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337099:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337100:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337101:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1066:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_337102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516466:
L_337030:
L_337031:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337032:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337033:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337035:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337036:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337037:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1065:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_337038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516472:
L_336906:
L_336907:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_336908:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_336909:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_336911:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_336912:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_336913:
	movq %r8,0x80(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x88(%rbp)
	movq %r11,%r14
x_1064:
	movq %r15,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_336914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516478:
L_336842:
L_336843:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_336844:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_336845:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_336847:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_336848:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_336849:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1063:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_336850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516484:
L_336749:
	movq 0x10(%r11),%r10
	movb 0x0(%r11),%r9b
	movq 0x8(%r11),%r8
L_336750:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_336751:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_336752:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_336754:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_336755:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_336756:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1062:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_336757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516494:
L_337186:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336742
L_337187:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_337188:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336742
L_337189:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x112A,%r11
	jne L_336742
L_337190:
	movq 0x0(%r10),%r11
L_337191:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_336742
L_337192:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1111,%r10
	je L_516521
	cmpq $0x1113,%r10
	je L_516495
	jmp L_336742
.p2align 0x4
L_516495:
L_337246:
	movq 0x10(%r11),%r10
	movb 0x1(%r11),%r9b
	movb %r9b,0x4C(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x80(%rbp)
	movb 0x0(%r11),%r9b
	cmpb $0x2,%r9b
	je L_516515
	cmpb $0x3,%r9b
	je L_516509
	cmpb $0x4,%r9b
	je L_516503
	cmpb $0x5,%r9b
	je L_516496
	jmp L_336742
.p2align 0x4
L_516496:
L_337271:
L_337272:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337273:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337274:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337276:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337277:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337278:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x113A,%r10
	je L_516497
L_337279:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1066
.p2align 0x4
L_516497:
L_337280:
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x4D(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_337281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516503:
L_337263:
L_337264:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337265:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337266:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337268:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337269:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337270:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1065
.p2align 0x4
L_516509:
L_337255:
L_337256:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337257:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337258:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337260:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337261:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337262:
	movq %r14,0x88(%rbp)
	movq %r11,%r14
	jmp x_1064
.p2align 0x4
L_516515:
L_337247:
L_337248:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337249:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337250:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337252:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337253:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337254:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1063
.p2align 0x4
L_516521:
L_337193:
	movq 0x10(%r11),%r10
	movb 0x0(%r11),%r9b
	movb %r9b,0x30(%rbp)
	movq 0x8(%r11),%r8
	movq %r8,0x60(%rbp)
L_337194:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336742
L_337195:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336742
L_337196:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336742
L_337198:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336742
L_337199:
	movq 0x0(%r13),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,0x8(%r13)
	jne L_336742
L_337200:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	je L_516522
L_337201:
	movb %r9b,0x4C(%rbp)
	movq %r8,0x30(%rbp)
	movq %r10,0x60(%rbp)
	movq %r11,%r14
	jmp x_1062
.p2align 0x4
L_516522:
L_337202:
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x31(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516532:
L_336580:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
L_336581:
	movq 0x58(%rbp),%r9
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_336582
L_336583:
	movq 0x8(%r9),%r15
	movq 0x0(%r9),%r14
L_336584:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336582
L_336585:
	movq 0x8(%r14),%r9
	movq %r9,%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	movq %r9,%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_336582
L_336586:
	movq 0x0(%r11),%r14
L_336587:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_336582
L_336588:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1114,%r11
	jne L_336582
L_336589:
	movq 0x10(%r14),%r11
	movb 0x1(%r14),%r9b
	movb %r9b,0x10(%rbp)
	movb 0x0(%r14),%r9b
	movb %r9b,0x11(%rbp)
	movq 0x8(%r14),%r9
	movq %r9,0x30(%rbp)
L_336590:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336582
L_336591:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_336582
L_336592:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_336582
L_336593:
	cmpq $0x1,%r15
	jne L_516593
L_336594:
	movq 0x50(%rbp),%r9
	cmpq $0x1,%r9
	je L_516592
L_336595:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_336596:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	je L_516569
	cmpq $0x112E,%r10
	je L_516567
L_336597:
	cmpq $0x1,%r11
	je L_516533
L_336598:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	movq %r10,%r13
	jmp L_336596
.p2align 0x4
L_516533:
L_336599:
	movl $0x1,%ecx
L_336600:
	testl %ecx,%ecx
	jz L_516565
L_336601:
	cmpl $0x1,%ebx
	je callback_145
L_336602:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_336603
L_336604:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516540
L_336623:
	movb 0x11(%rbp),%r13b
	cmpb $0x4,%r13b
	je L_516539
	cmpb $0x6,%r13b
	je L_516534
L_336603:
	movq (globalObjptr+0x57B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516534:
L_336625:
	movb $0x3,0x11(%rbp)
.p2align 0x4,,0x7
L_336610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516538
.p2align 0x4,,0x7
L_336611:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x11(%rbp),%r14d
	movzbl 0x10(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516537
L_336612:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
L_336613:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516536
.p2align 0x4,,0x7
L_336614:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516535
L_336615:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336613
.p2align 0x4
L_516535:
L_336616:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_516536:
L_336617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336618
.p2align 0x4
.long 0x658
L_336618:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336614
.p2align 0x4
L_516537:
L_336619:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_516538:
L_336620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336621
.p2align 0x4
.long 0x565
L_336621:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336611
.p2align 0x4
L_516539:
L_336624:
	movb $0x2,0x11(%rbp)
	jmp L_336610
.p2align 0x4
L_516540:
L_336605:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_336606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
callback_145:
.p2align 0x4,,0x7
callback_2:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516564
.p2align 0x4,,0x7
L_336627:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_336510
L_336628:
	movl %r15d,0x0(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_516562
L_336629:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_336630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516561
.p2align 0x4,,0x7
L_336631:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516542
L_336632:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_336630
.p2align 0x4
L_516542:
L_336633:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_336634:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516558
L_336635:
	cmpq $0x1,0x10(%rbp)
	jne L_516553
L_336675:
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_336645:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516543
L_336646:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_336634
.p2align 0x4
L_516543:
L_336647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516552
.p2align 0x4,,0x7
L_336648:
	movq 0x10(%rbp),%r15
L_336649:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_516550
L_336650:
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516544
L_336651:
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336439
.p2align 0x4
L_516544:
L_336652:
	cmpq $0x1,%r15
	je L_516546
L_336653:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
L_336654:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516545
L_336656:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336439
.p2align 0x4
L_516545:
L_336655:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516546:
L_336657:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516549
L_336658:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_336659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516548
.p2align 0x4,,0x7
L_336660:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516547
L_336661:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336659
.p2align 0x4
L_516547:
L_336662:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
	jmp L_336455
.p2align 0x4
L_516548:
L_336663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336664
.p2align 0x4
.long 0xC49
L_336664:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336660
.p2align 0x4
L_516549:
L_336665:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
	jmp L_336455
.p2align 0x4
L_516550:
L_336666:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_516551
L_336667:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336659
.p2align 0x4
L_516551:
L_336668:
	movq 0x28(%rbp),%r10
	movq 0x38(%rbp),%r9
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r8
	xchgq %r9,%r14
	xchgq %r10,%r13
	movq %r15,%r11
	movq %r8,%r15
	jmp L_336455
.p2align 0x4
L_516552:
L_336669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336670
.p2align 0x4
.long 0x4972
L_336670:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336648
.p2align 0x4
L_516553:
L_336636:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_336637:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516557
.p2align 0x4,,0x7
L_336638:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516554
L_336639:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_336637
.p2align 0x4
L_516554:
L_336640:
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
L_336641:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516556
.p2align 0x4,,0x7
L_336642:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516555
L_336643:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336641
.p2align 0x4
L_516555:
L_336644:
	movq %r15,0x10(%rbp)
	jmp L_336645
.p2align 0x4
L_516556:
L_336671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336672
.p2align 0x4
.long 0xFA9
L_336672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336642
.p2align 0x4
L_516557:
L_336673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336674
.p2align 0x4
.long 0x21E2
L_336674:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336638
.p2align 0x4
L_516558:
L_336676:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516559
L_336677:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
	jmp L_336634
.p2align 0x4
L_516559:
L_336678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516560
.p2align 0x4,,0x7
L_336679:
	movq 0x10(%rbp),%r15
	jmp L_336649
.p2align 0x4
L_516560:
L_336680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336681
.p2align 0x4
.long 0x4972
L_336681:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336679
.p2align 0x4
L_516561:
L_336682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336683
.p2align 0x4
.long 0xFA9
L_336683:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336631
.p2align 0x4
L_516562:
L_336684:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_336649
.p2align 0x4
L_516564:
L_336685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336686
.p2align 0x4
.long 0x4973
L_336686:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336627
.p2align 0x4
L_516565:
L_336687:
	cmpl $0x1,%ebx
	je callback_2
L_336688:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x113A,%r11
	jne L_336602
L_336689:
	movb 0x0(%r13),%r11b
	cmpb $0xA,%r11b
	je callback_2
	cmpb $0xB,%r11b
	je callback_2
	jmp L_336602
.p2align 0x4
L_516567:
L_336735:
	cmpq $0x1,%r11
	je L_336600
L_336736:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_336596
.p2align 0x4
L_516569:
L_336693:
	movq 0x0(%r13),%r10
L_336694:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_516591
L_336698:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x110C,%r13
	je L_516581
	cmpq $0x1114,%r13
	je L_516571
	movq %r14,(localObjptr+0x8)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x20)(%rip)
L_336695:
	cmpq $0x1,%r11
	je L_516570
L_336696:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x8)(%rip),%r14
	movl (localWord32+0x0)(%rip),%ebx
	jmp L_336596
.p2align 0x4
L_516570:
L_336697:
	movl $0x1,%ecx
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x8)(%rip),%r14
	movl (localWord32+0x0)(%rip),%ebx
	jmp L_336600
.p2align 0x4
L_516571:
L_336717:
	movb 0x0(%r10),%r9b
	cmpb $0x3,%r9b
	je L_516577
	cmpb $0x5,%r9b
	je L_516573
L_336718:
	cmpq $0x1,%r11
	je L_516572
L_336719:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516572:
L_336720:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516573:
L_336728:
	testl %ecx,%ecx
	jz L_516575
L_336732:
	cmpq $0x1,%r11
	je L_516574
L_336733:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516574:
L_336734:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516575:
L_336729:
	cmpq $0x1,%r11
	je L_516576
L_336730:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516576:
L_336731:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516577:
L_336721:
	testl %ecx,%ecx
	jz L_516579
L_336725:
	cmpq $0x1,%r11
	je L_516578
L_336726:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516578:
L_336727:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516579:
L_336722:
	cmpq $0x1,%r11
	je L_516580
L_336723:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516580:
L_336724:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516581:
L_336699:
	movb 0x0(%r10),%r9b
	cmpb $0xA,%r9b
	je L_516587
	cmpb $0xB,%r9b
	je L_516583
L_336700:
	cmpq $0x1,%r11
	je L_516582
L_336701:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516582:
L_336702:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516583:
L_336710:
	testl %ecx,%ecx
	jz L_516585
L_336714:
	cmpq $0x1,%r11
	je L_516584
L_336715:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516584:
L_336716:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516585:
L_336711:
	cmpq $0x1,%r11
	je L_516586
L_336712:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516586:
L_336713:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516587:
L_336703:
	testl %ecx,%ecx
	jz L_516589
L_336707:
	cmpq $0x1,%r11
	je L_516588
L_336708:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516588:
L_336709:
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516589:
L_336704:
	cmpq $0x1,%r11
	je L_516590
L_336705:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336596
.p2align 0x4
L_516590:
L_336706:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336600
.p2align 0x4
L_516591:
	movq %r15,(localObjptr+0x20)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_336695
.p2align 0x4
L_516592:
L_336738:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq %r10,%r15
	jmp L_336600
.p2align 0x4
L_516593:
L_336582:
	movq (globalObjptr+0x57A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516602:
L_336520:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x50(%rbp)
	jne L_336521
L_336522:
	cmpq $0x1,0x20(%rbp)
	jne L_336521
L_336524:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_336521
L_336525:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_336521
L_336526:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne L_516613
L_336527:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516612
L_336528:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_336529:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516611
.p2align 0x4,,0x7
L_336530:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x48(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_516610
L_336531:
	movq $0x256B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516603
L_336532:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_336529
.p2align 0x4
L_516603:
L_336533:
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_336534:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516609
.p2align 0x4,,0x7
L_336535:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516604
L_336536:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336534
.p2align 0x4
L_516604:
L_336537:
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_336538:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516608
.p2align 0x4,,0x7
L_336539:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516607
L_336540:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_516605
L_336541:
	movq $0x2273,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_516605:
L_336542:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	jne L_516606
L_336544:
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_516606:
L_336543:
	movq (globalObjptr+0x5788)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516607:
L_336566:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_516608:
L_336567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336568
.p2align 0x4
.long 0x11C1
L_336568:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336539
.p2align 0x4
L_516609:
L_336569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336570
.p2align 0x4
.long 0x61E
L_336570:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336535
.p2align 0x4
L_516610:
L_336571:
	movq %r14,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516611:
L_336577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336578
.p2align 0x4
.long 0x80A
L_336578:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336530
.p2align 0x4
L_516612:
L_336579:
	movq $0x1,0x10(%rbp)
	jmp L_336538
.p2align 0x4
L_516613:
L_336521:
	movq (globalObjptr+0x5780)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516618:
L_337709:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337710
L_337711:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337712:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337710
L_337713:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337710
L_337714:
	movq 0x0(%r15),%r13
L_337715:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337710
L_337716:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337710
L_337717:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337710
L_337719:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337710
L_337720:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337721:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337710
L_337722:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337723:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337710
L_337724:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337710
L_337725:
	movq 0x0(%r11),%r13
L_337726:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337710
L_337727:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1111,%r11
	je L_516625
	cmpq $0x1113,%r11
	je L_516622
	cmpq $0x1114,%r11
	je L_516619
L_337710:
	movq (globalObjptr+0x57F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516619:
L_337774:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337710
L_337775:
	cmpq $0x1,%r14
	jne L_337710
L_337776:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337778:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516622:
L_337751:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337710
L_337752:
	cmpq $0x1,%r14
	jne L_337710
L_337753:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337755:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516625:
L_337728:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337710
L_337729:
	cmpq $0x1,%r14
	jne L_337710
L_337730:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337732:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516639:
L_337653:
	cmpq $0x1,0x50(%rbp)
	jne L_337654
L_337656:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337654
L_337657:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337658:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337654
L_337659:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337654
L_337660:
	movq 0x0(%r15),%r13
L_337661:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337654
L_337662:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_337654
L_337663:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r10
	movb 0x0(%r13),%r9b
	cmpq $0x1,%r11
	jne L_337654
L_337665:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337654
L_337666:
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r14)
	jne L_337654
L_337667:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x113A,%r11
	jne L_516657
L_337668:
	movq 0x10(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movb 0x0(%r14),%r11b
	cmpb $0x8,%r11b
	je L_516654
	cmpb $0x9,%r11b
	je L_516640
L_337669:
	movq (globalObjptr+0x57E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516640:
L_337703:
L_337704:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_516653
L_337706:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516650
L_337707:
	movq 0x0(%r10),%r11
	movb $0x7,%cl
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
L_337698:
L_337699:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_337700
L_337701:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x10EB,%r10
	jne L_516648
L_337678:
	cmpq $0x1,%r11
	je L_516647
L_337679:
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10E3,%r11
	je L_516646
	cmpq $0x10E4,%r11
	je L_516644
L_337680:
	movb %cl,0x18(%rbp)
L_337681:
	movq $0x221B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516643
L_337682:
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x40(%rbp)
L_337683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516642
.p2align 0x4,,0x7
L_337684:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516641
L_337685:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_337683
.p2align 0x4
L_516641:
L_337687:
	movq $0x2275,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r15,0x18(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_516642:
L_337688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_337689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337689
.p2align 0x4
.long 0x11C1
L_337689:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_337684
.p2align 0x4
L_516643:
L_337690:
	xchgq %r13,%r15
	jmp L_337687
.p2align 0x4
L_516644:
L_337692:
	movq 0x0(%r10),%r11
	cmpq $0x1,0x0(%r11)
	je L_516645
L_337693:
	movb %cl,0x18(%rbp)
	jmp L_337681
.p2align 0x4
L_516645:
L_337694:
	movb %cl,0x18(%rbp)
	movq %r13,%r15
	jmp L_337681
.p2align 0x4
L_516646:
L_337691:
	movb %cl,0x18(%rbp)
	jmp L_337681
.p2align 0x4
L_516647:
L_337695:
	movb %cl,0x18(%rbp)
	jmp L_337681
.p2align 0x4
L_516648:
L_337700:
	movb %cl,0x18(%rbp)
	movq %r13,%r15
	jmp L_337681
.p2align 0x4
L_516650:
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
L_337705:
	movb $0x7,%cl
L_337673:
L_337674:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337675
L_337676:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_516651
L_337677:
	movq $0x1,%r11
	jmp L_337678
.p2align 0x4
L_516651:
L_337675:
	movq (globalObjptr+0x57F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516653:
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
	jmp L_337705
.p2align 0x4
L_516654:
L_337670:
L_337671:
	movq %r10,%r8
	andq $0x3,%r8
	jnz L_516656
L_337696:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r8
	shrq $0x1,%r8
	cmpq $0x10EB,%r8
	jne L_516655
L_337697:
	movq 0x0(%r10),%r8
	movb $0x6,%cl
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movq %r8,%r11
	movb %r9b,%dl
	jmp L_337698
.p2align 0x4
L_516655:
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movb %r9b,%dl
L_337672:
	movb $0x6,%cl
	jmp L_337673
.p2align 0x4
L_516656:
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movb %r9b,%dl
	jmp L_337672
.p2align 0x4
L_516657:
L_337654:
	movq (globalObjptr+0x57E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516667:
L_337553:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337554
L_337555:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337556:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337554
L_337557:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337554
L_337558:
	movq 0x0(%r15),%r13
L_337559:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337554
L_337560:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337554
L_337561:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337554
L_337563:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337554
L_337564:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337565:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337554
L_337566:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337567:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337554
L_337568:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337554
L_337569:
	movq 0x0(%r11),%r13
L_337570:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337554
L_337571:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1111,%r11
	je L_516674
	cmpq $0x1113,%r11
	je L_516671
	cmpq $0x1114,%r11
	je L_516668
L_337554:
	movq (globalObjptr+0x57D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516668:
L_337626:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movb 0x0(%r13),%r10b
	movb %r10b,0x32(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337554
L_337627:
	cmpq $0x1,%r14
	jne L_337554
L_337628:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337630:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516671:
L_337599:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movb 0x0(%r13),%r10b
	movb %r10b,0x32(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337554
L_337600:
	cmpq $0x1,%r14
	jne L_337554
L_337601:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337603:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516674:
L_337572:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337554
L_337573:
	cmpq $0x1,%r14
	jne L_337554
L_337574:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337576:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516688:
L_337514:
	movq 0x58(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337515
L_337516:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
L_337517:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337515
L_337518:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337515
L_337519:
	cmpq $0x1,%r13
	jne L_337515
L_337521:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337515
L_337522:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_516697
L_337523:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_337545
L_337524:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_337525:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	je L_516692
	cmpq $0x112E,%r13
	je L_516689
	jmp callback_2
.p2align 0x4
L_516689:
L_337548:
	cmpq $0x1,%r14
	je L_516690
L_337549:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_337525
.p2align 0x4
L_516690:
L_337545:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	je callback_2
L_337528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337529
L_337539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_337540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337540
.p2align 0x4
.long 0x499B
L_337540:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_337529:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_516692:
L_337526:
	movq 0x0(%r15),%r13
L_337527:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337528
L_337541:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_516693
	cmpq $0x110C,%r15
	je callback_2
	jmp L_337528
.p2align 0x4
L_516693:
L_337542:
	cmpq $0x1,%r14
	je L_337545
L_337543:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_337525
.p2align 0x4
L_516697:
L_337515:
	movq (globalObjptr+0x57B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516703:
L_337464:
	cmpq $0x1,0x50(%rbp)
	jne L_337465
L_337467:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337465
L_337468:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337469:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337465
L_337470:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337465
L_337471:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r11
	jne L_337465
L_337473:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337465
L_337474:
	movq 0x8(%r14),%r15
	movq %r15,%r11
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_337475:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_337465
L_337476:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
L_337477:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_337465
L_337478:
	movq 0x8(%r14),%r11
	movq %r11,%r10
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337465
L_337479:
	movq 0x0(%r11),%r14
L_337480:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_337465
L_337481:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x110D,%r11
	jne L_337465
L_337482:
	movq 0x8(%r14),%r11
	cmpq $0x1,%r10
	jne L_337465
L_337484:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337465
L_337485:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_337465
L_337486:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne L_516708
L_337487:
L_337488:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337489
L_337490:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516706
	cmpq $0x1110,%r15
	je L_516705
	cmpq $0x1114,%r15
	je L_516704
L_337489:
	movq (globalObjptr+0x57A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516704:
L_337512:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq %r11,%r15
L_337492:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_337493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516705:
L_337511:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq %r11,%r15
	jmp L_337492
.p2align 0x4
L_516706:
L_337491:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq %r11,%r15
	jmp L_337492
.p2align 0x4
L_516708:
L_337465:
	movq (globalObjptr+0x5798)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516723:
L_337376:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337377
L_337378:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337379:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337377
L_337380:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337377
L_337381:
	movq 0x0(%r15),%r13
L_337382:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337377
L_337383:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne L_337377
L_337384:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337377
L_337386:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337377
L_337387:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337388:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337377
L_337389:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337390:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337377
L_337391:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337377
L_337392:
	movq 0x0(%r11),%r13
L_337393:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337377
L_337394:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10F5,%r11
	je L_516730
	cmpq $0x10F6,%r11
	je L_516727
	cmpq $0x10F9,%r11
	je L_516724
L_337377:
	movq (globalObjptr+0x5790)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516724:
L_337441:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337377
L_337442:
	cmpq $0x1,%r14
	jne L_337377
L_337443:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337445:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516727:
L_337418:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337377
L_337419:
	cmpq $0x1,%r14
	jne L_337377
L_337420:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337422:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516730:
L_337395:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337377
L_337396:
	cmpq $0x1,%r14
	jne L_337377
L_337397:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337399:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516745:
L_337802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337803
.p2align 0x4
.long 0x497B
L_337803:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_336488
.p2align 0x4
L_516746:
L_337804:
	movq $0x1,0x58(%rbp)
	jmp L_336491
.p2align 0x4
L_516747:
L_337805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337806
.p2align 0x4
.long 0x497B
L_337806:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_336482
.p2align 0x4
L_516748:
L_337819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337820
.p2align 0x4
.long 0xD3C
L_337820:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337816
.p2align 0x4
L_516749:
L_337821:
	movq $0x1,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_516750:
L_337812:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516751:
L_337830:
	cmpq $0x1,0x70(%rbp)
	jne L_516755
L_337832:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516754
L_337833:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
L_337834:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516753
.p2align 0x4,,0x7
L_337835:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516752
L_337836:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337834
.p2align 0x4
L_516752:
L_337837:
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_516753:
L_337838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337839
.p2align 0x4
.long 0xD3C
L_337839:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337835
.p2align 0x4
L_516754:
L_337840:
	movq $0x1,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_516755:
L_337831:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
x_2212:
x_1067:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
x_1068:
	cmpq $0x1,%r15
	je L_516758
L_337822:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_337823:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516757
.p2align 0x4,,0x7
L_337824:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_516756
L_337825:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_337823
.p2align 0x4
L_516756:
L_337826:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_516757:
L_337827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337828
.p2align 0x4
.long 0xD3C
L_337828:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337824
.p2align 0x4
L_516758:
L_337829:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_516759:
L_336474:
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_5
.p2align 0x4
L_516760:
L_337846:
	movl %ecx,0x78(%rbp)
	movq %r11,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x88(%rbp)
L_337847:
	movl 0x78(%rbp),%r15d
	cmpl $0x0,%r15d
	je L_516964
	cmpl $0x1,%r15d
	je L_516814
L_337848:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516761
	jmp *jumpTable_844(,%rax,8)
.data
.p2align 0x4
jumpTable_844:
.quad L_337855,L_516809,L_516796,L_337849,L_516793,L_516791,L_516789,L_337849,L_516785,L_516783,L_516779,L_337849,L_516776,L_516775,L_337855
.text
.p2align 0x4
L_516761:
L_337849:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516773
	cmpq $0x2224,%r14
	je L_516762
L_337850:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_337851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516762:
L_337873:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_337874:
	movq 0x0(%r14),%r13
L_337875:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337876:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_337877:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_337878:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_337879:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_337880:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516772
	cmpb $0x6,%r11b
	je L_516763
	jmp loop_3627
.p2align 0x4
L_516763:
	movq %r13,%r14
L_337882:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_337883:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516771
.p2align 0x4,,0x7
L_337855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516770
.p2align 0x4,,0x7
L_337856:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336510
L_337857:
	cmpl $0x0,%ecx
	jl L_516767
L_337858:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516765
L_337859:
	xorq %r15,%r15
L_337860:
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_337861:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516764
L_337862:
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_336472
.p2align 0x4
L_516764:
L_337863:
	movl %ecx,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337847
.p2align 0x4
L_516765:
L_337864:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %ecx,%ebx
	movl %r14d,%ecx
L_337865:
	decl %ecx
	jo L_336510
L_337866:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ebx,%ecx
	jmp L_337860
.p2align 0x4
L_516767:
L_337867:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516768
L_337868:
	xorq %r15,%r15
	xorl %ecx,%ecx
	jmp L_337860
.p2align 0x4
L_516768:
L_337869:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	xorl %ebx,%ebx
	jmp L_337865
.p2align 0x4
L_516770:
L_337870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_337871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337871
.p2align 0x4
.long 0x499D
L_337871:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_337856
.p2align 0x4
L_516771:
L_337884:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516772:
	movq %r13,%r14
	jmp L_337882
.p2align 0x4
L_516773:
L_337872:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_337851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516775:
L_337971:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337972:
	movq 0x0(%r15),%r14
L_337973:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337974:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_337975:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516776:
L_337965:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337966:
	movq 0x0(%r15),%r14
L_337967:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337968:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_337855
	cmpq $0x110E,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516779:
L_337958:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337959:
	movq 0x0(%r15),%r14
L_337960:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337961:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_337855
	cmpq $0x10F6,%r15
	je L_337855
	cmpq $0x10F9,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516783:
L_337956:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516785:
L_337949:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337950:
	movq 0x0(%r15),%r14
L_337951:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337952:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_337855
	cmpq $0x1113,%r15
	je L_337855
	cmpq $0x1114,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516789:
L_337944:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337945:
	movq 0x0(%r15),%r14
L_337946:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337947:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516791:
L_337939:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337940:
	movq 0x0(%r15),%r14
L_337941:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337942:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516793:
L_337931:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337932:
	movq 0x0(%r15),%r14
L_337933:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337934:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_337935:
	movq 0x10(%r14),%r15
L_337936:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337937:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516796:
L_337901:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337902:
	movq 0x0(%r15),%r14
L_337903:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337904:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_337905:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_337906:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_337907
L_337920:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516802
L_337921:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516800
	cmpq $0x10E4,%r14
	je L_516798
L_337922:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336443
L_337923:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516798:
L_337928:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516800:
L_337925:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_337926:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516802:
L_337907:
L_337908:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337909:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_337910:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516806
	cmpq $0x10E4,%r15
	je L_516804
L_337911:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_337912:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516804:
L_337917:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516806:
L_337914:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_337915:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516809:
L_337891:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337892:
	movq 0x0(%r15),%r14
L_337893:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337894:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516812
	cmpq $0x1110,%r15
	je L_516811
	cmpq $0x1114,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
L_516811:
L_337898:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_337855
.p2align 0x4
L_516812:
L_337895:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_337855
.p2align 0x4
L_516814:
L_338249:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_516867
L_338250:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516815
	jmp *jumpTable_845(,%rax,8)
.data
.p2align 0x4
jumpTable_845:
.quad L_338257,L_516862,L_516849,L_338251,L_516846,L_516844,L_516842,L_338251,L_516838,L_516836,L_516832,L_338251,L_516829,L_516828,L_338257
.text
.p2align 0x4
L_516815:
L_338251:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516826
	cmpq $0x2224,%r14
	je L_516816
L_338252:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516816:
L_338273:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338274:
	movq 0x0(%r14),%r13
L_338275:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338276:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338277:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338278:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338279:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338280:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516825
	cmpb $0x6,%r11b
	je L_516817
	jmp loop_3627
.p2align 0x4
L_516817:
	movq %r13,%r14
L_338282:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338283:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516824
.p2align 0x4,,0x7
L_338257:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516823
.p2align 0x4,,0x7
L_338258:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336510
L_338259:
	cmpl $0x0,%ecx
	jl L_516820
L_338260:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516819
L_338263:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_338264:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jz L_516818
L_338265:
	xorq %r13,%r13
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_336472
.p2align 0x4
L_516818:
L_338266:
	movl %ecx,0x78(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x0,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_337847
.p2align 0x4
L_516819:
L_338261:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516820:
L_338267:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516821
L_338269:
	xorl %ecx,%ecx
	jmp L_338263
.p2align 0x4
L_516821:
L_338268:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516823:
L_338270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338271
.p2align 0x4
.long 0x499D
L_338271:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338258
.p2align 0x4
L_516824:
L_338284:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516825:
	movq %r13,%r14
	jmp L_338282
.p2align 0x4
L_516826:
L_338272:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516828:
L_338371:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338372:
	movq 0x0(%r15),%r14
L_338373:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338374:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338375:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516829:
L_338365:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338366:
	movq 0x0(%r15),%r14
L_338367:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338368:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338257
	cmpq $0x110E,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516832:
L_338358:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338359:
	movq 0x0(%r15),%r14
L_338360:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338361:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338257
	cmpq $0x10F6,%r15
	je L_338257
	cmpq $0x10F9,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516836:
L_338356:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516838:
L_338349:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338350:
	movq 0x0(%r15),%r14
L_338351:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338352:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338257
	cmpq $0x1113,%r15
	je L_338257
	cmpq $0x1114,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516842:
L_338344:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338345:
	movq 0x0(%r15),%r14
L_338346:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338347:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516844:
L_338339:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338340:
	movq 0x0(%r15),%r14
L_338341:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338342:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516846:
L_338331:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338332:
	movq 0x0(%r15),%r14
L_338333:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338334:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338335:
	movq 0x10(%r14),%r15
L_338336:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338337:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516849:
L_338301:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338302:
	movq 0x0(%r15),%r14
L_338303:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338304:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338305:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338306:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338307
L_338320:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516855
L_338321:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516853
	cmpq $0x10E4,%r14
	je L_516851
L_338322:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336443
L_338323:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516851:
L_338328:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516853:
L_338325:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338326:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516855:
L_338307:
L_338308:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338309:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338310:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516859
	cmpq $0x10E4,%r15
	je L_516857
L_338311:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338312:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516857:
L_338317:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516859:
L_338314:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338315:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516862:
L_338291:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338292:
	movq 0x0(%r15),%r14
L_338293:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338294:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516865
	cmpq $0x1110,%r15
	je L_516864
	cmpq $0x1114,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
L_516864:
L_338298:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338257
.p2align 0x4
L_516865:
L_338295:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338257
.p2align 0x4
L_516867:
L_338378:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x7C(%rbp)
	cmpl $0x1,%r14d
	je L_516919
L_338379:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516868
	jmp *jumpTable_846(,%rax,8)
.data
.p2align 0x4
jumpTable_846:
.quad L_338386,L_516914,L_516901,L_338380,L_516898,L_516896,L_516894,L_338380,L_516890,L_516888,L_516884,L_338380,L_516881,L_516880,L_338386
.text
.p2align 0x4
L_516868:
L_338380:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516878
	cmpq $0x2224,%r14
	je L_516869
L_338381:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516869:
L_338399:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338400:
	movq 0x0(%r14),%r13
L_338401:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338402:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338403:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338404:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338405:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338406:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516877
	cmpb $0x6,%r11b
	je L_516870
	jmp loop_3627
.p2align 0x4
L_516870:
	movq %r13,%r14
L_338408:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338409:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516876
.p2align 0x4,,0x7
L_338386:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516875
.p2align 0x4,,0x7
L_338387:
	movl 0x78(%rbp),%ebx
	decl %ebx
	jo L_336510
L_338388:
	cmpl $0x0,%ebx
	jl L_516873
L_338389:
	movl 0x7C(%rbp),%ecx
L_338390:
	decl %ecx
	jo L_336510
L_338391:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_338392:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516871
L_338393:
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	movl %ebx,%ecx
	jmp L_336472
.p2align 0x4
L_516871:
L_338394:
	movl %ebx,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337847
.p2align 0x4
L_516873:
L_338395:
	movl 0x7C(%rbp),%ecx
	xorl %ebx,%ebx
	jmp L_338390
.p2align 0x4
L_516875:
L_338396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338397
.p2align 0x4
.long 0x499D
L_338397:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338387
.p2align 0x4
L_516876:
L_338410:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516877:
	movq %r13,%r14
	jmp L_338408
.p2align 0x4
L_516878:
L_338398:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516880:
L_338497:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338498:
	movq 0x0(%r15),%r14
L_338499:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338500:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338501:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516881:
L_338491:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338492:
	movq 0x0(%r15),%r14
L_338493:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338494:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338386
	cmpq $0x110E,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516884:
L_338484:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338485:
	movq 0x0(%r15),%r14
L_338486:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338487:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338386
	cmpq $0x10F6,%r15
	je L_338386
	cmpq $0x10F9,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516888:
L_338482:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516890:
L_338475:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338476:
	movq 0x0(%r15),%r14
L_338477:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338478:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338386
	cmpq $0x1113,%r15
	je L_338386
	cmpq $0x1114,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516894:
L_338470:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338471:
	movq 0x0(%r15),%r14
L_338472:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338473:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516896:
L_338465:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338466:
	movq 0x0(%r15),%r14
L_338467:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338468:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516898:
L_338457:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338458:
	movq 0x0(%r15),%r14
L_338459:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338460:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338461:
	movq 0x10(%r14),%r15
L_338462:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338463:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516901:
L_338427:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338428:
	movq 0x0(%r15),%r14
L_338429:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338430:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338431:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338432:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338433
L_338446:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516907
L_338447:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516905
	cmpq $0x10E4,%r14
	je L_516903
L_338448:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336443
L_338449:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516903:
L_338454:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516905:
L_338451:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338452:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516907:
L_338433:
L_338434:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338436:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516911
	cmpq $0x10E4,%r15
	je L_516909
L_338437:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338438:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516909:
L_338443:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516911:
L_338440:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338441:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516914:
L_338417:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338418:
	movq 0x0(%r15),%r14
L_338419:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338420:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516917
	cmpq $0x1110,%r15
	je L_516916
	cmpq $0x1114,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
L_516916:
L_338424:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338386
.p2align 0x4
L_516917:
L_338421:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338386
.p2align 0x4
L_516919:
L_338504:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516920
	jmp *jumpTable_847(,%rax,8)
.data
.p2align 0x4
jumpTable_847:
.quad L_338511,L_516959,L_516946,L_338505,L_516944,L_516943,L_516942,L_338505,L_516938,L_516937,L_516933,L_338505,L_516930,L_516929,L_338511
.text
.p2align 0x4
L_516920:
L_338505:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516927
	cmpq $0x2224,%r14
	je L_516921
L_338506:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516921:
L_338519:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338520:
	movq 0x0(%r14),%r13
L_338521:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338522:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338523:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338524:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338525:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338526:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516926
	cmpb $0x6,%r11b
	je L_516922
	jmp loop_3627
.p2align 0x4
L_516922:
	movq %r13,%r14
L_338528:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338529:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516925
.p2align 0x4,,0x7
L_338511:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
L_338512:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516924
.p2align 0x4,,0x7
L_338513:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516923
L_338514:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_338512
.p2align 0x4
L_516923:
L_338515:
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_516924:
L_338516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_338517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338517
.p2align 0x4
.long 0xD3C
L_338517:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_338513
.p2align 0x4
L_516925:
L_338530:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516926:
	movq %r13,%r14
	jmp L_338528
.p2align 0x4
L_516927:
L_338518:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516929:
L_338617:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338618:
	movq 0x0(%r15),%r14
L_338619:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338620:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338621:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516930:
L_338611:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338612:
	movq 0x0(%r15),%r14
L_338613:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338614:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_516932
	cmpq $0x110E,%r15
	je L_516931
	jmp loop_3627
.p2align 0x4
L_516931:
L_338616:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516932:
L_338615:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516933:
L_338604:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338605:
	movq 0x0(%r15),%r14
L_338606:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338607:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_516936
	cmpq $0x10F6,%r15
	je L_516935
	cmpq $0x10F9,%r15
	je L_516934
	jmp loop_3627
.p2align 0x4
L_516934:
L_338610:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516935:
L_338609:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516936:
L_338608:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516937:
L_338602:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	jne loop_3627
L_338603:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516938:
L_338595:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338596:
	movq 0x0(%r15),%r14
L_338597:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338598:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_516941
	cmpq $0x1113,%r15
	je L_516940
	cmpq $0x1114,%r15
	je L_516939
	jmp loop_3627
.p2align 0x4
L_516939:
L_338601:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516940:
L_338600:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516941:
L_338599:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516942:
L_338590:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338591:
	movq 0x0(%r15),%r14
L_338592:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338593:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338594:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516943:
L_338585:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338586:
	movq 0x0(%r15),%r14
L_338587:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338588:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne loop_3627
L_338589:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516944:
L_338577:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338578:
	movq 0x0(%r15),%r14
L_338579:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338580:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338581:
	movq 0x10(%r14),%r15
L_338582:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338583:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338584:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516946:
L_338547:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338548:
	movq 0x0(%r15),%r14
L_338549:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338550:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338551:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338552:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338553
L_338566:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516952
L_338567:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516950
	cmpq $0x10E4,%r14
	je L_516948
L_338568:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336443
L_338569:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516948:
L_338574:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338511
	jmp loop_3627
.p2align 0x4
L_516950:
L_338571:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338572:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516952:
L_338553:
L_338554:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338555:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338556:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516956
	cmpq $0x10E4,%r15
	je L_516954
L_338557:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338558:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516954:
L_338563:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338511
	jmp loop_3627
.p2align 0x4
L_516956:
L_338560:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338561:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_516959:
L_338537:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338538:
	movq 0x0(%r15),%r14
L_338539:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338540:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516962
	cmpq $0x1110,%r15
	je L_516961
	cmpq $0x1114,%r15
	je L_516960
	jmp loop_3627
.p2align 0x4
L_516960:
L_338546:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338512
.p2align 0x4
L_516961:
L_338544:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338511
.p2align 0x4
L_516962:
L_338541:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338511
.p2align 0x4
L_516964:
L_337978:
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_517135
L_337989:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x78(%rbp)
	cmpl $0x0,%r15d
	je x_2213
	cmpl $0x1,%r15d
	je L_517050
L_337990:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516965
	jmp *jumpTable_848(,%rax,8)
.data
.p2align 0x4
jumpTable_848:
.quad L_338006,L_517040,L_517022,L_337991,L_517015,L_517011,L_517007,L_337991,L_517001,L_516999,L_516993,L_337991,L_516988,L_516984,L_338006
.text
.p2align 0x4
L_516965:
L_337991:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516982
	cmpq $0x2224,%r14
	je L_516966
L_337992:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_337993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516966:
L_338015:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337996
L_338016:
	movq 0x0(%r14),%r13
L_338017:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_337996
L_338018:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne L_337996
L_338019:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338020:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337996
L_338021:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne L_337996
L_338022:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516976
	cmpb $0x6,%r11b
	je L_516970
.p2align 0x4,,0x7
L_337996:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_516969
L_337997:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_337998:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516968
.p2align 0x4,,0x7
L_337999:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516967
L_338000:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337998
.p2align 0x4
L_516967:
L_338001:
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_516968:
L_338002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_338003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338003
.p2align 0x4
.long 0x49A0
L_338003:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_337999
.p2align 0x4
L_516969:
L_338004:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_516970:
	movq %r13,%r14
L_338024:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_337996
L_338025:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516974
.p2align 0x4,,0x7
L_338006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516973
.p2align 0x4,,0x7
L_338007:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336510
L_338008:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_338009:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516971
L_338010:
	xorl %ecx,%ecx
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_336472
.p2align 0x4
L_516971:
L_338011:
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337847
.p2align 0x4
L_516973:
L_338012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338013
.p2align 0x4
.long 0x499D
L_338013:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338007
.p2align 0x4
L_516974:
L_338026:
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516976:
	movq %r13,%r14
	jmp L_338024
.p2align 0x4
L_516982:
L_338014:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_337993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516984:
L_338113:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338114:
	movq 0x0(%r15),%r14
L_338115:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338116:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne L_337996
L_338117:
	movq 0x10(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516988:
L_338107:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338108:
	movq 0x0(%r15),%r14
L_338109:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338110:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338006
	cmpq $0x110E,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_516993:
L_338100:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338101:
	movq 0x0(%r15),%r14
L_338102:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338103:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338006
	cmpq $0x10F6,%r15
	je L_338006
	cmpq $0x10F9,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_516999:
L_338098:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338006
	jmp L_337996
.p2align 0x4
L_517001:
L_338091:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338092:
	movq 0x0(%r15),%r14
L_338093:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338094:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338006
	cmpq $0x1113,%r15
	je L_338006
	cmpq $0x1114,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_517007:
L_338086:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338087:
	movq 0x0(%r15),%r14
L_338088:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338089:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_517011:
L_338081:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338082:
	movq 0x0(%r15),%r14
L_338083:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338084:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_517015:
L_338073:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338074:
	movq 0x0(%r15),%r14
L_338075:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338076:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337996
L_338077:
	movq 0x10(%r14),%r15
L_338078:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337996
L_338079:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338006
	jmp L_337996
.p2align 0x4
L_517022:
L_338043:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338044:
	movq 0x0(%r15),%r14
L_338045:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338046:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_337996
L_338047:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338048:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338049
L_338062:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_517028
L_338063:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_517026
	cmpq $0x10E4,%r14
	je L_517024
L_338064:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517023
L_338065:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337998
.p2align 0x4
L_517023:
L_338066:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517024:
L_338070:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338006
	jmp L_337996
.p2align 0x4
L_517026:
L_338067:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517027
L_338068:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337998
.p2align 0x4
L_517027:
L_338069:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517028:
L_338049:
L_338050:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337996
L_338051:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_337996
L_338052:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_517032
	cmpq $0x10E4,%r15
	je L_517030
L_338053:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517029
L_338054:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337998
.p2align 0x4
L_517029:
L_338055:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517030:
L_338059:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338006
	jmp L_337996
.p2align 0x4
L_517032:
L_338056:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517033
L_338057:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337998
.p2align 0x4
L_517033:
L_338058:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517040:
L_338033:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337996
L_338034:
	movq 0x0(%r15),%r14
L_338035:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337996
L_338036:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_517044
	cmpq $0x1110,%r15
	je L_517042
	cmpq $0x1114,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
L_517042:
L_338040:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_337996
	jmp L_338006
.p2align 0x4
L_517044:
L_338037:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_337996
	cmpb $0x1,%r15b
	je L_337996
	jmp L_338006
.p2align 0x4
L_517050:
L_338120:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_517051
	jmp *jumpTable_849(,%rax,8)
.data
.p2align 0x4
jumpTable_849:
.quad L_338136,L_517125,L_517107,L_338121,L_517100,L_517096,L_517092,L_338121,L_517086,L_517084,L_517078,L_338121,L_517073,L_517069,L_338136
.text
.p2align 0x4
L_517051:
L_338121:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_517067
	cmpq $0x2224,%r14
	je L_517052
L_338122:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_338123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_517052:
L_338144:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_338126
L_338145:
	movq 0x0(%r14),%r13
L_338146:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338126
L_338147:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne L_338126
L_338148:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338149:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_338126
L_338150:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne L_338126
L_338151:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_517061
	cmpb $0x6,%r11b
	je L_517056
.p2align 0x4,,0x7
L_338126:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517055
L_338127:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_338128:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517054
.p2align 0x4,,0x7
L_338129:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_517053
L_338130:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_338128
.p2align 0x4
L_517053:
L_338131:
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517054:
L_338132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_338133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338133
.p2align 0x4
.long 0x49A0
L_338133:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_338129
.p2align 0x4
L_517055:
L_338134:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517056:
	movq %r13,%r14
L_338153:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_338126
L_338154:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_517059
.p2align 0x4,,0x7
L_338136:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
L_338137:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517058
.p2align 0x4,,0x7
L_338138:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_517057
L_338139:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_338137
.p2align 0x4
L_517057:
L_338140:
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_517058:
L_338141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_338142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338142
.p2align 0x4
.long 0xD3C
L_338142:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_338138
.p2align 0x4
L_517059:
L_338155:
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_517061:
	movq %r13,%r14
	jmp L_338153
.p2align 0x4
L_517067:
L_338143:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_338123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_517069:
L_338242:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338243:
	movq 0x0(%r15),%r14
L_338244:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338245:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne L_338126
L_338246:
	movq 0x10(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_517073:
L_338236:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338237:
	movq 0x0(%r15),%r14
L_338238:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338239:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_517075
	cmpq $0x110E,%r15
	je L_517074
	jmp L_338126
.p2align 0x4
L_517074:
L_338241:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517075:
L_338240:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517078:
L_338229:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338230:
	movq 0x0(%r15),%r14
L_338231:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338232:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_517081
	cmpq $0x10F6,%r15
	je L_517080
	cmpq $0x10F9,%r15
	je L_517079
	jmp L_338126
.p2align 0x4
L_517079:
L_338235:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517080:
L_338234:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517081:
L_338233:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517084:
L_338227:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	jne L_338126
L_338228:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517086:
L_338220:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338221:
	movq 0x0(%r15),%r14
L_338222:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338223:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_517089
	cmpq $0x1113,%r15
	je L_517088
	cmpq $0x1114,%r15
	je L_517087
	jmp L_338126
.p2align 0x4
L_517087:
L_338226:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517088:
L_338225:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517089:
L_338224:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517092:
L_338215:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338216:
	movq 0x0(%r15),%r14
L_338217:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338218:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_338126
L_338219:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517096:
L_338210:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338211:
	movq 0x0(%r15),%r14
L_338212:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338213:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne L_338126
L_338214:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517100:
L_338202:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338203:
	movq 0x0(%r15),%r14
L_338204:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338205:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_338126
L_338206:
	movq 0x10(%r14),%r15
L_338207:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_338126
L_338208:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_338126
L_338209:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517107:
L_338172:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338173:
	movq 0x0(%r15),%r14
L_338174:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338175:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_338126
L_338176:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338177:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338178
L_338191:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_517113
L_338192:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_517111
	cmpq $0x10E4,%r14
	je L_517109
L_338193:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517108
L_338194:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338128
.p2align 0x4
L_517108:
L_338195:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517109:
L_338199:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338136
	jmp L_338126
.p2align 0x4
L_517111:
L_338196:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517112
L_338197:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338128
.p2align 0x4
L_517112:
L_338198:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517113:
L_338178:
L_338179:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_338126
L_338180:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_338126
L_338181:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_517117
	cmpq $0x10E4,%r15
	je L_517115
L_338182:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517114
L_338183:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338128
.p2align 0x4
L_517114:
L_338184:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517115:
L_338188:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338136
	jmp L_338126
.p2align 0x4
L_517117:
L_338185:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517118
L_338186:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338128
.p2align 0x4
L_517118:
L_338187:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336481
.p2align 0x4
L_517125:
L_338162:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338126
L_338163:
	movq 0x0(%r15),%r14
L_338164:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338126
L_338165:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_517129
	cmpq $0x1110,%r15
	je L_517127
	cmpq $0x1114,%r15
	je L_517126
	jmp L_338126
.p2align 0x4
L_517126:
L_338171:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338137
.p2align 0x4
L_517127:
L_338169:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_338126
	jmp L_338136
.p2align 0x4
L_517129:
L_338166:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_338126
	cmpb $0x1,%r15b
	je L_338126
	jmp L_338136
.p2align 0x4
x_2213:
x_1069:
	movq 0x88(%rbp),%r14
	movq 0x90(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,%r15
	jmp x_1068
.p2align 0x4
L_517135:
L_337979:
	movq 0x60(%rbp),%r13
	movq %r13,0x98(%rbp)
	movq 0x90(%rbp),%r13
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_6
.p2align 0x4
L_517136:
L_338624:
	movq $0x1,%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x50(%rbp)
	jmp L_336485
.p2align 0x4
L_517138:
L_338630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_338631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338631
.p2align 0x4
.long 0xFA9
L_338631:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336465
.p2align 0x4
L_517139:
L_338655:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne loop_3627
L_338656:
	movq 0x10(%r15),%r14
L_338657:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338658:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10EB,%r15
	jne loop_3627
L_338659:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10E3,%r11
	je L_517142
	cmpq $0x10E4,%r11
	je L_336464
L_338660:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338661:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_517142:
L_338663:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336443
L_338664:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336439
.p2align 0x4
L_517145:
L_338648:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_338649:
	movb 0x0(%r15),%r14b
	cmpb $0x9,%r14b
	je L_336464
L_338650:
	cmpb $0x8,%r14b
	je L_336464
	jmp loop_3627
.p2align 0x4
L_517152:
L_338638:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_338639:
	movb 0x0(%r15),%r14b
	cmpb $0x7,%r14b
	je L_336464
L_338640:
	cmpb $0x6,%r14b
	je L_336464
	jmp loop_3627
.p2align 0x4
L_517156:
L_338632:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne loop_3627
L_338633:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_338634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_94
.p2align 0x4
L_517157:
L_336437:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_517158:
L_338667:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1134
L_336500:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336501
L_336518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336519
.p2align 0x4
.long 0x3696
L_336519:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336501:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517162
L_336502:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_336503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517161
.p2align 0x4,,0x7
L_336504:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_517160
L_336505:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336503
.p2align 0x4
L_517160:
L_336507:
	movq %r15,0x18(%rbp)
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517161:
L_336515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336516
.p2align 0x4
.long 0x658
L_336516:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336504
.p2align 0x4
L_517162:
L_336517:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_336507
.p2align 0x4
.long 0x7F2
L_337340:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_337341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1F77
L_337102:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337103
L_337183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337184
.p2align 0x4
.long 0x497B
L_337184:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_337103:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_517173
L_337104:
	movl 0x4(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x74(%rbp)
	cmpl $0x0,%r14d
	je L_517171
	cmpl $0x1,%r14d
	je L_517170
L_337105:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_337134
	cmpb $0x2,%r15b
	je L_517168
	cmpb $0x3,%r15b
	je L_517167
	cmpb $0x6,%r15b
	je L_517166
	cmpb $0x7,%r15b
	je L_517165
L_337107:
	movl $0x4,%ecx
L_337108:
	imull $0x8,%ecx
	jo L_336510
L_337109:
	cmpl %ecx,0x74(%rbp)
	jnl callback_2
L_337111:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517165:
L_337140:
	movl $0x1,%ecx
	jmp L_337108
.p2align 0x4
L_517166:
L_337134:
	movl $0x2,%ecx
	jmp L_337108
.p2align 0x4
L_517167:
L_337136:
	movl $0x8,%ecx
	jmp L_337108
.p2align 0x4
L_517168:
L_337135:
	movl $0xA,%ecx
	jmp L_337108
.p2align 0x4
L_517170:
L_337165:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517171:
L_337141:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517172
L_337142:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517172:
L_337152:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517173:
L_336838:
	movq (globalObjptr+0x57C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F77
L_337038:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337039
L_337092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337093
.p2align 0x4
.long 0x497B
L_337093:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_337039:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_337040:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%ebx
	testl %ebx,%ebx
	jz L_517181
L_337041:
	testl %ecx,%ecx
	jnz callback_2
L_337042:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_337071
	cmpb $0x2,%r15b
	je L_517179
	cmpb $0x3,%r15b
	je L_517178
	cmpb $0x6,%r15b
	je L_517177
	cmpb $0x7,%r15b
	je L_517176
L_337044:
	movl $0x4,%ecx
L_337045:
	imull $0x8,%ecx
	jo L_336510
L_337046:
	cmpl %ecx,%ebx
	jnl callback_2
L_337048:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq %ebx,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_337049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517176:
L_337077:
	movl $0x1,%ecx
	jmp L_337045
.p2align 0x4
L_517177:
L_337071:
	movl $0x2,%ecx
	jmp L_337045
.p2align 0x4
L_517178:
L_337073:
	movl $0x8,%ecx
	jmp L_337045
.p2align 0x4
L_517179:
L_337072:
	movl $0xA,%ecx
	jmp L_337045
.p2align 0x4
L_517181:
L_337079:
	testl %ecx,%ecx
	jnz callback_2
L_337080:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4980
L_336914:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336915
L_337028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_337029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337029
.p2align 0x4
.long 0x4993
L_337029:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_336915:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_336916:
	movl 0x4(%r15),%r14d
	movl %r14d,0x98(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x9C(%rbp)
	testl %r14d,%r14d
	jz L_517190
L_336917:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336996
	cmpb $0x2,%r15b
	je L_517188
	cmpb $0x3,%r15b
	je L_517187
	cmpb $0x6,%r15b
	je L_517186
	cmpb $0x7,%r15b
	je L_517185
L_336919:
	movl $0x4,%ecx
L_336920:
	imull $0x8,%ecx
	jo L_336510
L_336921:
	cmpl %ecx,0x9C(%rbp)
	jnl callback_2
L_336923:
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_517185:
L_337002:
	movl $0x1,%ecx
	jmp L_336920
.p2align 0x4
L_517186:
L_336996:
	movl $0x2,%ecx
	jmp L_336920
.p2align 0x4
L_517187:
L_336998:
	movl $0x8,%ecx
	jmp L_336920
.p2align 0x4
L_517188:
L_336997:
	movl $0xA,%ecx
	jmp L_336920
.p2align 0x4
L_517190:
L_337003:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517191
L_337004:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517191:
L_337014:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x1F77
L_336850:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336851
L_336904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336905
.p2align 0x4
.long 0x497B
L_336905:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336851:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_336852:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%ebx
	testl %ebx,%ebx
	jz L_517200
L_336853:
	testl %ecx,%ecx
	jnz callback_2
L_336854:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336883
	cmpb $0x2,%r15b
	je L_517198
	cmpb $0x3,%r15b
	je L_517197
	cmpb $0x6,%r15b
	je L_517196
	cmpb $0x7,%r15b
	je L_517195
L_336856:
	movl $0x4,%ecx
L_336857:
	imull $0x8,%ecx
	jo L_336510
L_336858:
	cmpl %ecx,%ebx
	jnl callback_2
L_336860:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq %ebx,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_336861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517195:
L_336889:
	movl $0x1,%ecx
	jmp L_336857
.p2align 0x4
L_517196:
L_336883:
	movl $0x2,%ecx
	jmp L_336857
.p2align 0x4
L_517197:
L_336885:
	movl $0x8,%ecx
	jmp L_336857
.p2align 0x4
L_517198:
L_336884:
	movl $0xA,%ecx
	jmp L_336857
.p2align 0x4
L_517200:
L_336891:
	testl %ecx,%ecx
	jnz callback_2
L_336892:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x1F77
L_336757:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336758
L_336839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336840
.p2align 0x4
.long 0x497B
L_336840:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336758:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_336759:
	movl 0x4(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x74(%rbp)
	cmpl $0x0,%r14d
	je L_517210
	cmpl $0x1,%r14d
	je L_517209
L_336760:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336789
	cmpb $0x2,%r15b
	je L_517207
	cmpb $0x3,%r15b
	je L_517206
	cmpb $0x6,%r15b
	je L_517205
	cmpb $0x7,%r15b
	je L_517204
L_336762:
	movl $0x4,%ecx
L_336763:
	imull $0x8,%ecx
	jo L_336510
L_336764:
	cmpl %ecx,0x74(%rbp)
	jnl callback_2
L_336766:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_336767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517204:
L_336795:
	movl $0x1,%ecx
	jmp L_336763
.p2align 0x4
L_517205:
L_336789:
	movl $0x2,%ecx
	jmp L_336763
.p2align 0x4
L_517206:
L_336791:
	movl $0x8,%ecx
	jmp L_336763
.p2align 0x4
L_517207:
L_336790:
	movl $0xA,%ecx
	jmp L_336763
.p2align 0x4
L_517209:
L_336820:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_336821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517210:
L_336796:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517211
L_336797:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517211:
L_336807:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4996
L_337281:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337282
L_337321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_337322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337322
.p2align 0x4
.long 0x4997
L_337322:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_337282:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_337283:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r13d
	je L_517220
	cmpl $0x1,%r13d
	je L_517214
	jmp callback_2
.p2align 0x4
L_517214:
L_337307:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	testl %r14d,%r14d
	jnz L_517218
L_337308:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517217
L_337309:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337310:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517216
.p2align 0x4,,0x7
L_337311:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517215
L_337312:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337310
.p2align 0x4
L_517215:
L_337313:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517216:
L_337314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337315
.p2align 0x4
.long 0x658
L_337315:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337311
.p2align 0x4
L_517217:
L_337316:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517218:
L_337317:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517219
L_337318:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337310
.p2align 0x4
L_517219:
L_337319:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517220:
L_337284:
	testl %r14d,%r14d
	jnz L_517227
L_337285:
	movb 0x4D(%rbp),%r14b
	cmpb $0xE,%r14b
	je L_517225
	cmpb $0xF,%r14b
	je L_517221
L_337208:
	movq (globalObjptr+0x57D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_517221:
L_337295:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517224
L_337296:
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517223
.p2align 0x4,,0x7
L_337289:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517222
L_337290:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_337288
.p2align 0x4
L_517222:
L_337291:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517223:
L_337292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337293
.p2align 0x4
.long 0x658
L_337293:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337289
.p2align 0x4
L_517224:
L_337297:
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517225:
L_337286:
	movq $0x2277,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x20(%rbp),%r10
	cmpq $0x1,%r10
	je L_517226
L_337287:
	movq 0x8(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq %r11,0x20(%rbp)
	jmp L_337288
.p2align 0x4
L_517226:
L_337294:
	movq %r11,0x10(%rbp)
	movq 0x30(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,0x20(%rbp)
	movq 0x38(%rbp),%r11
	movq %r11,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517227:
L_337298:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movzbl 0x4C(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517230
L_337299:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_337300:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517229
.p2align 0x4,,0x7
L_337301:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517228
L_337302:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337300
.p2align 0x4
L_517228:
L_337303:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517229:
L_337304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337305
.p2align 0x4
.long 0x658
L_337305:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337301
.p2align 0x4
L_517230:
L_337306:
	movq 0x18(%rbp),%r10
	movq %r10,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4994
L_337203:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337204
L_337244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337245
.p2align 0x4
.long 0x4995
L_337245:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337204:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_336838
L_337205:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r13d
	je L_517239
	cmpl $0x1,%r13d
	je L_517233
	jmp callback_2
.p2align 0x4
L_517233:
L_337230:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r13b
	movzbl %r13b,%r11d
	movzbl 0x30(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	testl %r14d,%r14d
	jnz L_517237
L_337231:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517236
L_337232:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337233:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517235
.p2align 0x4,,0x7
L_337234:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517234
L_337235:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337233
.p2align 0x4
L_517234:
L_337236:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517235:
L_337237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337238
.p2align 0x4
.long 0x658
L_337238:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337234
.p2align 0x4
L_517236:
L_337239:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517237:
L_337240:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x30(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517238
L_337241:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337233
.p2align 0x4
L_517238:
L_337242:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517239:
L_337206:
	testl %r14d,%r14d
	jnz L_517246
L_337207:
	movb 0x31(%rbp),%r14b
	cmpb $0xE,%r14b
	je L_517244
	cmpb $0xF,%r14b
	je L_517240
	jmp L_337208
.p2align 0x4
L_517240:
L_337218:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517243
L_337219:
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_337211:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517242
.p2align 0x4,,0x7
L_337212:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517241
L_337213:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_337211
.p2align 0x4
L_517241:
L_337214:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517242:
L_337215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337216
.p2align 0x4
.long 0x658
L_337216:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337212
.p2align 0x4
L_517243:
L_337220:
	movq %r14,0x10(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517244:
L_337209:
	movq $0x2277,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x20(%rbp),%r10
	cmpq $0x1,%r10
	je L_517245
L_337210:
	movq 0x8(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq %r11,0x20(%rbp)
	movq 0x68(%rbp),%r11
	movq %r11,0x30(%rbp)
	jmp L_337211
.p2align 0x4
L_517245:
L_337217:
	movq %r11,0x10(%rbp)
	movq 0x68(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,0x20(%rbp)
	movq 0x38(%rbp),%r11
	movq %r11,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517246:
L_337221:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movzbl 0x30(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517249
L_337222:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_337223:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517248
.p2align 0x4,,0x7
L_337224:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517247
L_337225:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337223
.p2align 0x4
L_517247:
L_337226:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517248:
L_337227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337228
.p2align 0x4
.long 0x658
L_337228:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337224
.p2align 0x4
L_517249:
L_337229:
	movq 0x18(%rbp),%r10
	movq %r10,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4971
L_336606:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	jne L_336603
L_336608:
	movb 0x11(%rbp),%r15b
	cmpb $0x4,%r15b
	je L_517253
	cmpb $0x6,%r15b
	je L_517252
	jmp L_336603
.p2align 0x4
L_517252:
L_336622:
	movb $0x2,0x11(%rbp)
	jmp L_336610
.p2align 0x4
L_517253:
L_336609:
	movb $0x3,0x11(%rbp)
	jmp L_336610
.p2align 0x4
.long 0x496E
L_336545:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336546
L_336564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336565
.p2align 0x4
.long 0x4970
L_336565:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336546:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_517259
	cmpq $0x2,%r14
	je L_517258
L_336547:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E9,%r14
	je L_517257
	cmpq $0x10EA,%r14
	je L_517256
	cmpq $0x10EB,%r14
	je L_517255
L_336548:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%dl
L_336549:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_336550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517255:
L_336556:
	movb $0x5,%dl
	jmp L_336549
.p2align 0x4
L_517256:
L_336555:
	movb $0x5,%dl
	jmp L_336549
.p2align 0x4
L_517257:
L_336554:
	movb $0x5,%dl
	jmp L_336549
.p2align 0x4
L_517258:
L_336563:
	movb $0x2,%dl
	jmp L_336549
.p2align 0x4
L_517259:
L_336557:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%dl
	cmpb $0x2,%dl
	je L_517261
	cmpb $0x3,%dl
	je L_517260
L_336559:
	movb $0x7,%dl
	jmp L_336549
.p2align 0x4
L_517260:
L_336562:
	movb $0x5,%dl
	jmp L_336549
.p2align 0x4
L_517261:
L_336561:
	movb $0x6,%dl
	jmp L_336549
.p2align 0x4
.long 0x1D15
L_336572:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_517263
L_336573:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_336529
.p2align 0x4
L_517263:
L_336574:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_517264
L_336575:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_336534
.p2align 0x4
L_517264:
L_336576:
	movq $0x1,0x10(%rbp)
	jmp L_336538
.p2align 0x4
.long 0x4998
L_337779:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337781:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4998
L_337756:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337758:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4998
L_337733:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337735:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4998
L_337631:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337632
L_337651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337652
.p2align 0x4
.long 0x4995
L_337652:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337632:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337634:
L_337635:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337636:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337637:
L_337638:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337639
L_337649:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337639:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x32(%rbp),%r13d
	movzbl 0x31(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4998
L_337604:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337605
L_337624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337625
.p2align 0x4
.long 0x4995
L_337625:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337605:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337607:
L_337608:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337609:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337610:
L_337611:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337612
L_337622:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337612:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2227,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x32(%rbp),%r13d
	movzbl 0x31(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4998
L_337577:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337578
L_337597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337598
.p2align 0x4
.long 0x4995
L_337598:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337578:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337580:
L_337581:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337582:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337583:
L_337584:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337585
L_337595:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337585:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2223,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0xCF6
L_337530:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517273
L_337531:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337532:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517272
.p2align 0x4,,0x7
L_337533:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517271
L_337534:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337532
.p2align 0x4
L_517271:
L_337535:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517272:
L_337536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337537
.p2align 0x4
.long 0x658
L_337537:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337533
.p2align 0x4
L_517273:
L_337538:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x1F77
L_337493:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337494
L_337509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337510
.p2align 0x4
.long 0x10E3
L_337510:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337494:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337496:
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_337497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4998
L_337446:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337448:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4998
L_337423:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337425:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4998
L_337400:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337402:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x496D
L_336475:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517277
L_336476:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq %r13,0x70(%rbp)
.p2align 0x4,,0x7
L_336477:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517276
.p2align 0x4,,0x7
L_336478:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517275
L_336479:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_336477
.p2align 0x4
L_517275:
L_336480:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_517276:
L_337807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337808
.p2align 0x4
.long 0xD3C
L_337808:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_336478
.p2align 0x4
L_517277:
L_337809:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
.long 0x499C
L_337851:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_337852:
	testl %ecx,%ecx
	jnz L_337855
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_337885:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_337855
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_337976:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_337852
.p2align 0x4
.long 0x499C
L_338253:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_338254:
	testl %ecx,%ecx
	jnz L_338257
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_338285:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338257
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_338376:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_338254
.p2align 0x4
.long 0x499C
L_338382:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x80(%rbp)
L_338383:
	testl %ecx,%ecx
	jnz L_338386
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_338411:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338386
	jmp loop_3627
.p2align 0x4
.long 0x499C
L_338502:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x80(%rbp)
	jmp L_338383
.p2align 0x4
.long 0x49A2
L_338507:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x60(%rbp)
L_338508:
	testl %ecx,%ecx
	jnz L_338511
	jmp loop_3627
.p2align 0x4
.long 0x49A2
L_338531:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338511
	jmp loop_3627
.p2align 0x4
.long 0x49A2
L_338622:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x60(%rbp)
	jmp L_338508
.p2align 0x4
.long 0x499F
L_337993:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_337994:
	testl %ecx,%ecx
	jnz L_338006
	jmp L_337996
.p2align 0x4
.long 0x499F
L_338027:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338006
	jmp L_337996
.p2align 0x4
.long 0x499F
L_338118:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_337994
.p2align 0x4
.long 0x49A1
L_338123:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x60(%rbp)
L_338124:
	testl %ecx,%ecx
	jnz L_338136
	jmp L_338126
.p2align 0x4
.long 0x49A1
L_338156:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338136
	jmp L_338126
.p2align 0x4
.long 0x49A1
L_338247:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x60(%rbp)
	jmp L_338124
.p2align 0x4
.long 0x499E
L_337980:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517292
L_337981:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_337982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517291
.p2align 0x4,,0x7
L_337983:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517290
L_337984:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_337982
.p2align 0x4
L_517290:
L_337985:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
L_517291:
L_337986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337987
.p2align 0x4
.long 0xD3C
L_337987:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337983
.p2align 0x4
L_517292:
L_337988:
	movq 0x60(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336481
.p2align 0x4
.long 0x2679
L_338634:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpl $0x0,%r15d
	jg L_336464
	jmp loop_3627
.p2align 0x4
.long 0x7F2
L_337341:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x60(%rbp)
	jz L_337343
L_337365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337366
L_337372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_337373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337373
.p2align 0x4
.long 0x80A
L_337373:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_337366:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_337367:
	testl %eax,%eax
	jz L_517298
L_337369:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_517294
L_337370:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_337339
.p2align 0x4
L_517294:
L_337371:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_337347:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517297
.p2align 0x4,,0x7
L_337348:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_517295
L_337349:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_337347
.p2align 0x4
L_517295:
L_337350:
	cmpq $0x1,0x48(%rbp)
	je L_517296
bug_674:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11530)(%rip),%r13
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_517296:
L_337351:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_337352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_517297:
L_337358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_337359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337359
.p2align 0x4
.long 0x80B
L_337359:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_337348
.p2align 0x4
L_517298:
L_337343:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_517299
L_337344:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_337339
.p2align 0x4
L_517299:
L_337345:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_337361
L_337346:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_337347
.p2align 0x4
.long 0x4974
L_337112:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq 0x74(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_337113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4974
L_337166:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337167
L_337180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337181
.p2align 0x4
.long 0x4979
L_337181:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337167:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_517306
L_337168:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517305
L_337169:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517304
.p2align 0x4,,0x7
L_337171:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517303
L_337172:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337170
.p2align 0x4
L_517303:
L_337173:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517304:
L_337174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337175
.p2align 0x4
.long 0x658
L_337175:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337171
.p2align 0x4
L_517305:
L_337176:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517306:
L_337177:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517307
L_337178:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337170
.p2align 0x4
L_517307:
L_337179:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337143:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517311
L_337144:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337145:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517310
.p2align 0x4,,0x7
L_337146:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517309
L_337147:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337145
.p2align 0x4
L_517309:
L_337148:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517310:
L_337149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337150
.p2align 0x4
.long 0x658
L_337150:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337146
.p2align 0x4
L_517311:
L_337151:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x106B
L_337153:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337154
L_337163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337164
.p2align 0x4
.long 0x658
L_337164:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337154:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517314
L_337155:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337156:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517313
.p2align 0x4,,0x7
L_337157:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517312
L_337158:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337156
.p2align 0x4
L_517312:
L_337159:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517313:
L_337160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337161
.p2align 0x4
.long 0x658
L_337161:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337157
.p2align 0x4
L_517314:
L_337162:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x497C
L_337049:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_337050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xCF6
L_337081:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517318
L_337082:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337083:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517317
.p2align 0x4,,0x7
L_337084:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517316
L_337085:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337083
.p2align 0x4
L_517316:
L_337086:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517317:
L_337087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337088
.p2align 0x4
.long 0x658
L_337088:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337084
.p2align 0x4
L_517318:
L_337089:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4981
L_336924:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336925
L_336993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336994
.p2align 0x4
.long 0x4992
L_336994:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336925:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11068)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xCF6
L_337005:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517322
L_337006:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337007:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517321
.p2align 0x4,,0x7
L_337008:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517320
L_337009:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337007
.p2align 0x4
L_517320:
L_337010:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517321:
L_337011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337012
.p2align 0x4
.long 0x658
L_337012:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337008
.p2align 0x4
L_517322:
L_337013:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x106B
L_337015:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337016
L_337025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337026
.p2align 0x4
.long 0x658
L_337026:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337016:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517325
L_337017:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517324
.p2align 0x4,,0x7
L_337019:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517323
L_337020:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337018
.p2align 0x4
L_517323:
L_337021:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517324:
L_337022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337023
.p2align 0x4
.long 0x658
L_337023:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337019
.p2align 0x4
L_517325:
L_337024:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x497C
L_336861:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_336862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xCF6
L_336893:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517329
L_336894:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_336895:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517328
.p2align 0x4,,0x7
L_336896:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517327
L_336897:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336895
.p2align 0x4
L_517327:
L_336898:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517328:
L_336899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336900
.p2align 0x4
.long 0x658
L_336900:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336896
.p2align 0x4
L_517329:
L_336901:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4974
L_336767:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq 0x74(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_336768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4974
L_336821:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336822
L_336835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336836
.p2align 0x4
.long 0x4979
L_336836:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336822:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_517333
L_336823:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517332
L_336824:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336825:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517331
.p2align 0x4,,0x7
L_336826:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517330
L_336827:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336825
.p2align 0x4
L_517330:
L_336828:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517331:
L_336829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336830
.p2align 0x4
.long 0x658
L_336830:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336826
.p2align 0x4
L_517332:
L_336831:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517333:
L_336832:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517334
L_336833:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_336825
.p2align 0x4
L_517334:
L_336834:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_336798:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517338
L_336799:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_336800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517337
.p2align 0x4,,0x7
L_336801:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517336
L_336802:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336800
.p2align 0x4
L_517336:
L_336803:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517337:
L_336804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336805
.p2align 0x4
.long 0x658
L_336805:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336801
.p2align 0x4
L_517338:
L_336806:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x106B
L_336808:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336809
L_336818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336819
.p2align 0x4
.long 0x658
L_336819:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336809:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517341
L_336810:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336811:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517340
.p2align 0x4,,0x7
L_336812:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517339
L_336813:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336811
.p2align 0x4
L_517339:
L_336814:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517340:
L_336815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336816
.p2align 0x4
.long 0x658
L_336816:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336812
.p2align 0x4
L_517341:
L_336817:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xE82
L_336550:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336551
L_336552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336553
.p2align 0x4
.long 0x496F
L_336553:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336551:
	movq $0x2275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x9,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4999
L_337782:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337783
L_337795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337796
.p2align 0x4
.long 0x499A
L_337796:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337783:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337785:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4999
L_337759:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337760
L_337772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337773
.p2align 0x4
.long 0x499A
L_337773:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337760:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337762:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2227,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4999
L_337736:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337737
L_337749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337750
.p2align 0x4
.long 0x499A
L_337750:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337737:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337739:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2223,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0xCF6
L_337640:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517349
L_337641:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517348
.p2align 0x4,,0x7
L_337643:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517347
L_337644:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337642
.p2align 0x4
L_517347:
L_337645:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517348:
L_337646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337647
.p2align 0x4
.long 0x658
L_337647:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337643
.p2align 0x4
L_517349:
L_337648:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337613:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517352
L_337614:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517351
.p2align 0x4,,0x7
L_337616:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517350
L_337617:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337615
.p2align 0x4
L_517350:
L_337618:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517351:
L_337619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337620
.p2align 0x4
.long 0x658
L_337620:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337616
.p2align 0x4
L_517352:
L_337621:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337586:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517355
L_337587:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517354
.p2align 0x4,,0x7
L_337589:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517353
L_337590:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337588
.p2align 0x4
L_517353:
L_337591:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517354:
L_337592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337593
.p2align 0x4
.long 0x658
L_337593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337589
.p2align 0x4
L_517355:
L_337594:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x586
L_337497:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337498
L_337507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_337508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337508
.p2align 0x4
.long 0x1072
L_337508:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_337498:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517358
L_337499:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517357
.p2align 0x4,,0x7
L_337501:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517356
L_337502:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337500
.p2align 0x4
L_517356:
L_337503:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517357:
L_337504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337505
.p2align 0x4
.long 0x658
L_337505:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337501
.p2align 0x4
L_517358:
L_337506:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4999
L_337449:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337450
L_337462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337463
.p2align 0x4
.long 0x499A
L_337463:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337450:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337452:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4999
L_337426:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337427
L_337439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337440
.p2align 0x4
.long 0x499A
L_337440:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337427:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337429:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4999
L_337403:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337404
L_337416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337417
.p2align 0x4
.long 0x499A
L_337417:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337404:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337406:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x496E
L_337352:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,0x48(%rbp)
	jne L_336543
L_337353:
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_337354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4975
L_337113:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_337114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x497D
L_337050:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_337051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4982
L_336926:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movb $0x1,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x497D
L_336862:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4975
L_336768:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_336769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xCF6
L_337786:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517366
L_337787:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517365
.p2align 0x4,,0x7
L_337789:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517364
L_337790:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337788
.p2align 0x4
L_517364:
L_337791:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517365:
L_337792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337793
.p2align 0x4
.long 0x658
L_337793:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337789
.p2align 0x4
L_517366:
L_337794:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337763:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517369
L_337764:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337765:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517368
.p2align 0x4,,0x7
L_337766:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517367
L_337767:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337765
.p2align 0x4
L_517367:
L_337768:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517368:
L_337769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337770
.p2align 0x4
.long 0x658
L_337770:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337766
.p2align 0x4
L_517369:
L_337771:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337740:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517372
L_337741:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337742:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517371
.p2align 0x4,,0x7
L_337743:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517370
L_337744:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337742
.p2align 0x4
L_517370:
L_337745:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517371:
L_337746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337747
.p2align 0x4
.long 0x658
L_337747:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337743
.p2align 0x4
L_517372:
L_337748:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337453:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517375
L_337454:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337455:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517374
.p2align 0x4,,0x7
L_337456:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517373
L_337457:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337455
.p2align 0x4
L_517373:
L_337458:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517374:
L_337459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337460
.p2align 0x4
.long 0x658
L_337460:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337456
.p2align 0x4
L_517375:
L_337461:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337430:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517378
L_337431:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337432:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517377
.p2align 0x4,,0x7
L_337433:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517376
L_337434:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337432
.p2align 0x4
L_517376:
L_337435:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517377:
L_337436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337437
.p2align 0x4
.long 0x658
L_337437:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337433
.p2align 0x4
L_517378:
L_337438:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337407:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517381
L_337408:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337409:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517380
.p2align 0x4,,0x7
L_337410:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517379
L_337411:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337409
.p2align 0x4
L_517379:
L_337412:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517380:
L_337413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337414
.p2align 0x4
.long 0x658
L_337414:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337410
.p2align 0x4
L_517381:
L_337415:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336508
.p2align 0x4
.long 0xCF6
L_337354:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337355
L_337356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337357
.p2align 0x4
.long 0x540
L_337357:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337355:
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4976
L_337114:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_337115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xF40
L_337051:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337052
L_337068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337069
.p2align 0x4
.long 0x10E3
L_337069:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337052:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (immediate_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4983
L_336927:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x4C(%rbp),%r14b
	movb %r14b,0xA8(%rbp)
	movb $0x1,0xA9(%rbp)
	movq $0x1,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xF40
L_336863:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336864
L_336880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336881
.p2align 0x4
.long 0x10E3
L_336881:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336864:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (immediate_92+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4976
L_336769:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_336770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4977
L_337115:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337116
L_337131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337132
.p2align 0x4
.long 0x497A
L_337132:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337116:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (immediate_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x497E
immediate_96:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337053
L_337066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337067
.p2align 0x4
.long 0x497F
L_337067:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337053:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_337054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4984
L_336928:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336929
L_336991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336992
.p2align 0x4
.long 0x4991
L_336992:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336929:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336984
	cmpb $0x2,%r15b
	je L_517391
	cmpb $0x3,%r15b
	je L_517390
	cmpb $0x6,%r15b
	je L_517389
	cmpb $0x7,%r15b
	je L_517388
L_336931:
	movl $0x4,%ecx
L_336932:
	imull $0x8,%ecx
	movl %ecx,0x30(%rbp)
	jo L_336510
L_336933:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517388:
L_336990:
	movl $0x1,%ecx
	jmp L_336932
.p2align 0x4
L_517389:
L_336984:
	movl $0x2,%ecx
	jmp L_336932
.p2align 0x4
L_517390:
L_336986:
	movl $0x8,%ecx
	jmp L_336932
.p2align 0x4
L_517391:
L_336985:
	movl $0xA,%ecx
	jmp L_336932
.p2align 0x4
.long 0x497E
immediate_92:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336865
L_336878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336879
.p2align 0x4
.long 0x497F
L_336879:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336865:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_336866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4977
L_336770:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336771
L_336786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336787
.p2align 0x4
.long 0x497A
L_336787:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336771:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (immediate_91+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4978
immediate_97:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337117
L_337129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337130
.p2align 0x4
.long 0x4979
L_337130:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337117:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x70(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_517399
L_337118:
	movq 0x40(%rbp),%r14
L_337119:
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517398
L_337120:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_337121:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517397
.p2align 0x4,,0x7
L_337122:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517396
L_337123:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337121
.p2align 0x4
L_517396:
L_337124:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517397:
L_337125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337126
.p2align 0x4
.long 0x658
L_337126:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337122
.p2align 0x4
L_517398:
L_337127:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517399:
L_337128:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_337119
.p2align 0x4
.long 0x586
L_337054:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337055
L_337064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_337065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337065
.p2align 0x4
.long 0x1072
L_337065:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_337055:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517403
L_337056:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337057:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517402
.p2align 0x4,,0x7
L_337058:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517401
L_337059:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337057
.p2align 0x4
L_517401:
L_337060:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517402:
L_337061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337062
.p2align 0x4
.long 0x658
L_337062:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337058
.p2align 0x4
L_517403:
L_337063:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4985
L_336934:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336935
L_336981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336982
.p2align 0x4
.long 0x4990
L_336982:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336935:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jz L_336937
L_336980:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
L_336937:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movslq 0x9C(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x88(%rbp)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x586
L_336866:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336867
L_336876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_336877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336877
.p2align 0x4
.long 0x1072
L_336877:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_336867:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517409
L_336868:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336869:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517408
.p2align 0x4,,0x7
L_336870:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517407
L_336871:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336869
.p2align 0x4
L_517407:
L_336872:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517408:
L_336873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336874
.p2align 0x4
.long 0x658
L_336874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336870
.p2align 0x4
L_517409:
L_336875:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
.long 0x4978
immediate_91:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336772
L_336784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336785
.p2align 0x4
.long 0x4979
L_336785:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336772:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x70(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_517414
L_336773:
	movq 0x40(%rbp),%r14
L_336774:
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517413
L_336775:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_336776:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517412
.p2align 0x4,,0x7
L_336777:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517411
L_336778:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336776
.p2align 0x4
L_517411:
L_336779:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517412:
L_336780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336781
.p2align 0x4
.long 0x658
L_336781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336777
.p2align 0x4
L_517413:
L_336782:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517414:
L_336783:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_336774
.p2align 0x4
.long 0x4986
L_336938:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4986
L_336939:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4986
L_336940:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336941
L_336978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336979
.p2align 0x4
.long 0x498F
L_336979:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336941:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (immediate_93+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4986
immediate_93:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336942
L_336976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336977
.p2align 0x4
.long 0x498F
L_336977:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336942:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x30(%rbp),%r14d
	cmpl %r14d,0x9C(%rbp)
	jl L_517421
L_336943:
	movq %r15,0x10(%rbp)
L_336944:
	cmpl $0x1,0x9C(%rbp)
	jg L_517420
L_336945:
	movq 0x10(%rbp),%r15
L_336946:
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517419
L_336947:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_336948:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517418
.p2align 0x4,,0x7
L_336949:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517417
L_336950:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336948
.p2align 0x4
L_517417:
L_336951:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517418:
L_336952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336953
.p2align 0x4
.long 0x658
L_336953:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336949
.p2align 0x4
L_517419:
L_336954:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336508
.p2align 0x4
L_517420:
L_336955:
	movl 0x9C(%rbp),%r15d
	decl %r15d
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_336956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517421:
L_336965:
	movl 0x30(%rbp),%r14d
	subl 0x9C(%rbp),%r14d
	jo L_336510
L_336966:
	movslq %r14d,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x10(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4987
L_336956:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_336957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x498D
L_336967:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4988
L_336957:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_336958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x498D
L_336968:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4989
L_336958:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336959
L_336963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336964
.p2align 0x4
.long 0x498C
L_336964:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336959:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (immediate_94+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x498D
L_336969:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336970
L_336974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336975
.p2align 0x4
.long 0x498E
L_336975:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336970:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (immediate_95+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x498A
immediate_94:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336960
L_336961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336962
.p2align 0x4
.long 0x498B
L_336962:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336960:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_336946
.p2align 0x4
.long 0x498D
immediate_95:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336971
L_336972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336973
.p2align 0x4
.long 0x498E
L_336973:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336971:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_336944
