/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:20 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1942
.hidden x_1942
x_1942:
L_219425:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_219426
L_219496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_219497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219497
.p2align 0x4
.long 0x453
L_219497:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_219426:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469324
L_219427:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_469323
L_219429:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2061,%r15
	je L_469322
	cmpq $0x2062,%r15
	je L_469321
	cmpq $0x2063,%r15
	je L_469319
	cmpq $0x2064,%r15
	je L_469317
	cmpq $0x2065,%r15
	je L_469315
	cmpq $0x2066,%r15
	je L_469313
L_219430:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_469313:
L_219482:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469314
L_219483:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_219484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_469314:
L_219490:
	movq %r11,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_219491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469315:
L_219469:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469316
L_219470:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_219471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_469316:
L_219477:
	movq %r11,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_219478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469317:
L_219456:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469318
L_219457:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_219458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_469318:
L_219464:
	movq %r11,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_219465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469319:
L_219442:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469320
L_219443:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_219444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_469320:
L_219451:
	movq %r11,0x28(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_219452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469321:
L_219441:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_469322:
L_219440:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_219435(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_469323:
L_219428:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469324:
L_219495:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB29
L_219431:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219432
L_219433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219434
.p2align 0x4
.long 0xB2A
L_219434:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219432:
	movq $0x2939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_219435:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219436
L_219438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219439
.p2align 0x4
.long 0xB2B
L_219439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219436:
	movq 0x20(%rbp),%r15
L_219437:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x466
L_219484:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219485
L_219488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219489
.p2align 0x4
.long 0x71C
L_219489:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219485:
	cmpq $0x1,0x30(%rbp)
	jne L_469328
L_219487:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_469328:
L_219447:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_219437
.p2align 0x4
.long 0xB29
L_219491:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_219471:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219472
L_219475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219476
.p2align 0x4
.long 0x71C
L_219476:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219472:
	cmpq $0x1,0x30(%rbp)
	jne L_219447
L_219474:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_219478:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_219458:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219459
L_219462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219463
.p2align 0x4
.long 0x71C
L_219463:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219459:
	cmpq $0x1,0x30(%rbp)
	jne L_219447
L_219461:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_219465:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_219444:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219445
L_219449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219450
.p2align 0x4
.long 0x71C
L_219450:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219445:
	cmpq $0x1,0x30(%rbp)
	jne L_219447
L_219448:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_219431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_219452:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
bug_547:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219492
L_219493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219494
.p2align 0x4
.long 0xB2B
L_219494:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219492:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219437
.p2align 0x4
.long 0xB29
bug_546:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219479
L_219480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219481
.p2align 0x4
.long 0xB2B
L_219481:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219479:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219437
.p2align 0x4
.long 0xB29
bug_545:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219466
L_219467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219468
.p2align 0x4
.long 0xB2B
L_219468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219466:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219437
.p2align 0x4
.long 0xB29
bug_544:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219453
L_219454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219455
.p2align 0x4
.long 0xB2B
L_219455:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219453:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219437
.text
.p2align 0x4
.globl x_1943
.hidden x_1943
x_1943:
L_219498:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_219552
L_219499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469350
L_219500:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469349
L_219501:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149A,%r13
	je L_469348
L_219503:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2067,%r15
	je L_469347
L_219515:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_469346
	cmpq $0x2,%r13
	je L_469340
L_219516:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_219545(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_469340:
L_219550:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_219520:
	incl %ecx
	jo L_469345
L_219522:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_469344
L_219523:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_219524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219524
.p2align 0x4
.long 0x343D
L_219524:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2430:
	movq 0x38(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_469342
L_219529:
	movl %r14d,%r13d
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	testl %r13d,%r13d
	jnz L_469341
L_219541:
	movq $0x3,%r15
.p2align 0x4,,0x7
L_219539:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2430
.p2align 0x4
L_469341:
L_219530:
	movl %r13d,0x48(%rbp)
	movq $0x5,0x50(%rbp)
	movq $0x3,0x58(%rbp)
next_17:
	leaq L_219510(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x68(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	addq $0x68,%rbp
	leaq (L_219531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_469342:
L_219525:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219526
L_219527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219528
.p2align 0x4
.long 0x343E
L_219528:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219526:
	movq 0x30(%rbp),%r15
L_219507:
	movq $0x2935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469344:
L_219542:
	movq $0x5,%r15
L_219512:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469345:
L_219521:
	movq $0x3,%r15
	jmp L_219512
.p2align 0x4
L_469346:
L_219549:
	movq $0x12,%r13
	xchgq %r13,%r15
	jmp L_219512
.p2align 0x4
L_469347:
L_219504:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_219510(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_219505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1944
.p2align 0x4
L_469348:
L_219502:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469349:
L_219551:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469350:
L_219552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_219553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219553
.p2align 0x4
.long 0x453
L_219553:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_219500
.p2align 0x4
.long 0x71B
L_219517:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x72F
L_219545:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219546
L_219547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219548
.p2align 0x4
.long 0x71C
L_219548:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219546:
	movq 0x20(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_219512
.p2align 0x4
.long 0x343F
L_219531:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl $0x2,0x68(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	addq $0x68,%rbp
	leaq (L_219532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x72F
L_219510:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219511
L_219513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219514
.p2align 0x4
.long 0xB2B
L_219514:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219511:
	movq 0x20(%rbp),%r15
	jmp L_219512
.p2align 0x4
.long 0xB29
L_219505:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219506
L_219508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219509
.p2align 0x4
.long 0xB2A
L_219509:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_219506:
	movq 0x20(%rbp),%r15
	jmp L_219507
.p2align 0x4
.long 0x71B
L_219518:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219519
L_219543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219544
.p2align 0x4
.long 0x3442
L_219544:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219519:
	movl 0x38(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_219520
.p2align 0x4
.long 0x343F
L_219532:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jz L_469356
L_219533:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_219534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_469356:
L_219535:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469357
L_219536:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_219537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_469357:
L_219538:
	movq 0x58(%rbp),%r15
	jmp L_219539
.p2align 0x4
.long 0x3440
L_219534:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_219535
.p2align 0x4
.long 0x3441
L_219537:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	jmp next_17
.text
.p2align 0x4
.globl x_1944
.hidden x_1944
x_1944:
L_219554:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_219555
L_219575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_219576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219576
.p2align 0x4
.long 0x75D
L_219576:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_219555:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_469362
	cmpq $0x2,%r13
	je L_469358
L_219556:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_219572(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_469358:
L_219574:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_219559:
	incl %ecx
	jo L_469361
L_219561:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_469360
L_219562:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219563
.p2align 0x4
.long 0x14BF
L_219563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	movq $0x0,0x40(%rbp)
loop_2431:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_469359
L_219564:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469359:
L_219565:
	movq 0x40(%rbp),%r15
	movl %r15d,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1943
.p2align 0x4
L_469360:
L_219571:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469361:
L_219560:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469362:
L_219573:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2497
L_219557:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x474
L_219572:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3443
L_219566:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movslq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_469364
L_219568:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x58(%rbp)
	movq $0x7,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_219569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_469364:
L_219567:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2497
L_219558:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%ecx
	movl %ecx,0x38(%rbp)
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_219559
.p2align 0x4
.long 0x3444
L_219569:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x9,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_219570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x3444
L_219570:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2431
.text
.p2align 0x4
.globl translateFunction_0
.hidden translateFunction_0
translateFunction_0:
L_219577:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x1E8(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_223504
L_219578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469365
L_219579:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x200(%rbp)
	movq $0x33F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x1D8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x210(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_219580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_469365:
L_223504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_223505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223505
.p2align 0x4
.long 0x3680
L_223505:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	jmp L_219579
.p2align 0x4
.long 0x3445
L_219580:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219581
L_223502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_223503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223503
.p2align 0x4
.long 0x367F
L_223503:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_219581:
	movq $0x34A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x210(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_219582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3446
L_219582:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219583
L_223500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_223501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223501
.p2align 0x4
.long 0x367E
L_223501:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_219583:
	movq 0x1F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x218(%rbp)
	movq $0x3451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x228(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3447
L_219584:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219585
L_223498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_223499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223499
.p2align 0x4
.long 0x3448
L_223499:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219585:
	movq 0x1F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x1D0(%rbp)
	cmpq %r14,%r11
	jne L_219587
L_219588:
	testq %r11,%r11
	jz L_469399
L_219589:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_219590:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219591
L_223494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_223495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223495
.p2align 0x4
.long 0x3448
L_223495:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219591:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	movq 0x1D0(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219592
.p2align 0x4
.long 0x3448
L_219592:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x1F0(%rbp)
L_219593:
	movq $0x0,0x220(%rbp)
loop_2432:
	movq 0x1D0(%rbp),%r14
	cmpq %r14,0x220(%rbp)
	jl L_469377
L_219594:
	movq 0x1F0(%rbp),%r14
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq 0x150(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r13
	je L_469376
L_219595:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_219596:
	incl %ecx
	jo L_469375
L_219598:
	cmpq $0x1,%r15
	je L_469369
L_219599:
	movq 0x8(%r15),%r15
	jmp L_219596
.p2align 0x4
L_469369:
L_219600:
L_219601:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_469374
L_219602:
	cmpq $0x7FFFFFFF,%rdx
	ja L_469373
L_219603:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219604
.p2align 0x4
.long 0x3449
L_219604:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x28(%rbp)
L_219605:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2433:
	cmpq 0x20(%rbp),%r15
	jnl L_469371
L_219717:
	cmpq $0x1,%r14
	je L_469370
L_219718:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2433
.p2align 0x4
L_469370:
L_219720:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469371:
L_219606:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219607
L_219715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219716
.p2align 0x4
.long 0x345E
L_219716:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219607:
	movq 0x28(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_219608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_7
.p2align 0x4
L_469373:
L_219662:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469374:
L_219722:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219605
.p2align 0x4
L_469375:
L_219597:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469376:
L_219723:
	xorl %ecx,%ecx
	jmp L_219601
.p2align 0x4
L_469377:
L_219724:
	movq 0x220(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x1F8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x228(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x230(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x238(%rbp)
	cmpq $0x1,%r11
	je L_469396
L_219725:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF31,%r15
	je L_469395
	cmpq $0xF32,%r15
	je L_469394
	cmpq $0xF33,%r15
	je L_469393
	cmpq $0xF34,%r15
	je L_469389
	cmpq $0xF35,%r15
	je L_469384
	cmpq $0xF36,%r15
	je L_469383
L_219726:
	movq 0x10(%r11),%r14
	movq %r14,0x240(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x248(%rbp)
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x3B,%r14
	je L_469381
	cmpq $0x4F,%r14
	je L_469379
L_219727:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_219728
L_219736:
L_219728:
	movq %r15,0x1F8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_219729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_544
.p2align 0x4
L_469379:
L_222095:
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469380
L_222096:
	movq %r14,0x260(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_222097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469380:
L_222121:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469381:
L_219737:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_219738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219738
.p2align 0x4
.long 0x3461
L_219738:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq %rax,0x240(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2439:
	cmpq $0x1,%r15
	jnl L_469382
L_222094:
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2439
.p2align 0x4
L_469382:
L_219739:
	movq 0x240(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x248(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_219740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469383:
L_223124:
	movq 0x20(%r11),%r15
	movq %r15,0x240(%rbp)
	movq 0x18(%r11),%r15
	movq %r15,0x248(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x268(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x250(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x258(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_223125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translatePrim_0
.p2align 0x4
L_469384:
L_222955:
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq %r14,0x240(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x248(%rbp)
	cmpq $0x1,%r15
	je L_469388
	cmpq $0x2,%r15
	je L_469387
L_222956:
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x258(%rbp)
	cmpq $0x1,%r14
	je L_469386
	cmpq $0x2,%r14
	je L_469385
L_222957:
	movq %r14,0x268(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_222958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_469385:
L_223121:
	movq $0x2,0x250(%rbp)
L_222961:
	movq 0x178(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_222962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_469386:
L_223120:
	movq $0x1,0x250(%rbp)
	jmp L_222961
.p2align 0x4
L_469387:
L_223123:
	movq $0x2,0x250(%rbp)
L_222997:
	movq 0x248(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469388:
L_223122:
	movq $0x1,0x250(%rbp)
	jmp L_222997
.p2align 0x4
L_469389:
L_222141:
	movq 0x10(%r11),%r15
	movq %r15,0x240(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x248(%rbp)
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1208,%r13
	je L_469391
L_222168:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	movq %r10,0x258(%rbp)
	movq %r13,0x250(%rbp)
	jne L_469390
L_222170:
	testl %r11d,%r11d
	jnz x_775
L_222920:
	cmpq $0x1,%r15
	jne x_1945
L_222921:
	movq 0x130(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq (globalObjptr+0xC9C8)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_222922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
x_1945:
x_775:
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_222171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469390:
L_219587:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469391:
L_222142:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_219587
L_222144:
	movl %r11d,0x268(%rbp)
	movq $0x39EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x260(%rbp)
	addq $0x260,%rbp
	leaq (L_222145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_469393:
L_222136:
	movq 0x8(%r11),%r15
	movq %r15,0x240(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x250(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_222137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469394:
L_222131:
	movq 0x0(%r11),%r15
	movq %r15,0x248(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (L_222132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469395:
L_222126:
	movq 0x0(%r11),%r15
	movq %r15,0x248(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (L_222127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469396:
L_223460:
	movq 0x130(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq (globalObjptr+0xC9C8)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_223461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
L_469399:
L_223497:
	movq (globalObjptr+0x73A0)(%rip),%r15
	movq %r15,0x1F0(%rbp)
	jmp L_219593
.p2align 0x4
.long 0x344A
L_219608:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x200(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_219587
L_219610:
	testq %rdx,%rdx
	jz L_469424
L_219611:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_219612:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1689,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219613
.p2align 0x4
.long 0x344B
L_219613:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x20(%rbp)
L_219614:
	movl $0x0,0x28(%rbp)
	movq $0x0,0x30(%rbp)
loop_2434:
	movq 0x18(%rbp),%rdx
	cmpq %rdx,0x30(%rbp)
	jl L_469422
L_219615:
	movq 0x20(%rbp),%r15
	movq $0x1897,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x28(%rbp),%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_469421
L_219616:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_219617:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219618
.p2align 0x4
.long 0x344C
L_219618:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x28(%rbp)
L_219619:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469419
.p2align 0x4,,0x7
L_219620:
	movq 0x18(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jnl L_469406
.p2align 0x4,,0x7
loop_2438:
	movl 0x30(%rbp),%r15d
	movslq %r15d,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r11
	jne L_469403
L_219695:
	incl %r15d
	jo L_219597
L_219696:
	movl %r15d,0x30(%rbp)
	jmp loop_2438
.p2align 0x4
L_469403:
L_219690:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469405
.p2align 0x4,,0x7
L_219691:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	incl %r14d
	jo L_219597
L_219692:
	movl %r14d,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2435
.p2align 0x4
L_469405:
L_219693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219694
.p2align 0x4
.long 0x3458
L_219694:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	jmp L_219691
.p2align 0x4
L_469406:
L_219621:
	movq 0x28(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x210(%rbp),%r15
	cmpq $0x1,%r15
	je L_469412
L_219622:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x18(%rbp)
	cmpq %r14,%r11
	jne L_219587
L_219624:
	testq %r11,%r11
	jz L_469410
L_219625:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_219626:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219627
L_219682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219683
.p2align 0x4
.long 0x344D
L_219683:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219627:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x168D,%rcx
	movq 0x18(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219628
.p2align 0x4
.long 0x344D
L_219628:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x20(%rbp)
L_219629:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
loop_2436:
	movq 0x18(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_469407
L_219630:
	movq 0x20(%rbp),%r15
	movq $0xBD9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBDB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x228(%rbp)
	addq $0x18,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_469407:
L_219667:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x210(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x228(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x230(%rbp)
	addq $0x228,%rbp
	leaq (x_730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469410:
L_219685:
	movq (globalObjptr+0x7398)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_219629
.p2align 0x4
L_469412:
L_219686:
	movq 0x208(%rbp),%r14
	cmpq $0x1,%r14
	je L_469418
L_219687:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_219634:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x30(%rbp)
	cmpq %r11,%r14
	jne L_219587
L_219636:
	testq %r11,%r11
	jz L_469416
L_219637:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_219638:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219639
L_219659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219660
.p2align 0x4
.long 0x344F
L_219660:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219639:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x168D,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219640
.p2align 0x4
.long 0x344F
L_219640:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq %rax,0x38(%rbp)
L_219641:
	movl $0x0,0x40(%rbp)
	movq $0x0,0x48(%rbp)
loop_2437:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_469413
L_219642:
	movq 0x38(%rbp),%r15
	movq $0xBD9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBDB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x228(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_469413:
L_219644:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x228(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x230(%rbp)
	addq $0x228,%rbp
	leaq (x_729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469416:
L_219663:
	movq (globalObjptr+0x7398)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_219641
.p2align 0x4
L_469418:
L_219688:
	movq 0x1D8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x218(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469419:
L_219697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219698
.p2align 0x4
.long 0x345A
L_219698:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	jmp L_219620
.p2align 0x4
L_469421:
L_219700:
	movq (globalObjptr+0x7390)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219619
.p2align 0x4
L_469422:
L_219701:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x200(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x228(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x230(%rbp)
	addq $0x228,%rbp
	leaq (x_731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469424:
L_219714:
	movq (globalObjptr+0x7388)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_219614
.p2align 0x4
.long 0x345F
L_219729:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219730
L_219734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_219735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219735
.p2align 0x4
.long 0x3460
L_219735:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_219730:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x102C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3466
L_222097:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222098
L_222119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222120
.p2align 0x4
.long 0x3577
L_222120:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222098:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_222099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_222122:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3462
L_219740:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219741
L_222092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_222093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222093
.p2align 0x4
.long 0x357A
L_222093:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_219741:
	movq $0x25F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x25F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x240(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x248(%rbp)
	addq $0x248,%rbp
	leaq (L_219742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_8
.p2align 0x4
.long 0x3631
L_223125:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (x_789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3631
L_222958:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x268(%rbp)
	movq %r15,0x260(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_469429
L_223064:
	movq 0x180(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x260(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x250(%rbp),%r14
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_223065+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_469429:
L_222960:
	movq %r15,0x250(%rbp)
	jmp L_222961
.p2align 0x4
.long 0x3632
L_222962:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222963
L_223062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_223063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223063
.p2align 0x4
.long 0x35B9
L_223063:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_222963:
	movq 0x268(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_222972
L_222964:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x268(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_222965:
	movq 0x268(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469440
	cmpq $0x2,%r14
	je L_469435
L_222967:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_222968
L_223036:
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_469432
L_222968:
	cmpq $0x1,%r15
	je L_469430
L_222969:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x268(%rbp)
	jmp L_222965
.p2align 0x4
L_469430:
L_222970:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222972
L_223034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_223035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223035
.p2align 0x4
.long 0x363F
L_223035:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_222972:
	movq $0x2131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_222973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_469432:
L_223038:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223040
L_223041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_223042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223042
.p2align 0x4
.long 0x3640
L_223042:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_223040:
	movq 0x268(%rbp),%r14
	movq 0x0(%r14),%r15
L_222996:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x250(%rbp)
	jmp L_222997
.p2align 0x4
L_469435:
L_223049:
	cmpq $0x2,%r13
	je L_469438
L_223050:
L_223051:
	cmpq $0x1,%r15
	je L_469436
L_223052:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,0x268(%rbp)
	jmp L_222965
.p2align 0x4
L_469436:
L_223053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222972
L_223055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_223056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223056
.p2align 0x4
.long 0x363F
L_223056:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	jmp L_222972
.p2align 0x4
L_469438:
L_223057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223040
L_223059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_223060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223060
.p2align 0x4
.long 0x3640
L_223060:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_223040
.p2align 0x4
L_469440:
L_223043:
	cmpq $0x1,%r13
	je L_469441
L_223044:
	jmp L_222968
.p2align 0x4
L_469441:
L_223045:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223040
L_223047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_223048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223048
.p2align 0x4
.long 0x3640
L_223048:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_223040
.p2align 0x4
.long 0x3464
L_222998:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222999
L_223000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_223001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223001
.p2align 0x4
.long 0x3577
L_223001:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222999:
	movq $0x213B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x240(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x1,%r14
L_219760:
	movq 0x228(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movq %r11,0x240(%rbp)
	movl %r11d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r11
	jne L_219587
L_219762:
	decl %ecx
	jo L_219597
L_219763:
.p2align 0x4,,0x7
loop_2440:
	movq %r15,0x248(%rbp)
	movq %r14,0x250(%rbp)
	movl %ecx,0x4C(%rbp)
.p2align 0x4,,0x7
loop_2441:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469477
.p2align 0x4,,0x7
L_219764:
	movl 0x4C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_469457
L_219765:
	movslq %r15d,%r14
	cmpq 0x240(%rbp),%r14
	jnb L_469456
L_219768:
	movq 0x228(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_469454
	cmpq $0xF2F,%r15
	je L_469445
L_219769:
	movq 0x10(%r13),%r15
	movq %r15,0x258(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x84(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_219770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469445:
L_220102:
	movq 0x10(%r13),%r15
	movq %r15,0x258(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x260(%rbp)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_469452
	cmpq $0xF29,%r13
	je L_469451
	cmpq $0xF2A,%r13
	je L_469450
	cmpq $0xF2B,%r13
	je L_469449
	cmpq $0xF2C,%r13
	je L_469446
L_220103:
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469446:
L_221955:
	movq 0x0(%r14),%r13
L_221956:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_469448
L_221959:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_469447
L_221960:
	movq 0x0(%r13),%r14
	movq %r14,0x268(%rbp)
	movq 0x128(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469447:
	xchgq %r13,%r15
L_221958:
	movq $0x211B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x268(%rbp)
	addq $0x10,%r12
move_0:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469448:
	xchgq %r13,%r15
	jmp L_221958
.p2align 0x4
L_469449:
L_221938:
	movq 0x8(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469450:
L_221713:
	movq 0x8(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (x_769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469451:
L_220259:
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translatePrim_0
.p2align 0x4
L_469452:
L_220131:
	movl 0x0(%r14),%r13d
	movl %r13d,0x84(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x268(%rbp)
	cmpq $0x1,0x258(%rbp)
	jne L_469453
.p2align 0x4,,0x7
none_0:
	movl 0x4C(%rbp),%ecx
	decl %ecx
	movq 0x248(%rbp),%r15
	movq 0x250(%rbp),%r14
	jmp loop_2440
.p2align 0x4
L_469453:
L_220132:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469454:
L_220098:
	movq 0x0(%r13),%r15
	movq $0x2125,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x258(%rbp)
	addq $0x10,%r12
.p2align 0x4,,0x7
add_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469455
.p2align 0x4,,0x7
L_220099:
	movl 0x4C(%rbp),%ecx
	decl %ecx
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x258(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x248(%rbp),%r15
	jmp loop_2440
.p2align 0x4
L_469455:
L_220100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_220101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220101
.p2align 0x4
.long 0x34BD
L_220101:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	jmp L_220099
.p2align 0x4
L_469456:
L_219767:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469457:
L_221978:
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469476
L_221979:
	movq 0x8(%r14),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_221980:
	incl %ecx
	jo L_219597
L_221981:
	cmpq $0x1,%r15
	je L_469458
L_221982:
	movq 0x8(%r15),%r15
	jmp L_221980
.p2align 0x4
L_469458:
L_221983:
L_221984:
	movslq %ecx,%rdx
	movq %rdx,0x228(%rbp)
	testq %rdx,%rdx
	jz L_469474
L_221985:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_221986:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_221987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221987
.p2align 0x4
.long 0x356E
L_221987:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x240(%rbp)
L_221988:
	movq 0x250(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2469:
	cmpq 0x228(%rbp),%r15
	jnl L_469460
L_222029:
	cmpq $0x1,%r14
	je L_219720
L_222030:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x240(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2469
.p2align 0x4
L_469460:
L_221989:
	movq 0x240(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x238(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x228(%rbp)
	cmpq %rdx,%r14
	jne L_219587
L_221991:
	testq %rdx,%rdx
	jz L_469471
L_221992:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_221993:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1689,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_221994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221994
.p2align 0x4
.long 0x356F
L_221994:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq %rax,0x250(%rbp)
L_221995:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x258(%rbp)
loop_2470:
	movq 0x228(%rbp),%rdx
	cmpq %rdx,0x258(%rbp)
	jl L_469469
L_221996:
	movq 0x250(%rbp),%r15
	movq $0x1897,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4C(%rbp),%rdx
	movq %rdx,0x228(%rbp)
	testq %rdx,%rdx
	jz L_469468
L_221997:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_221998:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_221999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221999
.p2align 0x4
.long 0x3570
L_221999:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x238(%rbp)
L_222000:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x258(%rbp)
.p2align 0x4,,0x7
loop_2471:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469466
.p2align 0x4,,0x7
L_222001:
	movq 0x228(%rbp),%r15
	cmpq %r15,0x258(%rbp)
	jnl L_469465
.p2align 0x4,,0x7
loop_2472:
	movl 0x4C(%rbp),%r15d
	movslq %r15d,%r14
	movq 0x250(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x260(%rbp)
	cmpq $0x1,%r11
	jne L_469462
L_222009:
	incl %r15d
	jo L_219597
L_222010:
	movl %r15d,0x4C(%rbp)
	jmp loop_2472
.p2align 0x4
L_469462:
L_222004:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469464
.p2align 0x4,,0x7
L_222005:
	movq 0x260(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	incl %r14d
	jo L_219597
L_222006:
	movl %r14d,0x4C(%rbp)
	movq 0x238(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x258(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x258(%rbp)
	jmp loop_2471
.p2align 0x4
L_469464:
L_222007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222008
.p2align 0x4
.long 0x3571
L_222008:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_222005
.p2align 0x4
L_469465:
L_222002:
	movq 0x238(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x240(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x230(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x1F0(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x220(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x220(%rbp)
	jmp loop_2432
.p2align 0x4
L_469466:
L_222011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_222012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222012
.p2align 0x4
.long 0x3572
L_222012:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	jmp L_222001
.p2align 0x4
L_469468:
L_222014:
	movq (globalObjptr+0x7390)(%rip),%r15
	movq %r15,0x238(%rbp)
	jmp L_222000
.p2align 0x4
L_469469:
L_222015:
	movq 0x258(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x238(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x260(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x280(%rbp)
	addq $0x278,%rbp
	leaq (x_773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469471:
L_222028:
	movq (globalObjptr+0x7388)(%rip),%r15
	movq %r15,0x250(%rbp)
	jmp L_221995
.p2align 0x4
L_469474:
L_222033:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x240(%rbp)
	jmp L_221988
.p2align 0x4
L_469476:
L_222034:
	xorl %ecx,%ecx
	jmp L_221984
.p2align 0x4
L_469477:
L_222035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222036
.p2align 0x4
.long 0x3576
L_222036:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	jmp L_219764
.p2align 0x4
.long 0x3462
L_222922:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222923
L_222953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_222954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222954
.p2align 0x4
.long 0x357A
L_222954:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_222923:
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x250(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222924
.p2align 0x4
.long 0x362F
L_222924:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x248(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2495:
	cmpq $0x1,%r15
	jnl L_469481
L_222952:
	movq 0x248(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x250(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2495
.p2align 0x4
L_469481:
L_222925:
	movq 0x248(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x240(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x250(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x258(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x260(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x268(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x270(%rbp)
	addq $0x280,%rbp
	leaq (L_222926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3586
L_222171:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x260(%rbp)
L_222172:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_222173
L_222174:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_469529
L_222175:
	movq 0x0(%r14),%r15
	movq %r15,0x260(%rbp)
	movq 0x258(%rbp),%rdx
	testq %rdx,%rdx
	jz L_469528
L_222176:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222177:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x168F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222178
.p2align 0x4
.long 0x357F
L_222178:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x268(%rbp)
L_222179:
	movq $0x0,0x270(%rbp)
loop_2474:
	movq 0x258(%rbp),%r10
	cmpq %r10,0x270(%rbp)
	jl L_469526
L_222180:
	movq 0x268(%rbp),%r10
	movq $0x189F,0xFFFFFFFFFFFFFFF8(%r10)
	movq 0x148(%rbp),%r10
	movq 0x38(%r10),%r9
	movq %r9,0x250(%rbp)
	movq 0x28(%r10),%r9
	movq %r9,0x258(%rbp)
	movq 0x40(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x260(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_469525
L_222181:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_469524
L_222182:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movl $0x0,0x4C(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_222184:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_469523
L_222226:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD99,%r10
	jne L_469522
L_222227:
	movq 0x8(%r14),%r10
	movq %r10,0x270(%rbp)
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_469487
L_222185:
	movl 0x4C(%rbp),%r10d
	incl %r10d
	jo L_219597
L_222186:
	cmpq $0x1,%r15
	je L_469483
L_222187:
	movl %r10d,0x4C(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_222184
.p2align 0x4
L_469483:
	movl %r10d,%ecx
L_222189:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_469485
L_222190:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_776
L_222225:
	movl %ecx,0x0(%r15)
x_776:
	movq 0x0(%r13),%r15
	movq 0x260(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_469484
L_222223:
	movq %r11,0x200(%rbp)
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_222224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_469484:
L_222192:
	movq %r14,%r15
L_222193:
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469485:
L_221887:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469487:
L_222229:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222230
L_222898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_222899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222899
.p2align 0x4
.long 0x362B
L_222899:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_222230:
	movl 0x4C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_221887
L_222231:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_469519
L_222232:
	movq 0x270(%rbp),%r15
L_222233:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x258(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2B8(%rbp)
	cmpq $0x1,%r13
	je L_469518
L_222234:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_469510
	cmpq $0x10D6,%r15
	je L_469504
	cmpq $0x10D7,%r15
	je L_469503
	cmpq $0x10D8,%r15
	je L_469502
	cmpq $0x10D9,%r15
	je L_469488
L_222235:
	movq 0x10(%r13),%r15
	movq %r15,0x258(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x2C0(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2E0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D8,%rbp
	leaq (L_222236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469488:
L_222865:
	movq 0x0(%r13),%r15
	movq 0x268(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_219587
L_222867:
	cmpl $0x0,%r14d
	je L_469499
	cmpl $0x1,%r14d
	je L_469489
L_222868:
	movq (globalObjptr+0x5320)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469489:
L_222872:
	cmpq $0x0,%r13
	jna L_219767
L_222874:
	movq 0x268(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0x10(%r14),%r11
	movq 0x10(%r15),%r10
	cmpq %r10,0x10(%r11)
	jne L_469497
L_222876:
	testl %r13d,%r13d
	jnz L_469496
L_222877:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222878:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x248(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x240(%rbp)
	movq $0x1,0x248(%rbp)
L_222364:
	movq 0x2B8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x150(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x250(%rbp)
	cmpq $0x1,%r13
	je L_469495
L_222365:
	cmpq $0x1,%r14
	je L_469494
L_222366:
	movq 0x8(%r14),%r15
	movq %r15,0x258(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x260(%rbp)
	movq $0x1,0x268(%rbp)
.p2align 0x4,,0x7
L_222367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469493
.p2align 0x4,,0x7
L_222368:
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_469490
L_222369:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_222367
.p2align 0x4
L_469490:
L_222370:
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
.p2align 0x4,,0x7
L_222371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469492
.p2align 0x4,,0x7
L_222372:
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469491
L_222373:
	movq %r15,0x260(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x250(%rbp)
	movq %r15,0x258(%rbp)
	jmp L_222371
.p2align 0x4
L_469491:
L_222375:
	movq 0x150(%rbp),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x240(%rbp),%r15
	movq 0x248(%rbp),%r14
	jmp L_219760
.p2align 0x4
L_469492:
L_222376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222377
.p2align 0x4
.long 0x35B8
L_222377:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_222372
.p2align 0x4
L_469493:
L_222378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_222379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222379
.p2align 0x4
.long 0x35B9
L_222379:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_222368
.p2align 0x4
L_469494:
L_222380:
	movq 0x250(%rbp),%r15
	jmp L_222375
.p2align 0x4
L_469495:
	movq %r14,%r15
	jmp L_222375
.p2align 0x4
L_469496:
L_222879:
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x250(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469497:
L_222875:
	movq (globalObjptr+0x5328)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469499:
L_222870:
	movq 0x248(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_222868
L_222871:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x240(%rbp)
	movq $0x1,0x248(%rbp)
	jmp L_222364
.p2align 0x4
L_469502:
L_222745:
	movq 0x8(%r13),%r15
	movq %r15,0x258(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x260(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469503:
L_222734:
	movq 0x18(%r13),%r15
	movq %r15,0x258(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x270(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469504:
L_222682:
	movq 0x10(%r13),%r11
	movq %r11,0x258(%rbp)
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x280(%rbp)
	movq 0x8(%r11),%r14
	movq 0x268(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_219587
L_222684:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2488:
	cmpl %ebx,%ecx
	je L_469508
L_222685:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_219767
L_222687:
	movq %r13,%r11
	movq %r13,%r10
	imulq $0x18,%r11
	movq 0x268(%rbp),%r9
	movl 0x0(%r9,%r11,1),%r8d
	movl %r8d,0x4C(%rbp)
	imulq $0x18,%r10
	movq 0x8(%r9,%r10,1),%r11
	movq %r11,0x288(%rbp)
	imulq $0x18,%r13
	movq 0x10(%r9,%r13,1),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_469506
L_222688:
	incl %ebx
	jo L_219597
L_222689:
	jmp loop_2488
.p2align 0x4
L_469506:
L_222690:
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469508:
L_222733:
	movq 0x248(%rbp),%r15
	movq %r15,0x270(%rbp)
L_222706:
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469510:
L_222625:
	movq 0x10(%r13),%r11
	movq %r11,0x258(%rbp)
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x280(%rbp)
	movq 0x268(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_219587
L_222627:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2486:
	cmpl %ecx,%ebx
	je L_469516
L_222628:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_219767
L_222630:
	movq %r13,%r11
	movq %r13,%r10
	imulq $0x18,%r11
	movq 0x268(%rbp),%r9
	movl 0x0(%r9,%r11,1),%r8d
	movl %r8d,0x4C(%rbp)
	imulq $0x18,%r10
	movq 0x8(%r9,%r10,1),%r11
	movq %r11,0x288(%rbp)
	imulq $0x18,%r13
	movq 0x10(%r9,%r13,1),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_469512
L_222631:
	incl %ebx
	jo L_219597
L_222632:
	jmp loop_2486
.p2align 0x4
L_469512:
L_222633:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222634
L_222679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222680
.p2align 0x4
.long 0x3600
L_222680:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222634:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469513
L_222635:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222636:
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x288(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469513:
L_222652:
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469516:
L_222681:
	movq 0x248(%rbp),%r15
	movq %r15,0x270(%rbp)
L_222639:
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469518:
L_222896:
	movq (globalObjptr+0x5318)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469519:
L_222897:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x270(%rbp),%r15
	jmp L_222233
.p2align 0x4
L_469522:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_222185
.p2align 0x4
L_469523:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_222185
.p2align 0x4
L_469524:
L_222900:
	xorl %ecx,%ecx
	jmp L_222189
.p2align 0x4
L_469525:
L_221877:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469526:
L_222901:
	movq 0x270(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x250(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x280(%rbp)
	movq %r11,0x290(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_222902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_469528:
L_222919:
	movq (globalObjptr+0x73B0)(%rip),%r15
	movq %r15,0x268(%rbp)
	jmp L_222179
.p2align 0x4
L_469529:
L_222173:
	movq (globalObjptr+0x73A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3465
L_222145:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
	movb $0x0,0x260(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1955
.p2align 0x4
.long 0x3462
L_222137:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222138
L_222139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_222140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222140
.p2align 0x4
.long 0x357A
L_222140:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_222138:
	movq $0x2139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x240(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3463
L_222132:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222133
L_222134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_222135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222135
.p2align 0x4
.long 0x3582
L_222135:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_222133:
	movq $0x2137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3463
L_222127:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222128
L_222129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_222130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222130
.p2align 0x4
.long 0x3582
L_222130:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_222128:
	movq $0x2135,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3462
L_223461:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223462
L_223492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_223493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223493
.p2align 0x4
.long 0x357A
L_223493:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_223462:
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x250(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_223463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223463
.p2align 0x4
.long 0x362F
L_223463:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x248(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2509:
	cmpq $0x1,%r15
	jnl L_469534
L_223491:
	movq 0x248(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x250(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2509
.p2align 0x4
L_469534:
L_223464:
	movq 0x248(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x240(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x250(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x258(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x260(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x268(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x270(%rbp)
	addq $0x280,%rbp
	leaq (L_223465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x344E
L_219631:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219632
L_219665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219666
.p2align 0x4
.long 0x3455
L_219666:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219632:
	movq 0x208(%rbp),%r15
	cmpq $0x1,%r15
	je L_469536
L_219633:
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_219634
.p2align 0x4
L_469536:
L_219664:
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x218(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3456
x_730:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219668
L_219680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219681
.p2align 0x4
.long 0x3459
L_219681:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219668:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469539
L_219679:
	movq 0x8(%r14),%r15
L_219670:
	cmpq $0x1,0x0(%r15)
	je L_469538
L_219671:
	movq %r15,0x228(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469538:
L_219678:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
L_219675:
	movl %ecx,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2436
.p2align 0x4
L_469539:
L_219669:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219670
.p2align 0x4
.long 0x3450
L_219643:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3451
x_729:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219645
L_219657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219658
.p2align 0x4
.long 0x3454
L_219658:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219645:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469542
L_219656:
	movq 0x8(%r14),%r15
L_219647:
	cmpq $0x1,0x0(%r15)
	je L_469541
L_219648:
	movq %r15,0x228(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469541:
L_219655:
	movl 0x40(%rbp),%ecx
	movq $0x1,%r15
L_219652:
	movl %ecx,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_2437
.p2align 0x4
L_469542:
L_219646:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219647
.p2align 0x4
.long 0x345B
x_731:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469545
L_219712:
	movq 0x8(%r14),%r15
L_219703:
	cmpq $0x1,0x0(%r15)
	je L_469544
L_219704:
	movq %r15,0x228(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_219705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469544:
L_219711:
	movl 0x28(%rbp),%ecx
	movq $0x1,%r15
L_219708:
	movl %ecx,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_2434
.p2align 0x4
L_469545:
L_219702:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219703
.p2align 0x4
.long 0x345F
bug_548:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219731
L_219732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_219733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219733
.p2align 0x4
.long 0x3460
L_219733:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_219731:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3466
L_222099:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x260(%rbp)
	movl $0x1,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_594:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222123
L_222124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222125
.p2align 0x4
.long 0x3460
L_222125:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222123:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3463
L_219742:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469548
L_219743:
	movq %r14,0x258(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_219744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469548:
L_222087:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
x_789:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r14
	movq %r14,0x240(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469550
L_223459:
	movq 0x8(%r14),%r15
L_223127:
	cmpq $0x1,0x0(%r15)
	je L_469549
L_223128:
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_223129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469549:
L_220075:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469550:
L_223126:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_223127
.p2align 0x4
.long 0x3641
L_223065:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r15,0x280(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x290(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x288(%rbp)
	jne L_219587
L_223067:
	testq %rdx,%rdx
	jz L_469560
L_223068:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_223069:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1689,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_223070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223070
.p2align 0x4
.long 0x3642
L_223070:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x280(%rbp)
L_223071:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x298(%rbp)
loop_2501:
	movq 0x290(%rbp),%r15
	cmpq %r15,0x298(%rbp)
	jl L_469558
L_223072:
	movq 0x280(%rbp),%r15
	movq $0x1897,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4C(%rbp),%rdx
	movq %rdx,0x260(%rbp)
	testq %rdx,%rdx
	jz L_469557
L_223073:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_223074:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_223075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223075
.p2align 0x4
.long 0x3643
L_223075:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq %rax,0x288(%rbp)
L_223076:
	xorl %ecx,%ecx
	movq $0x0,0x290(%rbp)
.p2align 0x4,,0x7
loop_2502:
	movq 0x260(%rbp),%r15
	cmpq %r15,0x290(%rbp)
	jnl L_469555
L_223095:
	movl %ecx,0x4C(%rbp)
.p2align 0x4,,0x7
loop_2504:
	movl 0x4C(%rbp),%r15d
	movslq %r15d,%r14
	movq 0x280(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x298(%rbp)
	cmpq $0x1,%r11
	jne L_469552
L_223101:
	incl %r15d
	jo L_219597
L_223102:
	movl %r15d,0x4C(%rbp)
	jmp loop_2504
.p2align 0x4
L_469552:
L_223096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469554
.p2align 0x4,,0x7
L_223097:
	movq 0x298(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_223098:
	movq 0x288(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x290(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x290(%rbp)
	jmp loop_2502
.p2align 0x4
L_469554:
L_223099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_223100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223100
.p2align 0x4
.long 0x3647
L_223100:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	jmp L_223097
.p2align 0x4
L_469555:
L_223077:
	movq 0x288(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x250(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469557:
L_223104:
	movq (globalObjptr+0x7368)(%rip),%r15
	movq %r15,0x288(%rbp)
	jmp L_223076
.p2align 0x4
L_469558:
L_223105:
	movq 0x298(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x288(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x260(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2C0(%rbp)
	addq $0x2B8,%rbp
	leaq (x_788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469560:
L_223119:
	movq (globalObjptr+0x7360)(%rip),%r15
	movq %r15,0x280(%rbp)
	jmp L_223071
.p2align 0x4
.long 0x3633
L_222973:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r15,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x298(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x290(%rbp)
	jne L_219587
L_222975:
	testq %rdx,%rdx
	jz L_469571
L_222976:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222977:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1689,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_222978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222978
.p2align 0x4
.long 0x3634
L_222978:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq %rax,0x260(%rbp)
L_222979:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x2A0(%rbp)
loop_2497:
	movq 0x298(%rbp),%r15
	cmpq %r15,0x2A0(%rbp)
	jl L_469569
L_222980:
	movq 0x260(%rbp),%r15
	movq $0x1897,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4C(%rbp),%rdx
	movq %rdx,0x278(%rbp)
	testq %rdx,%rdx
	jz L_469568
L_222981:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222982:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_222983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222983
.p2align 0x4
.long 0x3635
L_222983:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq %rax,0x290(%rbp)
L_222984:
	xorl %ecx,%ecx
	movq $0x0,0x298(%rbp)
.p2align 0x4,,0x7
loop_2498:
	movq 0x278(%rbp),%r15
	cmpq %r15,0x298(%rbp)
	jnl L_469566
L_223009:
	movl %ecx,0x4C(%rbp)
.p2align 0x4,,0x7
loop_2500:
	movl 0x4C(%rbp),%r15d
	movslq %r15d,%r14
	movq 0x260(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x2A0(%rbp)
	cmpq $0x1,%r11
	jne L_469563
L_223015:
	incl %r15d
	jo L_219597
L_223016:
	movl %r15d,0x4C(%rbp)
	jmp loop_2500
.p2align 0x4
L_469563:
L_223010:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469565
.p2align 0x4,,0x7
L_223011:
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_223012:
	movq 0x290(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x298(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x298(%rbp)
	jmp loop_2498
.p2align 0x4
L_469565:
L_223013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_223014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223014
.p2align 0x4
.long 0x363A
L_223014:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	jmp L_223011
.p2align 0x4
L_469566:
L_222985:
	movq 0x290(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x258(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_222986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469568:
L_223018:
	movq (globalObjptr+0x7368)(%rip),%r15
	movq %r15,0x290(%rbp)
	jmp L_222984
.p2align 0x4
L_469569:
L_223019:
	movq 0x2A0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x290(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (x_787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469571:
L_223033:
	movq (globalObjptr+0x7360)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp L_222979
.p2align 0x4
.long 0x3467
L_219770:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3471
x_737:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469573
L_220130:
	movq 0x8(%r14),%r15
L_220105:
	cmpq $0x1,0x0(%r15)
	je none_0
L_220106:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469573:
L_220104:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220105
.p2align 0x4
.long 0x346F
L_221961:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	jg L_469574
L_221962:
	movl $0x8,%ecx
L_221963:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x288(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469574:
L_221971:
	cmpl $0x10,0x84(%rbp)
	jg L_469575
L_221972:
	movl $0x10,%ecx
	jmp L_221963
.p2align 0x4
L_469575:
L_221973:
	cmpl $0x20,0x84(%rbp)
	jg L_469576
L_221974:
	movl $0x20,%ecx
	jmp L_221963
.p2align 0x4
L_469576:
L_221975:
	cmpl $0x40,0x84(%rbp)
	jne L_469577
L_221977:
	movl $0x40,%ecx
	jmp L_221963
.p2align 0x4
L_469577:
L_220627:
	movq (globalObjptr+0x1708)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BC
x_739:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469578
L_220124:
	movq 0x8(%r14),%r15
L_220115:
	cmpq $0x1,0x0(%r15)
	je none_0
L_220116:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469578:
L_220114:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220115
.p2align 0x4
.long 0x3471
x_771:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469579
L_221954:
	movq 0x8(%r14),%r15
L_221940:
	cmpq $0x1,0x0(%r15)
	je none_0
L_221941:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469579:
L_221939:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221940
.p2align 0x4
.long 0x346F
x_769:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469580
L_221937:
	movq 0x8(%r14),%r15
L_221715:
	cmpq $0x1,0x0(%r15)
	je none_0
L_221716:
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_221717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469580:
L_221714:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221715
.p2align 0x4
.long 0x346E
L_220260:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220261
L_221711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221712
.p2align 0x4
.long 0x349E
L_221712:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220261:
	movq 0x270(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1,%r14
	je L_469749
	cmpq $0x3,%r14
	je arrayOrVectorLength_0
	cmpq $0x6,%r14
	je L_469748
	cmpq $0xE,%r14
	je cpointerGet_6
	cmpq $0xF,%r14
	je cpointerGet_6
	cmpq $0x12,%r14
	je cpointerSet_6
	cmpq $0x13,%r14
	je cpointerSet_6
	cmpq $0x1B,%r14
	je L_469746
	cmpq $0x31,%r14
	je cast_0
	cmpq $0x32,%r14
	je cast_0
	cmpq $0x35,%r14
	je L_469745
	cmpq $0x39,%r14
	je L_469743
	cmpq $0x3E,%r14
	je none_0
	cmpq $0x41,%r14
	je L_469741
	cmpq $0x42,%r14
	je L_469740
	cmpq $0x43,%r14
	je L_469738
	cmpq $0x4A,%r14
	je L_469730
	cmpq $0x4B,%r14
	je L_469722
	cmpq $0x4D,%r14
	je L_469721
	cmpq $0x4E,%r14
	je L_469719
	cmpq $0x52,%r14
	je L_469718
	cmpq $0x59,%r14
	je arrayOrVectorLength_1
	cmpq $0x5B,%r14
	je L_469716
	cmpq $0x5D,%r14
	je L_469714
	cmpq $0x5E,%r14
	je L_469711
	cmpq $0x5F,%r14
	je cast_1
	cmpq $0x61,%r14
	je L_469710
	cmpq $0x63,%r14
	je L_469708
	cmpq $0x65,%r14
	je cpointerGet_6
	cmpq $0x66,%r14
	je cpointerSet_6
L_220262:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_220263
L_220547:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A5,%r14
	je L_469706
	cmpq $0x10A6,%r14
	je L_469705
	cmpq $0x10A7,%r14
	je L_469704
	cmpq $0x10B9,%r14
	je L_469703
	cmpq $0x10BA,%r14
	je L_469702
	cmpq $0x10C2,%r14
	je L_469701
	cmpq $0x10C3,%r14
	je cpointerSet_7
	cmpq $0x10C4,%r14
	je cpointerGet_7
L_220263:
	movb 0x1B8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_469582
	cmpb $0x2,%r15b
	je L_469581
L_220264:
	movq 0x270(%rbp),%r15
	movq %r15,0x260(%rbp)
L_220265:
	movq 0x260(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1956
.p2align 0x4
L_469581:
L_220541:
	movq 0x270(%rbp),%r15
	movq %r15,0x260(%rbp)
L_220542:
	movq 0x260(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1957
.p2align 0x4
L_469582:
L_220373:
	movq 0x270(%rbp),%r14
	movq %r14,%r15
L_220374:
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x9,%r14
	je L_220330
	cmpq $0xA,%r14
	je L_220330
	cmpq $0xB,%r14
	je L_220330
	cmpq $0xD,%r14
	je L_220330
	cmpq $0x11,%r14
	je L_220330
	cmpq $0x15,%r14
	je L_220330
	cmpq $0x16,%r14
	je L_220330
	cmpq $0x67,%r14
	je L_469692
	cmpq $0x69,%r14
	je L_469690
	cmpq $0x6A,%r14
	je L_469688
	cmpq $0x6B,%r14
	je L_469686
	cmpq $0x6D,%r14
	je L_469684
	cmpq $0x6E,%r14
	je L_469682
	cmpq $0x6F,%r14
	je L_469680
	cmpq $0x71,%r14
	je L_469678
	cmpq $0x72,%r14
	je L_469676
	cmpq $0x73,%r14
	je L_469674
	cmpq $0x75,%r14
	je L_469672
	cmpq $0x76,%r14
	je L_469670
	cmpq $0x77,%r14
	je L_469668
	cmpq $0x79,%r14
	je L_469666
	cmpq $0x7A,%r14
	je L_469664
	cmpq $0x7B,%r14
	je L_469662
	cmpq $0x7D,%r14
	je L_469660
	cmpq $0x7E,%r14
	je L_469658
	cmpq $0x7F,%r14
	je L_469656
	cmpq $0x81,%r14
	je L_469654
	cmpq $0x82,%r14
	je L_469652
	cmpq $0x83,%r14
	je L_469650
	cmpq $0x85,%r14
	je L_469649
	cmpq $0x86,%r14
	je L_469647
	cmpq $0x87,%r14
	je L_469645
	cmpq $0x89,%r14
	je L_469643
L_220375:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_220376
L_220377:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x19,%rax
	ja L_469583
	jmp *jumpTable_682(,%rax,8)
.data
.p2align 0x4
jumpTable_682:
.quad L_469640,L_469638,L_469636,L_469634,L_469632,L_469630,L_469628,L_469626,L_469623,L_469621,L_469619,L_469617,L_469615,L_469613,L_469611,L_469609,L_469607,L_469605,L_469603,L_469601,L_469599,L_469597,L_469595,L_469593,L_469591,L_469584
.text
.p2align 0x4
L_469583:
L_220376:
	movq %r15,0x260(%rbp)
L_220270:
	movq 0x260(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cFunction_0
.p2align 0x4
L_469584:
L_220455:
	cmpq $0x1,0x258(%rbp)
	je L_469585
L_220456:
	movq %r15,0x260(%rbp)
L_220332:
	movq 0x258(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469585:
L_220381:
	movq %r15,0x260(%rbp)
	movq $0x1,0x258(%rbp)
L_220340:
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x270(%rbp)
	cmpq %r11,%r14
	jne L_219587
L_220342:
	testq %r11,%r11
	jz L_469589
L_220343:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_220344:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220345
L_220360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220361
.p2align 0x4
.long 0x34DD
L_220361:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220345:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq 0x270(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220346
.p2align 0x4
.long 0x34DD
L_220346:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq %rax,0x278(%rbp)
L_220347:
	movq $0x0,0x280(%rbp)
loop_2448:
	movq 0x270(%rbp),%r15
	cmpq %r15,0x280(%rbp)
	jl L_469586
L_220348:
	movq 0x278(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x260(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x258(%rbp)
	jmp add_1
.p2align 0x4
L_469586:
L_220349:
	movq 0x280(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x268(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x288(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x290(%rbp)
	movq %r13,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_220350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469589:
L_220363:
	movq (globalObjptr+0x73D0)(%rip),%r15
	movq %r15,0x278(%rbp)
	jmp L_220347
.p2align 0x4
L_469591:
L_220452:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220453:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469593:
L_220449:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220450:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469595:
L_220446:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220447:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469597:
L_220443:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220444:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469599:
L_220440:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220441:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469601:
L_220437:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220438:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469603:
L_220434:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220435:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469605:
L_220431:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220432:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469607:
L_220428:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220429:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469609:
L_220425:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220426:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469611:
L_220422:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220423:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469613:
L_220419:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220420:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469615:
L_220416:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220417:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469617:
L_220413:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220414:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469619:
L_220410:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220411:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469621:
L_220407:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220408:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469623:
L_220404:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_220376
L_220330:
	cmpq $0x1,0x258(%rbp)
	je L_469624
L_220331:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469624:
L_220370:
	movq %r15,0x260(%rbp)
	movq $0x1,0x258(%rbp)
	jmp L_220340
.p2align 0x4
L_469626:
L_220400:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_220376
	jmp L_220330
.p2align 0x4
L_469628:
L_220397:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220398:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469630:
L_220394:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220395:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469632:
L_220391:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220392:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469634:
L_220388:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220389:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469636:
L_220385:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220386:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469638:
L_220382:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220383:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469640:
L_220378:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220379:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469643:
L_220538:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220539:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469645:
L_220535:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220536:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469647:
L_220532:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220533:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469649:
L_220531:
	movq %r15,0x260(%rbp)
	jmp L_220270
.p2align 0x4
L_469650:
L_220528:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220529:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469652:
L_220525:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220526:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469654:
L_220522:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220523:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469656:
L_220519:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220520:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469658:
L_220516:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220517:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469660:
L_220513:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220514:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469662:
L_220510:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220511:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469664:
L_220507:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220508:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469666:
L_220504:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220505:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469668:
L_220501:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220502:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469670:
L_220498:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220499:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469672:
L_220495:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220496:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469674:
L_220492:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220493:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469676:
L_220489:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220490:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469678:
L_220486:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220487:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469680:
L_220483:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220484:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469682:
L_220480:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220481:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469684:
L_220477:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220478:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469686:
L_220474:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220475:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469688:
L_220471:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220472:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469690:
L_220468:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220469:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
L_469692:
L_220465:
	cmpq $0x1,0x258(%rbp)
	je L_220381
L_220466:
	movq %r15,0x260(%rbp)
	jmp L_220332
.p2align 0x4
cpointerGet_7:
cpointerGet_6:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
cpointerSet_7:
cpointerSet_6:
	movl $0x2,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_220660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469701:
L_220658:
	movq 0x270(%rbp),%r15
	movl 0x1C(%r15),%r14d
	movl %r14d,0x84(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x260(%rbp)
	movb 0x21(%r15),%r14b
	movb %r14b,0x49(%rbp)
	movl 0x18(%r15),%r14d
	movl %r14d,0x1BC(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x278(%rbp)
	movl 0x14(%r15),%r14d
	movl %r14d,0x280(%rbp)
	movl 0x10(%r15),%r14d
	movl %r14d,0x284(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x288(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x28C(%rbp)
	movb 0x20(%r15),%r14b
	movb %r14b,0x4A(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x28(%r15),%r14
	movq 0x38(%r15),%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x298(%rbp)
simpleCCall_0:
	movq 0x268(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_220273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_469702:
L_220641:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469703:
L_220585:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x84(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x280(%rbp)
	movq %r13,0x290(%rbp)
	movq %r11,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_220586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_469704:
L_220584:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
subWord_0:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x278(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movl $0x0,0x288(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_220549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469705:
L_220565:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x258(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x260(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movl $0x0,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_220566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469706:
L_220548:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	jmp subWord_0
.p2align 0x4
L_469708:
L_221671:
	movq 0x168(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_469709
L_221672:
	movq %r13,0x280(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469709:
L_221704:
	movq %r10,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469710:
L_221670:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x270,%rbp
	leaq (move_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
cast_1:
cast_0:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_220605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469711:
L_221551:
	movq 0x260(%rbp),%r14
	movq 0x8(%r14),%r13
L_221552:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_221454
L_221553:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF24,%r14
	jne L_469712
L_221554:
	movq 0x0(%r13),%r14
	movq %r14,0x288(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq %r13,0x290(%rbp)
	addq $0x288,%rbp
	leaq (x_767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469712:
L_221454:
	movq (globalObjptr+0x73C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469714:
L_221489:
	movq 0x268(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_219767
L_221491:
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469716:
L_221449:
	movq 0x268(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_219767
L_221451:
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
arrayOrVectorLength_1:
arrayOrVectorLength_0:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_220877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469718:
L_221398:
	movq 0x140(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	movl $0x0,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_221399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469719:
L_221350:
	movq 0x168(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_469720
L_221351:
	movq %r13,0x280(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469720:
L_221393:
	movq %r10,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469721:
L_221349:
	movq (globalWord64+0x1260)(%rip),%r14
	movq %r14,0x268(%rbp)
	jmp move_0
.p2align 0x4
L_469722:
L_221230:
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469729
L_221231:
	movq 0x8(%r14),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_221232:
	incl %ecx
	jo L_219597
L_221233:
	cmpq $0x1,%r15
	je L_469723
L_221234:
	movq 0x8(%r15),%r15
	jmp L_221232
.p2align 0x4
L_469723:
L_221235:
L_221236:
	movslq %ecx,%rdx
	movq %rdx,0x258(%rbp)
	testq %rdx,%rdx
	jz L_469727
L_221237:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_221238:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_221239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221239
.p2align 0x4
.long 0x3501
L_221239:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq %rax,0x260(%rbp)
L_221240:
	movq 0x250(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2457:
	cmpq 0x258(%rbp),%r15
	jnl L_469725
L_221343:
	cmpq $0x1,%r14
	je L_219720
L_221344:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x260(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2457
.p2align 0x4
L_469725:
L_221241:
	movq 0x260(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x258(%rbp)
	movq %r14,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_221242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469727:
L_221347:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp L_221240
.p2align 0x4
L_469729:
L_221348:
	xorl %ecx,%ecx
	jmp L_221236
.p2align 0x4
L_469730:
L_221116:
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469737
L_221117:
	movq 0x8(%r14),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_221118:
	incl %ecx
	jo L_219597
L_221119:
	cmpq $0x1,%r15
	je L_469731
L_221120:
	movq 0x8(%r15),%r15
	jmp L_221118
.p2align 0x4
L_469731:
L_221121:
L_221122:
	movslq %ecx,%rdx
	movq %rdx,0x258(%rbp)
	testq %rdx,%rdx
	jz L_469735
L_221123:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_221124:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_221125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221125
.p2align 0x4
.long 0x3501
L_221125:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq %rax,0x260(%rbp)
L_221126:
	movq 0x250(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2453:
	cmpq 0x258(%rbp),%r15
	jnl L_469733
L_221224:
	cmpq $0x1,%r14
	je L_219720
L_221225:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x260(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2453
.p2align 0x4
L_469733:
L_221127:
	movq 0x260(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x258(%rbp)
	movq %r14,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_221128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469735:
L_221228:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp L_221126
.p2align 0x4
L_469737:
L_221229:
	xorl %ecx,%ecx
	jmp L_221122
.p2align 0x4
L_469738:
L_221086:
	movq 0x268(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_219767
L_221088:
	movq 0x0(%r14),%r13
	movq %r13,0x258(%rbp)
	movq %r13,0x280(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_221089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469740:
L_221058:
	movl $0x0,0x278(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_221059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469741:
L_221017:
	movq 0x268(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_219767
L_221019:
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469743:
L_220994:
	movq 0x268(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_219767
L_220996:
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469745:
L_220964:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x260(%rbp),%r14
	movq %r14,0x278(%rbp)
	addq $0x278,%rbp
	leaq (x_756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469746:
L_220930:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_469747
L_220931:
	movq %r13,0x270(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_220932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469747:
L_220957:
	movq %r10,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469748:
L_220888:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_220889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_469749:
L_220706:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_220707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34BC
x_740:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469751
L_220257:
	movq 0x8(%r14),%r15
L_220134:
	cmpq $0x1,0x0(%r15)
	je none_0
L_220135:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469751:
L_220133:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220134
.p2align 0x4
.long 0x3573
x_773:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469753
L_222026:
	movq 0x8(%r14),%r15
L_222017:
	cmpq $0x1,0x0(%r15)
	je L_469752
L_222018:
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_222019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469752:
L_222025:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
L_222022:
	movl %ecx,0x4C(%rbp)
	movq 0x250(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x258(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x258(%rbp)
	jmp loop_2470
.p2align 0x4
L_469753:
L_222016:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222017
.p2align 0x4
.long 0x3471
L_222926:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_469760
	cmpl $0x10,%r15d
	je L_469759
	cmpl $0x20,%r15d
	je L_469758
	cmpl $0x40,%r15d
	je L_469754
L_221676:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469754:
L_222951:
	movq 0x268(%rbp),%r15
	movq %r15,0x240(%rbp)
objptr_7:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222928
.p2align 0x4
.long 0x3577
L_222928:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x258(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2496:
	cmpq $0x1,%r15
	jnl L_469755
L_222948:
	movq 0x258(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2496
.p2align 0x4
L_469755:
L_222929:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222930
L_222946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_222947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222947
.p2align 0x4
.long 0x34BD
L_222947:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_222930:
	movq 0x258(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x240(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x250(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469756
L_222931:
	movq %r14,0x260(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_222932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469756:
L_222941:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469758:
L_222950:
	movq 0x260(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_7
.p2align 0x4
L_469759:
L_222949:
	movq 0x270(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_7
.p2align 0x4
L_469760:
L_222927:
	movq 0x258(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_7
.p2align 0x4
.long 0x3565
L_222224:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1F0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_222193
.p2align 0x4
.long 0x345F
L_222194:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_222195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3587
L_222236:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq 0x2D8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2D8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2F0(%rbp)
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (x_777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3625
L_222880:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x250(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x260(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3603
L_222746:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	movq 0x260(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2E0(%rbp)
	movq %r15,0x2D8(%rbp)
	addq $0x2D8,%rbp
	leaq (x_784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x35F3
L_222735:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x35F8
L_222691:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x35F3
L_222707:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x35F2
L_222637:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222638
L_222650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222651
.p2align 0x4
.long 0x35F7
L_222651:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222638:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x30,%r12
	movq 0x270(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x270(%rbp)
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_222639
.p2align 0x4
.long 0x35F8
L_222653:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x35F3
L_222640:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (x_779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x362C
L_222902:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x4C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_219587
L_222904:
	cmpl $0x0,%r13d
	jl L_469764
L_222905:
	xorl %ecx,%ecx
	movl $0x0,0x84(%rbp)
.p2align 0x4,,0x7
loop_2494:
	movl 0x84(%rbp),%r15d
	cmpl 0x4C(%rbp),%r15d
	jnl L_469763
L_222907:
	movslq %r15d,%r14
	movq 0x290(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	testl %ecx,%ecx
	jz L_469762
L_222916:
	movl $0x1,%ecx
.p2align 0x4,,0x7
L_222913:
	incl 0x84(%rbp)
	jmp loop_2494
.p2align 0x4
L_469762:
L_222908:
	movq %r11,0x2A0(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (x_786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469763:
L_222906:
	movq 0x270(%rbp),%r14
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x268(%rbp),%r11
	movl %ecx,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x278(%rbp),%r9
	movq %r9,0x8(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x280(%rbp),%r10
	movq %r10,0x10(%r11,%r13,1)
	incq %r14
	movq %r14,0x270(%rbp)
	jmp loop_2474
.p2align 0x4
L_469764:
L_222917:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3465
L_222146:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_222147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3471
L_223465:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_469772
	cmpl $0x10,%r15d
	je L_469771
	cmpl $0x20,%r15d
	je L_469770
	cmpl $0x40,%r15d
	je L_469766
	jmp L_221676
.p2align 0x4
L_469766:
L_223490:
	movq 0x268(%rbp),%r15
	movq %r15,0x240(%rbp)
objptr_8:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_223467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223467
.p2align 0x4
.long 0x3577
L_223467:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq %rax,0x258(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2510:
	cmpq $0x1,%r15
	jnl L_469767
L_223487:
	movq 0x258(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2510
.p2align 0x4
L_469767:
L_223468:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223469
L_223485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_223486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223486
.p2align 0x4
.long 0x34BD
L_223486:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_223469:
	movq 0x258(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x240(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x250(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469768
L_223470:
	movq %r14,0x260(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_223471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469768:
L_223480:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_223481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469770:
L_223489:
	movq 0x260(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_8
.p2align 0x4
L_469771:
L_223488:
	movq 0x270(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_8
.p2align 0x4
L_469772:
L_223466:
	movq 0x258(%rbp),%r14
	movq %r14,0x240(%rbp)
	jmp objptr_8
.p2align 0x4
.long 0x3457
L_219672:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219673
L_219676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219677
.p2align 0x4
.long 0x3458
L_219677:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219673:
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_219597
L_219674:
	movq 0x40(%rbp),%r15
	jmp L_219675
.p2align 0x4
.long 0x3452
L_219649:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219650
L_219653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219654
.p2align 0x4
.long 0x3453
L_219654:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219650:
	movl 0x40(%rbp),%ecx
	incl %ecx
	jo L_219597
L_219651:
	movq 0x50(%rbp),%r15
	jmp L_219652
.p2align 0x4
.long 0x345C
L_219705:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219706
L_219709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_219710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219710
.p2align 0x4
.long 0x345D
L_219710:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_219706:
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x28(%rbp),%ecx
	incl %ecx
	jo L_219597
	jmp L_219708
.p2align 0x4
.long 0x3465
L_222100:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222101
L_222117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_222118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222118
.p2align 0x4
.long 0x3581
L_222118:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_222101:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x260(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x1,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0x10328)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r11
	movq %r11,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x250(%rbp),%r10
	movq %r10,0x40(%r14)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x268(%rbp)
	movq %r15,0x30(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x1,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x1,0x1C(%r14)
	movb $0x1,%r15b
	movzbl %r15b,%r9d
	movb $0x1,%r15b
	movzbl %r15b,%r8d
	shll $0x8,%r8d
	orl %r8d,%r9d
	movl %r9d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x38(%r14)
	movq %r13,0x40(%r14)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x240(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	addq $0x288,%rbp
	leaq (L_222102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3462
L_219744:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219745
L_222085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_222086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222086
.p2align 0x4
.long 0x357A
L_222086:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_219745:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x250(%rbp)
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x160(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469780
L_219746:
	movq %r14,0x268(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x260(%rbp)
	addq $0x260,%rbp
	leaq (word_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469780:
L_222080:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_222088:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3467
L_223129:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_223130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3644
L_223078:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223079
L_223093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223094
.p2align 0x4
.long 0x3646
L_223094:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223079:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x260(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x270(%rbp)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x288(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x280(%rbp)
	cmpq %r14,%rdx
	jne L_219587
L_223081:
	testq %rdx,%rdx
	jz L_469785
L_223082:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_223083:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223084
.p2align 0x4
.long 0x3645
L_223084:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq %rax,0x260(%rbp)
L_223085:
	movq $0x0,0x290(%rbp)
.p2align 0x4,,0x7
loop_2503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469783
.p2align 0x4,,0x7
L_223086:
	movq 0x290(%rbp),%r15
	cmpq 0x280(%rbp),%r15
	jnl L_469782
L_223088:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x288(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x1143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x290(%rbp)
	jmp loop_2503
.p2align 0x4
L_469782:
L_223087:
	movq 0x260(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x270(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2,0x18(%r14)
	movq 0x288(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x278(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x21A7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
	movq 0x268(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	xchgq %r13,%r15
	jmp L_222960
.p2align 0x4
L_469783:
L_223089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_223090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223090
.p2align 0x4
.long 0x3642
L_223090:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	jmp L_223086
.p2align 0x4
L_469785:
L_223092:
	movq (globalObjptr+0x7370)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp L_223085
.p2align 0x4
.long 0x3648
x_788:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq 0x2B8(%rbp),%r14
	movq %r14,0x2B0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469789
L_223117:
	movq 0x8(%r14),%r15
L_223107:
	cmpq $0x1,0x0(%r15)
	je L_469788
L_223108:
	movq %r15,0x2B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_223109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469788:
L_223116:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
L_223113:
	movl %ecx,0x4C(%rbp)
	movq 0x280(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x298(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x298(%rbp)
	jmp loop_2501
.p2align 0x4
L_469789:
L_223106:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_223107
.p2align 0x4
.long 0x3636
L_222986:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222987
L_223007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_223008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223008
.p2align 0x4
.long 0x3639
L_223008:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_222987:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x260(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x278(%rbp)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x290(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x280(%rbp)
	cmpq %r14,%rdx
	jne L_219587
L_222989:
	testq %rdx,%rdx
	jz L_469793
L_222990:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222991:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_222992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222992
.p2align 0x4
.long 0x3637
L_222992:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x260(%rbp)
L_222993:
	movq $0x0,0x298(%rbp)
.p2align 0x4,,0x7
loop_2499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469791
.p2align 0x4,,0x7
L_222994:
	movq 0x298(%rbp),%r15
	cmpq 0x280(%rbp),%r15
	jnl L_469790
L_223002:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x290(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x1143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x298(%rbp)
	jmp loop_2499
.p2align 0x4
L_469790:
L_222995:
	movq 0x260(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x278(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x268(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x290(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x288(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x21A7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
	movq $0x115B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq 0x250(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x270(%rbp),%r11
	movq 0x0(%r11),%r9
	movq $0x25F3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r8,0x0(%r11)
	xchgq %r13,%r15
	jmp L_222996
.p2align 0x4
L_469791:
L_223003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_223004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223004
.p2align 0x4
.long 0x3638
L_223004:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	jmp L_222994
.p2align 0x4
L_469793:
L_223006:
	movq (globalObjptr+0x7370)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp L_222993
.p2align 0x4
.long 0x363B
x_787:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r14
	movq %r14,0x2B8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469797
L_223031:
	movq 0x8(%r14),%r15
L_223021:
	cmpq $0x1,0x0(%r15)
	je L_469796
L_223022:
	movq %r15,0x2B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2B8,%rbp
	leaq (L_223023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469796:
L_223030:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
L_223027:
	movl %ecx,0x4C(%rbp)
	movq 0x260(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2A0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x2A0(%rbp)
	jmp loop_2497
.p2align 0x4
L_469797:
L_223020:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_223021
.p2align 0x4
.long 0x3468
x_732:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469798
L_220097:
	movq 0x8(%r14),%r15
L_219772:
	cmpq $0x1,0x0(%r15)
	je none_0
L_219773:
	movq 0x270(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_219774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469798:
L_219771:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219772
.p2align 0x4
.long 0x346E
L_220107:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x34BE
L_221964:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_221965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x34C0
L_220117:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220118
L_220121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220122
.p2align 0x4
.long 0x3495
L_220122:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220118:
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_220075
L_220119:
	movq $0x127B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x258(%rbp)
	jmp add_1
.p2align 0x4
.long 0x346E
L_221942:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x3471
L_221717:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221718
L_221934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221935
.p2align 0x4
.long 0x34A3
L_221935:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221718:
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_220075
L_221719:
	movq $0x127B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x280(%rbp)
	addq $0x18,%r12
	movq 0x278(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x118(%rbp),%r15
	movq 0x80(%r15),%r14
	movq 0x78(%r15),%r13
	movq %r13,0x288(%rbp)
	movq 0x70(%r15),%r13
	movq 0x60(%r15),%r11
	movq %r11,0x290(%rbp)
	movq 0x58(%r15),%r11
	movq %r11,0x298(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x2B0(%rbp)
	movq 0x38(%r15),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x2D8(%rbp)
	movq $0x1899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2E0(%rbp)
	addq $0x18,%r12
	movq 0x270(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x140(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x268(%rbp),%r15
	cmpq $0x1,%r15
	je L_469801
L_221720:
	movq %r13,0x2F8(%rbp)
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_469801:
L_221876:
	movq 0x8(%r14),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x260(%rbp),%r10
	movq 0x10(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r9
	incq %r9
	jo L_221877
L_221878:
	movq %r9,0x0(%r10)
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_469816
L_221879:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movl $0x0,0x84(%rbp)
	xchgq %r10,%r15
.p2align 0x4,,0x7
L_221881:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_469815
L_221921:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD98,%r10
	jne L_469814
L_221922:
	movq 0x8(%r14),%r10
	movq %r10,0x268(%rbp)
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x10)(%rip)
	je L_469806
L_221882:
	movl 0x84(%rbp),%r10d
	incl %r10d
	jo L_219597
L_221883:
	cmpq $0x1,%r15
	je L_469802
L_221884:
	movl %r10d,0x84(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_221881
.p2align 0x4
L_469802:
	movl %r10d,%ecx
L_221886:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_221887
L_221888:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_221890
L_221920:
	movl %ecx,0x0(%r15)
L_221890:
	movq %r13,0x200(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_469806:
L_221924:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221925
L_221930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221931
.p2align 0x4
.long 0x356B
L_221931:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221925:
	movl 0x84(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_221887
L_221926:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_469811
L_221927:
	movq 0x268(%rbp),%r15
L_221928:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
x_770:
	movq $0x189B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x2E0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x280(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x288(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x40(%r11),%r10
	movq %r10,0x260(%rbp)
	movq 0x30(%r11),%r9
	movq %r9,0x268(%rbp)
	movq 0x28(%r11),%r9
	movq %r9,0x270(%rbp)
	movq 0x20(%r11),%r9
	movq %r9,0x278(%rbp)
	movq 0x18(%r11),%r9
	movq %r9,0x290(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_469807
L_221767:
	movq 0x0(%r15),%r13
	movq %r13,0x268(%rbp)
	movq %r10,0x270(%rbp)
	movq %r14,0x260(%rbp)
	addq $0x260,%rbp
	leaq (adds_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1958
.p2align 0x4
L_469807:
L_221724:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_219587
L_221726:
	decl %ecx
	jo L_219597
L_221727:
	movq $0x1,0x2B0(%rbp)
loop_2466:
	cmpl $0x0,%ecx
	jl L_469808
L_221728:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x84(%rbp)
	movslq %ecx,%r15
	movq 0x2A0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469808:
L_221754:
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x260(%rbp)
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x280(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x84(%rbp)
	movq 0x298(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq $0x11,0x2C0(%rbp)
	movq %r14,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_221755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_469811:
L_221929:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x84(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x268(%rbp),%r15
	jmp L_221928
.p2align 0x4
L_469814:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_221882
.p2align 0x4
L_469815:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_221882
.p2align 0x4
L_469816:
L_221932:
	xorl %ecx,%ecx
	jmp L_221886
.p2align 0x4
.long 0x346E
L_220266:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220267
L_220371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220372
.p2align 0x4
.long 0x3495
L_220372:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220267:
	movl 0x84(%rbp),%ecx
	movq 0x260(%rbp),%r15
L_220268:
	testl %ecx,%ecx
	jnz L_220330
L_220269:
	movq %r15,0x260(%rbp)
	jmp L_220270
.p2align 0x4
.long 0x346E
L_220543:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220544
L_220545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220546
.p2align 0x4
.long 0x3495
L_220546:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220544:
	movl 0x84(%rbp),%ecx
	movq 0x260(%rbp),%r15
	jmp L_220268
.p2align 0x4
.long 0x346E
L_220271:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq $0x1,%r15
	je L_469823
L_220272:
	movl 0x1C(%r15),%r14d
	movl %r14d,0x84(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x260(%rbp)
	movb 0x21(%r15),%r14b
	movb %r14b,0x49(%rbp)
	movl 0x18(%r15),%r14d
	movl %r14d,0x1BC(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x278(%rbp)
	movl 0x14(%r15),%r14d
	movl %r14d,0x280(%rbp)
	movl 0x10(%r15),%r14d
	movl %r14d,0x284(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x288(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x28C(%rbp)
	movb 0x20(%r15),%r14b
	movb %r14b,0x4A(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x28(%r15),%r14
	movq 0x38(%r15),%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x298(%rbp)
	jmp simpleCCall_0
.p2align 0x4
L_469823:
L_220321:
	movq 0x260(%rbp),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x346E
L_220333:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (x_745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34DE
L_220350:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2B8(%rbp)
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (x_746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34BC
x_752:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469824
L_220705:
	movq 0x8(%r14),%r15
L_220682:
	cmpq $0x1,0x0(%r15)
	je none_0
L_220683:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469824:
L_220681:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220682
.p2align 0x4
.long 0x34E8
L_220660:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x278(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34D2
L_220273:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220274
L_220319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_220320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220320
.p2align 0x4
.long 0x34DC
L_220320:
	addq $0xFFFFFFFFFFFFFD58,%rbp
L_220274:
	movq 0x298(%rbp),%r15
	movq 0x268(%rbp),%r14
	movq %r14,0x298(%rbp)
	movq 0x270(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movl 0x280(%rbp),%r14d
	movl %r14d,0x278(%rbp)
	movl 0x284(%rbp),%r14d
	movl %r14d,0x27C(%rbp)
	movl 0x288(%rbp),%r14d
	movl %r14d,0x280(%rbp)
	movl 0x28C(%rbp),%r14d
	movl %r14d,0x284(%rbp)
	movq 0x290(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
ccall_0:
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	addq $0x50,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x84(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x278(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0x27C(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0x280(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0x284(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movzbl 0x49(%rbp),%r14d
	movzbl 0x4A(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_469825
L_220275:
	movq %r15,0x2B0(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_220276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469825:
L_220314:
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x258(%rbp)
L_220286:
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A8(%rbp)
	addq $0x50,%r12
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x284(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl 0x280(%rbp),%r13d
	movl %r13d,0xC(%r14)
	movl 0x27C(%rbp),%r13d
	movl %r13d,0x10(%r14)
	movl 0x278(%rbp),%r13d
	movl %r13d,0x14(%r14)
	movl 0x1BC(%rbp),%r13d
	movl %r13d,0x18(%r14)
	movl 0x84(%rbp),%r13d
	movl %r13d,0x1C(%r14)
	movzbl 0x4A(%rbp),%ecx
	movzbl 0x49(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%ecx
	movl %ecx,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x290(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x270(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x268(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x260(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469832
L_220287:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_220288:
	incl %ecx
	jo L_219597
L_220289:
	cmpq $0x1,%r15
	je L_469826
L_220290:
	movq 0x8(%r15),%r15
	jmp L_220288
.p2align 0x4
L_469826:
L_220291:
L_220292:
	movslq %ecx,%rdx
	movq %rdx,0x260(%rbp)
	testq %rdx,%rdx
	jz L_469830
L_220293:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_220294:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_220295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220295
.p2align 0x4
.long 0x34D6
L_220295:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x268(%rbp)
L_220296:
	movq 0x250(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2447:
	cmpq 0x260(%rbp),%r15
	jnl L_469828
L_220302:
	cmpq $0x1,%r14
	je L_219720
L_220303:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x268(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2447
.p2align 0x4
L_469828:
L_220297:
	movq 0x268(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x250(%rbp)
	addq $0x2B8,%rbp
	leaq (L_220298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_469830:
L_220306:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x268(%rbp)
	jmp L_220296
.p2align 0x4
L_469832:
L_220307:
	xorl %ecx,%ecx
	jmp L_220292
.p2align 0x4
.long 0x34C0
L_220642:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	jg L_469834
L_220643:
	movl $0x8,%ecx
L_220644:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x278(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (x_750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469834:
L_220651:
	cmpl $0x10,0x84(%rbp)
	jg L_469835
L_220652:
	movl $0x10,%ecx
	jmp L_220644
.p2align 0x4
L_469835:
L_220653:
	cmpl $0x20,0x84(%rbp)
	jg L_469836
L_220654:
	movl $0x20,%ecx
	jmp L_220644
.p2align 0x4
L_469836:
L_220655:
	cmpl $0x40,0x84(%rbp)
	jne L_220627
L_220657:
	movl $0x40,%ecx
	jmp L_220644
.p2align 0x4
.long 0x34E3
L_220586:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	testl %r15d,%r15d
	jnz L_469840
L_220587:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_469838
L_220588:
	movl $0x0,0x84(%rbp)
L_220589:
	movq 0x280(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469838:
L_220636:
	movq 0x280(%rbp),%r15
	movq %r15,%r14
	movq 0x278(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_469839
L_220637:
	cmpq %r13,%r15
	setl %al
	movzbl %al,%eax
	movl %eax,0x84(%rbp)
	jmp L_220589
.p2align 0x4
L_469839:
L_220638:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_220639:
	cmpl $0x0,%eax
	setl %al
	movzbl %al,%eax
	movl %eax,0x84(%rbp)
	jmp L_220589
.p2align 0x4
L_469840:
L_220640:
	movl $0x0,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (move_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x346F
L_220549:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movl $0x1,0x290(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_220550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x346E
L_220566:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movl $0x1,0x280(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x280,%rbp
	leaq (L_220567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34C0
L_221673:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221674
L_221702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221703
.p2align 0x4
.long 0x3495
L_221703:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221674:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x288(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x298(%rbp)
	addq $0x2A8,%rbp
	leaq (L_221675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x345F
L_221705:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3467
move_3:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
.long 0x3467
L_220605:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346F
x_767:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469842
L_221668:
	movq 0x8(%r14),%r15
L_221556:
	cmpq $0x1,0x0(%r15)
	je none_0
L_221557:
	movq %r15,0x288(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469842:
L_221555:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221556
.p2align 0x4
.long 0x346E
L_221492:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x270(%rbp)
L_221493:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_221454
L_221494:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	jne L_221454
L_221495:
	movq 0x0(%r14),%r15
	movq %r15,0x288(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq %r13,0x290(%rbp)
	addq $0x288,%rbp
	leaq (x_764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346E
L_221452:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x270(%rbp)
L_221453:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_221454
L_221455:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	jne L_221454
L_221456:
	movq 0x0(%r14),%r15
	movq %r15,0x280(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	addq $0x280,%rbp
	leaq (x_762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3467
L_220877:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1585
.p2align 0x4
.long 0x34E6
L_221399:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_221400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221400
.p2align 0x4
.long 0x3494
L_221400:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x268(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2462:
	cmpq $0x3,%r15
	jnl L_469850
L_221443:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_469849
	cmpl $0x1,%r14d
	je L_469848
	cmpl $0x2,%r14d
	je L_469847
L_220948:
	movq (globalObjptr+0x4D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469847:
L_221447:
	movq $0x1,%r14
L_221445:
	movq 0x268(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2462
.p2align 0x4
L_469848:
L_221446:
	movq 0x260(%rbp),%r14
	jmp L_221445
.p2align 0x4
L_469849:
L_221444:
	movq $0x2,%r14
	jmp L_221445
.p2align 0x4
L_469850:
L_221401:
	movq 0x268(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469851
L_221402:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469851:
L_221438:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34C0
L_221352:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221353
L_221391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221392
.p2align 0x4
.long 0x3495
L_221392:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221353:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq %r15,0x270(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221354
.p2align 0x4
.long 0x3524
L_221354:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq %rax,0x260(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2460:
	cmpq $0x1,%r15
	jnl L_469852
L_221390:
	movq 0x260(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x278(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2460
.p2align 0x4
L_469852:
L_221355:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221356
L_221388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221389
.p2align 0x4
.long 0x34A2
L_221389:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221356:
	movq 0x260(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x288(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x2A0(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_469853
L_221357:
	movq 0x0(%r15),%r13
	movq %r13,0x2B0(%rbp)
	movq %r14,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_221358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469853:
L_221383:
	movq 0x2A0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_221394:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3467
L_221242:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221243
L_221341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_221342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221342
.p2align 0x4
.long 0x3494
L_221342:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_221243:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x268(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl $0x1,0x278(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gc_0
.p2align 0x4
.long 0x3467
L_221128:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221129
L_221222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_221223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221223
.p2align 0x4
.long 0x3494
L_221223:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_221129:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x268(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x34FD
L_221089:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34C0
L_221059:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x278(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34C0
L_221020:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346E
L_220997:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (x_757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346E
x_756:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469858
L_220993:
	movq 0x8(%r14),%r15
L_220966:
	cmpq $0x1,0x0(%r15)
	je none_0
L_220967:
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_220968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469858:
L_220965:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220966
.p2align 0x4
.long 0x34E6
L_220932:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x98(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_220958:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3467
L_220889:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3467
L_220707:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34C0
L_220136:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_469859
L_220245:
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469859:
L_220137:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x288(%rbp)
	movq %r14,0x298(%rbp)
	movq %r11,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_220138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x3574
L_222019:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222020
L_222023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_222024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222024
.p2align 0x4
.long 0x3575
L_222024:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_222020:
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
	jmp L_222022
.p2align 0x4
.long 0x3466
L_222932:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222933
L_222939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222940
.p2align 0x4
.long 0x3577
L_222940:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222933:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_222934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_222942:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3565
L_222195:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq (globalObjptr+0xEA28)(%rip),%r15
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_222196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3588
x_777:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r14
	movq %r14,0x2C8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469864
L_222624:
	movq 0x8(%r14),%r15
L_222238:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222239:
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469864:
L_222237:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222238
.p2align 0x4
.long 0x3626
x_785:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x250(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469866
L_222895:
	movq 0x8(%r14),%r15
L_222882:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222883:
	movq %r15,0x2C8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469866:
L_222881:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222882
.p2align 0x4
.long 0x3604
x_784:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq 0x2D8(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469868
L_222864:
	movq 0x8(%r14),%r15
L_222748:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222749:
	movq 0x2C8(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469868:
L_222747:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222748
.p2align 0x4
.long 0x35F4
x_783:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469870
L_222744:
	movq 0x8(%r14),%r15
L_222737:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222738:
	movq %r15,0x2C8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469870:
L_222736:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222737
.p2align 0x4
.long 0x35F9
x_781:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x290(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469872
L_222732:
	movq 0x8(%r14),%r15
L_222693:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222694:
	movq %r15,0x2C8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469872:
L_222692:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222693
.p2align 0x4
.long 0x35F4
x_782:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469874
L_222716:
	movq 0x8(%r14),%r15
L_222709:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222710:
	movq %r15,0x2C8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469874:
L_222708:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222709
.p2align 0x4
.long 0x35F9
x_780:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x290(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469876
L_222678:
	movq 0x8(%r14),%r15
L_222655:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222656:
	movq %r15,0x2C8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469876:
L_222654:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222655
.p2align 0x4
.long 0x35F4
x_779:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469878
L_222649:
	movq 0x8(%r14),%r15
L_222642:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222643:
	movq %r15,0x2C8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469878:
L_222641:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222642
.p2align 0x4
.long 0x362D
x_786:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r14
	movq %r14,0x298(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469880
L_222915:
	movq 0x8(%r14),%r15
L_222910:
	cmpq $0x1,0x0(%r15)
	je L_469879
L_222911:
	movq %r15,0x2A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (L_222912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469879:
L_222914:
	xorl %ecx,%ecx
	jmp L_222913
.p2align 0x4
L_469880:
L_222909:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222910
.p2align 0x4
.long 0x3583
L_222147:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movl 0x268(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	jg L_469881
L_222148:
	movl $0x8,%ecx
L_222149:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x268(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_222150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469881:
L_222161:
	cmpl $0x10,0x4C(%rbp)
	jg L_469882
L_222162:
	movl $0x10,%ecx
	jmp L_222149
.p2align 0x4
L_469882:
L_222163:
	cmpl $0x20,0x4C(%rbp)
	jg L_469883
L_222164:
	movl $0x20,%ecx
	jmp L_222149
.p2align 0x4
L_469883:
L_222165:
	cmpl $0x40,0x4C(%rbp)
	jne L_220627
L_222167:
	movl $0x40,%ecx
	jmp L_222149
.p2align 0x4
.long 0x3466
L_223471:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223472
L_223478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_223479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223479
.p2align 0x4
.long 0x3577
L_223479:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_223472:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_223473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_223481:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x357B
L_222102:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222103
L_222115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_222116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222116
.p2align 0x4
.long 0x3580
L_222116:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_222103:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r13,0x240(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222104
.p2align 0x4
.long 0x357C
L_222104:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x250(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2473:
	cmpq $0x1,%r15
	jnl L_469886
L_222114:
	movq 0x250(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2473
.p2align 0x4
L_469886:
L_222105:
	movq 0x250(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x248(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_222106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x3464
word_58:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219747
L_222078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222079
.p2align 0x4
.long 0x3577
L_222079:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_219747:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x250(%rbp)
	movl $0x2,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_219748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_222081:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_593:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222089
L_222090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222091
.p2align 0x4
.long 0x3460
L_222091:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222089:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3632
L_223130:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223131
L_223456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_223457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223457
.p2align 0x4
.long 0x35B8
L_223457:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_223131:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x268(%rbp)
	movq 0x240(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x270(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_223132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223132
.p2align 0x4
.long 0x364C
L_223132:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq %rax,0x278(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2505:
	cmpq $0x1,%r15
	jnl L_469890
L_223455:
	movq 0x278(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x270(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2505
.p2align 0x4
L_469890:
L_223133:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223134
L_223453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_223454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223454
.p2align 0x4
.long 0x367D
L_223454:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_223134:
	movq 0x278(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x248(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x1C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x288(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3649
L_223109:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_223110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x363C
L_223023:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq 0x2B8(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_223024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3467
L_219774:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x260(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_469893
L_220085:
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_469893:
L_219775:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x288(%rbp)
	movq %r14,0x298(%rbp)
	movq %r11,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_219776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x34BE
L_220108:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (x_738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x356C
L_221965:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2A0(%rbp)
	movq $0x3,0x2A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_221966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x34BE
L_221943:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (x_772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3536
L_221721:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221722
L_221874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221875
.p2align 0x4
.long 0x3564
L_221875:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221722:
	movq 0x260(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10D1,%r14
	je L_469895
	cmpq $0x10D2,%r14
	je L_469894
L_221723:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp x_770
.p2align 0x4
L_469894:
L_221776:
	movq 0x10(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x260(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x268(%rbp)
	movq 0x298(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469895:
L_221768:
	movq 0x0(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_221769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x345F
L_221891:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_221892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x34C7
adds_1:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
adds_0:
	movl 0x4C(%rbp),%r14d
	decl %r14d
	movl %r14d,0x84(%rbp)
	cmpq $0x1,0x250(%rbp)
	je L_469902
L_219900:
	cmpq $0x1,%r15
	je L_469901
L_219901:
	movq 0x8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq $0x1,0x268(%rbp)
.p2align 0x4,,0x7
L_219902:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469900
.p2align 0x4,,0x7
L_219903:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_469897
L_219904:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_219902
.p2align 0x4
L_469897:
L_219905:
	movq 0x260(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
.p2align 0x4,,0x7
L_219906:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469899
.p2align 0x4,,0x7
L_219907:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x250(%rbp),%r14
	cmpq $0x1,%r14
	je L_469898
L_219908:
	movq %r15,0x260(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x250(%rbp)
	movq %r15,0x258(%rbp)
	jmp L_219906
.p2align 0x4
L_469898:
L_219909:
	movl 0x84(%rbp),%ecx
	movq 0x248(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp loop_2440
.p2align 0x4
L_469899:
L_219910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_219911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219911
.p2align 0x4
.long 0x3494
L_219911:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_219907
.p2align 0x4
L_469900:
L_219912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_219913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219913
.p2align 0x4
.long 0x3495
L_219913:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_219903
.p2align 0x4
L_469901:
L_219914:
	movq 0x248(%rbp),%r15
	movq 0x250(%rbp),%r14
	movl 0x84(%rbp),%ecx
	jmp loop_2440
.p2align 0x4
L_469902:
L_219915:
	movl 0x84(%rbp),%ecx
	movq 0x248(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp loop_2440
.p2align 0x4
.long 0x3537
L_221729:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221730
L_221752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221753
.p2align 0x4
.long 0x3539
L_221753:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221730:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2C8(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq 0x2C0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_469903
L_221751:
	movq 0x8(%r14),%r15
L_221732:
	movq 0x8(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x2C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x189B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x2E0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x2F0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1958
.p2align 0x4
L_469903:
L_221731:
	movq 0x8(%r14),%r15
	jmp L_221732
.p2align 0x4
.long 0x353C
L_221755:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq $0x1,%r15
	jne L_469905
L_221757:
	movq $0x11,0x2C0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_221758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_469905:
L_220553:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x345F
L_220322:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220323
L_220327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220328
.p2align 0x4
.long 0x3460
L_220328:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220323:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x102D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102E0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x34BE
x_745:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220334
L_220368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220369
.p2align 0x4
.long 0x34A3
L_220369:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220334:
	movq 0x270(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469908
L_220367:
	movq 0x8(%r14),%r15
L_220336:
	cmpq $0x1,0x0(%r15)
	je L_469907
L_220337:
	movq 0x278(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469907:
L_220366:
	movq $0x1,0x258(%rbp)
	jmp L_220340
.p2align 0x4
L_469908:
L_220335:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220336
.p2align 0x4
.long 0x34DF
x_746:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r14
	movq %r14,0x290(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469911
L_220359:
	movq 0x8(%r14),%r15
L_220352:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220353:
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_220354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469911:
L_220351:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220352
.p2align 0x4
.long 0x34C0
L_220684:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220685
L_220702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220703
.p2align 0x4
.long 0x3495
L_220703:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220685:
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_220075
L_220686:
	movq $0x127B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movl $0x0,0x280(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x280,%rbp
	leaq (L_220687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34E8
L_220661:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x258(%rbp)
	movl $0x0,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_220662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34D3
L_220276:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2B0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2C8(%rbp)
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (x_744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34D7
L_220298:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movl 0x2B8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220299
L_220300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_220301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220301
.p2align 0x4
.long 0x34D8
L_220301:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_220299:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x248(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x268(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x2A8(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x258(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0x250(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x298(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x2A0(%rbp),%r13
	movq %r13,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	decl %ecx
	movq $0x1,%r14
	jmp loop_2440
.p2align 0x4
.long 0x34C0
x_750:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220645
L_220649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220650
.p2align 0x4
.long 0x3495
L_220650:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220645:
	movq $0x2175,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_220374
	cmpb $0x2,%r14b
	je L_469915
L_220646:
	movq %r15,0x260(%rbp)
	jmp L_220265
.p2align 0x4
L_469915:
L_220648:
	movq %r15,0x260(%rbp)
	jmp L_220542
.p2align 0x4
.long 0x34BE
L_220590:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	cmpl $0x8,%r15d
	jg L_469918
L_220591:
	movl $0x8,%ecx
L_220592:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x288(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469918:
L_220629:
	cmpl $0x10,0x1BC(%rbp)
	jg L_469919
L_220630:
	movl $0x10,%ecx
	jmp L_220592
.p2align 0x4
L_469919:
L_220631:
	cmpl $0x20,0x1BC(%rbp)
	jg L_469920
L_220632:
	movl $0x20,%ecx
	jmp L_220592
.p2align 0x4
L_469920:
L_220633:
	cmpl $0x40,0x1BC(%rbp)
	jne L_220627
L_220635:
	movl $0x40,%ecx
	jmp L_220592
.p2align 0x4
.long 0x34E2
L_220550:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq $0x11,0x298(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_220551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x3471
L_220567:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq $0x11,0x290(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_220568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x3535
L_221675:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movl 0x2A8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_469928
	cmpl $0x10,%r15d
	je L_469927
	cmpl $0x20,%r15d
	je L_469926
	cmpl $0x40,%r15d
	je L_469922
	jmp L_221676
.p2align 0x4
L_469922:
L_221701:
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
objptr_6:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221678
.p2align 0x4
.long 0x34A3
L_221678:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq %rax,0x280(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2465:
	cmpq $0x1,%r15
	jnl L_469923
L_221698:
	movq 0x280(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x260(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2465
.p2align 0x4
L_469923:
L_221679:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221680
L_221696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221697
.p2align 0x4
.long 0x3524
L_221697:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221680:
	movq 0x280(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x260(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469924
L_221681:
	movq %r14,0x288(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_221682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469924:
L_221691:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469926:
L_221700:
	movq 0x288(%rbp),%r14
	movq %r14,0x260(%rbp)
	jmp objptr_6
.p2align 0x4
L_469927:
L_221699:
	movq 0x298(%rbp),%r14
	movq %r14,0x260(%rbp)
	jmp objptr_6
.p2align 0x4
L_469928:
L_221677:
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	jmp objptr_6
.p2align 0x4
.long 0x345F
bug_587:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221706
L_221707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221708
.p2align 0x4
.long 0x3460
L_221708:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221706:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3471
x_749:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469931
L_220618:
	movq 0x8(%r14),%r15
L_220607:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220608:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469931:
L_220606:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220607
.p2align 0x4
.long 0x346F
L_221558:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x8(%r15),%r14
L_221559:
	movq %r14,%r15
	andq $0x3,%r15
	jnz none_0
L_221560:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne none_0
L_221561:
	movq 0x260(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (x_768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346F
x_764:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469932
L_221550:
	movq 0x8(%r14),%r15
L_221497:
	cmpq $0x1,0x0(%r15)
	je x_1948
L_221498:
	movq %r15,0x288(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
x_1948:
x_765:
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (x_766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_469932:
L_221496:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221497
.p2align 0x4
.long 0x3471
x_762:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469933
L_221488:
	movq 0x8(%r14),%r15
L_221458:
	cmpq $0x1,0x0(%r15)
	je x_1949
L_221459:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
x_1949:
x_763:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469933:
L_221457:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221458
.p2align 0x4
.long 0x346E
L_220878:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469934
L_220879:
	movq %r14,0x288(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (word_62+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469934:
L_220883:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34C0
L_221403:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221404
L_221436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221437
.p2align 0x4
.long 0x3495
L_221437:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221404:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq %r15,0x270(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221405
.p2align 0x4
.long 0x3524
L_221405:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq %rax,0x260(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2463:
	cmpq $0x1,%r15
	jnl L_469935
L_221435:
	movq 0x260(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x278(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2463
.p2align 0x4
L_469935:
L_221406:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221407
L_221433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221434
.p2align 0x4
.long 0x34B7
L_221434:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221407:
	movq 0x260(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469936
L_221408:
	movq %r14,0x290(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469936:
L_221428:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_221439:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3525
L_221358:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221359
L_221381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221382
.p2align 0x4
.long 0x352B
L_221382:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_221359:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x2B0(%rbp)
	movl $0x2,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_221360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221384:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_574:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221395
L_221396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221397
.p2align 0x4
.long 0x3460
L_221397:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221395:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3502
L_221244:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x248(%rbp)
	movb 0x288(%rbp),%r15b
	movb %r15b,0x49(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	movb 0x2A4(%rbp),%r15b
	movb %r15b,0x4A(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221245
L_221339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221340
.p2align 0x4
.long 0x34B7
L_221340:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221245:
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	addq $0x50,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x84(%rbp),%r13d
	movl %r13d,0x8(%r15)
	movl %r13d,0xC(%r15)
	movl %r13d,0x10(%r15)
	movl 0x1BC(%rbp),%r11d
	movl %r11d,0x14(%r15)
	movl %r13d,0x18(%r15)
	movl %r13d,0x1C(%r15)
	movb 0x49(%rbp),%r10b
	movzbl %r10b,%r9d
	movb 0x4A(%rbp),%r8b
	movzbl %r8b,%esp
	shll $0x8,%esp
	orl %esp,%r9d
	movl %r9d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x248(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0x260(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq 0x270(%rbp),%rsi
	movq %rsi,0x38(%r15)
	movq 0x280(%rbp),%rdi
	movq %rdi,0x40(%r15)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x290(%rbp)
	addq $0x50,%r12
	movq %r14,0x0(%r15)
	movl %r13d,0x8(%r15)
	movl %r13d,0xC(%r15)
	movl %r11d,0x10(%r15)
	movl %r13d,0x14(%r15)
	movl %r13d,0x18(%r15)
	movl %r13d,0x1C(%r15)
	movzbl %r8b,%r14d
	movzbl %r10b,%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq %rdi,0x28(%r15)
	movq %rsi,0x30(%r15)
	movq %rsp,0x38(%r15)
	movq %r9,0x40(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x250(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_221246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3502
L_221130:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221131
L_221220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221221
.p2align 0x4
.long 0x3514
L_221221:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221131:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469942
L_221132:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469942:
L_221215:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34BC
x_760:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221090
L_221114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221115
.p2align 0x4
.long 0x349E
L_221115:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221090:
	movq 0x260(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469945
L_221113:
	movq 0x8(%r14),%r15
L_221092:
	cmpq $0x1,0x0(%r15)
	je L_469944
L_221093:
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_221094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469944:
L_221112:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_221104:
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x1,0x8(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x258(%rbp)
	jmp add_1
.p2align 0x4
L_469945:
L_221091:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221092
.p2align 0x4
.long 0x34C0
L_221060:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469947
L_221061:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469947:
L_221081:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34BC
x_759:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469948
L_221057:
	movq 0x8(%r14),%r15
L_221022:
	cmpq $0x1,0x0(%r15)
	je none_0
L_221023:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469948:
L_221021:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221022
.p2align 0x4
.long 0x34BE
x_757:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469950
L_221015:
	movq 0x8(%r14),%r15
L_220999:
	cmpq $0x1,0x0(%r15)
	je L_469949
L_221000:
	movq 0x278(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469949:
L_221008:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469950:
L_220998:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220999
.p2align 0x4
.long 0x3467
L_220968:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220969
L_220990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220991
.p2align 0x4
.long 0x3495
L_220991:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220969:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_469952
L_220970:
	andq $0x3,%r13
	jnz L_220971
L_220986:
L_220971:
	movq %r14,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469952:
L_220987:
	shrq $0x3,%r13
	movb %r13b,%r14b
	testb %r14b,%r14b
	jnz L_469953
L_220988:
	movq (globalObjptr+0x4FB0)(%rip),%r15
real_26:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
L_469953:
L_220989:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp real_26
.p2align 0x4
.long 0x3471
L_220933:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x280(%rbp)
	movq $0x3,0x288(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x280,%rbp
	leaq (L_220934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_565:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220959
L_220960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220961
.p2align 0x4
.long 0x3460
L_220961:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220959:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BC
x_755:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469957
L_220925:
	movq 0x8(%r14),%r15
L_220891:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220892:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469957:
L_220890:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220891
.p2align 0x4
.long 0x34BC
x_754:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_469959
L_220875:
	movq 0x8(%r14),%r15
L_220709:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220710:
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_469959:
L_220708:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220709
.p2align 0x4
.long 0x34D0
L_220246:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (x_743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34C1
L_220138:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x2A8(%rbp)
	movq %r11,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (x_741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3630
L_222934:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x240(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x258(%rbp)
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_222935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_601:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222943
L_222944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222945
.p2align 0x4
.long 0x3460
L_222945:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222943:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3566
L_222196:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x210(%rbp)
	addq $0x210,%rbp
	leaq (L_222197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3589
L_222240:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222241
L_222621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_222622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222622
.p2align 0x4
.long 0x35F1
L_222622:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_222241:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2D0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x2C0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2D8(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2E0(%rbp)
	movq %r14,0x2F0(%rbp)
	movq %r13,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_222242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3627
L_222884:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222885
L_222892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222893
.p2align 0x4
.long 0x362A
L_222893:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222885:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x258(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222886
.p2align 0x4
.long 0x3628
L_222886:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x240(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2493:
	cmpq $0x1,%r15
	jnl L_469962
L_222891:
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x258(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2493
.p2align 0x4
L_469962:
L_222887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222888
L_222889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222890
.p2align 0x4
.long 0x3629
L_222890:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222888:
	movq 0x240(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222878
.p2align 0x4
.long 0x3605
L_222750:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222751
L_222861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222862
.p2align 0x4
.long 0x3624
L_222862:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222751:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x2C0(%rbp)
	addq $0x10,%r12
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x2C8(%rbp)
	cmpq %r14,%r11
	jne L_219587
L_222753:
	testq %r11,%r11
	jz L_469968
L_222754:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_222755:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222756
L_222857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_222858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222858
.p2align 0x4
.long 0x3606
L_222858:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_222756:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FF,%rcx
	movq 0x2C8(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_222757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222757
.p2align 0x4
.long 0x3606
L_222757:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq %rax,0x240(%rbp)
L_222758:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x260(%rbp)
loop_2490:
	movq 0x2C8(%rbp),%r15
	cmpq %r15,0x260(%rbp)
	jl L_469965
L_222759:
	movq 0x240(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x2D0(%rbp)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_469965:
L_222813:
	movq 0x260(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x268(%rbp),%r11
	movl 0x0(%r11,%r14,1),%r10d
	movl %r10d,0x84(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x2D0(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_469968:
L_222860:
	movq (globalObjptr+0x5308)(%rip),%r15
	movq %r15,0x240(%rbp)
	jmp L_222758
.p2align 0x4
.long 0x35F5
L_222739:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222740
L_222741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222742
.p2align 0x4
.long 0x35F6
L_222742:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222740:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x240(%rbp)
	addq $0x10,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x84(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x258(%rbp),%r14
	movq %r14,0x270(%rbp)
	movl $0x0,0x4C(%rbp)
	movq $0x1,0x258(%rbp)
x_778:
	movq %r15,0x2E0(%rbp)
	movq 0x260(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x2D0(%rbp)
	movq %r13,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x35FA
L_222695:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222696
L_222729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222730
.p2align 0x4
.long 0x35FF
L_222730:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222696:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x280(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2D0(%rbp)
	movq %r14,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x35F5
L_222711:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222712
L_222713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222714
.p2align 0x4
.long 0x35F6
L_222714:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222712:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x240(%rbp)
	addq $0x10,%r12
	movq 0x258(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r15),%r11d
	movl %r11d,0x84(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x270(%rbp)
	movl $0x1,0x4C(%rbp)
	movq %r13,%r15
	jmp x_778
.p2align 0x4
.long 0x35FA
L_222657:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222658
L_222675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222676
.p2align 0x4
.long 0x35FF
L_222676:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222658:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x280(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_469974
L_222674:
	movq 0x8(%r14),%r15
L_222660:
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_469974:
L_222659:
	movq 0x8(%r14),%r15
	jmp L_222660
.p2align 0x4
.long 0x35F5
L_222644:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222645
L_222646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222647
.p2align 0x4
.long 0x35F6
L_222647:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222645:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x240(%rbp)
	addq $0x10,%r12
	movq 0x258(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r15),%r11d
	movl %r11d,0x84(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x270(%rbp)
	movl $0x1,0x4C(%rbp)
	movq %r13,%r15
	jmp x_778
.p2align 0x4
.long 0x362E
L_222912:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x288(%rbp)
	movl $0x1,%ecx
	jmp L_222913
.p2align 0x4
.long 0x3583
L_222150:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x260(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_222151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x3630
L_223473:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x240(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x258(%rbp)
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_223474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_606:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223482
L_223483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223484
.p2align 0x4
.long 0x3460
L_223484:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223482:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x357D
L_222106:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222107
L_222112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222113
.p2align 0x4
.long 0x357F
L_222113:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_222107:
	movq $0x25F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x25F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_222108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_8
.p2align 0x4
.long 0x3462
L_219748:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_469987
	cmpq $0x2,%r13
	je L_469986
L_219749:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_469984
	cmpq $0x2081,%r15
	je L_469982
	cmpq $0x2082,%r15
	je L_469980
L_219750:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_469979
L_219751:
	movq 0x0(%r11),%r14
	movq %r14,0x260(%rbp)
	leaq L_222042(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x260,%rbp
	leaq (L_219752+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469979:
L_222043:
	movq %r15,0x260(%rbp)
	leaq L_222042(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469980:
L_222068:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_469981
L_222069:
	movq 0x0(%r11),%r14
	movq %r14,0x260(%rbp)
	leaq L_222042(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x260,%rbp
	leaq (L_222070+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469981:
L_222071:
	movq %r15,0x260(%rbp)
	leaq L_222042(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469982:
L_222056:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_469983
L_222057:
	movq 0x0(%r11),%r14
	movq %r14,0x260(%rbp)
	leaq L_222042(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x260,%rbp
	leaq (L_222058+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469983:
L_222063:
	movq %r15,0x260(%rbp)
	leaq L_222042(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469984:
L_222048:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_469985
L_222049:
	movq 0x0(%r11),%r14
	movq %r14,0x260(%rbp)
	leaq L_222042(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x260,%rbp
	leaq (L_222050+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_469985:
L_222051:
	movq %r15,0x260(%rbp)
	leaq L_222042(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (L_222052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_469986:
L_222077:
	shrq $0x2,%r14
	movb %r14b,%dl
L_219757:
	movzbq %dl,%r15
	movb $0xB,%r14b
	movzbq %r14b,%r13
	shlq $0x8,%r13
	orq %r13,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x258(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_219758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_469987:
L_220796:
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x345F
bug_592:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222082
L_222083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222084
.p2align 0x4
.long 0x3460
L_222084:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222082:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x364D
L_223135:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223136
L_223451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223452
.p2align 0x4
.long 0x367C
L_223452:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223136:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movb 0x1B8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_469990
	cmpb $0x2,%r15b
	je L_469989
L_223137:
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1956
.p2align 0x4
L_469989:
L_223450:
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1957
.p2align 0x4
L_469990:
L_223384:
	movq 0x260(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_223377
	cmpq $0xA,%r13
	je L_223377
	cmpq $0xB,%r13
	je L_223377
	cmpq $0xD,%r13
	je L_223377
	cmpq $0x11,%r13
	je L_223377
	cmpq $0x15,%r13
	je L_223377
	cmpq $0x16,%r13
	je L_223377
	cmpq $0x67,%r13
	je L_223377
	cmpq $0x69,%r13
	je L_223377
	cmpq $0x6A,%r13
	je L_223377
	cmpq $0x6B,%r13
	je L_223377
	cmpq $0x6D,%r13
	je L_223377
	cmpq $0x6E,%r13
	je L_223377
	cmpq $0x6F,%r13
	je L_223377
	cmpq $0x71,%r13
	je L_223377
	cmpq $0x72,%r13
	je L_223377
	cmpq $0x73,%r13
	je L_223377
	cmpq $0x75,%r13
	je L_223377
	cmpq $0x76,%r13
	je L_223377
	cmpq $0x77,%r13
	je L_223377
	cmpq $0x79,%r13
	je L_223377
	cmpq $0x7A,%r13
	je L_223377
	cmpq $0x7B,%r13
	je L_223377
	cmpq $0x7D,%r13
	je L_223377
	cmpq $0x7E,%r13
	je L_223377
	cmpq $0x7F,%r13
	je L_223377
	cmpq $0x81,%r13
	je L_223377
	cmpq $0x82,%r13
	je L_223377
	cmpq $0x83,%r13
	je L_223377
	cmpq $0x85,%r13
	je L_223143
	cmpq $0x86,%r13
	je L_223377
	cmpq $0x87,%r13
	je L_223377
	cmpq $0x89,%r13
	je L_223377
L_223385:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_223143
L_223386:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x19,%rax
	ja L_469991
	jmp *jumpTable_683(,%rax,8)
.data
.p2align 0x4
jumpTable_683:
.quad L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_470087,L_470009,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_223377,L_469992
.text
.p2align 0x4
L_469991:
L_223143:
	movq 0x260(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_223144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_469992:
L_223377:
	movq 0x258(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_223378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_470009:
L_223397:
	movq 0x260(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_223377
L_223141:
L_223142:
	movq 0x260(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_223143
L_223151:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A9,%r14
	je L_470082
	cmpq $0x10B3,%r14
	je L_470079
	cmpq $0x10B5,%r14
	je L_470076
	cmpq $0x10BD,%r14
	je L_470010
	jmp L_223143
.p2align 0x4
L_470010:
L_223372:
	movq 0x260(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x217D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x217B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_470012
	cmpb $0x2,%r14b
	je L_470011
L_223373:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
L_223154:
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1956
.p2align 0x4
L_470011:
L_223375:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
L_223359:
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_223360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1957
.p2align 0x4
L_470012:
L_223374:
	movq %r15,%r14
	movq %r11,%r15
L_223290:
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_223303
	cmpq $0xA,%r13
	je L_223303
	cmpq $0xB,%r13
	je L_223303
	cmpq $0xD,%r13
	je L_223303
	cmpq $0x11,%r13
	je L_223303
	cmpq $0x15,%r13
	je L_223303
	cmpq $0x16,%r13
	je L_223303
	cmpq $0x67,%r13
	je L_470068
	cmpq $0x69,%r13
	je L_470067
	cmpq $0x6A,%r13
	je L_470066
	cmpq $0x6B,%r13
	je L_470065
	cmpq $0x6D,%r13
	je L_470064
	cmpq $0x6E,%r13
	je L_470063
	cmpq $0x6F,%r13
	je L_470062
	cmpq $0x71,%r13
	je L_470061
	cmpq $0x72,%r13
	je L_470060
	cmpq $0x73,%r13
	je L_470059
	cmpq $0x75,%r13
	je L_470058
	cmpq $0x76,%r13
	je L_470057
	cmpq $0x77,%r13
	je L_470056
	cmpq $0x79,%r13
	je L_470055
	cmpq $0x7A,%r13
	je L_470054
	cmpq $0x7B,%r13
	je L_470053
	cmpq $0x7D,%r13
	je L_470052
	cmpq $0x7E,%r13
	je L_470051
	cmpq $0x7F,%r13
	je L_470050
	cmpq $0x81,%r13
	je L_470049
	cmpq $0x82,%r13
	je L_470048
	cmpq $0x83,%r13
	je L_470047
	cmpq $0x85,%r13
	je L_470046
	cmpq $0x86,%r13
	je L_470045
	cmpq $0x87,%r13
	je L_470044
	cmpq $0x89,%r13
	je L_470043
L_223291:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_223292
L_223293:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x19,%rax
	ja L_470013
	jmp *jumpTable_684(,%rax,8)
.data
.p2align 0x4
jumpTable_684:
.quad L_470041,L_470040,L_470039,L_470038,L_470037,L_470036,L_470035,L_470033,L_470031,L_470030,L_470029,L_470028,L_470027,L_470026,L_470025,L_470024,L_470023,L_470022,L_470021,L_470020,L_470019,L_470018,L_470017,L_470016,L_470015,L_470014
.text
.p2align 0x4
L_470013:
L_223292:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
L_223159:
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_223160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cFunction_0
.p2align 0x4
L_470014:
L_223324:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
L_223235:
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_223236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
L_470015:
L_223323:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470016:
L_223322:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470017:
L_223321:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470018:
L_223320:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470019:
L_223319:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470020:
L_223318:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470021:
L_223317:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470022:
L_223316:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470023:
L_223315:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470024:
L_223314:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470025:
L_223313:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470026:
L_223312:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470027:
L_223311:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470028:
L_223310:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470029:
L_223309:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470030:
L_223308:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470031:
L_223305:
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_223292
L_223303:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470033:
L_223301:
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_223292
	jmp L_223303
.p2align 0x4
L_470035:
L_223300:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470036:
L_223299:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470037:
L_223298:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470038:
L_223297:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470039:
L_223296:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470040:
L_223295:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470041:
L_223294:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470043:
L_223357:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470044:
L_223356:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470045:
L_223355:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470046:
L_223354:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223159
.p2align 0x4
L_470047:
L_223353:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470048:
L_223352:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470049:
L_223351:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470050:
L_223350:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470051:
L_223349:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470052:
L_223348:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470053:
L_223347:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470054:
L_223346:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470055:
L_223345:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470056:
L_223344:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470057:
L_223343:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470058:
L_223342:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470059:
L_223341:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470060:
L_223340:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470061:
L_223339:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470062:
L_223338:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470063:
L_223337:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470064:
L_223336:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470065:
L_223335:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470066:
L_223334:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470067:
L_223333:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470068:
L_223332:
	movq %r15,0x260(%rbp)
	movq %r14,0x270(%rbp)
	jmp L_223235
.p2align 0x4
L_470076:
L_223368:
	movq 0x260(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x216D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq $0x216B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_470078
	cmpb $0x2,%r14b
	je L_470077
L_223369:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223154
.p2align 0x4
L_470077:
L_223371:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223359
.p2align 0x4
L_470078:
L_223370:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_223290
.p2align 0x4
L_470079:
L_223364:
	movq 0x260(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2169,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x2167,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_470081
	cmpb $0x2,%r14b
	je L_470080
L_223365:
	movq %r13,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223154
.p2align 0x4
L_470080:
L_223367:
	movq %r13,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223359
.p2align 0x4
L_470081:
L_223366:
	movq %r15,%r14
	movq %r13,%r15
	jmp L_223290
.p2align 0x4
L_470082:
L_223152:
	movq 0x260(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2153,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_470084
	cmpb $0x2,%r14b
	je L_470083
L_223153:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223154
.p2align 0x4
L_470083:
L_223358:
	movq %r11,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223359
.p2align 0x4
L_470084:
L_223289:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_223290
.p2align 0x4
L_470087:
L_223394:
	movq 0x260(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_223141
	jmp L_223377
.p2align 0x4
.long 0x364A
L_223110:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movl 0x2C0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223111
L_223114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_223115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223115
.p2align 0x4
.long 0x364B
L_223115:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_223111:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_223112:
	jmp L_223113
.p2align 0x4
.long 0x363D
L_223024:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223025
L_223028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_223029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223029
.p2align 0x4
.long 0x363E
L_223029:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_223025:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_223026:
	jmp L_223027
.p2align 0x4
.long 0x34BA
L_220086:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (x_736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3469
L_219776:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r15,0x2A8(%rbp)
	movq %r11,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (x_733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34BF
x_738:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470136
L_220128:
	movq 0x8(%r14),%r15
L_220110:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220111:
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_220112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470136:
L_220109:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220110
.p2align 0x4
.long 0x356D
L_221966:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x280(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_221967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34BF
x_772:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470138
L_221952:
	movq 0x8(%r14),%r15
L_221945:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_221946:
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470138:
L_221944:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221945
.p2align 0x4
.long 0x3478
L_221777:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2F0(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3542
L_221769:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x2D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3565
L_221892:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq (globalObjptr+0x102B8)(%rip),%r15
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_221893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3538
L_221733:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221734
L_221749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221750
.p2align 0x4
.long 0x353B
L_221750:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221734:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2D0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x2C8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2D8(%rbp)
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2C0(%rbp),%r15
	cmpq $0x1,%r15
	je L_470143
L_221735:
	movq 0x8(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq $0x1,0x2C0(%rbp)
.p2align 0x4,,0x7
L_221736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470142
.p2align 0x4,,0x7
L_221737:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470139
L_221738:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2B0(%rbp)
	movq %r15,0x2B8(%rbp)
	jmp L_221736
.p2align 0x4
L_470139:
L_221739:
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x2C0(%rbp)
.p2align 0x4,,0x7
L_221740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470141
.p2align 0x4,,0x7
L_221741:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470140
L_221742:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2B0(%rbp)
	movq %r15,0x2B8(%rbp)
	jmp L_221740
.p2align 0x4
L_470140:
L_221743:
	movq %r15,0x2B0(%rbp)
	movl 0x84(%rbp),%ecx
	jmp loop_2466
.p2align 0x4
L_470141:
L_221744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221745
.p2align 0x4
.long 0x3539
L_221745:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	jmp L_221741
.p2align 0x4
L_470142:
L_221746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221747
.p2align 0x4
.long 0x353A
L_221747:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	jmp L_221737
.p2align 0x4
L_470143:
L_221748:
	movq 0x2D8(%rbp),%r14
	movq %r14,0x2B0(%rbp)
	movl 0x84(%rbp),%ecx
	jmp loop_2466
.p2align 0x4
.long 0x353D
L_221758:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_221759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0x345F
bug_550:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220324
L_220325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220326
.p2align 0x4
.long 0x3460
L_220326:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220324:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x346E
L_220338:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220339
L_220364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220365
.p2align 0x4
.long 0x349E
L_220365:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220339:
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	jmp L_220340
.p2align 0x4
.long 0x34E0
L_220354:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220355
L_220356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_220357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220357
.p2align 0x4
.long 0x34E1
L_220357:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_220355:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x278(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x280(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x280(%rbp)
	jmp loop_2448
.p2align 0x4
.long 0x34EB
L_220687:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x258(%rbp)
	movl $0x1,0x280(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x280,%rbp
	leaq (L_220688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34C0
L_220662:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movl $0x1,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_220663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34D4
x_744:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220277
L_220316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_220317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220317
.p2align 0x4
.long 0x34DB
L_220317:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_220277:
	movq 0x2A8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470149
L_220315:
	movq 0x8(%r14),%r15
L_220279:
	cmpq $0x1,0x0(%r15)
	je L_220314
L_220280:
	movq 0x2B0(%rbp),%r14
	movq %r14,0x2B8(%rbp)
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_220281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470149:
L_220278:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220279
.p2align 0x4
.long 0x34BE
L_220593:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3496
L_220551:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x290(%rbp)
	jne L_220553
L_220554:
	movq $0x11,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (x_747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3499
L_220568:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x288(%rbp)
	jne L_220553
L_220570:
	movq $0x11,0x288(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (x_748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3471
L_221682:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221683
L_221689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221690
.p2align 0x4
.long 0x34A3
L_221690:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221683:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221692:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_220609:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34BB
x_768:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470155
L_221666:
	movq 0x8(%r14),%r15
L_221563:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_221564:
	movq %r15,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470155:
L_221562:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221563
.p2align 0x4
.long 0x346F
L_221499:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x8(%r15),%r14
L_221500:
	movq %r14,%r15
	andq $0x3,%r15
	jnz x_765
L_221530:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne x_765
L_221531:
	movl $0x0,0x290(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x3468
x_766:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470156
L_221529:
	movq 0x8(%r14),%r15
L_221502:
	cmpq $0x1,0x0(%r15)
	je none_0
L_221503:
	movq 0x270(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_221504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470156:
L_221501:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221502
.p2align 0x4
.long 0x346E
L_221460:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x8(%r15),%r14
L_221461:
	movq %r14,%r15
	andq $0x3,%r15
	jnz x_763
L_221468:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne x_763
L_221469:
	movl $0x0,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_221470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x346F
L_221462:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3471
word_62:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220880
L_220881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220882
.p2align 0x4
.long 0x34A3
L_220882:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220880:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
.long 0x345F
L_220884:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34BA
L_221409:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221410
L_221426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221427
.p2align 0x4
.long 0x34A3
L_221427:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221410:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x280(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470158
L_221411:
	movq %r14,0x298(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (word_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470158:
L_221421:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_221429:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_577:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221440
L_221441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221442
.p2align 0x4
.long 0x3460
L_221442:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221440:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3526
L_221360:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x2B0(%rbp)
	movl $0x2,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_221361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_573:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221385
L_221386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221387
.p2align 0x4
.long 0x3460
L_221387:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221385:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3515
L_221246:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movl 0x2A8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221247
L_221337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_221338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221338
.p2align 0x4
.long 0x3523
L_221338:
	addq $0xFFFFFFFFFFFFFD58,%rbp
L_221247:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470162
L_221248:
	movq %r14,0x2A0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470162:
L_221332:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34C0
L_221133:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470164
L_221134:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470164:
L_221210:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_221216:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34FD
L_221094:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_221095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x346E
L_221062:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221063
L_221079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221080
.p2align 0x4
.long 0x349E
L_221080:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221063:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221082:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34C0
L_221024:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%r15),%r14
L_221025:
	movq %r14,%r15
	andq $0x3,%r15
	jnz none_0
L_221026:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne none_0
L_221027:
	movl $0x0,0x278(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_221028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
.long 0x34C0
L_221001:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (x_758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x346F
L_221009:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x346F
L_220972:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x270(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_220973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3468
L_220934:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq $0x1,0x278(%rbp)
	movq 0x270(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_220935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34C0
L_220893:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%r15),%r14
L_220894:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_220895
L_220896:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_220895
L_220897:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_219587
L_220899:
	cmpl $0x1,%r13d
	jne L_470167
L_220901:
	cmpq $0x0,%r14
	jna L_219767
L_220903:
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movl 0x4C(%rbp),%r15d
	decl %r15d
	movl %r15d,0x84(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1584
.p2align 0x4
L_470167:
L_220895:
	movq (globalObjptr+0x73D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34C0
L_220711:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x260(%rbp)
L_220712:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_220713
L_220714:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_220713
L_220715:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r15,0x270(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_219587
L_220717:
	cmpl $0x1,%r15d
	jne L_470179
L_220719:
	cmpq $0x0,%r14
	jna L_219767
L_220721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220722
L_220872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220873
.p2align 0x4
.long 0x349E
L_220873:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220722:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x4,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220723
.p2align 0x4
.long 0x34CF
L_220723:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq %rax,0x270(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2449:
	cmpq $0x4,%r15
	jnl L_470175
L_220865:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470174
	cmpl $0x1,%r14d
	je L_470173
	cmpl $0x2,%r14d
	je L_470172
	cmpl $0x3,%r14d
	je L_470171
L_220866:
	movq (globalObjptr+0x508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470171:
L_220871:
	movq 0x278(%rbp),%r14
L_220868:
	movq 0x270(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2449
.p2align 0x4
L_470172:
L_220870:
	movq 0x268(%rbp),%r14
	jmp L_220868
.p2align 0x4
L_470173:
L_220869:
	movq $0x1,%r14
	jmp L_220868
.p2align 0x4
L_470174:
L_220867:
	movq $0x2,%r14
	jmp L_220868
.p2align 0x4
L_470175:
L_220724:
	movq 0x270(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470176
L_220725:
	movq %r14,0x288(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470176:
L_220860:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470179:
L_220713:
	movq (globalObjptr+0x73E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34D1
x_743:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470184
L_220255:
	movq 0x8(%r14),%r15
L_220248:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220249:
	movq 0x280(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470184:
L_220247:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220248
.p2align 0x4
.long 0x34C2
x_741:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470186
L_220244:
	movq 0x8(%r14),%r15
L_220140:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220141:
	movq %r15,0x2A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_220142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470186:
L_220139:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220140
.p2align 0x4
.long 0x3466
L_222935:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222936
L_222937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222938
.p2align 0x4
.long 0x3577
L_222938:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222936:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xDA18)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x240(%rbp),%r13
	movq %r13,0x40(%r14)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x10(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3567
L_222197:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x208(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222198
L_222221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_222222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222222
.p2align 0x4
.long 0x356A
L_222222:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_222198:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x208(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x200(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x210(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_222199:
	addl 0x0(%r15),%ecx
	movl %ecx,0x1F0(%rbp)
	jo L_219597
L_222200:
	cmpq $0x1,%r14
	je L_470188
L_222201:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_222199
.p2align 0x4
L_470188:
L_222202:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222203
L_222219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_222220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222220
.p2align 0x4
.long 0x3569
L_222220:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
L_222203:
	movl 0x1F0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_470189
L_222204:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
toString_340:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x200(%rbp)
	movq $0x1,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (rev_338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_470189:
L_222218:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_340
.p2align 0x4
.long 0x358A
L_222242:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_222243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3607
L_222760:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x258(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_219587
L_222762:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_219587
L_222764:
	cmpl %r13d,%r11d
	jne L_222766
L_222812:
	movq $0x1,0x248(%rbp)
L_222766:
	movb $0x3,0x2D0(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1955
.p2align 0x4
.long 0x3618
L_222814:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222815
L_222855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222856
.p2align 0x4
.long 0x3623
L_222856:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222815:
	movq 0x2D8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D0,%r15
	jne L_470198
L_222818:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	jne L_470197
L_222820:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D8(%rbp)
	movq 0x0(%r14),%r13
	movslq 0x0(%r13),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x2E0(%rbp)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470196
L_222821:
	movq %r14,0x2F8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_222822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470196:
L_222850:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470197:
L_222819:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
L_222817:
	movl %ecx,0x4C(%rbp)
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x260(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x260(%rbp)
	jmp loop_2490
.p2align 0x4
L_470198:
L_222816:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
	jmp L_222817
.p2align 0x4
.long 0x3599
L_222292:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3601
L_222697:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x2C8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x35FB
L_222661:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x2C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3584
L_222151:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x260(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x268(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (x_774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3466
L_223474:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223475
L_223476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_223477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223477
.p2align 0x4
.long 0x3577
L_223477:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_223475:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xDA18)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x240(%rbp),%r13
	movq %r13,0x40(%r14)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x10(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x357E
L_222108:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222109
L_222110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_222111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222111
.p2align 0x4
.long 0x357C
L_222111:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_222109:
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x240(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3465
L_219752:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movl 0x260(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_470205
	cmpl $0x10,%r15d
	je L_470204
	cmpl $0x20,%r15d
	je L_470203
	cmpl $0x40,%r15d
	je L_470202
L_219753:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_219754:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x158(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470202:
L_222041:
	xorb %dl,%dl
L_219756:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x158(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_219757
.p2align 0x4
L_470203:
L_222040:
	movb $0x1,%dl
	jmp L_219756
.p2align 0x4
L_470204:
L_222039:
	movb $0x2,%dl
	jmp L_219756
.p2align 0x4
L_470205:
L_219755:
	movb $0x3,%dl
	jmp L_219756
.p2align 0x4
.long 0x34EC
L_222042:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_219754
.p2align 0x4
.long 0x3578
L_222044:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (bug_588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3465
L_222070:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movl 0x260(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_470209
	cmpl $0x10,%r15d
	je L_470208
	cmpl $0x20,%r15d
	je L_470207
	cmpl $0x40,%r15d
	je L_470206
	jmp L_219753
.p2align 0x4
L_470206:
L_222062:
	movb $0x7,%dl
	jmp L_219756
.p2align 0x4
L_470207:
L_222061:
	movb $0x8,%dl
	jmp L_219756
.p2align 0x4
L_470208:
L_222060:
	movb $0x9,%dl
	jmp L_219756
.p2align 0x4
L_470209:
L_222059:
	movb $0xA,%dl
	jmp L_219756
.p2align 0x4
.long 0x3578
L_222072:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (bug_591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3465
L_222058:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movl 0x260(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_222059
	cmpl $0x10,%r15d
	je L_222060
	cmpl $0x20,%r15d
	je L_222061
	cmpl $0x40,%r15d
	je L_222062
	jmp L_219753
.p2align 0x4
.long 0x3578
L_222064:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (bug_590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3465
L_222050:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movl 0x260(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpl $0x8,%r15d
	je L_219755
	cmpl $0x10,%r15d
	je L_222039
	cmpl $0x20,%r15d
	je L_222040
	cmpl $0x40,%r15d
	je L_222041
	jmp L_219753
.p2align 0x4
.long 0x3578
L_222052:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x260,%rbp
	leaq (bug_589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3466
L_219758:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219759
L_222037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222038
.p2align 0x4
.long 0x3577
L_222038:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_219759:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x1,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xDA38)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x248(%rbp),%r13
	movq %r13,0x40(%r14)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x10(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x364E
L_223138:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223139
L_223382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223383
.p2align 0x4
.long 0x3679
L_223383:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223139:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_223377
	jmp L_223141
.p2align 0x4
.long 0x345F
L_223144:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223145
L_223149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223150
.p2align 0x4
.long 0x3460
L_223150:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223145:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10330)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x367B
L_223378:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223379
L_223380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_223381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223381
.p2align 0x4
.long 0x35B9
L_223381:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_223379:
	movq $0x213F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x258(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x268(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x260(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x248(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x240(%rbp),%r13
	movq %r13,0x28(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x364F
L_223155:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223156
L_223287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223288
.p2align 0x4
.long 0x3635
L_223288:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223156:
	movl 0x4C(%rbp),%ecx
	movq 0x260(%rbp),%r14
	movq 0x270(%rbp),%r15
L_223157:
	testl %ecx,%ecx
	jnz L_470223
L_223158:
	movq %r14,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223159
.p2align 0x4
L_470223:
L_223234:
	movq %r14,0x260(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_223235
.p2align 0x4
.long 0x364F
L_223360:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223361
L_223362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223363
.p2align 0x4
.long 0x3635
L_223363:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223361:
	movl 0x4C(%rbp),%ecx
	movq 0x260(%rbp),%r14
	movq 0x270(%rbp),%r15
	jmp L_223157
.p2align 0x4
.long 0x364F
L_223160:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x278(%rbp)
	je L_470229
L_223161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223162
L_223224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223225
.p2align 0x4
.long 0x3668
L_223225:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223162:
	movq 0x278(%rbp),%r15
	movl 0x1C(%r15),%r14d
	movq 0x40(%r15),%r13
	movb 0x21(%r15),%r11b
	movq 0x38(%r15),%r10
	movl 0x18(%r15),%r9d
	movq 0x30(%r15),%r8
	movl 0x14(%r15),%ebx
	movl 0x10(%r15),%esp
	movl 0xC(%r15),%esi
	movl 0x8(%r15),%edi
	movb 0x20(%r15),%dl
	movq 0x0(%r15),%rcx
	movq 0x28(%r15),%rax
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq %rcx,0x0(%r15)
	movq %rcx,0x2B0(%rbp)
	movl %r14d,0x8(%r15)
	movl %r14d,0x4C(%rbp)
	movl %r9d,0xC(%r15)
	movl %r9d,0x84(%rbp)
	movl %ebx,0x10(%r15)
	movl %ebx,0x1BC(%rbp)
	movl %esp,0x14(%r15)
	movl %esp,0x2A0(%rbp)
	movl %esi,0x18(%r15)
	movl %esi,0x2A4(%rbp)
	movl %edi,0x1C(%r15)
	movl %edi,0x2A8(%rbp)
	movzbl %r11b,%r14d
	movb %r11b,0x49(%rbp)
	movzbl %dl,%r11d
	movb %dl,0x4A(%rbp)
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq %r13,0x28(%r15)
	movq %r13,0x270(%rbp)
	movq %r10,0x30(%r15)
	movq %r10,0x290(%rbp)
	movq %r8,0x38(%r15)
	movq %r8,0x298(%rbp)
	movq %rax,0x40(%r15)
	movq %rax,0x2B8(%rbp)
	movq %r15,0x2C0(%rbp)
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2C8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_223163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223163
.p2align 0x4
.long 0x3650
L_223163:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq %rax,0x240(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2506:
	cmpq $0x1,%r15
	jnl L_470226
L_223223:
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2C8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2506
.p2align 0x4
L_470226:
L_223164:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223165
L_223221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223222
.p2align 0x4
.long 0x3667
L_223222:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223165:
	movq 0x240(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	addq $0x50,%r12
	movq 0x2B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x2A8(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x2A4(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x2A0(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0x84(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movzbl 0x4A(%rbp),%r14d
	movzbl 0x49(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x298(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x40(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x260(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cFunction_0
.p2align 0x4
L_470229:
L_223226:
	movq 0x270(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_223227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x34C1
L_223236:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223237
L_223285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223286
.p2align 0x4
.long 0x367A
L_223286:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223237:
	movq $0x2127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x268(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_223238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cFunction_0
.p2align 0x4
.long 0x34BB
x_736:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470232
L_220095:
	movq 0x8(%r14),%r15
L_220088:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220089:
	movq 0x280(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470232:
L_220087:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220088
.p2align 0x4
.long 0x346A
x_733:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470234
L_220084:
	movq 0x8(%r14),%r15
L_219778:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_219779:
	movq %r15,0x2A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_219780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470234:
L_219777:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219778
.p2align 0x4
.long 0x346E
L_220112:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220113
L_220125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220126
.p2align 0x4
.long 0x349E
L_220126:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220113:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
.long 0x3468
L_221967:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221968
L_221969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221970
.p2align 0x4
.long 0x349E
L_221970:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221968:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_221958
.p2align 0x4
.long 0x346E
L_221947:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221948
L_221949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221950
.p2align 0x4
.long 0x349E
L_221950:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221948:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
.long 0x3544
L_221778:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3473
L_221770:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3566
L_221893:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x210(%rbp)
	addq $0x210,%rbp
	leaq (L_221894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x353E
L_221759:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221760
L_221765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_221766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221766
.p2align 0x4
.long 0x3541
L_221766:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_221760:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_221761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x3468
L_220688:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x260(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x280(%rbp)
	movq $0x11,0x290(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_220689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x346E
L_220663:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x258(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x280(%rbp)
	movq $0x11,0x290(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_220664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x34D3
L_220281:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220282
L_220311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_220312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220312
.p2align 0x4
.long 0x34DA
L_220312:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_220282:
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2B0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_220283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220283
.p2align 0x4
.long 0x34D5
L_220283:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x258(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2446:
	cmpq $0x1,%r15
	jnl L_470239
L_220310:
	movq 0x258(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2446
.p2align 0x4
L_470239:
L_220284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220285
L_220308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_220309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220309
.p2align 0x4
.long 0x34D9
L_220309:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_220285:
	movq 0x258(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_220286
.p2align 0x4
.long 0x3471
L_220594:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	cmpl $0x8,%r15d
	jg L_470242
L_220595:
	movl $0x8,%ecx
L_220596:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x280(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_220597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470242:
L_220621:
	cmpl $0x10,0x1BC(%rbp)
	jg L_470243
L_220622:
	movl $0x10,%ecx
	jmp L_220596
.p2align 0x4
L_470243:
L_220623:
	cmpl $0x20,0x1BC(%rbp)
	jg L_470244
L_220624:
	movl $0x20,%ecx
	jmp L_220596
.p2align 0x4
L_470244:
L_220625:
	cmpl $0x40,0x1BC(%rbp)
	jne L_220627
L_220628:
	movl $0x40,%ecx
	jmp L_220596
.p2align 0x4
.long 0x34E3
x_747:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_220555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x34E5
x_748:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x34C0
L_221684:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_586:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221693
L_221694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221695
.p2align 0x4
.long 0x3460
L_221695:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221693:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3471
L_220610:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq %r15,0x280(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_220611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x352C
L_221565:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221566
L_221663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221664
.p2align 0x4
.long 0x3534
L_221664:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221566:
	movq 0x260(%rbp),%r15
	movq 0x8(%r15),%r14
L_221567:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_221568
L_221569:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_221568
L_221570:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_219587
L_221572:
	cmpl $0x1,%r13d
	jne L_470249
L_221574:
	cmpq $0x0,%r14
	jna L_219767
L_221576:
	movq 0x0(%r15),%r14
	movq $0x2117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470247
L_221577:
	movq %r14,0x298(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470247:
L_221658:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470249:
L_221568:
	movq (globalObjptr+0x73C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x352C
L_221532:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x290(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3467
L_221504:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221505
L_221526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221527
.p2align 0x4
.long 0x3495
L_221527:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221505:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x278(%rbp)
	movq 0x268(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_470255
L_221506:
	andq $0x3,%r13
	jnz L_221507
L_221522:
L_221507:
	movq %r14,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470255:
L_221523:
	shrq $0x3,%r13
	movb %r13b,%r14b
	testb %r14b,%r14b
	jnz L_470256
L_221524:
	movq (globalObjptr+0x4FB0)(%rip),%r15
real_27:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
L_470256:
L_221525:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp real_27
.p2align 0x4
.long 0x34C0
L_221470:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x278(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34BE
L_221463:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq $0x1,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x345F
bug_563:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220885
L_220886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220887
.p2align 0x4
.long 0x3460
L_220887:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220885:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BB
word_65:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221412
L_221419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221420
.p2align 0x4
.long 0x34B7
L_221420:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221412:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x278(%rbp)
	movl $0x3,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221422:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_576:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221430
L_221431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221432
.p2align 0x4
.long 0x3460
L_221432:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221430:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3527
L_221361:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221362
L_221379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221380
.p2align 0x4
.long 0x352A
L_221380:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_221362:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movzwl (globalWord16+0x2C8)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x280(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221363
.p2align 0x4
.long 0x3528
L_221363:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq %rax,0x270(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2461:
	cmpq $0x1,%r15
	jnl L_470261
L_221378:
	movq 0x270(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x278(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2461
.p2align 0x4
L_470261:
L_221364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221365
L_221376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221377
.p2align 0x4
.long 0x3529
L_221377:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_221365:
	movq 0x270(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x298(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_470262
L_221366:
	movq 0x290(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470262:
L_221371:
	movq 0x2A0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3516
L_221249:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x98(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_221333:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_221135:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221136
L_221208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221209
.p2align 0x4
.long 0x349E
L_221209:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221136:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x401,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x345F
L_221211:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_570:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221217
L_221218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221219
.p2align 0x4
.long 0x3460
L_221219:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221217:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BC
L_221095:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x268(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (x_761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x34C0
L_221064:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_568:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221083
L_221084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221085
.p2align 0x4
.long 0x3460
L_221085:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221083:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34C0
L_221028:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x278(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34C0
x_758:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221002
L_221006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221007
.p2align 0x4
.long 0x3495
L_221007:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221002:
	movq $0x2175,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movb 0x1B8(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_220374
	cmpb $0x2,%r14b
	je L_470268
L_221003:
	movq %r15,0x260(%rbp)
	jmp L_220265
.p2align 0x4
L_470268:
L_221005:
	movq %r15,0x260(%rbp)
	jmp L_220542
.p2align 0x4
.long 0x34BE
L_221010:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq $0x3,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34F9
L_220973:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2A0(%rbp)
	movq $0x3,0x2A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_220974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3467
L_220935:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220936
L_220955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220956
.p2align 0x4
.long 0x3495
L_220956:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_220936:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x288(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_220937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3471
L_220904:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470272
L_220905:
	movq %r14,0x290(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (word_63+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470272:
L_220919:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3468
L_220726:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220727
L_220858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220859
.p2align 0x4
.long 0x349E
L_220859:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220727:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470273
L_220728:
	movq %r14,0x290(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (word_59+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470273:
L_220853:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_220861:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3468
L_220250:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220251
L_220252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220253
.p2align 0x4
.long 0x349E
L_220253:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220251:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x219B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	movq %r14,%r15
L_220150:
	movq %r15,0x278(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_220151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x34C2
L_220142:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220143
L_220241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_220242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220242
.p2align 0x4
.long 0x34B9
L_220242:
	addq $0xFFFFFFFFFFFFFD58,%rbp
L_220143:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x270(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_220144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x345F
rev_338:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq $0x1,%r15
	je L_470279
L_222205:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1F0(%rbp)
	movq %r14,0x1F8(%rbp)
	movq $0x1,0x200(%rbp)
.p2align 0x4,,0x7
L_222206:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470278
.p2align 0x4,,0x7
L_222207:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x200(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1F0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470277
L_222208:
	movq %r15,0x200(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1F0(%rbp)
	movq %r15,0x1F8(%rbp)
	jmp L_222206
.p2align 0x4
L_470277:
L_222210:
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_470278:
L_222215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_222216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222216
.p2align 0x4
.long 0x3568
L_222216:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	jmp L_222207
.p2align 0x4
L_470279:
L_222217:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_222210
.p2align 0x4
.long 0x358A
L_222243:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222244
L_222619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_222620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222620
.p2align 0x4
.long 0x35F0
L_222620:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_222244:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470285
L_222245:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x240(%rbp)
L_222246:
	movq 0x2C0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x2C8(%rbp)
	cmpq %r11,%r14
	jne L_219587
L_222248:
	testq %r11,%r11
	jz L_470283
L_222249:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_222250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222251
L_222614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_222615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222615
.p2align 0x4
.long 0x358B
L_222615:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_222251:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FF,%rcx
	movq 0x2C8(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_222252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222252
.p2align 0x4
.long 0x358B
L_222252:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq %rax,0x2C0(%rbp)
L_222253:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x2D8(%rbp)
loop_2475:
	movq 0x2C8(%rbp),%r15
	cmpq %r15,0x2D8(%rbp)
	jl L_470280
L_222254:
	movq 0x2C0(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x39ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x2E0(%rbp)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_470280:
L_222570:
	movq 0x2D8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x268(%rbp),%r11
	movl 0x0(%r11,%r14,1),%r10d
	movl %r10d,0x84(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x2E8(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x2F8(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F8,%rbp
	leaq (L_222571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_470283:
L_222617:
	movq (globalObjptr+0x5310)(%rip),%r15
	movq %r15,0x2C0(%rbp)
	jmp L_222253
.p2align 0x4
L_470285:
L_222618:
	movq 0x2D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	jmp L_222246
.p2align 0x4
.long 0x3608
L_222767:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3619
L_222822:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2F0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2F8(%rbp)
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_222823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_222851:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x359A
L_222293:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq %r14,0x2E8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3601
L_222698:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222699
L_222727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222728
.p2align 0x4
.long 0x3602
L_222728:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222699:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470290
L_222700:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2A0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
L_222701:
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470287
L_222702:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222703:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x288(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470287:
L_222719:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222720
.p2align 0x4
.long 0x35FC
L_222720:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x280(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2489:
	cmpq $0x1,%r15
	jnl L_470288
L_222725:
	movq 0x280(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x270(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2489
.p2align 0x4
L_470288:
L_222721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222722
L_222723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222724
.p2align 0x4
.long 0x35FD
L_222724:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222722:
	movq 0x280(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222703
.p2align 0x4
L_470290:
L_222726:
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	jmp L_222701
.p2align 0x4
.long 0x35FB
L_222662:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222663
L_222672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222673
.p2align 0x4
.long 0x35FE
L_222673:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222663:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470294
L_222664:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
new1_44:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222665
.p2align 0x4
.long 0x35FC
L_222665:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x280(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2487:
	cmpq $0x1,%r15
	jnl L_470292
L_222670:
	movq 0x280(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x270(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2487
.p2align 0x4
L_470292:
L_222666:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222667
L_222668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222669
.p2align 0x4
.long 0x35FD
L_222669:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222667:
	movq 0x280(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222636
.p2align 0x4
L_470294:
L_222671:
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	jmp new1_44
.p2align 0x4
.long 0x3585
x_774:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r14
	movq %r14,0x250(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470297
L_222160:
	movq 0x8(%r14),%r15
L_222153:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_222154:
	movq 0x268(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_222155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470297:
L_222152:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_222153
.p2align 0x4
.long 0x3578
bug_588:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222045
L_222046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222047
.p2align 0x4
.long 0x3579
L_222047:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222045:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219754
.p2align 0x4
.long 0x3578
bug_591:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222073
L_222074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222075
.p2align 0x4
.long 0x3579
L_222075:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222073:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219754
.p2align 0x4
.long 0x3578
bug_590:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222065
L_222066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222067
.p2align 0x4
.long 0x3579
L_222067:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222065:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219754
.p2align 0x4
.long 0x3578
bug_589:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222053
L_222054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_222055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222055
.p2align 0x4
.long 0x3579
L_222055:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_222053:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_219754
.p2align 0x4
.long 0x345F
bug_602:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223146
L_223147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223148
.p2align 0x4
.long 0x3460
L_223148:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223146:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3651
L_223166:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223167
L_223219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223220
.p2align 0x4
.long 0x3666
L_223220:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223167:
	movq 0x270(%rbp),%r15
	cmpq $0x1,%r15
	je L_470303
L_223168:
	movl 0x1C(%r15),%r14d
	movl %r14d,0x4C(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x260(%rbp)
	movb 0x21(%r15),%r11b
	movb %r11b,0x49(%rbp)
	movq 0x38(%r15),%r10
	movq %r10,0x278(%rbp)
	movl 0x18(%r15),%r9d
	movl %r9d,0x84(%rbp)
	movq 0x30(%r15),%r8
	movq %r8,0x290(%rbp)
	movl 0x14(%r15),%esp
	movl %esp,0x1BC(%rbp)
	movl 0x10(%r15),%esi
	movl %esi,0x298(%rbp)
	movl 0xC(%r15),%edi
	movl %edi,0x29C(%rbp)
	movl 0x8(%r15),%edx
	movl %edx,0x2A0(%rbp)
	movb 0x20(%r15),%cl
	movb %cl,0x4A(%rbp)
	movq 0x0(%r15),%rbx
	movq %rbx,0x2A8(%rbp)
	movq 0x28(%r15),%rax
	movq %rax,0x2B0(%rbp)
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2B8(%rbp)
	addq $0x50,%r12
	movq %rbx,0x0(%r15)
	movl %r14d,0x8(%r15)
	movl %r9d,0xC(%r15)
	movl %esp,0x10(%r15)
	movl %esi,0x14(%r15)
	movl %edi,0x18(%r15)
	movl %edx,0x1C(%r15)
	movzbl %r11b,%r14d
	movzbl %cl,%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq %r13,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r8,0x38(%r15)
	movq %rax,0x40(%r15)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470303:
L_223211:
	movq 0x260(%rbp),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_223212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x345F
L_223227:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223228
L_223232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223233
.p2align 0x4
.long 0x3460
L_223233:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223228:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10338)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3509
L_223238:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223239
L_223283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_223284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223284
.p2align 0x4
.long 0x3679
L_223284:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_223239:
	movq 0x240(%rbp),%r15
	cmpq $0x1,%r15
	je L_470306
L_223240:
	movl 0x1C(%r15),%r14d
	movl %r14d,0x4C(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x260(%rbp)
	movb 0x21(%r15),%r11b
	movb %r11b,0x49(%rbp)
	movq 0x38(%r15),%r10
	movq %r10,0x270(%rbp)
	movl 0x18(%r15),%r9d
	movl %r9d,0x84(%rbp)
	movq 0x30(%r15),%r8
	movq %r8,0x278(%rbp)
	movl 0x14(%r15),%esp
	movl %esp,0x1BC(%rbp)
	movl 0x10(%r15),%esi
	movl %esi,0x290(%rbp)
	movl 0xC(%r15),%edi
	movl %edi,0x294(%rbp)
	movl 0x8(%r15),%edx
	movl %edx,0x298(%rbp)
	movb 0x20(%r15),%cl
	movb %cl,0x4A(%rbp)
	movq 0x0(%r15),%rbx
	movq %rbx,0x2A0(%rbp)
	movq 0x28(%r15),%rax
	movq %rax,0x2A8(%rbp)
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2B0(%rbp)
	addq $0x50,%r12
	movq %rbx,0x0(%r15)
	movl %r14d,0x8(%r15)
	movl %r9d,0xC(%r15)
	movl %esp,0x10(%r15)
	movl %esi,0x14(%r15)
	movl %edi,0x18(%r15)
	movl %edx,0x1C(%r15)
	movzbl %r11b,%r14d
	movzbl %cl,%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq %r13,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r8,0x38(%r15)
	movq %rax,0x40(%r15)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_223241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470306:
L_223275:
	movq 0x260(%rbp),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_223276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x34BC
L_220090:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220091
L_220092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220093
.p2align 0x4
.long 0x349E
L_220093:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220091:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x219B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x260(%rbp)
	addq $0x10,%r12
	movq %r14,%r15
L_219788:
	movq %r15,0x278(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_219789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x346A
L_219780:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219781
L_220081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_220082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220082
.p2align 0x4
.long 0x34B9
L_220082:
	addq $0xFFFFFFFFFFFFFD58,%rbp
L_219781:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x270(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_219782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x3545
L_221779:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221780
L_221872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221873
.p2align 0x4
.long 0x3563
L_221873:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221780:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x34C6
L_221771:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3567
L_221894:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x208(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221895
L_221918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_221919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221919
.p2align 0x4
.long 0x356A
L_221919:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_221895:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x208(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x200(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x210(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_221896:
	addl 0x0(%r15),%ecx
	movl %ecx,0x1F0(%rbp)
	jo L_219597
L_221897:
	cmpq $0x1,%r14
	je L_470311
L_221898:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_221896
.p2align 0x4
L_470311:
L_221899:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221900
L_221916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_221917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221917
.p2align 0x4
.long 0x3569
L_221917:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
L_221900:
	movl 0x1F0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_470312
L_221901:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
toString_339:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x200(%rbp)
	movq $0x1,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (rev_337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_470312:
L_221915:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_339
.p2align 0x4
.long 0x353F
L_221761:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221762
L_221763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_221764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221764
.p2align 0x4
.long 0x3540
L_221764:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_221762:
	movq $0x2129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x84(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x2B0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp adds_0
.p2align 0x4
.long 0x3499
L_220689:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x288(%rbp)
	jne L_220553
L_220691:
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq $0x11,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3499
L_220664:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x288(%rbp)
	jne L_220553
L_220666:
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq $0x11,0x280(%rbp)
	addq $0x280,%rbp
	leaq (x_751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3471
L_220597:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq %r15,0x288(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x34E3
L_220555:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220556
L_220563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220564
.p2align 0x4
.long 0x34E4
L_220564:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220556:
	movl 0x84(%rbp),%r15d
	cmpl $0x1,%r15d
	je L_470322
	cmpl $0x2,%r15d
	je L_470321
	cmpl $0x4,%r15d
	je L_470320
	cmpl $0x8,%r15d
	je L_470319
L_220557:
	movq (globalObjptr+0x5330)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470319:
L_220562:
	xorb %dl,%dl
L_220559:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
L_470320:
L_220561:
	movb $0x1,%dl
	jmp L_220559
.p2align 0x4
L_470321:
L_220560:
	movb $0x2,%dl
	jmp L_220559
.p2align 0x4
L_470322:
L_220558:
	movb $0x3,%dl
	jmp L_220559
.p2align 0x4
.long 0x34E5
L_220571:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220572
L_220582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220583
.p2align 0x4
.long 0x34E7
L_220583:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220572:
	movl 0x84(%rbp),%r15d
	cmpl $0x1,%r15d
	je L_470327
	cmpl $0x2,%r15d
	je L_470326
	cmpl $0x4,%r15d
	je L_470325
	cmpl $0x8,%r15d
	je L_470324
	jmp L_220557
.p2align 0x4
L_470324:
L_220581:
	xorb %dl,%dl
L_220574:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x258(%rbp)
	addq $0x30,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x140(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x278(%rbp)
	movl $0x2,0x268(%rbp)
	addq $0x268,%rbp
	leaq (L_220575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_470325:
L_220580:
	movb $0x1,%dl
	jmp L_220574
.p2align 0x4
L_470326:
L_220579:
	movb $0x2,%dl
	jmp L_220574
.p2align 0x4
L_470327:
L_220573:
	movb $0x3,%dl
	jmp L_220574
.p2align 0x4
.long 0x346E
L_221685:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221686
L_221687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221688
.p2align 0x4
.long 0x349E
L_221688:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221686:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x278(%rbp)
	movl $0x1,0x84(%rbp)
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x270(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x10320)(%rip),%r15
	movq %r15,0x260(%rbp)
simpleCCallWithGCState_0:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221036
.p2align 0x4
.long 0x34A2
L_221036:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq %rax,0x288(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2451:
	cmpq $0x1,%r15
	jnl L_470329
L_221046:
	movq 0x288(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2451
.p2align 0x4
L_470329:
L_221037:
	movq 0x288(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_221038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x3471
L_220611:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220612
L_220615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220616
.p2align 0x4
.long 0x349E
L_220616:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220612:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz move_0
L_220613:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
.long 0x352D
L_221578:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221579
L_221656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221657
.p2align 0x4
.long 0x34A2
L_221657:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221579:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470332
L_221580:
	movq %r14,0x2A0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (word_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470332:
L_221651:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_221659:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x352C
L_221533:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470334
L_221534:
	movq %r14,0x298(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470334:
L_221544:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_221508:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x270(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_221509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x34C0
L_221471:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470335
L_221472:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470335:
L_221482:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_221464:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221465
L_221466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221467
.p2align 0x4
.long 0x349E
L_221467:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221465:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
.long 0x34C0
L_221413:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x345F
bug_575:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221423
L_221424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221425
.p2align 0x4
.long 0x3460
L_221425:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221423:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34E3
L_221367:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221368
L_221369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221370
.p2align 0x4
.long 0x34A2
L_221370:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221368:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
	movl $0x1,0x84(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x102F8)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp simpleCCallWithGCState_0
.p2align 0x4
.long 0x345F
L_221372:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3517
L_221250:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_221251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_571:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221334
L_221335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221336
.p2align 0x4
.long 0x3460
L_221336:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221334:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BE
L_221137:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x270(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
bug_569:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221212
L_221213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221214
.p2align 0x4
.long 0x3460
L_221214:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221212:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34F5
x_761:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470342
L_221111:
	movq 0x8(%r14),%r15
L_221097:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_221098:
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_221099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470342:
L_221096:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_221097
.p2align 0x4
.long 0x346E
L_221065:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_221066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x34C0
L_221029:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470343
L_221030:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470343:
L_221051:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_221011:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221012
L_221013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221014
.p2align 0x4
.long 0x349E
L_221014:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221012:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp move_0
.p2align 0x4
.long 0x34FA
L_220974:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_220975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34F3
L_220937:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_220938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x346F
word_63:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220906
L_220917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220918
.p2align 0x4
.long 0x34A2
L_220918:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220906:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2117,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x270(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x212B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x288(%rbp)
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_220075
L_220907:
	movq $0x127B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x270(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x108(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_220908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x345F
L_220920:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34D0
word_59:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220729
L_220851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220852
.p2align 0x4
.long 0x34A3
L_220852:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220729:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x280(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470347
L_220730:
	movq %r14,0x298(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (word_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470347:
L_220846:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_220854:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_562:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220862
L_220863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220864
.p2align 0x4
.long 0x3460
L_220864:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220862:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x346E
L_220151:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220152
L_220235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220236
.p2align 0x4
.long 0x349E
L_220236:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220152:
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x280(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r13
L_220153:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_220154
L_220155:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF25,%r11
	jne L_470350
L_220156:
	movq %r14,0x2A0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_220157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getSelects_0
.p2align 0x4
L_470350:
L_220154:
	movq (globalObjptr+0x73E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34C3
L_220144:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq %r15,0x2A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (x_742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x345F
L_222211:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222212
L_222213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222214
.p2align 0x4
.long 0x3460
L_222214:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222212:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x358C
L_222255:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x270(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_219587
L_222257:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_219587
L_222259:
	cmpl %r11d,%r13d
	je L_470354
L_222260:
	movq 0x248(%rbp),%r15
	movq %r15,0x270(%rbp)
L_222261:
	movb $0x1,0x2E0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1955
.p2align 0x4
L_470354:
L_222569:
	movq $0x1,0x270(%rbp)
	jmp L_222261
.p2align 0x4
.long 0x35E4
L_222571:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222572
L_222612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_222613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222613
.p2align 0x4
.long 0x35EF
L_222613:
	addq $0xFFFFFFFFFFFFFD00,%rbp
L_222572:
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D0,%r15
	jne L_470359
L_222575:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	jne L_470358
L_222577:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2F0(%rbp)
	movq 0x0(%r14),%r13
	movslq 0x0(%r13),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x2F8(%rbp)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470357
L_222578:
	movq %r14,0x310(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_222579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470357:
L_222607:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470358:
L_222576:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
L_222574:
	movl %ecx,0x4C(%rbp)
	movq 0x2C0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2D8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x2D8(%rbp)
	jmp loop_2475
.p2align 0x4
L_470359:
L_222573:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r15
	jmp L_222574
.p2align 0x4
.long 0x3609
L_222768:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x361A
L_222823:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movl 0x308(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	movl %r15d,0x308(%rbp)
	movq $0x3,0x310(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x318(%rbp)
	addq $0x308,%rbp
	leaq (L_222824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_600:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222852
L_222853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222854
.p2align 0x4
.long 0x3460
L_222854:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222852:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x359B
L_222294:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222295
L_222534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222535
.p2align 0x4
.long 0x359C
L_222535:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222295:
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x280(%rbp)
	cmpq %r14,%r11
	jne L_219587
L_222297:
	testq %r11,%r11
	jz L_470365
L_222298:
	cmpq $0x7FFFFFFF,%r11
	ja L_219662
L_222299:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222300
L_222530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222531
.p2align 0x4
.long 0x359C
L_222531:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222300:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FF,%rcx
	movq 0x280(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222301
.p2align 0x4
.long 0x359C
L_222301:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq %rax,0x2E0(%rbp)
L_222302:
	movl $0x0,0x1BC(%rbp)
	movq $0x0,0x2E8(%rbp)
loop_2478:
	movq 0x280(%rbp),%r15
	cmpq %r15,0x2E8(%rbp)
	jl L_470362
L_222303:
	movq 0x2E0(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x2E8(%rbp)
	addq $0x18,%r12
	movl 0x1BC(%rbp),%r15d
	movl %r15d,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_470362:
L_222434:
	movq 0x2E8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x268(%rbp),%r11
	movl 0x0(%r11,%r14,1),%r10d
	movl %r10d,0x2F0(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x2F8(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x308(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x308,%rbp
	leaq (L_222435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_470365:
L_222533:
	movq (globalObjptr+0x5288)(%rip),%r15
	movq %r15,0x2E0(%rbp)
	jmp L_222302
.p2align 0x4
.long 0x35F2
L_222704:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222705
L_222717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222718
.p2align 0x4
.long 0x35F7
L_222718:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222705:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x30,%r12
	movq 0x270(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x270(%rbp)
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_222706
.p2align 0x4
.long 0x3583
L_222155:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222156
L_222157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_222158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222158
.p2align 0x4
.long 0x3581
L_222158:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_222156:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x258(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x248(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3652
L_223169:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223170
L_223209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223210
.p2align 0x4
.long 0x3665
L_223210:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223170:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x270(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x198(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x2D0(%rbp)
	movq %r13,0x2C8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_223171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223171
.p2align 0x4
.long 0x3653
L_223171:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq %rax,0x270(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2507:
	cmpq $0x1,%r15
	jnl L_470370
L_223208:
	movq 0x270(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2D0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2507
.p2align 0x4
L_470370:
L_223172:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223173
L_223206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_223207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223207
.p2align 0x4
.long 0x3664
L_223207:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_223173:
	movq 0x270(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2D0(%rbp)
	addq $0x50,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x2A0(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x29C(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x298(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0x84(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movzbl 0x4A(%rbp),%r14d
	movzbl 0x49(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x40(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x198(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2D8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2E0(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x2E8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x2F0(%rbp)
	movq %r13,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_223174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_223212:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223213
L_223217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223218
.p2align 0x4
.long 0x3460
L_223218:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223213:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10338)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x345F
bug_604:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223229
L_223230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223231
.p2align 0x4
.long 0x3460
L_223231:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223229:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3669
L_223241:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movl 0x2C0(%rbp),%r15d
	movl %r15d,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223242
L_223273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_223274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223274
.p2align 0x4
.long 0x3678
L_223274:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_223242:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x240(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x198(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x2C0(%rbp)
	movq %r13,0x2B8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223243
.p2align 0x4
.long 0x366A
L_223243:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq %rax,0x240(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2508:
	cmpq $0x1,%r15
	jnl L_470375
L_223272:
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2C0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2508
.p2align 0x4
L_470375:
L_223244:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223245
L_223270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_223271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223271
.p2align 0x4
.long 0x3677
L_223271:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_223245:
	movq 0x240(%rbp),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2C0(%rbp)
	addq $0x50,%r12
	movq 0x2A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x298(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x294(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x290(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0x84(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movzbl 0x4A(%rbp),%r14d
	movzbl 0x49(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x2A8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x40(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x198(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2C8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x2D8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x2E0(%rbp)
	movq %r13,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_223276:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223277
L_223281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223282
.p2align 0x4
.long 0x3460
L_223282:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223277:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10338)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x102D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x346E
L_219789:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x290(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_219790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x346B
L_219782:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x2A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (x_734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3546
L_221781:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221782
L_221870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221871
.p2align 0x4
.long 0x3562
L_221871:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221782:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x268(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq 0x260(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_470384
L_221869:
	movq 0x8(%r14),%r15
L_221784:
	movq 0x8(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x278(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x290(%rbp)
	movq 0x2A8(%rbp),%r13
	movq 0x10(%r13),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r9
	movq %r9,0x298(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq %r11,%r14
	andq %r13,%r14
	andq $0x1,%r14
	jz L_470382
L_221785:
	cmpq %r11,%r13
	jnl L_470379
L_221856:
	movq %r15,0x300(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (bits_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_470379:
L_221787:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221788
L_221853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221854
.p2align 0x4
.long 0x355C
L_221854:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221788:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x2A0(%rbp),%rsi
	movq 0x290(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_221789:
	testl %eax,%eax
	jz L_470380
L_221792:
	movq 0x288(%rbp),%r15
L_221793:
	movq $0x1143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2115,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x278(%rbp)
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x127B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq %r13,0x8(%r14)
	movq $0x189B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x2E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2E8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1958
.p2align 0x4
L_470380:
L_221791:
	movq (globalObjptr+0x51F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470382:
L_221865:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_221866:
	cmpl $0x0,%eax
	jnl L_221787
	jmp L_221856
.p2align 0x4
L_470384:
L_221783:
	movq 0x8(%r14),%r15
	jmp L_221784
.p2align 0x4
.long 0x3543
L_221772:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221773
L_221774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221775
.p2align 0x4
.long 0x34CB
L_221775:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221773:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x280(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	jmp adds_0
.p2align 0x4
.long 0x345F
rev_337:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq $0x1,%r15
	je L_470389
L_221902:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1F0(%rbp)
	movq %r14,0x1F8(%rbp)
	movq $0x1,0x200(%rbp)
.p2align 0x4,,0x7
L_221903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470388
.p2align 0x4,,0x7
L_221904:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x200(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1F0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470387
L_221905:
	movq %r15,0x200(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1F0(%rbp)
	movq %r15,0x1F8(%rbp)
	jmp L_221903
.p2align 0x4
L_470387:
L_221907:
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_470388:
L_221912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_221913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221913
.p2align 0x4
.long 0x3568
L_221913:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	jmp L_221904
.p2align 0x4
L_470389:
L_221914:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_221907
.p2align 0x4
.long 0x3471
x_753:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x3471
x_751:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x346F
L_220598:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220599
L_220619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220620
.p2align 0x4
.long 0x34A3
L_220620:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220599:
	movl 0x1BC(%rbp),%r15d
	testl %r15d,%r15d
	jnz cast_0
L_220600:
	movq $0x11EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x84(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2173,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movb 0x1B8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_470391
	cmpb $0x2,%r15b
	je L_470390
L_220601:
	movq %r14,0x260(%rbp)
	jmp L_220265
.p2align 0x4
L_470390:
L_220603:
	movq %r14,0x260(%rbp)
	jmp L_220542
.p2align 0x4
L_470391:
L_220602:
	movq %r14,%r15
	jmp L_220374
.p2align 0x4
.long 0x34E6
L_220575:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220576
L_220577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_220578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220578
.p2align 0x4
.long 0x3494
L_220578:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_220576:
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	jmp add_1
.p2align 0x4
.long 0x34C1
L_221038:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221039
L_221044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221045
.p2align 0x4
.long 0x34A1
L_221045:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221039:
	movq $0x25F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x25F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x288(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_8
.p2align 0x4
.long 0x352E
word_66:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221581
L_221649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221650
.p2align 0x4
.long 0x34A1
L_221650:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221581:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x280(%rbp)
	movl $0x3,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_221582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221652:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_585:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221660
L_221661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221662
.p2align 0x4
.long 0x3460
L_221662:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221660:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34BF
L_221535:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221536
L_221542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221543
.p2align 0x4
.long 0x34B7
L_221543:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221536:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x290(%rbp)
	movl $0x2,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221545:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34F9
L_221509:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2A0(%rbp)
	movq $0x3,0x2A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_221510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x346E
L_221473:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221474
L_221480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221481
.p2align 0x4
.long 0x349E
L_221481:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221474:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221483:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_221414:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movb 0x278(%rbp),%r15b
	movb %r15b,0x49(%rbp)
	movb $0xB,%r14b
	movzbq %r14b,%r13
	movzbq %r15b,%r14
	shlq $0x8,%r14
	orq %r14,%r13
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x10,%r14
	orq %r14,%r13
	shlq $0x3,%r13
	orq $0x7,%r13
	movq %r13,0x278(%rbp)
	movl $0x3,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_572:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221373
L_221374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221375
.p2align 0x4
.long 0x3460
L_221375:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221373:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34E0
L_221251:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x298(%rbp)
	movq $0x1,0x2A0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_221252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3503
L_221138:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_221139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x34FD
L_221099:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221100
L_221108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221109
.p2align 0x4
.long 0x3500
L_221109:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221100:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x268(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221101
.p2align 0x4
.long 0x34FE
L_221101:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq %rax,0x258(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2452:
	cmpq $0x1,%r15
	jnl L_470400
L_221107:
	movq 0x258(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2452
.p2align 0x4
L_470400:
L_221102:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221103
L_221105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221106
.p2align 0x4
.long 0x34FF
L_221106:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221103:
	movq 0x258(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_221104
.p2align 0x4
.long 0x3471
L_221066:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movb 0x280(%rbp),%r15b
	movb %r15b,0x49(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221067
L_221077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221078
.p2align 0x4
.long 0x349E
L_221078:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221067:
	movzbw 0x49(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movq $0x1159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470403
L_221068:
	movq %r14,0x290(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (word_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470403:
L_221072:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_221073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346E
L_221031:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221032
L_221049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221050
.p2align 0x4
.long 0x349E
L_221050:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221032:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_221052:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34E3
L_220975:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220976
L_220984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220985
.p2align 0x4
.long 0x34A2
L_220985:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220976:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x278(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_220977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34F4
L_220938:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x288(%rbp),%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34F1
L_220908:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_220909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x345F
bug_564:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220921
L_220922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220923
.p2align 0x4
.long 0x3460
L_220923:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220921:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34E2
word_60:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220731
L_220844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220845
.p2align 0x4
.long 0x34A2
L_220845:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220731:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x288(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470408
L_220732:
	movq %r14,0x2A0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (word_61+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470408:
L_220839:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_220840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
L_220847:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_561:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220855
L_220856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220857
.p2align 0x4
.long 0x3460
L_220857:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220855:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34C6
L_220157:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220158
L_220233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220234
.p2align 0x4
.long 0x34A2
L_220234:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220158:
	movslq 0x84(%rbp),%r15
	movq 0x270(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_219767
L_220160:
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r14
	movq 0x280(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x288(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x290(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x298(%rbp)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_470416
L_220161:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C9,%r15
	je L_470415
	cmpq $0x10CA,%r15
	je L_470414
	cmpq $0x10CB,%r15
	je L_470412
L_220162:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movq $0x1147,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x268(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CC,%r15
	je L_470411
L_220165:
	movq 0x0(%r13),%r14
	movq %r11,%r15
L_220164:
	movq %r15,0x268(%rbp)
	movq $0x189D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x260(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x260,%rbp
	leaq (adds_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1959
.p2align 0x4
L_470411:
L_220163:
	movq 0x8(%r13),%r14
	movq %r11,%r15
	jmp L_220164
.p2align 0x4
L_470412:
L_220229:
	movq 0x268(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CC,%r15
	je L_470413
L_220231:
	movq 0x0(%r14),%r15
	movq $0x1,0x258(%rbp)
move_2:
	movq %r15,0x290(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_220194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
L_470413:
L_220230:
	movq 0x8(%r14),%r15
	movq $0x1,0x258(%rbp)
	jmp move_2
.p2align 0x4
L_470414:
L_220193:
	movq 0x8(%r14),%r15
	movq %r15,0x298(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	addq $0x298,%rbp
	leaq (move_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toOperand_0
.p2align 0x4
L_470415:
L_220166:
	movq %r13,0x2A8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x260(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x280(%rbp)
	addq $0x2A8,%rbp
	leaq (L_220167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470416:
L_220232:
	movq $0x1,%r15
	jmp adds_0
.p2align 0x4
.long 0x34C4
x_742:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470420
L_220240:
	movq 0x8(%r14),%r15
L_220146:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_220147:
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_220148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470420:
L_220145:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_220146
.p2align 0x4
.long 0x358C
L_222262:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x35E5
L_222579:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x308(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x310(%rbp)
	movq %r15,0x320(%rbp)
	addq $0x320,%rbp
	leaq (L_222580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x345F
L_222608:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x360A
L_222769:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x361B
L_222824:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x300(%rbp)
	movq 0x2F8(%rbp),%r14
	movq %r14,0x308(%rbp)
	movq %r15,0x2F8(%rbp)
	addq $0x2F8,%rbp
	leaq (L_222825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x359D
L_222304:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x250(%rbp)
	movb $0x2,0x2E8(%rbp)
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1955
.p2align 0x4
.long 0x35C9
L_222435:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x300(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222436
L_222528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_222529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222529
.p2align 0x4
.long 0x35D0
L_222529:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_222436:
	movq 0x300(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D1,%r15
	je L_470426
	cmpq $0x10D2,%r15
	je L_470421
L_222437:
	movl 0x1BC(%rbp),%ecx
	movq $0x1,%r15
L_222438:
	movl %ecx,0x1BC(%rbp)
	movq 0x2E0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2E8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x2E8(%rbp)
	jmp loop_2478
.p2align 0x4
L_470421:
L_222461:
	movq 0x18(%r11),%r13
	movq %r13,0x300(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x308(%rbp)
	movq 0x288(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x310(%rbp)
	movq 0x0(%r13),%r15
	movq 0x2D8(%rbp),%r13
	movq %r13,%r11
	andq %r15,%r11
	andq $0x1,%r11
	jz L_470424
L_222462:
	cmpq %r13,%r15
	jnl L_470422
L_222518:
	movq %r15,0x320(%rbp)
	movq %r14,0x330(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x328(%rbp)
	addq $0x320,%rbp
	leaq (bits_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_470422:
L_222464:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq 0x2D8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_222465:
	testl %eax,%eax
	jz L_221791
L_222467:
	movq 0x300(%rbp),%r15
	movq %r15,0x310(%rbp)
L_222468:
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x320,%rbp
	leaq (L_222469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_470424:
L_222524:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_222525:
	cmpl $0x0,%eax
	jnl L_222464
	jmp L_222518
.p2align 0x4
L_470426:
L_222439:
	movq 0x0(%r11),%r14
	movq %r14,0x300(%rbp)
	movl 0x2F0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470427
L_222440:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222441:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x300(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x328(%rbp)
	addq $0x328,%rbp
	leaq (L_222442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_470427:
L_222454:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_222455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222455
.p2align 0x4
.long 0x35D0
L_222455:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq %rax,0x2F0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2482:
	cmpq $0x1,%r15
	jnl L_470428
L_222460:
	movq 0x2F0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2482
.p2align 0x4
L_470428:
L_222456:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222457
L_222458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_222459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222459
.p2align 0x4
.long 0x35D1
L_222459:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_222457:
	movq 0x2F0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222441
.p2align 0x4
.long 0x3654
L_223174:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x300(%rbp)
	movq $0x3,0x308(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_223175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_603:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223214
L_223215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223216
.p2align 0x4
.long 0x3460
L_223216:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223214:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x366B
L_223246:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2F0(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_605:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223278
L_223279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_223280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223280
.p2align 0x4
.long 0x3460
L_223280:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_223278:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x346F
L_219790:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2A0(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (x_735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x346C
x_734:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470434
L_220080:
	movq 0x8(%r14),%r15
L_219784:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_219785:
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_219786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470434:
L_219783:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219784
.p2align 0x4
.long 0x355D
bits_21:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221857
L_221863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221864
.p2align 0x4
.long 0x3561
L_221864:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221857:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x288(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x2F0(%rbp)
	movl $0x2,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x3547
L_221794:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x2B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x345F
L_221908:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221909
L_221910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221911
.p2align 0x4
.long 0x3460
L_221911:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221909:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3471
L_220692:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220693
L_220699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220700
.p2align 0x4
.long 0x349E
L_220700:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220693:
	movl 0x84(%rbp),%r15d
	cmpl $0x1,%r15d
	je L_470440
	cmpl $0x2,%r15d
	je L_470439
	cmpl $0x4,%r15d
	je L_470438
	cmpl $0x8,%r15d
	je L_470437
	jmp L_220557
.p2align 0x4
L_470437:
L_220698:
	xorb %dl,%dl
L_220695:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x258(%rbp)
	jmp add_1
.p2align 0x4
L_470438:
L_220697:
	movb $0x1,%dl
	jmp L_220695
.p2align 0x4
L_470439:
L_220696:
	movb $0x2,%dl
	jmp L_220695
.p2align 0x4
L_470440:
L_220694:
	movb $0x3,%dl
	jmp L_220695
.p2align 0x4
.long 0x3471
L_220667:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220668
L_220678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220679
.p2align 0x4
.long 0x349E
L_220679:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_220668:
	movl 0x84(%rbp),%r15d
	cmpl $0x1,%r15d
	je L_470445
	cmpl $0x2,%r15d
	je L_470444
	cmpl $0x4,%r15d
	je L_470443
	cmpl $0x8,%r15d
	je L_470442
	jmp L_220557
.p2align 0x4
L_470442:
L_220677:
	xorb %dl,%dl
L_220670:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x30,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x20(%r15)
	movl $0x2,0x288(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_220671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp a_0
.p2align 0x4
L_470443:
L_220676:
	movb $0x1,%dl
	jmp L_220670
.p2align 0x4
L_470444:
L_220675:
	movb $0x2,%dl
	jmp L_220670
.p2align 0x4
L_470445:
L_220669:
	movb $0x3,%dl
	jmp L_220670
.p2align 0x4
.long 0x34E2
L_221040:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221041
L_221042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221043
.p2align 0x4
.long 0x34A2
L_221043:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221041:
	movb $0x1,0x49(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	movb $0x1,0x4A(%rbp)
	movq $0x0,0x288(%rbp)
	movq 0x280(%rbp),%r14
	movq %r14,0x290(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x298(%rbp)
	movl $0x0,0x284(%rbp)
	movl %r15d,0x280(%rbp)
	movq 0x270(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movl %r15d,0x278(%rbp)
	movl $0x0,0x27C(%rbp)
	jmp ccall_0
.p2align 0x4
.long 0x3471
L_221582:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_220796
	cmpq $0x2,%r13
	je L_470455
L_221583:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_470453
	cmpq $0x2081,%r15
	je L_470451
	cmpq $0x2082,%r15
	je L_470449
L_221584:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470448
L_221585:
	movq 0x0(%r11),%r14
	movq %r14,0x290(%rbp)
	leaq L_221613(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x290,%rbp
	leaq (L_221586+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470448:
L_221614:
	movq %r15,0x290(%rbp)
	leaq L_221613(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470449:
L_221639:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470450
L_221640:
	movq 0x0(%r11),%r14
	movq %r14,0x290(%rbp)
	leaq L_221613(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x290,%rbp
	leaq (L_221641+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470450:
L_221642:
	movq %r15,0x290(%rbp)
	leaq L_221613(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470451:
L_221627:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470452
L_221628:
	movq 0x0(%r11),%r14
	movq %r14,0x290(%rbp)
	leaq L_221613(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x290,%rbp
	leaq (L_221629+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470452:
L_221634:
	movq %r15,0x290(%rbp)
	leaq L_221613(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470453:
L_221619:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470454
L_221620:
	movq 0x0(%r11),%r14
	movq %r14,0x290(%rbp)
	leaq L_221613(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x290,%rbp
	leaq (L_221621+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470454:
L_221622:
	movq %r15,0x290(%rbp)
	leaq L_221613(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470455:
L_221648:
	shrq $0x2,%r14
	movb %r14b,%dl
L_221591:
	movzbq %dl,%r15
	movb $0xB,%r14b
	movzbq %r14b,%r13
	shlq $0x8,%r13
	orq %r13,%r15
	movb $0xB,%r14b
	movzbq %r14b,%r13
	shlq $0x10,%r13
	orq %r13,%r15
	shlq $0x3,%r15
	orq $0x7,%r15
	movq %r15,0x288(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x3,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_584:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221653
L_221654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221655
.p2align 0x4
.long 0x3460
L_221655:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221653:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x352C
L_221537:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x290(%rbp)
	movl $0x2,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_221538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_579:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221546
L_221547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221548
.p2align 0x4
.long 0x3460
L_221548:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221546:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34FA
L_221510:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34C0
L_221475:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_578:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221484
L_221485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221486
.p2align 0x4
.long 0x3460
L_221486:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221484:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x346E
L_221415:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221416
L_221417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221418
.p2align 0x4
.long 0x349E
L_221418:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221416:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
	movl $0x1,0x84(%rbp)
	movb $0x1,0x49(%rbp)
	movl $0x1,0x1BC(%rbp)
	movl $0x1,0x278(%rbp)
	movl $0x1,0x27C(%rbp)
	movl $0x1,0x280(%rbp)
	movl $0x1,0x284(%rbp)
	movb $0x1,0x4A(%rbp)
	movq $0x0,0x288(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x268(%rbp)
	movq (globalObjptr+0x10300)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp ccall_0
.p2align 0x4
.long 0x34FB
L_221252:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221253
L_221330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221331
.p2align 0x4
.long 0x34B8
L_221331:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221253:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x290(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x298(%rbp)
	movq %r14,0x2A8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_221254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3503
L_221139:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_221140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34BE
word_64:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221069
L_221070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221071
.p2align 0x4
.long 0x34A3
L_221071:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221069:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x270(%rbp)
	movl $0x1,0x84(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x102F0)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp simpleCCallWithGCState_0
.p2align 0x4
.long 0x345F
L_221073:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x34C0
L_221033:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x278(%rbp)
	movl $0x2,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x345F
bug_566:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221053
L_221054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221055
.p2align 0x4
.long 0x3460
L_221055:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221053:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34FB
L_220977:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_220978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x34F5
L_220939:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220940
L_220953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220954
.p2align 0x4
.long 0x34F8
L_220954:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220940:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220941
.p2align 0x4
.long 0x34F6
L_220941:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq %rax,0x260(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2450:
	cmpq $0x3,%r15
	jnl L_470467
L_220947:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470466
	cmpl $0x1,%r14d
	je L_470465
	cmpl $0x2,%r14d
	je L_470464
	jmp L_220948
.p2align 0x4
L_470464:
L_220952:
	movq 0x268(%rbp),%r14
L_220950:
	movq 0x260(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2450
.p2align 0x4
L_470465:
L_220951:
	movq 0x270(%rbp),%r14
	jmp L_220950
.p2align 0x4
L_470466:
L_220949:
	movq $0x2,%r14
	jmp L_220950
.p2align 0x4
L_470467:
L_220942:
	movq 0x260(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x270(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_220943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gc_0
.p2align 0x4
.long 0x34F1
L_220909:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220910
L_220914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220915
.p2align 0x4
.long 0x34F2
L_220915:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_220910:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470469
L_220911:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
L_220912:
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x288(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x250(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	jmp loop_2441
.p2align 0x4
L_470469:
L_220913:
	movq 0x268(%rbp),%r15
	jmp L_220912
.p2align 0x4
.long 0x34C1
word_61:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220733
L_220837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220838
.p2align 0x4
.long 0x34A1
L_220838:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_220733:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x398B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x28,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x280(%rbp)
	movl $0x4,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_220734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x345F
L_220840:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_560:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220848
L_220849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220850
.p2align 0x4
.long 0x3460
L_220850:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220848:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34CE
L_220194:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220195
L_220227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220228
.p2align 0x4
.long 0x34CF
L_220228:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220195:
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x260(%rbp),%r15
	cmpq $0x1,%r15
	je L_470482
L_220196:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x260(%rbp)
	movq %r14,0x268(%rbp)
	movq $0x1,0x278(%rbp)
.p2align 0x4,,0x7
L_220197:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470481
.p2align 0x4,,0x7
L_220198:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x260(%rbp),%r14
	cmpq $0x1,%r14
	je L_470473
L_220199:
	movq %r15,0x278(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_220197
.p2align 0x4
L_470473:
L_220200:
	movq 0x278(%rbp),%r15
	movq %r15,0x260(%rbp)
.p2align 0x4,,0x7
L_220201:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470480
.p2align 0x4,,0x7
L_220202:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x260(%rbp),%r14
	cmpq $0x1,%r14
	je L_470474
L_220203:
	movq %r15,0x270(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_220201
.p2align 0x4
L_470474:
L_220204:
	movq %r15,0x260(%rbp)
L_220205:
	cmpq $0x1,0x260(%rbp)
	je L_470479
L_220206:
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_470478
L_220207:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x268(%rbp)
	movq $0x1,0x270(%rbp)
.p2align 0x4,,0x7
L_220208:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470477
.p2align 0x4,,0x7
L_220209:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470475
L_220210:
	movq %r15,0x270(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_220208
.p2align 0x4
L_470475:
L_220211:
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x260(%rbp),%r15
	movq 0x268(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
.p2align 0x4,,0x7
L_220212:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470476
.p2align 0x4,,0x7
L_220213:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je adds_0
L_220214:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_220212
.p2align 0x4
L_470476:
L_220216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220217
.p2align 0x4
.long 0x3495
L_220217:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_220213
.p2align 0x4
L_470477:
L_220218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220219
.p2align 0x4
.long 0x349E
L_220219:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	jmp L_220209
.p2align 0x4
L_470478:
L_220220:
	movq 0x260(%rbp),%r14
	xchgq %r14,%r15
	jmp adds_0
.p2align 0x4
L_470479:
L_220221:
	movq 0x258(%rbp),%r15
	jmp adds_0
.p2align 0x4
L_470480:
L_220222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220223
.p2align 0x4
.long 0x349E
L_220223:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	jmp L_220202
.p2align 0x4
L_470481:
L_220224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220225
.p2align 0x4
.long 0x34A3
L_220225:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	jmp L_220198
.p2align 0x4
L_470482:
L_220226:
	movq 0x270(%rbp),%r15
	movq %r15,0x260(%rbp)
	jmp L_220205
.p2align 0x4
.long 0x34CD
move_1:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r14
	movq %r14,0x258(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp move_2
.p2align 0x4
.long 0x34C8
L_220167:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movl 0x2A8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220168
L_220191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_220192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220192
.p2align 0x4
.long 0x34B9
L_220192:
	addq $0xFFFFFFFFFFFFFD58,%rbp
L_220168:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x288(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2A0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,0x2B0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_220169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toOperand_0
.p2align 0x4
.long 0x34C5
L_220148:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220149
L_220237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220238
.p2align 0x4
.long 0x34B8
L_220238:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_220149:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2199,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x268(%rbp)
	movq %r14,%r15
	jmp L_220150
.p2align 0x4
.long 0x358D
L_222263:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2E0(%rbp)
	movq $0x3,0x2E8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E6
L_222580:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movl 0x320(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	movl %r15d,0x320(%rbp)
	movq $0x3,0x328(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x330(%rbp)
	addq $0x320,%rbp
	leaq (L_222581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x345F
bug_597:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222609
L_222610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222611
.p2align 0x4
.long 0x3460
L_222611:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222609:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x360B
L_222770:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222771
L_222810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_222811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222811
.p2align 0x4
.long 0x3617
L_222811:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_222771:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x298(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1584
.p2align 0x4
.long 0x361C
L_222825:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222826
L_222848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F8,%rbp
	leaq (L_222849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222849
.p2align 0x4
.long 0x3622
L_222849:
	addq $0xFFFFFFFFFFFFFD08,%rbp
L_222826:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F0(%rbp)
	addq $0x18,%r12
	movq 0x2E0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x2E8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movl 0x84(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470488
L_222827:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222828:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2D8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x2D0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2E0(%rbp)
	addq $0x300,%rbp
	leaq (L_222829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470488:
L_222834:
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_222835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x359D
L_222305:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222306
L_222432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222433
.p2align 0x4
.long 0x35C8
L_222433:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222306:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470496
L_222307:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470490
L_222308:
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
L_222309:
	movq 0x2B0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_470490:
L_222419:
	movq $0x1,0x260(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
L_222328:
	movq 0x270(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_219587
L_222330:
	movq 0x250(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_219587
L_222332:
	cmpl %r11d,%r13d
	je L_470493
L_222333:
	cmpq $0x1,0x258(%rbp)
	je L_470492
L_222334:
	cmpq $0x1,0x248(%rbp)
	je L_470491
L_222335:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	addq $0x18,%r12
	movq 0x2D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_470491:
L_222404:
	movq 0x258(%rbp),%r15
L_222363:
	movq $0x2133,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x240(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x248(%rbp)
	jmp L_222364
.p2align 0x4
L_470492:
L_222405:
	movq 0x248(%rbp),%r15
	jmp L_222363
.p2align 0x4
L_470493:
L_222406:
	movq 0x258(%rbp),%r15
	jmp L_222363
.p2align 0x4
L_470496:
L_222420:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	addq $0x18,%r12
	movq 0x2D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x35D2
bits_22:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movq 0x320(%rbp),%r15
	movq %r15,0x318(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222519
L_222522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x328,%rbp
	leaq (L_222523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222523
.p2align 0x4
.long 0x35DC
L_222523:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
L_222519:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x318(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x300(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x320(%rbp)
	movl $0x2,0x328(%rbp)
	addq $0x320,%rbp
	leaq (L_222520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x35D2
L_222469:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movq 0x320(%rbp),%r15
	movq %r15,0x318(%rbp)
	movq %r15,0x320(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x328(%rbp)
	addq $0x320,%rbp
	leaq (L_222470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x35CA
L_222442:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movl 0x328(%rbp),%r15d
	movl %r15d,0x2F8(%rbp)
	movl %r15d,0x328(%rbp)
	movq $0x3,0x330(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x338(%rbp)
	addq $0x328,%rbp
	leaq (L_222443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3654
L_223175:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x300(%rbp)
	movq $0x1,0x308(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_223176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x366B
L_223247:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x2F0(%rbp)
	movq $0x1,0x2F8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3470
x_735:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470500
L_220076:
	movq 0x8(%r14),%r15
L_219792:
	cmpq $0x1,0x0(%r15)
	je L_220075
L_219793:
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_219794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470500:
L_219791:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_219792
.p2align 0x4
.long 0x346D
L_219786:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219787
L_220077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220078
.p2align 0x4
.long 0x34B8
L_220078:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_219787:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2199,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x260(%rbp)
	movq %r14,%r15
	jmp L_219788
.p2align 0x4
.long 0x355E
L_221858:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_221859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x3548
L_221795:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x34E9
L_220671:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220672
L_220673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220674
.p2align 0x4
.long 0x34EA
L_220674:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220672:
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x258(%rbp)
	jmp add_1
.p2align 0x4
.long 0x3499
L_221586:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470506
	cmpl $0x10,%r15d
	je L_470505
	cmpl $0x20,%r15d
	je L_470504
	cmpl $0x40,%r15d
	je L_470503
L_221587:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_221588:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470503:
L_221612:
	xorb %dl,%dl
L_221590:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_221591
.p2align 0x4
L_470504:
L_221611:
	movb $0x1,%dl
	jmp L_221590
.p2align 0x4
L_470505:
L_221610:
	movb $0x2,%dl
	jmp L_221590
.p2align 0x4
L_470506:
L_221589:
	movb $0x3,%dl
	jmp L_221590
.p2align 0x4
.long 0x34EC
L_221613:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_221588
.p2align 0x4
.long 0x3532
L_221615:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x290(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (bug_580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3499
L_221641:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470510
	cmpl $0x10,%r15d
	je L_470509
	cmpl $0x20,%r15d
	je L_470508
	cmpl $0x40,%r15d
	je L_470507
	jmp L_221587
.p2align 0x4
L_470507:
L_221633:
	movb $0x7,%dl
	jmp L_221590
.p2align 0x4
L_470508:
L_221632:
	movb $0x8,%dl
	jmp L_221590
.p2align 0x4
L_470509:
L_221631:
	movb $0x9,%dl
	jmp L_221590
.p2align 0x4
L_470510:
L_221630:
	movb $0xA,%dl
	jmp L_221590
.p2align 0x4
.long 0x3532
L_221643:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x290(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (bug_583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3499
L_221629:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_221630
	cmpl $0x10,%r15d
	je L_221631
	cmpl $0x20,%r15d
	je L_221632
	cmpl $0x40,%r15d
	je L_221633
	jmp L_221587
.p2align 0x4
.long 0x3532
L_221635:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x290(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (bug_582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3499
L_221621:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_221589
	cmpl $0x10,%r15d
	je L_221610
	cmpl $0x20,%r15d
	je L_221611
	cmpl $0x40,%r15d
	je L_221612
	jmp L_221587
.p2align 0x4
.long 0x3532
L_221623:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x290(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (bug_581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_221592:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221593
L_221608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221609
.p2align 0x4
.long 0x34A2
L_221609:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221593:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movzwl (globalWord16+0x2C8)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x288(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221594
.p2align 0x4
.long 0x34F7
L_221594:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq %rax,0x280(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2464:
	cmpq $0x2,%r15
	jnl L_470521
L_221604:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470520
	cmpl $0x1,%r14d
	je L_470519
L_219965:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470519:
L_221607:
	movq 0x270(%rbp),%r14
L_221606:
	movq 0x280(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2464
.p2align 0x4
L_470520:
L_221605:
	movq $0x2,%r14
	jmp L_221606
.p2align 0x4
L_470521:
L_221595:
	movq 0x280(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_221596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x34BF
L_221538:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221539
L_221540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221541
.p2align 0x4
.long 0x34B7
L_221541:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221539:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl (globalWord16+0x2C8)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x278(%rbp)
	movl $0x0,0x84(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x10310)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp simpleCCallWithGCState_0
.p2align 0x4
.long 0x34E3
L_221511:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221512
L_221520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221521
.p2align 0x4
.long 0x34A2
L_221521:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221512:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x278(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x346E
L_221476:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221477
L_221478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221479
.p2align 0x4
.long 0x349E
L_221479:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221477:
	movzbw 0x48(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movq $0x1159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x278(%rbp)
	movl $0x0,0x84(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x10308)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp simpleCCallWithGCState_0
.p2align 0x4
.long 0x3518
L_221254:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movl 0x2A8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2A8(%rbp)
	movq $0x3,0x2B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_221255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3503
L_221140:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221141
L_221206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221207
.p2align 0x4
.long 0x34A1
L_221207:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221141:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x290(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_221142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221142
.p2align 0x4
.long 0x3504
L_221142:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x260(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2454:
	cmpq $0x2,%r15
	jnl L_470528
L_221202:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470527
	cmpl $0x1,%r14d
	je L_470526
	jmp L_219965
.p2align 0x4
L_470526:
L_221205:
	movq 0x290(%rbp),%r14
L_221204:
	movq 0x260(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2454
.p2align 0x4
L_470527:
L_221203:
	movq (globalWord64+0xFD8)(%rip),%r14
	jmp L_221204
.p2align 0x4
L_470528:
L_221143:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221144
L_221200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221201
.p2align 0x4
.long 0x3513
L_221201:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221144:
	movq 0x260(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x278(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2127,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq $0x15,0x10(%r10)
	movq %r10,0x270(%rbp)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (globalWord64+0x120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x290(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_221145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221145
.p2align 0x4
.long 0x3505
L_221145:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x248(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2455:
	cmpq $0x2,%r15
	jnl L_470531
L_221196:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470530
	cmpl $0x1,%r14d
	je L_470529
	jmp L_219965
.p2align 0x4
L_470529:
L_221199:
	movq 0x290(%rbp),%r14
L_221198:
	movq 0x248(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2455
.p2align 0x4
L_470530:
L_221197:
	movq 0x270(%rbp),%r14
	jmp L_221198
.p2align 0x4
L_470531:
L_221146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221147
L_221194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221195
.p2align 0x4
.long 0x3510
L_221195:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221147:
	movq 0x248(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x260(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x250(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x345F
bug_567:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221074
L_221075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_221076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221076
.p2align 0x4
.long 0x3460
L_221076:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_221074:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x346E
L_221034:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221035
L_221047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221048
.p2align 0x4
.long 0x349E
L_221048:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221035:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x278(%rbp)
	movl $0x1,0x84(%rbp)
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x270(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq (globalObjptr+0x102E8)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp simpleCCallWithGCState_0
.p2align 0x4
.long 0x34FB
L_220978:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220979
L_220982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220983
.p2align 0x4
.long 0x34FC
L_220983:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_220979:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470537
L_220980:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
L_470537:
L_220981:
	movq 0x288(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
.long 0x3467
L_220943:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x268(%rbp)
	movb 0x280(%rbp),%r15b
	movb %r15b,0x49(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x278(%rbp)
	movl 0x298(%rbp),%r15d
	movl %r15d,0x1BC(%rbp)
	movb 0x29C(%rbp),%r15b
	movb %r15b,0x4A(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x288(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220944
L_220945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_220946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220946
.p2align 0x4
.long 0x34F7
L_220946:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_220944:
	movq 0x288(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x288(%rbp)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x284(%rbp)
	movl %r15d,0x280(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x260(%rbp)
	movq 0x270(%rbp),%r14
	movq %r14,0x268(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movl %r15d,0x278(%rbp)
	movl 0x1BC(%rbp),%r14d
	movl %r14d,0x27C(%rbp)
	movl %r15d,0x1BC(%rbp)
	jmp ccall_0
.p2align 0x4
.long 0x3468
L_220734:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_220735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x345F
bug_559:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220841
L_220842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_220843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220843
.p2align 0x4
.long 0x3460
L_220843:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_220841:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34C9
L_220169:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220170
L_220189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_220190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220190
.p2align 0x4
.long 0x34CC
L_220190:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_220170:
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x189D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x290(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_220171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1959
.p2align 0x4
.long 0x358E
L_222264:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq %r15,0x2E0(%rbp)
	movq $0x3,0x2E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35E7
L_222581:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movq 0x320(%rbp),%r15
	movq %r15,0x308(%rbp)
	movq 0x2F8(%rbp),%r14
	movq %r14,0x318(%rbp)
	movq 0x310(%rbp),%r14
	movq %r14,0x320(%rbp)
	movq %r15,0x310(%rbp)
	addq $0x310,%rbp
	leaq (L_222582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x360C
L_222772:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x2A8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470542
L_222773:
	movq %r14,0x2D8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (word_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470542:
L_222805:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x361D
L_222829:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222830
L_222832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_222833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222833
.p2align 0x4
.long 0x361E
L_222833:
	addq $0xFFFFFFFFFFFFFD00,%rbp
L_222830:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x2D8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq (globalObjptr+0xF08)(%rip),%r11
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x2E0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movq $0x260D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x2F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_222831:
	jmp L_222817
.p2align 0x4
.long 0x361F
L_222835:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq %r15,0x300(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x300,%rbp
	leaq (L_222836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x359E
L_222310:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2E8(%rbp)
	movq $0x3,0x2F0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35AA
L_222336:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq %r15,0x2E0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x35C6
L_222421:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq %r15,0x2E8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x35D2
L_222520:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movq 0x320(%rbp),%r15
	movq %r15,0x318(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x318,%rbp
	leaq (L_222521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x35D2
L_222470:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movl 0x320(%rbp),%r15d
	movl %r15d,0x2F4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222471
L_222515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x320,%rbp
	leaq (L_222516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222516
.p2align 0x4
.long 0x35D9
L_222516:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
L_222471:
	movl 0x2F4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470545
L_222472:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x310(%rbp),%r14
	movq %r14,0x8(%r15)
L_222473:
	movq %r15,0x320(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x318(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x328(%rbp)
	addq $0x318,%rbp
	leaq (L_222474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
L_470545:
L_222514:
	movq 0x240(%rbp),%r15
	jmp L_222473
.p2align 0x4
.long 0x35CB
L_222443:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movq 0x328(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq %r15,0x300(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_222444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3654
L_223176:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223177
L_223204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_223205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223205
.p2align 0x4
.long 0x3663
L_223205:
	addq $0xFFFFFFFFFFFFFD00,%rbp
L_223177:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x278(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x248(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_223178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x366B
L_223248:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223249
L_223268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_223269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223269
.p2align 0x4
.long 0x3676
L_223269:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_223249:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x270(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x248(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3471
L_219794:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219795
L_220072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220073
.p2align 0x4
.long 0x34A3
L_220073:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_219795:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x280(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x288(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r13
L_219796:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_219797
L_219798:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF25,%r11
	jne L_470549
L_219799:
	movq %r14,0x2A8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_219800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getSelects_0
.p2align 0x4
L_470549:
L_219797:
	movq (globalObjptr+0x73B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x355F
L_221859:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221860
L_221861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_221862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221862
.p2align 0x4
.long 0x3560
L_221862:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_221860:
	movq 0x278(%rbp),%r15
	jmp L_221793
.p2align 0x4
.long 0x3549
L_221796:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221797
L_221851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_221852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221852
.p2align 0x4
.long 0x355B
L_221852:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_221797:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x288(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_221798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221798
.p2align 0x4
.long 0x354A
L_221798:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq %rax,0x298(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2467:
	cmpq $0x2,%r15
	jnl L_470555
L_221847:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470554
	cmpl $0x1,%r14d
	je L_470553
	jmp L_219965
.p2align 0x4
L_470553:
L_221850:
	movq 0x270(%rbp),%r14
L_221849:
	movq 0x298(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2467
.p2align 0x4
L_470554:
L_221848:
	movq 0x278(%rbp),%r14
	jmp L_221849
.p2align 0x4
L_470555:
L_221799:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221800
L_221845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_221846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221846
.p2align 0x4
.long 0x355A
L_221846:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_221800:
	movq 0x298(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2E8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3532
bug_580:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221616
L_221617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221618
.p2align 0x4
.long 0x3533
L_221618:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221616:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_221588
.p2align 0x4
.long 0x3532
bug_583:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221644
L_221645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221646
.p2align 0x4
.long 0x3533
L_221646:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221644:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_221588
.p2align 0x4
.long 0x3532
bug_582:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221636
L_221637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221638
.p2align 0x4
.long 0x3533
L_221638:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221636:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_221588
.p2align 0x4
.long 0x3532
bug_581:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221624
L_221625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221626
.p2align 0x4
.long 0x3533
L_221626:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221624:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_221588
.p2align 0x4
.long 0x352F
L_221596:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221597
L_221602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221603
.p2align 0x4
.long 0x3513
L_221603:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221597:
	movq $0x25F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x25F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x280(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_8
.p2align 0x4
.long 0x34FB
L_221513:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_221514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3519
L_221255:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq $0x1,0x2A0(%rbp)
	movq 0x298(%rbp),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3506
L_221148:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221149
L_221192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221193
.p2align 0x4
.long 0x3512
L_221193:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221149:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x250(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3471
L_220735:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movb 0x280(%rbp),%r15b
	movb %r15b,0x49(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_220796
	cmpq $0x2,%r13
	je L_470571
L_220736:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_470569
	cmpq $0x2081,%r15
	je L_470567
	cmpq $0x2082,%r15
	je L_470565
L_220737:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470564
L_220738:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220801(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220739+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470564:
L_220802:
	movq %r15,0x288(%rbp)
	leaq L_220801(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470565:
L_220827:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470566
L_220828:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220801(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220829+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470566:
L_220830:
	movq %r15,0x288(%rbp)
	leaq L_220801(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470567:
L_220815:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470568
L_220816:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220801(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220817+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470568:
L_220822:
	movq %r15,0x288(%rbp)
	leaq L_220801(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470569:
L_220807:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470570
L_220808:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220801(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220809+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470570:
L_220810:
	movq %r15,0x288(%rbp)
	leaq L_220801(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470571:
L_220836:
	shrq $0x2,%r14
	movb %r14b,%r13b
	movb %r13b,0x4A(%rbp)
L_220744:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_220796
	cmpq $0x2,%r13
	je L_470579
L_220745:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_470577
	cmpq $0x2081,%r15
	je L_470575
	cmpq $0x2082,%r15
	je L_470573
L_220746:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470572
L_220747:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220761(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220748+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470572:
L_220762:
	movq %r15,0x288(%rbp)
	leaq L_220761(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470573:
L_220787:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470574
L_220788:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220761(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220789+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470574:
L_220790:
	movq %r15,0x288(%rbp)
	leaq L_220761(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470575:
L_220775:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470576
L_220776:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220761(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220777+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470576:
L_220782:
	movq %r15,0x288(%rbp)
	leaq L_220761(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470577:
L_220767:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_470578
L_220768:
	movq 0x0(%r11),%r14
	movq %r14,0x288(%rbp)
	leaq L_220761(%rip),%r14
	movq %r14,0x1E0(%rbp)
	movq %rbp,%r14
	addq $0x1E8,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x288,%rbp
	leaq (L_220769+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470578:
L_220770:
	movq %r15,0x288(%rbp)
	leaq L_220761(%rip),%r15
	movq %r15,0x1E0(%rbp)
	movq %rbp,%r15
	addq $0x1E8,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_220771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470579:
L_220797:
	shrq $0x2,%r14
	movb %r14b,%dl
L_220753:
	movzbq 0x49(%rbp),%r15
	movzbq %dl,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	movzbq 0x4A(%rbp),%r14
	shlq $0x10,%r14
	orq %r14,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x280(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x4,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_220754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x34CA
L_220171:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220172
L_220187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220188
.p2align 0x4
.long 0x34CB
L_220188:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220172:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_470585
L_220173:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x260(%rbp)
	movq $0x1,0x270(%rbp)
.p2align 0x4,,0x7
L_220174:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470584
.p2align 0x4,,0x7
L_220175:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470582
L_220176:
	movq %r15,0x270(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_220174
.p2align 0x4
L_470582:
L_220177:
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
.p2align 0x4,,0x7
L_220178:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470583
.p2align 0x4,,0x7
L_220179:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je adds_0
L_220180:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_220178
.p2align 0x4
L_470583:
L_220182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_220183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220183
.p2align 0x4
.long 0x3495
L_220183:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_220179
.p2align 0x4
L_470584:
L_220184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_220185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220185
.p2align 0x4
.long 0x349E
L_220185:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	jmp L_220175
.p2align 0x4
L_470585:
L_220186:
	movq 0x268(%rbp),%r14
	xchgq %r14,%r15
	jmp adds_0
.p2align 0x4
.long 0x358F
L_222265:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222266
L_222567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222568
.p2align 0x4
.long 0x35E3
L_222568:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222266:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x298(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2C0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1584
.p2align 0x4
.long 0x35E8
L_222582:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq 0x310(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222583
L_222605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_222606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222606
.p2align 0x4
.long 0x35EE
L_222606:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_222583:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x308(%rbp)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x300(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movl 0x84(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470588
L_222584:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222585:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x2E8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F8(%rbp)
	addq $0x318,%rbp
	leaq (L_222586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470588:
L_222591:
	movq 0x240(%rbp),%r15
	movq %r15,0x318(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x318,%rbp
	leaq (L_222592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x360D
word_68:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222774
L_222803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_222804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222804
.p2align 0x4
.long 0x3616
L_222804:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_222774:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x2C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2D0(%rbp)
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x345F
L_222806:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x361F
L_222836:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222837
L_222846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_222847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222847
.p2align 0x4
.long 0x3620
L_222847:
	addq $0xFFFFFFFFFFFFFD00,%rbp
L_222837:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470593
L_222838:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
new1_45:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_222839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222839
.p2align 0x4
.long 0x3620
L_222839:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq %rax,0x2E0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2492:
	cmpq $0x1,%r15
	jnl L_470591
L_222844:
	movq 0x2E0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2D8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2492
.p2align 0x4
L_470591:
L_222840:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222841
L_222842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x300,%rbp
	leaq (L_222843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222843
.p2align 0x4
.long 0x3621
L_222843:
	addq $0xFFFFFFFFFFFFFD00,%rbp
L_222841:
	movq 0x2E0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222828
.p2align 0x4
L_470593:
L_222845:
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	jmp new1_45
.p2align 0x4
.long 0x359F
L_222311:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq $0x3,0x2E8(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x35AA
L_222337:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222338
L_222402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222403
.p2align 0x4
.long 0x35C1
L_222403:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222338:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_222340
L_222339:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x240(%rbp)
L_222340:
	movq 0x2C8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x35C6
L_222422:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222423
L_222430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222431
.p2align 0x4
.long 0x35C7
L_222431:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222423:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470598
L_222424:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x84(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470597
L_222425:
	movq %r15,0x268(%rbp)
	jmp L_222309
.p2align 0x4
L_470597:
L_222426:
	movq %r15,0x268(%rbp)
	movq $0x1,0x260(%rbp)
	jmp L_222328
.p2align 0x4
L_470598:
L_222427:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470599
L_222428:
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_222309
.p2align 0x4
L_470599:
L_222429:
	movq $0x1,0x260(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_222328
.p2align 0x4
.long 0x35DB
L_222521:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq 0x318(%rbp),%r15
	movq %r15,0x310(%rbp)
	jmp L_222468
.p2align 0x4
.long 0x35D3
L_222474:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq 0x318(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x310(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222475
L_222512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x320,%rbp
	leaq (L_222513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222513
.p2align 0x4
.long 0x35D9
L_222513:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
L_222475:
	movl 0x2F0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470601
L_222476:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
L_222477:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x308(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x330(%rbp)
	addq $0x330,%rbp
	leaq (L_222478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_470601:
L_222505:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x320,%rbp
	leaq (L_222506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222506
.p2align 0x4
.long 0x35D9
L_222506:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movq %rax,0x2F0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2484:
	cmpq $0x1,%r15
	jnl L_470602
L_222511:
	movq 0x2F0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x310(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2484
.p2align 0x4
L_470602:
L_222507:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222508
L_222509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222510
.p2align 0x4
.long 0x35DA
L_222510:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_222508:
	movq 0x2F0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222477
.p2align 0x4
.long 0x35CC
L_222444:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222445
L_222452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_222453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222453
.p2align 0x4
.long 0x35CF
L_222453:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_222445:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x300(%rbp)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x2A8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x308(%rbp)
	addq $0x318,%rbp
	leaq (L_222446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3655
L_223178:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x300(%rbp)
	movq $0x3,0x308(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_223179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x366C
L_223250:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2F0(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3472
L_219800:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movslq 0x84(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_219767
L_219802:
	salq $0x4,%r14
	movq 0x0(%r15,%r14,1),%r13
	movq 0x288(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x28(%r15),%r11
	movq %r11,0x278(%rbp)
L_219803:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219804
L_219805:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C9,%r15
	je L_470607
	cmpq $0x10CA,%r15
	je L_470606
L_219804:
	movq (globalObjptr+0x5210)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470606:
L_220053:
	movq %r14,0x2B0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x290(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x298(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x290,%rbp
	leaq (L_220054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toOperand_0
.p2align 0x4
L_470607:
L_219806:
	movq %r14,0x2B0(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x290(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x298(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x290,%rbp
	leaq (L_219807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toOperand_0
.p2align 0x4
.long 0x354B
L_221801:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221802
L_221843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_221844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221844
.p2align 0x4
.long 0x3559
L_221844:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_221802:
	movq $0x2171,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x298(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,0x2E8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3530
L_221598:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221599
L_221600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221601
.p2align 0x4
.long 0x3531
L_221601:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221599:
	movl $0x1,0x84(%rbp)
	movb $0x1,0x49(%rbp)
	movl $0x1,0x1BC(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movl $0x1,0x280(%rbp)
	movl $0x0,0x284(%rbp)
	movb $0x1,0x4A(%rbp)
	movq $0x0,0x288(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x298(%rbp)
	movl $0x0,0x27C(%rbp)
	movl $0x1,0x278(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq (globalObjptr+0x10318)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp ccall_0
.p2align 0x4
.long 0x34FB
L_221514:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221515
L_221518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221519
.p2align 0x4
.long 0x34FC
L_221519:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221515:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470612
L_221516:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
L_470612:
L_221517:
	movq 0x288(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp move_0
.p2align 0x4
.long 0x351A
L_221256:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221257
L_221328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221329
.p2align 0x4
.long 0x3513
L_221329:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221257:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x270(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221258
.p2align 0x4
.long 0x351B
L_221258:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq %rax,0x260(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2458:
	cmpq $0x3,%r15
	jnl L_470617
L_221323:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470616
	cmpl $0x1,%r14d
	je L_470615
	cmpl $0x2,%r14d
	je L_470614
	jmp L_220948
.p2align 0x4
L_470614:
L_221327:
	movq 0x270(%rbp),%r14
L_221325:
	movq 0x260(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2458
.p2align 0x4
L_470615:
L_221326:
	movq 0x278(%rbp),%r14
	jmp L_221325
.p2align 0x4
L_470616:
L_221324:
	movq $0x2,%r14
	jmp L_221325
.p2align 0x4
L_470617:
L_221259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221260
L_221321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221322
.p2align 0x4
.long 0x34FC
L_221322:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221260:
	movq 0x260(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x270(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x288(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x248(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x250(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_221261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3507
L_221150:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221151
L_221190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221191
.p2align 0x4
.long 0x3511
L_221191:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221151:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalWord64+0x1260)(%rip),%r15
	movq %r15,0x298(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_221152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x346F
L_220739:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470624
	cmpl $0x10,%r15d
	je L_470623
	cmpl $0x20,%r15d
	je L_470622
	cmpl $0x40,%r15d
	je L_470621
L_220740:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_220741:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470621:
L_220800:
	xorb %dl,%dl
L_220743:
	movzbq %dl,%r15
	movb %dl,0x4A(%rbp)
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_220744
.p2align 0x4
L_470622:
L_220799:
	movb $0x1,%dl
	jmp L_220743
.p2align 0x4
L_470623:
L_220798:
	movb $0x2,%dl
	jmp L_220743
.p2align 0x4
L_470624:
L_220742:
	movb $0x3,%dl
	jmp L_220743
.p2align 0x4
.long 0x34EC
L_220801:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_220741
.p2align 0x4
.long 0x34EF
L_220803:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220829:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470628
	cmpl $0x10,%r15d
	je L_470627
	cmpl $0x20,%r15d
	je L_470626
	cmpl $0x40,%r15d
	je L_470625
	jmp L_220740
.p2align 0x4
L_470625:
L_220821:
	movb $0x7,%dl
	jmp L_220743
.p2align 0x4
L_470626:
L_220820:
	movb $0x8,%dl
	jmp L_220743
.p2align 0x4
L_470627:
L_220819:
	movb $0x9,%dl
	jmp L_220743
.p2align 0x4
L_470628:
L_220818:
	movb $0xA,%dl
	jmp L_220743
.p2align 0x4
.long 0x34EF
L_220831:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220817:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_220818
	cmpl $0x10,%r15d
	je L_220819
	cmpl $0x20,%r15d
	je L_220820
	cmpl $0x40,%r15d
	je L_220821
	jmp L_220740
.p2align 0x4
.long 0x34EF
L_220823:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220809:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_220742
	cmpl $0x10,%r15d
	je L_220798
	cmpl $0x20,%r15d
	je L_220799
	cmpl $0x40,%r15d
	je L_220800
	jmp L_220740
.p2align 0x4
.long 0x34EF
L_220811:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220748:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470640
	cmpl $0x10,%r15d
	je L_470639
	cmpl $0x20,%r15d
	je L_470638
	cmpl $0x40,%r15d
	je L_470637
L_220749:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_220750:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470637:
L_220760:
	xorb %dl,%dl
L_220752:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_220753
.p2align 0x4
L_470638:
L_220759:
	movb $0x1,%dl
	jmp L_220752
.p2align 0x4
L_470639:
L_220758:
	movb $0x2,%dl
	jmp L_220752
.p2align 0x4
L_470640:
L_220751:
	movb $0x3,%dl
	jmp L_220752
.p2align 0x4
.long 0x34EC
L_220761:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_220750
.p2align 0x4
.long 0x34ED
L_220763:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220789:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_470644
	cmpl $0x10,%r15d
	je L_470643
	cmpl $0x20,%r15d
	je L_470642
	cmpl $0x40,%r15d
	je L_470641
	jmp L_220749
.p2align 0x4
L_470641:
L_220781:
	movb $0x7,%dl
	jmp L_220752
.p2align 0x4
L_470642:
L_220780:
	movb $0x8,%dl
	jmp L_220752
.p2align 0x4
L_470643:
L_220779:
	movb $0x9,%dl
	jmp L_220752
.p2align 0x4
L_470644:
L_220778:
	movb $0xA,%dl
	jmp L_220752
.p2align 0x4
.long 0x34ED
L_220791:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220777:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_220778
	cmpl $0x10,%r15d
	je L_220779
	cmpl $0x20,%r15d
	je L_220780
	cmpl $0x40,%r15d
	je L_220781
	jmp L_220749
.p2align 0x4
.long 0x34ED
L_220783:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x346F
L_220769:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpl $0x8,%r15d
	je L_220751
	cmpl $0x10,%r15d
	je L_220758
	cmpl $0x20,%r15d
	je L_220759
	cmpl $0x40,%r15d
	je L_220760
	jmp L_220749
.p2align 0x4
.long 0x34ED
L_220771:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (bug_552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3471
L_220754:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220755
L_220756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220757
.p2align 0x4
.long 0x34A3
L_220757:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220755:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl (globalWord16+0xA)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movl $0x1,0x84(%rbp)
	movb $0x1,0x49(%rbp)
	movl $0x1,0x1BC(%rbp)
	movl $0x1,0x278(%rbp)
	movl $0x0,0x27C(%rbp)
	movl $0x1,0x280(%rbp)
	movl $0x1,0x284(%rbp)
	movb $0x1,0x4A(%rbp)
	movq $0x0,0x288(%rbp)
	movq 0x268(%rbp),%r14
	movq %r14,0x290(%rbp)
	movq 0x270(%rbp),%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq (globalObjptr+0xCDF8)(%rip),%r15
	movq %r15,0x260(%rbp)
	jmp ccall_0
.p2align 0x4
.long 0x3590
L_222267:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x2A8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470654
L_222268:
	movq %r14,0x2E8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (word_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470654:
L_222562:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x35E9
L_222586:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movl 0x318(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222587
L_222589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222590
.p2align 0x4
.long 0x35EA
L_222590:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_222587:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x2F0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq (globalObjptr+0xF08)(%rip),%r11
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x2F8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movq $0x260D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x308(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_219597
L_222588:
	jmp L_222574
.p2align 0x4
.long 0x35EB
L_222592:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq 0x318(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq %r15,0x318(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x318,%rbp
	leaq (L_222593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x360E
L_222775:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x345F
bug_599:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222807
L_222808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222809
.p2align 0x4
.long 0x3460
L_222809:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222807:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x35A0
L_222312:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x280(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x35AB
L_222341:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2E0(%rbp)
	movq $0x3,0x2E8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35D4
L_222478:
	addq $0xFFFFFFFFFFFFFCD0,%rbp
	movl 0x330(%rbp),%r15d
	movl %r15d,0x2F8(%rbp)
	movl %r15d,0x330(%rbp)
	movq $0x3,0x338(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x330,%rbp
	leaq (L_222479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35CD
L_222446:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movl 0x318(%rbp),%r15d
	movl %r15d,0x2F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222447
L_222450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222451
.p2align 0x4
.long 0x35CE
L_222451:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_222447:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x2F8(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x2F0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x308(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x260D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x300(%rbp),%r14
	movq %r14,0x0(%r15)
L_222448:
	movl 0x1BC(%rbp),%ecx
	incl %ecx
	jo L_219597
	jmp L_222438
.p2align 0x4
.long 0x3656
L_223179:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x2F0(%rbp),%r14
	movq %r14,0x300(%rbp)
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_223180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x366D
L_223251:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq $0x3,0x2E8(%rbp)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x2F0(%rbp)
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_223252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34B6
L_220054:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220055
L_220070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220071
.p2align 0x4
.long 0x34B7
L_220071:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_220055:
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_470668
L_220056:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x270(%rbp)
	movq $0x1,0x280(%rbp)
.p2align 0x4,,0x7
L_220057:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470667
.p2align 0x4,,0x7
L_220058:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470660
L_220059:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_220057
.p2align 0x4
L_470660:
L_220060:
	movq 0x280(%rbp),%r15
	movq %r15,0x258(%rbp)
.p2align 0x4,,0x7
L_220061:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470666
.p2align 0x4,,0x7
L_220062:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470661
L_220063:
	movq %r15,0x278(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_220061
.p2align 0x4
L_470661:
L_220064:
	movq %r15,0x258(%rbp)
L_219898:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_470662
L_219899:
	movq 0x258(%rbp),%r15
	jmp adds_0
.p2align 0x4
L_470662:
L_219916:
	movq 0x268(%rbp),%r15
	movq 0x8(%r15),%r14
L_219917:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_219918
L_219919:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_470664
L_219920:
	movq 0x260(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CC,%r14
	je L_470663
L_219985:
	movq 0x0(%r15),%r15
	movq %r15,0x260(%rbp)
L_219922:
	movq 0x1C8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_219923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470663:
L_219921:
	movq 0x8(%r15),%r15
	movq %r15,0x260(%rbp)
	jmp L_219922
.p2align 0x4
L_470664:
L_219918:
	movq 0x258(%rbp),%r15
	jmp adds_0
.p2align 0x4
L_470666:
L_220065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220066
.p2align 0x4
.long 0x34A3
L_220066:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	jmp L_220062
.p2align 0x4
L_470667:
L_220067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_220068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220068
.p2align 0x4
.long 0x34A2
L_220068:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	jmp L_220058
.p2align 0x4
L_470668:
L_220069:
	movq 0x278(%rbp),%r15
	movq %r15,0x258(%rbp)
	jmp L_219898
.p2align 0x4
.long 0x3473
L_219807:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x298(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x2A8(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x2B0(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x2B8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x2C0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x2D8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x2E0(%rbp)
	movq 0x270(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x2E8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2F0(%rbp)
	movq 0x50(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2F8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x300(%rbp)
	movq %r14,0x310(%rbp)
	addq $0x310,%rbp
	leaq (L_219808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x354C
L_221803:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x351C
L_221261:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movl 0x280(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221262
L_221319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221320
.p2align 0x4
.long 0x3522
L_221320:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221262:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r13
	movq %r13,0x20(%r15)
	movq 0x258(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x21A7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x280(%rbp)
	movq %r14,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3508
L_221152:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221153
L_221188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_221189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221189
.p2align 0x4
.long 0x3510
L_221189:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_221153:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalWord64+0x1260)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_221154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x34EF
bug_555:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220804
L_220805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220806
.p2align 0x4
.long 0x34F0
L_220806:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220804:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220741
.p2align 0x4
.long 0x34EF
bug_558:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220832
L_220833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220834
.p2align 0x4
.long 0x34F0
L_220834:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220832:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220741
.p2align 0x4
.long 0x34EF
bug_557:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220824
L_220825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220826
.p2align 0x4
.long 0x34F0
L_220826:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220824:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220741
.p2align 0x4
.long 0x34EF
bug_556:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220812
L_220813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220814
.p2align 0x4
.long 0x34F0
L_220814:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220812:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220741
.p2align 0x4
.long 0x34ED
bug_551:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220764
L_220765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220766
.p2align 0x4
.long 0x34EE
L_220766:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220764:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220750
.p2align 0x4
.long 0x34ED
bug_554:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220792
L_220793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220794
.p2align 0x4
.long 0x34EE
L_220794:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220792:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220750
.p2align 0x4
.long 0x34ED
bug_553:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220784
L_220785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220786
.p2align 0x4
.long 0x34EE
L_220786:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220784:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220750
.p2align 0x4
.long 0x34ED
bug_552:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_220772
L_220773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_220774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220774
.p2align 0x4
.long 0x34EE
L_220774:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_220772:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_220750
.p2align 0x4
.long 0x3591
word_67:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x298(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222269
L_222560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222561
.p2align 0x4
.long 0x35E2
L_222561:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222269:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x2A8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2E8(%rbp)
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x345F
L_222563:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x35EB
L_222593:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movl 0x318(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222594
L_222603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222604
.p2align 0x4
.long 0x35EC
L_222604:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_222594:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_470683
L_222595:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2F0(%rbp)
new1_43:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222596
.p2align 0x4
.long 0x35EC
L_222596:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq %rax,0x2F8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2485:
	cmpq $0x1,%r15
	jnl L_470681
L_222601:
	movq 0x2F8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2F0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2485
.p2align 0x4
L_470681:
L_222597:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222598
L_222599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222600
.p2align 0x4
.long 0x35ED
L_222600:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_222598:
	movq 0x2F8(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_222585
.p2align 0x4
L_470683:
L_222602:
	movq 0x240(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	jmp new1_43
.p2align 0x4
.long 0x360F
L_222776:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222777
L_222801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222802
.p2align 0x4
.long 0x3615
L_222802:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222777:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x260(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222778
.p2align 0x4
.long 0x35F7
L_222778:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x278(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2491:
	cmpq $0x2,%r15
	jnl L_470687
L_222797:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470686
	cmpl $0x1,%r14d
	je L_470685
	jmp L_219965
.p2align 0x4
L_470685:
L_222800:
	movq 0x258(%rbp),%r14
L_222799:
	movq 0x278(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2491
.p2align 0x4
L_470686:
L_222798:
	movq 0x268(%rbp),%r14
	jmp L_222799
.p2align 0x4
L_470687:
L_222779:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222780
L_222795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222796
.p2align 0x4
.long 0x3614
L_222796:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222780:
	movq 0x278(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x258(%rbp)
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x35A1
L_222313:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2E8(%rbp)
	movq $0x3,0x2F0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35AC
L_222342:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x2E0(%rbp)
	movq $0x7,0x2E8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35D5
L_222479:
	addq $0xFFFFFFFFFFFFFCD0,%rbp
	movq 0x330(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x310(%rbp),%r14
	movq %r14,0x318(%rbp)
	movq %r15,0x310(%rbp)
	addq $0x310,%rbp
	leaq (L_222480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3657
L_223180:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223181
L_223202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_223203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223203
.p2align 0x4
.long 0x3662
L_223203:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_223181:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2E8(%rbp)
	movl $0x2,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_223182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x366E
L_223252:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223253
L_223266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_223267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223267
.p2align 0x4
.long 0x3675
L_223267:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_223253:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x2,0x2E0(%rbp)
	addq $0x2D8,%rbp
	leaq (L_223254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x3467
L_219923:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219924
L_219983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_219984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219984
.p2align 0x4
.long 0x3494
L_219984:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_219924:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x268(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470692
L_219925:
	movq %r14,0x280(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_219926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470692:
L_219978:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_219979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3474
L_219808:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movl 0x310(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x310(%rbp)
	movq $0x3,0x318(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x310,%rbp
	leaq (L_219809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x354D
L_221804:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x270(%rbp)
	movq 0x2D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x290(%rbp)
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x34E3
L_221263:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3509
L_221154:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_221155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3592
L_222270:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x345F
bug_596:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222564
L_222565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222566
.p2align 0x4
.long 0x3460
L_222566:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222564:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3610
L_222781:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222782
L_222793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222794
.p2align 0x4
.long 0x3613
L_222794:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222782:
	movq $0x2157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x278(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x270(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470695
L_222783:
	movq %r14,0x2D0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470695:
L_222788:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x35A2
L_222314:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq %r15,0x2E8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35AD
L_222343:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222344
L_222399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222400
.p2align 0x4
.long 0x35C0
L_222400:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222344:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x280(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x35D6
L_222480:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq 0x310(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222481
L_222503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_222504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222504
.p2align 0x4
.long 0x35D1
L_222504:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_222481:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x308(%rbp)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x278(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x300(%rbp),%r14
	cmpq $0x1,%r14
	je L_470704
L_222482:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_222483:
	incl %ecx
	jo L_219597
L_222484:
	cmpq $0x1,%r15
	je L_470698
L_222485:
	movq 0x8(%r15),%r15
	jmp L_222483
.p2align 0x4
L_470698:
L_222486:
L_222487:
	movslq %ecx,%rdx
	movq %rdx,0x2F8(%rbp)
	testq %rdx,%rdx
	jz L_470702
L_222488:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_222490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222490
.p2align 0x4
.long 0x35CE
L_222490:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq %rax,0x310(%rbp)
L_222491:
	movq 0x300(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2483:
	cmpq 0x2F8(%rbp),%r15
	jnl L_470700
L_222497:
	cmpq $0x1,%r14
	je L_219720
L_222498:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x310(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2483
.p2align 0x4
L_470700:
L_222492:
	movq 0x310(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x2A8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F8(%rbp)
	addq $0x320,%rbp
	leaq (L_222493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470702:
L_222501:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x310(%rbp)
	jmp L_222491
.p2align 0x4
L_470704:
L_222502:
	xorl %ecx,%ecx
	jmp L_222487
.p2align 0x4
.long 0x3658
L_223182:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223183
L_223200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_223201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223201
.p2align 0x4
.long 0x3661
L_223201:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_223183:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x250(%rbp)
	addq $0x20,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x2D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x280(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_223184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x366F
L_223254:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq 0x2D8(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223255
L_223264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_223265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223265
.p2align 0x4
.long 0x3674
L_223265:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_223255:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x250(%rbp)
	addq $0x20,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x2C8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x280(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x346E
L_219926:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219927
L_219976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_219977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219977
.p2align 0x4
.long 0x349E
L_219977:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_219927:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x278(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x11,0x288(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_219928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x345F
L_219979:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3475
L_219809:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq 0x310(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x2F8(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x308(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F8,%rbp
	leaq (L_219810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x354E
L_221805:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2E8(%rbp)
	movq $0x3,0x2F0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x34BF
L_221264:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x278(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq $0x1,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x34FB
L_221155:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x278(%rbp)
	movq $0x3,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3593
L_222271:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222272
L_222558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222559
.p2align 0x4
.long 0x35E1
L_222559:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222272:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x290(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222273
.p2align 0x4
.long 0x3594
L_222273:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq %rax,0x298(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2476:
	cmpq $0x2,%r15
	jnl L_470711
L_222554:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470710
	cmpl $0x1,%r14d
	je L_470709
	jmp L_219965
.p2align 0x4
L_470709:
L_222557:
	movq 0x2C0(%rbp),%r14
L_222556:
	movq 0x298(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2476
.p2align 0x4
L_470710:
L_222555:
	movq 0x2A0(%rbp),%r14
	jmp L_222556
.p2align 0x4
L_470711:
L_222274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222275
L_222552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222553
.p2align 0x4
.long 0x35E0
L_222553:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222275:
	movq 0x298(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2E0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3611
L_222784:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222785
L_222786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222787
.p2align 0x4
.long 0x3612
L_222787:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222785:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x240(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x248(%rbp)
	jmp L_222364
.p2align 0x4
.long 0x345F
L_222789:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x35A3
L_222315:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x35AE
L_222345:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x35D7
L_222493:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
	movl 0x320(%rbp),%r15d
	movl %r15d,0x300(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222494
L_222495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x320,%rbp
	leaq (L_222496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222496
.p2align 0x4
.long 0x35D8
L_222496:
	addq $0xFFFFFFFFFFFFFCE0,%rbp
L_222494:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x300(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x2F0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x310(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x2F8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x260D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x308(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_222448
.p2align 0x4
.long 0x3659
L_223184:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223185
L_223198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_223199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223199
.p2align 0x4
.long 0x3660
L_223199:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_223185:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x2D0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x3670
L_223256:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223257
L_223262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223263
.p2align 0x4
.long 0x3673
L_223263:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223257:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x2C0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_223258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x346F
L_219928:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219929
L_219974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_219975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219975
.p2align 0x4
.long 0x34A2
L_219975:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_219929:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x288(%rbp)
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x108(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_219930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x345F
bug_549:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219980
L_219981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_219982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219982
.p2align 0x4
.long 0x3460
L_219982:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_219980:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3476
L_219810:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219811
L_220051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F8,%rbp
	leaq (L_220052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220052
.p2align 0x4
.long 0x34B5
L_220052:
	addq $0xFFFFFFFFFFFFFD08,%rbp
L_219811:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x278(%rbp)
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F8,%rbp
	leaq (L_219812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x354F
L_221806:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x2E8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_221807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x346E
L_221265:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221266
L_221317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221318
.p2align 0x4
.long 0x349E
L_221318:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221266:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x39F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x248(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x278(%rbp)
	movl $0x1,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x346E
L_221156:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221157
L_221186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221187
.p2align 0x4
.long 0x349E
L_221187:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221157:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221158
.p2align 0x4
.long 0x34CF
L_221158:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq %rax,0x270(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2456:
	cmpq $0x2,%r15
	jnl L_470724
L_221182:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470723
	cmpl $0x1,%r14d
	je L_470722
	jmp L_219965
.p2align 0x4
L_470722:
L_221185:
	movq 0x278(%rbp),%r14
L_221184:
	movq 0x270(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2456
.p2align 0x4
L_470723:
L_221183:
	movq (globalWord64+0x1260)(%rip),%r14
	jmp L_221184
.p2align 0x4
L_470724:
L_221159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221160
L_221180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221181
.p2align 0x4
.long 0x349E
L_221181:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221160:
	movq 0x270(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x258(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x217D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xE0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2127,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x80(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470725
L_221161:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
L_221162:
	movq %r15,0x248(%rbp)
	decl 0x4C(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x250(%rbp)
	jmp loop_2441
.p2align 0x4
L_470725:
L_221163:
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x248(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x258(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x260(%rbp)
	movq %r13,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3595
L_222276:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222277
L_222550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222551
.p2align 0x4
.long 0x35DF
L_222551:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222277:
	movq $0x2157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x2A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x298(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x290(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x240(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2B0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2C0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470728
L_222278:
	movq %r14,0x2E8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470728:
L_222545:
	movq %r11,0x1F8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_222546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x345F
bug_598:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222790
L_222791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222792
.p2align 0x4
.long 0x3460
L_222792:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222790:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x35A4
L_222316:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2E8(%rbp)
	movq $0x3,0x2F0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35AF
L_222346:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222347
L_222397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222398
.p2align 0x4
.long 0x35BF
L_222398:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222347:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x290(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222348
.p2align 0x4
.long 0x35B0
L_222348:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq %rax,0x298(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2480:
	cmpq $0x2,%r15
	jnl L_470733
L_222393:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470732
	cmpl $0x1,%r14d
	je L_470731
	jmp L_219965
.p2align 0x4
L_470731:
L_222396:
	movq 0x280(%rbp),%r14
L_222395:
	movq 0x298(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2480
.p2align 0x4
L_470732:
L_222394:
	movq 0x240(%rbp),%r14
	jmp L_222395
.p2align 0x4
L_470733:
L_222349:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222350
L_222391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222392
.p2align 0x4
.long 0x35BE
L_222392:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222350:
	movq 0x298(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x240(%rbp)
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2E0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x365A
L_223186:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223187
L_223196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223197
.p2align 0x4
.long 0x365F
L_223197:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223187:
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x260(%rbp)
	addq $0x20,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x280(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3671
L_223258:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223259
L_223260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_223261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223261
.p2align 0x4
.long 0x3672
L_223261:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_223259:
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x248(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x268(%rbp),%r14
	jmp L_219760
.p2align 0x4
.long 0x3496
L_219930:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_219931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3477
L_219812:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x2E8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3550
L_221807:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221808
L_221841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_221842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221842
.p2align 0x4
.long 0x3558
L_221842:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_221808:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2D8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_221809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3502
L_221267:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221268
L_221315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221316
.p2align 0x4
.long 0x351F
L_221316:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221268:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x260(%rbp)
	addq $0x20,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalWord64+0x1260)(%rip),%r14
	movq %r14,0x10(%r15)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x34BE
L_221164:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3596
L_222279:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222280
L_222543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222544
.p2align 0x4
.long 0x35DE
L_222544:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222280:
	movq $0x2133,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x240(%rbp)
	addq $0x20,%r12
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x270(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_222281:
	incl %ecx
	jo L_219597
L_222282:
	cmpq $0x1,%r15
	je L_470740
L_222283:
	movq 0x8(%r15),%r15
	jmp L_222281
.p2align 0x4
L_470740:
L_222284:
	movslq %ecx,%rdx
	movq %rdx,0x270(%rbp)
	testq %rdx,%rdx
	jz L_470744
L_222285:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219662
L_222286:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222287
.p2align 0x4
.long 0x3597
L_222287:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq %rax,0x280(%rbp)
L_222288:
	movq 0x2C0(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2477:
	cmpq 0x270(%rbp),%r15
	jnl L_470742
L_222538:
	cmpq $0x1,%r14
	je L_219720
L_222539:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x280(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2477
.p2align 0x4
L_470742:
L_222289:
	movq 0x280(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	addq $0x2E0,%rbp
	leaq (L_222290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470744:
L_222542:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x280(%rbp)
	jmp L_222288
.p2align 0x4
.long 0x345F
L_222546:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (bug_595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x35A5
L_222317:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq %r15,0x2E8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35B1
L_222351:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222352
L_222389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222390
.p2align 0x4
.long 0x35BD
L_222390:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222352:
	movq $0x2179,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x298(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x240(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x2D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x365B
L_223188:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223189
L_223194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223195
.p2align 0x4
.long 0x365E
L_223195:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223189:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_223190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp vos_0
.p2align 0x4
.long 0x3496
L_219931:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219932
L_219972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_219973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219973
.p2align 0x4
.long 0x34A1
L_219973:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_219932:
	movl 0x84(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_219934
L_219933:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x260(%rbp)
L_219934:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_219935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3478
L_219813:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x2A8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2E8(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x2F0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x2F8(%rbp)
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_219814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3551
L_221809:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_221810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x351D
L_221269:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221270
L_221313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221314
.p2align 0x4
.long 0x3521
L_221314:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221270:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x248(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x258(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x34BE
L_221165:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x288(%rbp)
	movq $0x1,0x290(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3598
L_222290:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movl 0x2E0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222291
L_222536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E0,%rbp
	leaq (L_222537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222537
.p2align 0x4
.long 0x35DD
L_222537:
	addq $0xFFFFFFFFFFFFFD20,%rbp
L_222291:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x240(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x280(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x270(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq 0x258(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r15),%r11d
	movq %r13,0x258(%rbp)
	movl %r11d,0x84(%rbp)
	movq 0x2D0(%rbp),%r13
	movq %r13,0x240(%rbp)
	movl $0x1,0x4C(%rbp)
	movq %r14,%r15
	jmp x_778
.p2align 0x4
.long 0x345F
bug_595:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222547
L_222548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_222549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222549
.p2align 0x4
.long 0x3460
L_222549:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_222547:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x35A6
L_222318:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x260(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222319
L_222417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222418
.p2align 0x4
.long 0x35C5
L_222418:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222319:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x280(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x35B2
L_222353:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_222354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x365C
L_223190:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223191
L_223192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_223193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223193
.p2align 0x4
.long 0x365D
L_223193:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_223191:
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x2C0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x248(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x1,%r14
	jmp L_219760
.p2align 0x4
.long 0x3497
L_219935:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movl 0x2A0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2A0(%rbp)
	movq $0x3,0x2A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_219936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3479
L_219814:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movl 0x308(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x300(%rbp)
	movq $0x3,0x308(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_219815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3552
L_221810:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movl 0x2B0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221811
L_221839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221840
.p2align 0x4
.long 0x3557
L_221840:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_221811:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x268(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_221812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221812
.p2align 0x4
.long 0x3553
L_221812:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq %rax,0x290(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2468:
	cmpq $0x2,%r15
	jnl L_470758
L_221835:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470757
	cmpl $0x1,%r14d
	je L_470756
	jmp L_219965
.p2align 0x4
L_470756:
L_221838:
	movq 0x270(%rbp),%r14
L_221837:
	movq 0x290(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2468
.p2align 0x4
L_470757:
L_221836:
	movq 0x2A0(%rbp),%r14
	jmp L_221837
.p2align 0x4
L_470758:
L_221813:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221814
L_221833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_221834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221834
.p2align 0x4
.long 0x3556
L_221834:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_221814:
	movq 0x290(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x270(%rbp)
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (L_221815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x351E
L_221271:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movl 0x278(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221272
L_221311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221312
.p2align 0x4
.long 0x3520
L_221312:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221272:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x250(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalWord64+0x1260)(%rip),%r15
	movq %r15,0x278(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_221273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x34BE
L_221166:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221167
L_221178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221179
.p2align 0x4
.long 0x34A3
L_221179:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221167:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x280(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x35A7
L_222320:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x35B3
L_222354:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq %r15,0x2C8(%rbp)
	movq $0x1,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3498
L_219936:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq $0x11,0x298(%rbp)
	movq 0x290(%rbp),%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_219937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x347A
L_219815:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq %r15,0x300(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x2F8,%rbp
	leaq (L_219816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x3498
L_221815:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x288(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221816
L_221831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_221832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221832
.p2align 0x4
.long 0x3555
L_221832:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_221816:
	movq $0x2163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x290(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x258(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x280(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x278(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x260(%rbp),%r15
	cmpq $0x1,%r15
	je L_470766
L_221817:
	movq 0x8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x260(%rbp)
	movq $0x1,0x268(%rbp)
.p2align 0x4,,0x7
L_221818:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470765
.p2align 0x4,,0x7
L_221819:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470763
L_221820:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_221818
.p2align 0x4
L_470763:
L_221821:
	movq 0x268(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x268(%rbp)
.p2align 0x4,,0x7
L_221822:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470764
.p2align 0x4,,0x7
L_221823:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je adds_0
L_221824:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_221822
.p2align 0x4
L_470764:
L_221826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221827
.p2align 0x4
.long 0x3495
L_221827:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_221823
.p2align 0x4
L_470765:
L_221828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A8,%rbp
	leaq (L_221829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221829
.p2align 0x4
.long 0x3554
L_221829:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	jmp L_221819
.p2align 0x4
L_470766:
L_221830:
	movq 0x298(%rbp),%r14
	xchgq %r14,%r15
	jmp adds_0
.p2align 0x4
.long 0x34E8
L_221273:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221274
L_221309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_221310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221310
.p2align 0x4
.long 0x351F
L_221310:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_221274:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x258(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalWord64+0x1260)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x350A
L_221168:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35A4
L_222321:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movl 0x2E8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222322
L_222415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222416
.p2align 0x4
.long 0x35C4
L_222416:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222322:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x298(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222323
.p2align 0x4
.long 0x35A8
L_222323:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq %rax,0x2A0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2479:
	cmpq $0x2,%r15
	jnl L_470771
L_222411:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470770
	cmpl $0x1,%r14d
	je L_470769
	jmp L_219965
.p2align 0x4
L_470769:
L_222414:
	movq 0x280(%rbp),%r14
L_222413:
	movq 0x2A0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2479
.p2align 0x4
L_470770:
L_222412:
	movq 0x268(%rbp),%r14
	jmp L_222413
.p2align 0x4
L_470771:
L_222324:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222325
L_222409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222410
.p2align 0x4
.long 0x35C3
L_222410:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222325:
	movq 0x2A0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x268(%rbp)
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2E8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2E8,%rbp
	leaq (L_222326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x35B4
L_222355:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222356
L_222387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222388
.p2align 0x4
.long 0x35BC
L_222388:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222356:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x39F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x258(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x2C8(%rbp)
	movl $0x1,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x3499
L_219937:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x288(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219938
L_219969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_219970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219970
.p2align 0x4
.long 0x34A1
L_219970:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_219938:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x290(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_219939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219939
.p2align 0x4
.long 0x349A
L_219939:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x288(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2445:
	cmpq $0x2,%r15
	jnl L_470777
L_219964:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470776
	cmpl $0x1,%r14d
	je L_470775
	jmp L_219965
.p2align 0x4
L_470775:
L_219968:
	movq 0x290(%rbp),%r14
L_219967:
	movq 0x288(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2445
.p2align 0x4
L_470776:
L_219966:
	movq 0x260(%rbp),%r14
	jmp L_219967
.p2align 0x4
L_470777:
L_219940:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219941
L_219962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_219963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219963
.p2align 0x4
.long 0x34A0
L_219963:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_219941:
	movq 0x288(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x278(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2157,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x270(%rbp),%r9
	movq %r9,0x8(%r10)
	movq $0x2127,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x260(%rbp)
	movq %r14,0x8(%r9)
	movq %r10,0x10(%r9)
	addq $0x20,%r12
	movq %r15,0x0(%r9)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x290(%rbp)
	movq %r14,0x10(%r15)
	movq %r11,0x20(%r15)
	addq $0x30,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalWord64+0x1278)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x18(%r15)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq %r13,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_219942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x347B
L_219816:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_219817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x346F
L_221275:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x350B
L_221169:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35A9
L_222326:
	addq $0xFFFFFFFFFFFFFD18,%rbp
	movq 0x2E8(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222327
L_222407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2E8,%rbp
	leaq (L_222408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222408
.p2align 0x4
.long 0x35C2
L_222408:
	addq $0xFFFFFFFFFFFFFD18,%rbp
L_222327:
	movq $0x2179,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x268(%rbp)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x260(%rbp)
	jmp L_222328
.p2align 0x4
.long 0x35B5
L_222357:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222358
L_222385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222386
.p2align 0x4
.long 0x35BB
L_222386:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222358:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x258(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222359
.p2align 0x4
.long 0x35B6
L_222359:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x240(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2481:
	cmpq $0x1,%r15
	jnl L_470781
L_222384:
	movq 0x240(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2481
.p2align 0x4
L_470781:
L_222360:
	movq 0x240(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x2A8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x248(%rbp)
	addq $0x2C8,%rbp
	leaq (L_222361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x349B
L_219942:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movl 0x2B0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2B0(%rbp)
	movq $0x3,0x2B8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_219943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x347C
L_219817:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movl 0x308(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x308(%rbp)
	movq $0x3,0x310(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x318(%rbp)
	addq $0x308,%rbp
	leaq (L_219818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x34BE
L_221276:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x280(%rbp)
	movq 0x278(%rbp),%r14
	movq %r14,0x288(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_221277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x350C
L_221170:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221171
L_221176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221177
.p2align 0x4
.long 0x350F
L_221177:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221171:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x250(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x288(%rbp)
	movl $0x2,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x35B7
L_222361:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movl 0x2C8(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_222362
L_222382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_222383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_222383
.p2align 0x4
.long 0x35BA
L_222383:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_222362:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x30,%r12
	movq 0x258(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x240(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x248(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
	jmp L_222363
.p2align 0x4
.long 0x349C
L_219943:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq $0x3,0x2A8(%rbp)
	movq 0x2A0(%rbp),%r14
	movq %r14,0x2B0(%rbp)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_219944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x347D
L_219818:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x346E
L_221277:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221278
L_221307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221308
.p2align 0x4
.long 0x349E
L_221308:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221278:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221279
.p2align 0x4
.long 0x34CF
L_221279:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq %rax,0x270(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2459:
	cmpq $0x2,%r15
	jnl L_470787
L_221303:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470786
	cmpl $0x1,%r14d
	je L_470785
	jmp L_219965
.p2align 0x4
L_470785:
L_221306:
	movq 0x278(%rbp),%r14
L_221305:
	movq 0x270(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2459
.p2align 0x4
L_470786:
L_221304:
	movq (globalWord64+0x1260)(%rip),%r14
	jmp L_221305
.p2align 0x4
L_470787:
L_221280:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221281
L_221301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_221302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221302
.p2align 0x4
.long 0x349E
L_221302:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_221281:
	movq 0x270(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x258(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x217D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xE0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2127,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x278(%rbp)
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x80(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_470788
L_221282:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
L_221283:
	movq %r15,0x248(%rbp)
	decl 0x4C(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x250(%rbp)
	jmp loop_2441
.p2align 0x4
L_470788:
L_221284:
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x250(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x258(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x260(%rbp)
	movq %r13,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_221285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x350D
L_221172:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221173
L_221174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221175
.p2align 0x4
.long 0x350E
L_221175:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221173:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalWord64+0x1290)(%rip),%r14
	movq %r14,0x10(%r15)
	jmp L_221162
.p2align 0x4
.long 0x349D
L_219944:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219945
L_219960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_219961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219961
.p2align 0x4
.long 0x349F
L_219961:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_219945:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x290(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x260(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	cmpq $0x1,0x258(%rbp)
	je L_470795
L_219946:
	movq %r13,0x268(%rbp)
	movq %r15,0x260(%rbp)
	movq $0x1,0x270(%rbp)
.p2align 0x4,,0x7
L_219947:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470794
.p2align 0x4,,0x7
L_219948:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x260(%rbp),%r14
	cmpq $0x1,%r14
	je L_470792
L_219949:
	movq %r15,0x270(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x260(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_219947
.p2align 0x4
L_470792:
L_219950:
	movq 0x268(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
.p2align 0x4,,0x7
L_219951:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470793
.p2align 0x4,,0x7
L_219952:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je adds_0
L_219953:
	movq %r15,0x268(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x260(%rbp)
	jmp L_219951
.p2align 0x4
L_470793:
L_219955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_219956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219956
.p2align 0x4
.long 0x3495
L_219956:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_219952
.p2align 0x4
L_470794:
L_219957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_219958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219958
.p2align 0x4
.long 0x349E
L_219958:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	jmp L_219948
.p2align 0x4
L_470795:
L_219959:
	movq %r14,%r15
	jmp adds_0
.p2align 0x4
.long 0x347E
L_219819:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x34BE
L_221285:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movl 0x288(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x288(%rbp)
	movq $0x3,0x290(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x347F
L_219820:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x2B0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x2A8(%rbp)
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x34BE
L_221286:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x288(%rbp)
	movq $0x1,0x290(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x288,%rbp
	leaq (L_221287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3480
L_219821:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2F0(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x34BE
L_221287:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221288
L_221299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221300
.p2align 0x4
.long 0x34A3
L_221300:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221288:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x280(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x290(%rbp)
	addq $0x290,%rbp
	leaq (L_221289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x3481
L_219822:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x350A
L_221289:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movl 0x290(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3482
L_219823:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x298(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219824
L_220049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220050
.p2align 0x4
.long 0x34B4
L_220050:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219824:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2F8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1458
.p2align 0x4
.long 0x350B
L_221290:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq %r15,0x290(%rbp)
	movq $0x3,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x290,%rbp
	leaq (L_221291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3483
L_219825:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x2F8(%rbp),%r14
	movq %r14,0x298(%rbp)
	movq 0x2C0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jnz L_470802
L_220041:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%rsi
	decq %rsi
	jo L_219597
L_220042:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	imulq %r14,%rsi
	addq $0x7,%r15
	addq %r14,%r15
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x2A8(%rbp)
	addq $0x0,%r15
	jc L_470800
L_220044:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_220045
L_220047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220048
.p2align 0x4
.long 0x34B3
L_220048:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_220045:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x2A8(%rbp),%rsi
	movq 0x290(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_220046:
	movq %rax,0x290(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_219827:
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_470800:
L_220043:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_470802:
L_219826:
	notq %r15
	orq $0x1,%r15
	movq %r15,0x290(%rbp)
	jmp L_219827
.p2align 0x4
.long 0x350C
L_221291:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x258(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221292
L_221297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_221298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221298
.p2align 0x4
.long 0x350F
L_221298:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_221292:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x248(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x288(%rbp)
	movl $0x2,0x290(%rbp)
	addq $0x288,%rbp
	leaq (L_221293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x3484
L_219828:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x2F0(%rbp)
	movq $0x3,0x2F8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x350D
L_221293:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_221294
L_221295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_221296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_221296
.p2align 0x4
.long 0x350E
L_221296:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_221294:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalWord64+0x1290)(%rip),%r14
	movq %r14,0x10(%r15)
	jmp L_221283
.p2align 0x4
.long 0x3485
L_219829:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq %r15,0x2F0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3486
L_219830:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219831
L_220039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220040
.p2align 0x4
.long 0x34B2
L_220040:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219831:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x298(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x2C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3487
L_219832:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3488
L_219833:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219834
L_220037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220038
.p2align 0x4
.long 0x34B1
L_220038:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219834:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x298(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_219835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219835
.p2align 0x4
.long 0x3489
L_219835:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq %rax,0x2B0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2442:
	cmpq $0x2,%r15
	jnl L_470808
L_220033:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470807
	cmpl $0x1,%r14d
	je L_470806
	jmp L_219965
.p2align 0x4
L_470806:
L_220036:
	movq 0x2A0(%rbp),%r14
L_220035:
	movq 0x2B0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2442
.p2align 0x4
L_470807:
L_220034:
	movq 0x288(%rbp),%r14
	jmp L_220035
.p2align 0x4
L_470808:
L_219836:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219837
L_220031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220032
.p2align 0x4
.long 0x34B0
L_220032:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219837:
	movq 0x2B0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x348A
L_219838:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219839
L_220029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220030
.p2align 0x4
.long 0x34AF
L_220030:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219839:
	movq $0x2179,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2B8(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x2B0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2C0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x270(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
.long 0x348B
L_219840:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x280(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219841
L_220027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220028
.p2align 0x4
.long 0x34AE
L_220028:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219841:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x211B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x290(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x2D8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2F8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x348C
L_219842:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x348D
L_219843:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movl 0x2F0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219844
L_220025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220026
.p2align 0x4
.long 0x34AD
L_220026:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219844:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x2A0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_219845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219845
.p2align 0x4
.long 0x348E
L_219845:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq %rax,0x2A8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2443:
	cmpq $0x2,%r15
	jnl L_470815
L_220021:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470814
	cmpl $0x1,%r14d
	je L_470813
	jmp L_219965
.p2align 0x4
L_470813:
L_220024:
	movq 0x290(%rbp),%r14
L_220023:
	movq 0x2A8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2443
.p2align 0x4
L_470814:
L_220022:
	movq 0x280(%rbp),%r14
	jmp L_220023
.p2align 0x4
L_470815:
L_219846:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219847
L_220019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220020
.p2align 0x4
.long 0x34AC
L_220020:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219847:
	movq 0x2A8(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x280(%rbp)
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_219848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x348F
L_219848:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	movq 0x2F0(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219849
L_220017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_220018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220018
.p2align 0x4
.long 0x34AB
L_220018:
	addq $0xFFFFFFFFFFFFFD10,%rbp
L_219849:
	movq $0x2171,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x2A8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x280(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2B0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x2E0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2E0,%rbp
	leaq (L_219850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3490
L_219850:
	addq $0xFFFFFFFFFFFFFD20,%rbp
	movq 0x2E0(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D8,%rbp
	leaq (L_219851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3491
L_219851:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movl 0x2D8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219852
L_220015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_220016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220016
.p2align 0x4
.long 0x34AA
L_220016:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_219852:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x84(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x280(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_219853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219853
.p2align 0x4
.long 0x3492
L_219853:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	movq %rax,0x290(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2444:
	cmpq $0x2,%r15
	jnl L_470821
L_220011:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470820
	cmpl $0x1,%r14d
	je L_470819
	jmp L_219965
.p2align 0x4
L_470819:
L_220014:
	movq 0x2B0(%rbp),%r14
L_220013:
	movq 0x290(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2444
.p2align 0x4
L_470820:
L_220012:
	movq 0x2C0(%rbp),%r14
	jmp L_220013
.p2align 0x4
L_470821:
L_219854:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219855
L_220009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_220010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220010
.p2align 0x4
.long 0x34A9
L_220010:
	addq $0xFFFFFFFFFFFFFD28,%rbp
L_219855:
	movq 0x290(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A0(%rbp)
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C8,%rbp
	leaq (L_219856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3493
L_219856:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219857
L_220007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_220008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220008
.p2align 0x4
.long 0x34A8
L_220008:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_219857:
	movq $0x2163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x290(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x280(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x278(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2B0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2C0(%rbp)
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2C8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x298(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x270(%rbp),%r15
	cmpq $0x1,%r15
	je L_470844
L_219858:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x270(%rbp)
	movq %r14,0x278(%rbp)
	movq $0x1,0x280(%rbp)
.p2align 0x4,,0x7
L_219859:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470843
.p2align 0x4,,0x7
L_219860:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	cmpq $0x1,%r14
	je L_470824
L_219861:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	jmp L_219859
.p2align 0x4
L_470824:
L_219862:
	movq 0x280(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x280(%rbp)
.p2align 0x4,,0x7
L_219863:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470842
.p2align 0x4,,0x7
L_219864:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	cmpq $0x1,%r14
	je L_470825
L_219865:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	jmp L_219863
.p2align 0x4
L_470825:
L_219866:
	movq %r15,0x270(%rbp)
L_219867:
	cmpq $0x1,0x270(%rbp)
	je L_470841
L_219868:
	movq $0x1,0x278(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq $0x1,0x290(%rbp)
.p2align 0x4,,0x7
L_219869:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470840
.p2align 0x4,,0x7
L_219870:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x278(%rbp),%r14
	cmpq $0x1,%r14
	je L_470826
L_219871:
	movq %r15,0x290(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x280(%rbp)
	jmp L_219869
.p2align 0x4
L_470826:
L_219872:
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
.p2align 0x4,,0x7
L_219873:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470839
.p2align 0x4,,0x7
L_219874:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	cmpq $0x1,%r14
	je L_470827
L_219875:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	jmp L_219873
.p2align 0x4
L_470827:
L_219877:
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x288(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x218B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x270(%rbp)
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	cmpq $0x1,%r15
	je L_219887
L_219878:
	movq 0x8(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x280(%rbp)
	movq $0x1,0x288(%rbp)
.p2align 0x4,,0x7
L_219879:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470837
.p2align 0x4,,0x7
L_219880:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x280(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x278(%rbp),%r14
	cmpq $0x1,%r14
	je L_470828
L_219881:
	movq %r15,0x288(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x278(%rbp)
	movq %r15,0x280(%rbp)
	jmp L_219879
.p2align 0x4
L_470828:
L_219882:
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x270(%rbp)
.p2align 0x4,,0x7
L_219883:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470836
.p2align 0x4,,0x7
L_219884:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x270(%rbp),%r14
	cmpq $0x1,%r14
	je L_470829
L_219885:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	jmp L_219883
.p2align 0x4
L_470829:
L_219886:
	movq %r15,0x270(%rbp)
L_219887:
	cmpq $0x1,0x270(%rbp)
	je L_219898
L_219888:
	movq 0x258(%rbp),%r15
	cmpq $0x1,%r15
	je L_470834
L_219889:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x258(%rbp)
	movq %r14,0x278(%rbp)
	movq $0x1,0x280(%rbp)
.p2align 0x4,,0x7
L_219890:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470833
.p2align 0x4,,0x7
L_219891:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x278(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470830
L_219892:
	movq %r15,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x278(%rbp)
	jmp L_219890
.p2align 0x4
L_470830:
L_219893:
	movq 0x280(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x278(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
.p2align 0x4,,0x7
L_219894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470832
.p2align 0x4,,0x7
L_219895:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x278(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x258(%rbp),%r14
	cmpq $0x1,%r14
	je L_470831
L_219896:
	movq %r15,0x278(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x258(%rbp)
	movq %r15,0x270(%rbp)
	jmp L_219894
.p2align 0x4
L_470831:
L_219897:
	movq %r15,0x258(%rbp)
	jmp L_219898
.p2align 0x4
L_470832:
L_219986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_219987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219987
.p2align 0x4
.long 0x34A3
L_219987:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	jmp L_219895
.p2align 0x4
L_470833:
L_219988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_219989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219989
.p2align 0x4
.long 0x34A2
L_219989:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	jmp L_219891
.p2align 0x4
L_470834:
L_219990:
	movq 0x270(%rbp),%r15
	movq %r15,0x258(%rbp)
	jmp L_219898
.p2align 0x4
L_470836:
L_219992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_219993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219993
.p2align 0x4
.long 0x34A2
L_219993:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	jmp L_219884
.p2align 0x4
L_470837:
L_219994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_219995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219995
.p2align 0x4
.long 0x34A1
L_219995:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	jmp L_219880
.p2align 0x4
L_470839:
L_219997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_219998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219998
.p2align 0x4
.long 0x34A4
L_219998:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_219874
.p2align 0x4
L_470840:
L_219999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_220000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220000
.p2align 0x4
.long 0x34A5
L_220000:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_219870
.p2align 0x4
L_470841:
L_220001:
	movq 0x2C0(%rbp),%r15
	jmp L_219877
.p2align 0x4
L_470842:
L_220002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_220003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220003
.p2align 0x4
.long 0x34A6
L_220003:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_219864
.p2align 0x4
L_470843:
L_220004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_220005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_220005
.p2align 0x4
.long 0x34A7
L_220005:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	jmp L_219860
.p2align 0x4
L_470844:
L_220006:
	movq 0x2C8(%rbp),%r15
	movq %r15,0x270(%rbp)
	jmp L_219867
