/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:27 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl simplifyCase_0
.hidden simplifyCase_0
simplifyCase_0:
L_78366:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78367
L_78693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78694
.p2align 0x4
.long 0x647
L_78694:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78367:
	movq 0x30(%rbp),%r14
	movq 0x78(%r14),%r15
	movq 0x70(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_405869
L_78688:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_78370
L_78690:
	testl %r10d,%r10d
	jz L_405866
L_78373:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_405862
L_78669:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_405861
L_78671:
	cmpl $0x1,%r11d
	jl L_405860
L_78672:
	cmpq $0x0,%r14
	jna L_405859
L_78674:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
L_78381:
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_78382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405859:
L_78379:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405860:
L_78668:
	movq (globalObjptr+0x1F10)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405861:
L_78370:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405862:
L_78374:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_78370
L_78376:
	cmpl $0x1,%r11d
	jl L_78668
L_78377:
	cmpq $0x0,%r14
	jna L_78379
L_78380:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	jmp L_78381
.p2align 0x4
L_405866:
L_78677:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_405867
L_78678:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_78679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405867:
L_78687:
	movq $0x1,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405869:
L_78368:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_78370
L_78371:
	testl %r10d,%r10d
	jz L_78677
	jmp L_78373
.p2align 0x4
.long 0x65F
L_78382:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78383
L_78665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78666
.p2align 0x4
.long 0x7F5
L_78666:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78383:
	movslq 0x68(%rbp),%r15
	movq 0x48(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78385:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x18(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%ecx
	movslq %ecx,%r14
	cmpq %r9,%r14
	jne L_78370
L_78387:
	testl %ecx,%ecx
	jnz L_78389
L_78591:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405905
L_78649:
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_78370
L_78651:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_938:
	cmpl %ebx,%ecx
	je L_405900
L_78652:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_78379
L_78654:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x60(%rbp),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_405874
L_78659:
	incl %ebx
	jo L_405873
L_78660:
	jmp loop_938
.p2align 0x4
L_405873:
L_78467:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405874:
L_78655:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78389
L_78657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78658
.p2align 0x4
.long 0x1006
L_78658:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78389:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_78390:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_217
L_78449:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13F6,%r15
	je L_405894
	cmpq $0x13F7,%r15
	je L_405884
x_217:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2056,%r14
	je L_405875
L_78448:
	movq 0x40(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%r15),%r15
	movq %r15,0x20(%rbp)
	movl %r14d,0x48(%rbp)
	jmp normal_18
.p2align 0x4
L_405875:
L_78391:
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
cantSimplify_0:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%r15),%r13
	movl $0x1,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405882
L_78418:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r14
	movq %r15,0x18(%rbp)
	jne L_78370
L_78420:
	testq %r11,%r11
	jz L_405880
L_78421:
	cmpq $0x7FFFFFFF,%r11
	ja L_405879
L_78422:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78423
L_78444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78445
.p2align 0x4
.long 0x4E0
L_78445:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78423:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78424
.p2align 0x4
.long 0x4E0
L_78424:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_78425:
	movq $0x0,0x30(%rbp)
loop_934:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jl L_405877
L_78426:
	movq 0x28(%rbp),%r14
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x240F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405876
L_78427:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
L_78398:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_78399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405876:
L_78428:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_78410:
	movq $0x1D83,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405877:
L_78429:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_78430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405879:
L_78446:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405880:
L_78447:
	movq (globalObjptr+0x1F20)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_78425
.p2align 0x4
L_405882:
L_78392:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_78370
L_78394:
	movl %r13d,0x30(%rbp)
	movq $0x39F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_405884:
L_78529:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movq 0x18(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1207,%r13
	jne x_217
L_78530:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r10
	cmpq %r10,%r13
	jne L_78370
L_78532:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_936:
	cmpl %ebx,%ecx
	je L_405888
L_78533:
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_78379
L_78535:
	movq 0x0(%r11,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r14)
	je L_405886
L_78536:
	incl %ebx
	jo L_78467
L_78537:
	jmp loop_936
.p2align 0x4
L_405886:
L_78538:
	movq %r15,0x10(%rbp)
	movq %r8,%r15
doit_15:
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_78539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405888:
L_78567:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78568
L_78589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78590
.p2align 0x4
.long 0x10E1
L_78590:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78568:
	cmpq $0x1,0x10(%rbp)
	je L_405889
L_78569:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405889:
L_78571:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_405890
L_78588:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405890:
L_78572:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405891
L_78587:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x3669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405891:
L_78573:
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_405894:
L_78450:
	movq 0x0(%r13),%r15
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	jne L_78451
L_78452:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
L_78453:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_78451
L_78454:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_405895
L_78455:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405895:
L_78451:
	movq (globalObjptr+0x1F18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405900:
L_78661:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78606
L_78663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78664
.p2align 0x4
.long 0x10E3
L_78664:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_78606:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_78610
L_78607:
	movq 0x60(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_78389
L_78610:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_78611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405905:
L_78592:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_78370
L_78594:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_937:
	cmpl %ecx,%ebx
	je L_405910
L_78595:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_78379
L_78597:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x60(%rbp),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_405907
L_78602:
	incl %ebx
	jo L_78467
L_78603:
	jmp loop_937
.p2align 0x4
L_405907:
L_78598:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78389
L_78600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78601
.p2align 0x4
.long 0x1006
L_78601:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_78389
.p2align 0x4
L_405910:
L_78604:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78606
L_78647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78648
.p2align 0x4
.long 0x10E3
L_78648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78606
.p2align 0x4
.long 0x10E4
L_78679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78680
L_78685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78686
.p2align 0x4
.long 0x10E5
L_78686:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78680:
	movslq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78682:
	movq 0x0(%r13,%r15,8),%r11
L_78683:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_405924
L_78684:
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r14
	movq 0x10(%r11),%r11
	movq %r11,%r15
tryToEliminate_0:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movl %ecx,0x0(%r13)
	movl $0x0,0x4(%r13)
	movslq %ecx,%r15
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78618:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jz L_405921
L_78619:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78621:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_78467
L_78622:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_405917
L_78640:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405917:
L_78623:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405918
L_78639:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x3669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405918:
L_78624:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movb $0x11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_405921:
L_78641:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2056,%r14
	je L_405922
L_78643:
	movq 0x40(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%r15),%r15
	movq %r15,0x20(%rbp)
	movl %r14d,0x48(%rbp)
	jmp normal_18
.p2align 0x4
L_405922:
L_78642:
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp cantSimplify_0
.p2align 0x4
L_405924:
L_78404:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E4
L_78399:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78400
L_78413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78414
.p2align 0x4
.long 0xBC1
L_78414:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78400:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78402:
	movq 0x0(%r14,%r15,8),%r13
L_78403:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78405:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_78406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x10D8
L_78430:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78431
L_78442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78443
.p2align 0x4
.long 0x10DB
L_78443:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78431:
	movslq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78433:
	movq 0x0(%r14,%r15,8),%r13
L_78434:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78435:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_78436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x65C
L_78395:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78396
L_78416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78417
.p2align 0x4
.long 0x63D
L_78417:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78396:
	movq $0x240D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405933
L_78397:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_78398
.p2align 0x4
L_405933:
L_78415:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_78410
.p2align 0x4
.long 0x4F4
L_78539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78540
L_78565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78566
.p2align 0x4
.long 0x10DD
L_78566:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_78540:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78542:
	movq 0x0(%r14,%r15,8),%r13
L_78543:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78544:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78546:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_78467
L_78547:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_405935
L_78564:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405935:
L_78548:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405936
L_78563:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x9,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405936:
L_78549:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x10E0
L_78570:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r14,0x10(%rbp)
	jmp doit_15
.p2align 0x4
.long 0x1
L_78582:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_78583:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_78574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_78583
L_78575:
	movq 0x10(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0xF5B
L_78456:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78457
L_78527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78528
.p2align 0x4
.long 0xBD2
L_78528:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78457:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x50(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_78370
L_78459:
	movl $0x0,0x54(%rbp)
loop_935:
	movl 0x54(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	je L_405944
L_78460:
	movslq %r15d,%r14
	cmpq 0x48(%rbp),%r14
	jnb L_78379
L_78462:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_78463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_405944:
L_78506:
	cmpq $0x1,0x10(%rbp)
	je L_405945
L_78507:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405945:
L_78509:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x2054,%r13
	je L_405946
L_78526:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405946:
L_78510:
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_405947
L_78525:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	movq $0x3669,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405947:
L_78511:
	movq 0x8(%r11),%r14
	movq %r14,0x38(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movb $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x10E2
L_78611:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78612
L_78644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78645
.p2align 0x4
.long 0xE41
L_78645:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78612:
	movslq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78614:
	movq 0x0(%r13,%r15,8),%r11
L_78615:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_78404
L_78616:
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r14
	movq 0x10(%r11),%r11
	movq %r11,%r15
	jmp tryToEliminate_0
.p2align 0x4
.long 0x50E
L_78633:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78634:
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_78635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
.long 0x4A8
L_78625:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_78634
L_78626:
	movq 0x18(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x50(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x64F
L_78406:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78407
L_78411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78412
.p2align 0x4
.long 0x651
L_78412:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78407:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78409:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r11
	movq 0x18(%rbp),%r14
	movq %r11,%r15
	jmp L_78410
.p2align 0x4
.long 0x10D9
L_78436:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78437
L_78440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_78441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78441
.p2align 0x4
.long 0x10DA
L_78441:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_78437:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78439:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_934
.p2align 0x4
.long 0x787
L_78558:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78559:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x4A9
L_78550:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_78559
L_78551:
	movq 0x20(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_78552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x2
L_78576:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78577
L_78584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78585
.p2align 0x4
.long 0x982
L_78585:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78577:
	movslq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78579:
	movq 0x0(%r14,%r15,8),%r13
L_78580:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78581:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x10DC
L_78463:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78464
L_78504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_78505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78505
.p2align 0x4
.long 0x10DF
L_78505:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_78464:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_78466
L_78469:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78470
L_78502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_78503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78503
.p2align 0x4
.long 0x10DE
L_78503:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_78470:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_78471:
	testl %eax,%eax
	jz L_405962
L_78473:
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x60(%rbp),%r15
doit_14:
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_78474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_405962:
L_78466:
	movl 0x54(%rbp),%r15d
	incl %r15d
	jo L_78467
L_78468:
	movl %r15d,0x54(%rbp)
	jmp loop_935
.p2align 0x4
.long 0x10E0
L_78508:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r14,0x10(%rbp)
	jmp doit_14
.p2align 0x4
.long 0x1
L_78520:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_78521:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_78512:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_78521
L_78513:
	movq 0x10(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x50E
L_78635:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0xAA4
L_78627:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78628
L_78636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78637
.p2align 0x4
.long 0x9AD
L_78637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_78628:
	movslq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78630:
	movq 0x0(%r14,%r15,8),%r13
L_78631:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78632:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_78633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x70E
L_78552:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78553
L_78560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78561
.p2align 0x4
.long 0x70F
L_78561:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_78553:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78555:
	movq 0x0(%r14,%r15,8),%r13
L_78556:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78557:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_78558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x4F4
L_78474:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78475
L_78500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78501
.p2align 0x4
.long 0x10DD
L_78501:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_78475:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78477:
	movq 0x0(%r14,%r15,8),%r13
L_78478:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78479:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_78379
L_78481:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_78467
L_78482:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_405974
L_78499:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_405974:
L_78483:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405975
L_78498:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x9,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405975:
L_78484:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x2
L_78514:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78515
L_78522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78523
.p2align 0x4
.long 0x982
L_78523:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78515:
	movslq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78517:
	movq 0x0(%r14,%r15,8),%r13
L_78518:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78519:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x787
L_78493:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78494:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x4A9
L_78485:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_78494
L_78486:
	movq 0x20(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_78487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x70E
L_78487:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78488
L_78495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78496
.p2align 0x4
.long 0x70F
L_78496:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_78488:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78379
L_78490:
	movq 0x0(%r14,%r15,8),%r13
L_78491:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78404
L_78492:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_78493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.text
.p2align 0x4
.globl deleteLabelMeaning_1
.hidden deleteLabelMeaning_1
deleteLabelMeaning_1:
loopS_9:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78695
L_78748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_78749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78749
.p2align 0x4
.long 0x460
L_78749:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_78695:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%ecx
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
.p2align 0x4,,0x7
loop_939:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78697
L_78698:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_405998
L_78700:
	movl %r13d,0x0(%r14,%r15,4)
	testl %r13d,%r13d
	jnz L_405997
L_78702:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_405996
	cmpq $0x2,%r15
	je L_405993
L_78703:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEDF,%r14
	je L_405992
	cmpq $0xEE0,%r14
	je L_405991
	cmpq $0xEE1,%r14
	je L_405988
L_78704:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405988:
L_78707:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78708
L_78720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78721
.p2align 0x4
.long 0x63B
L_78721:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78708:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_405989
L_78719:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x10,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_405989:
L_78709:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x3617,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xA,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_405991:
L_78706:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%ecx
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_939
.p2align 0x4
L_405992:
L_78705:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405993:
L_78723:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78724
L_78746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78747
.p2align 0x4
.long 0xDD5
L_78747:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78724:
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405994
L_78726:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq $0x36C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq $0x1E,0x30(%rbp)
	movq $0x1B,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_78727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_405994:
L_78697:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405996:
L_78722:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405997:
L_78701:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405998:
L_78699:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x600
L_78710:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406001
L_78711:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_78712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406001:
L_78718:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AA
L_78727:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78728:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_78729
L_78730:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC2,%r14
	jne L_406006
L_78731:
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_406005
	cmpq $0x2,%r14
	je L_406004
L_78732:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406003
	cmpq $0x2,%r15
	je L_406002
L_78733:
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_78734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406002:
L_78743:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406003:
L_78742:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406004:
L_78745:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406005:
L_78744:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406006:
L_78729:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_78712:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_78697
L_78714:
	movq 0x0(%r15,%r14,8),%r13
L_78715:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_406008
L_78717:
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	jmp loop_939
.p2align 0x4
L_406008:
L_78716:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71F
L_78734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_78697
L_78736:
	movq 0x0(%r15,%r14,8),%r13
L_78737:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78716
L_78738:
	movslq 0x0(%r13),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78697
L_78740:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_78699
L_78741:
	movl %r13d,0x0(%r14,%r15,4)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreachFuncLabelVar_1
.hidden foreachFuncLabelVar_1
foreachFuncLabelVar_1:
L_78750:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_79539
L_78751:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406104
L_78752:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406103
L_78753:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_406102
	cmpq $0xEBF,%r14
	je L_406101
	cmpq $0xEC0,%r14
	je L_406100
	cmpq $0xEC1,%r14
	je L_406058
	cmpq $0xEC2,%r14
	je L_406015
	cmpq $0xEC3,%r14
	je L_406014
L_78754:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_78755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406014:
L_79311:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_79312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406015:
L_79157:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x2C,%rax
	ja L_406016
	jmp *jumpTable_170(,%rax,8)
.data
.p2align 0x4
jumpTable_170:
.quad L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_79165,L_79165,L_79165,L_406054,L_406021
.text
.p2align 0x4
L_406016:
	movq %r14,%r15
L_79158:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x15BD,%r13
	je L_406020
	cmpq $0x15BE,%r13
	je L_406019
	cmpq $0x15BF,%r13
	je L_406018
	cmpq $0x15C0,%r13
	je L_406017
L_79159:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_406017:
L_79263:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_406018:
L_79256:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_406019:
L_79200:
	movq %r15,0x58(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406020:
L_79186:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_406021:
L_79165:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_79172
	cmpq $0x2,%r15
	je L_406022
L_79166:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1434
.p2align 0x4
L_406022:
L_79172:
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406054:
	movq %r14,%r15
	jmp L_79158
.p2align 0x4
L_406058:
L_78970:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x2E,%rax
	ja L_406059
	jmp *jumpTable_171(,%rax,8)
.data
.p2align 0x4
jumpTable_171:
.quad L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_78975,L_78971,L_78975,L_78975,L_406062
.text
.p2align 0x4
L_406059:
L_78971:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1AA6,%r14
	je L_406061
	cmpq $0x1AA7,%r14
	je L_406060
L_78972:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_406060:
L_79110:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_406061:
L_79093:
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406062:
L_78975:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_406063
L_79084:
	movq 0x0(%r14),%r15
L_79085:
	movq %r15,0x40(%rbp)
	movq $0x366F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_406063:
L_78976:
	movq 0x8(%r14),%r15
L_78977:
	movq %r15,0x40(%rbp)
	movq $0x361F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xE,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_406100:
L_78865:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_78866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406101:
L_78864:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406102:
L_78863:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x351B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406103:
L_79538:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406104:
L_79539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79540
.p2align 0x4
.long 0x4AF
L_79540:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_78752
.p2align 0x4
.long 0x4E6
L_78755:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78756
L_78861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78862
.p2align 0x4
.long 0x4E9
L_78862:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_78756:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_406106
	jmp *jumpTable_172(,%rax,8)
.data
.p2align 0x4
jumpTable_172:
.quad L_406157,L_406156,L_406155,L_78757,L_406153,L_406152,L_406151,L_78757,L_406150,L_406149
.text
.p2align 0x4
L_406106:
L_78757:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_406107
	jmp *jumpTable_173(,%rax,8)
.data
.p2align 0x4
jumpTable_173:
.quad L_406148,L_406147,L_406146,L_406145,L_406144,L_406143,L_406142,L_406141,L_406140,L_406139,L_406128,L_406127,L_406126,L_406125,L_406124,L_406123,L_406122,L_406121,L_406120,L_406119,L_406118,L_406117,L_406116,L_406115,L_406114,L_406113,L_406112,L_406111,L_406110,L_406109
.text
.p2align 0x4
L_406107:
L_78758:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_406108
L_78760:
	movl %r15d,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_406108:
L_78759:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406109:
L_78852:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_406110:
L_78848:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_406111:
L_78847:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1435
.p2align 0x4
L_406112:
L_78846:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1436
.p2align 0x4
L_406113:
L_78845:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1437
.p2align 0x4
L_406114:
L_78844:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1438
.p2align 0x4
L_406115:
L_78843:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1439
.p2align 0x4
L_406116:
L_78842:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1440
.p2align 0x4
L_406117:
L_78841:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1441
.p2align 0x4
L_406118:
L_78840:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1442
.p2align 0x4
L_406119:
L_78837:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_78838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_406120:
L_78827:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406121:
L_78826:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_406122:
L_78825:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_406123:
L_78824:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_406124:
L_78816:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406125:
L_78815:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1443
.p2align 0x4
L_406126:
L_78814:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_11
.p2align 0x4
L_406127:
L_78810:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_406128:
L_78784:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_406138
L_78787:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_940:
	cmpl %ecx,%ebx
	je L_406132
L_78788:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_406131
L_78791:
	movq 0x10(%rbp),%r11
	movq 0x0(%r14,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	je L_406130
L_78792:
	incl %ebx
	jo L_78759
L_78793:
	jmp loop_940
.p2align 0x4
L_406130:
L_78794:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406131:
L_78790:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406132:
L_78795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78796
L_78808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78809
.p2align 0x4
.long 0x2C
L_78809:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78796:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_78803
L_78797:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_78798:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_406135
L_78799:
	cmpq $0x1,%r15
	je L_406133
L_78800:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_78798
.p2align 0x4
L_406133:
L_78801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78803
L_78804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78805
.p2align 0x4
.long 0x2C
L_78805:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78803:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406135:
L_78806:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406138:
L_78786:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406139:
L_78783:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1444
.p2align 0x4
L_406140:
L_78782:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1445
.p2align 0x4
L_406141:
L_78781:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1446
.p2align 0x4
L_406142:
L_78780:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1447
.p2align 0x4
L_406143:
L_78769:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_406144:
L_78768:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1448
.p2align 0x4
L_406145:
L_78767:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1449
.p2align 0x4
L_406146:
L_78766:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1450
.p2align 0x4
L_406147:
L_78765:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1451
.p2align 0x4
L_406148:
L_78762:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_78763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_406149:
L_78860:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406150:
L_78859:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406151:
L_78858:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406152:
L_78857:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406153:
L_78856:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406155:
L_78855:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406156:
L_78854:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406157:
L_78853:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x518
L_79312:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79313
L_79536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79537
.p2align 0x4
.long 0x63B
L_79537:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79313:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_406159
	jmp *jumpTable_174(,%rax,8)
.data
.p2align 0x4
jumpTable_174:
.quad L_79330,L_79330,L_79330,L_79314,L_79330,L_79330,L_79330,L_79314,L_79330,L_79330
.text
.p2align 0x4
L_406159:
L_79314:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_406160
	jmp *jumpTable_175(,%rax,8)
.data
.p2align 0x4
jumpTable_175:
.quad L_406255,L_406254,L_406253,L_406252,L_406251,L_406250,L_406249,L_406248,L_406247,L_406246,L_406181,L_406180,L_406179,L_406178,L_406177,L_406176,L_406175,L_406174,L_406173,L_406172,L_406171,L_406170,L_406169,L_406168,L_406167,L_406166,L_406165,L_406164,L_406163,L_406162
.text
.p2align 0x4
L_406160:
L_79315:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_78759
L_79316:
	movl %r15d,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_406162:
L_79527:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_8
.p2align 0x4
L_406163:
L_79523:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_406164:
L_79522:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_406165:
L_79521:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1436
.p2align 0x4
L_406166:
L_79520:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
L_406167:
L_79519:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
L_406168:
L_79518:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1439
.p2align 0x4
L_406169:
L_79517:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1440
.p2align 0x4
L_406170:
L_79516:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1441
.p2align 0x4
L_406171:
L_79515:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1442
.p2align 0x4
L_406172:
L_79509:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_406173:
L_79500:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406174:
L_79499:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_2
.p2align 0x4
L_406175:
L_79498:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_9
.p2align 0x4
L_406176:
L_79497:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
L_406177:
L_79489:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406178:
L_79488:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1443
.p2align 0x4
L_406179:
L_79487:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_11
.p2align 0x4
L_406180:
L_79483:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_406181:
L_79453:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_78786
L_79455:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_946:
	cmpl %ecx,%ebx
	je L_406238
L_79456:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_78790
L_79458:
	movq 0x20(%rbp),%r13
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r13)
	je L_406183
L_79459:
	incl %ebx
	jo L_78759
L_79460:
	jmp loop_946
.p2align 0x4
L_406183:
L_79461:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79330
L_79463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79464
.p2align 0x4
.long 0x4E9
L_79464:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_79330:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_406184
	jmp *jumpTable_176(,%rax,8)
.data
.p2align 0x4
jumpTable_176:
.quad L_406235,L_406234,L_406233,L_79331,L_406231,L_406230,L_406229,L_79331,L_406228,L_406227
.text
.p2align 0x4
L_406184:
L_79331:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_406185
	jmp *jumpTable_177(,%rax,8)
.data
.p2align 0x4
jumpTable_177:
.quad L_406226,L_406225,L_406224,L_406223,L_406222,L_406221,L_406220,L_406219,L_406218,L_406217,L_406206,L_406205,L_406204,L_406203,L_406202,L_406201,L_406200,L_406199,L_406198,L_406197,L_406196,L_406195,L_406194,L_406193,L_406192,L_406191,L_406190,L_406189,L_406188,L_406187
.text
.p2align 0x4
L_406185:
L_79332:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_79318:
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_78759
L_79319:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_406187:
L_79424:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_406188:
L_79419:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_79420:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_406189:
L_79418:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1435
.p2align 0x4
L_406190:
L_79417:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1436
.p2align 0x4
L_406191:
L_79416:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1437
.p2align 0x4
L_406192:
L_79415:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1438
.p2align 0x4
L_406193:
L_79414:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1439
.p2align 0x4
L_406194:
L_79413:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1440
.p2align 0x4
L_406195:
L_79412:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1441
.p2align 0x4
L_406196:
L_79411:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1442
.p2align 0x4
L_406197:
L_79407:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_79408:
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_406198:
L_79398:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_79399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406199:
L_79397:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_406200:
L_79396:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_406201:
L_79395:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_406202:
L_79386:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_79387:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406203:
L_79385:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1443
.p2align 0x4
L_406204:
L_79384:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_11
.p2align 0x4
L_406205:
L_79379:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_79380:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_406206:
L_79354:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_79355:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_78786
L_79357:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_945:
	cmpl %ebx,%ecx
	je L_406210
L_79358:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_78790
L_79360:
	movq 0x0(%r15,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x10(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	je L_406208
L_79361:
	incl %ebx
	jo L_78759
L_79362:
	jmp loop_945
.p2align 0x4
L_406208:
L_79363:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406210:
L_79364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79365
L_79377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79378
.p2align 0x4
.long 0x2C
L_79378:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79365:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_79372
L_79366:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_79367:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_406213
L_79368:
	cmpq $0x1,%r15
	je L_406211
L_79369:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79367
.p2align 0x4
L_406211:
L_79370:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79372
L_79373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79374
.p2align 0x4
.long 0x2C
L_79374:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79372:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406213:
L_79375:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406217:
L_79353:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1444
.p2align 0x4
L_406218:
L_79352:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1445
.p2align 0x4
L_406219:
L_79351:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1446
.p2align 0x4
L_406220:
L_79350:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1447
.p2align 0x4
L_406221:
L_79338:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_79339:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_406222:
L_79337:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1448
.p2align 0x4
L_406223:
L_79336:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1449
.p2align 0x4
L_406224:
L_79335:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1450
.p2align 0x4
L_406225:
L_79334:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1451
.p2align 0x4
L_406226:
L_79333:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
L_79324:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_406227:
L_79432:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406228:
L_79431:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406229:
L_79430:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406230:
L_79429:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406231:
L_79428:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406233:
L_79427:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406234:
L_79426:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406235:
L_79425:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406238:
L_79465:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79466
L_79481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79482
.p2align 0x4
.long 0x638
L_79482:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79466:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_79473
L_79467:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_79468:
	movq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_406241
L_79469:
	cmpq $0x1,%r15
	je L_406239
L_79470:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79468
.p2align 0x4
L_406239:
L_79471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79473
L_79474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79475
.p2align 0x4
.long 0x520
L_79475:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79473:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_79355
.p2align 0x4
L_406241:
L_79476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79330
L_79478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79479
.p2align 0x4
.long 0x4E9
L_79479:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79330
.p2align 0x4
L_406246:
L_79452:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1444
.p2align 0x4
L_406247:
L_79451:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1445
.p2align 0x4
L_406248:
L_79450:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1446
.p2align 0x4
L_406249:
L_79449:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1447
.p2align 0x4
L_406250:
L_79438:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_406251:
L_79437:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1448
.p2align 0x4
L_406252:
L_79436:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1449
.p2align 0x4
L_406253:
L_79435:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1450
.p2align 0x4
L_406254:
L_79327:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1451
.p2align 0x4
L_406255:
L_79321:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
.long 0x558
L_79160:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79161
L_79184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79185
.p2align 0x4
.long 0x100C
L_79185:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79161:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79165
L_79162:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xF,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x558
L_79264:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79265
L_79275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79276
.p2align 0x4
.long 0x100C
L_79276:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79265:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406268
L_79266:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x7,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406268:
L_79269:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79165
L_79270:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xF,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x558
L_79257:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79258
L_79261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79262
.p2align 0x4
.long 0x100C
L_79262:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79258:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79165
L_79259:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x57B
L_79201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79202
L_79254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_79255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79255
.p2align 0x4
.long 0x5A0
L_79255:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_79202:
	movslq 0x10(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79204:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_79165
L_79205:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79207:
	salq $0x4,%r15
	movq 0x0(%r14,%r15,1),%r13
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x60(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x70(%rbp)
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x36EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r14,%r11
	jne L_78786
L_79209:
	movq $0x4371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xA8(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x359D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_79210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x558
L_79187:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79188
L_79198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79199
.p2align 0x4
.long 0x100C
L_79199:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79188:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406278
L_79189:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xC,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406278:
L_79192:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79165
L_79193:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x644
L_79167:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79168
L_79177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79178
.p2align 0x4
.long 0xE84
L_79178:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79168:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_79172
	cmpq $0x2,%r15
	je L_79172
L_79169:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1434
.p2align 0x4
.long 0x639
x_224:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78973
L_79091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79092
.p2align 0x4
.long 0x519
L_79092:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78973:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_78975
L_79086:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x38(%rbp)
	movb $0x8,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x67A
L_79111:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79112
L_79119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79120
.p2align 0x4
.long 0x638
L_79120:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79112:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_78975
L_79114:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x67D
L_79094:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79095
L_79108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_79109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79109
.p2align 0x4
.long 0xBDB
L_79109:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_79095:
	movq 0x48(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x38(%rbp)
	jl L_406289
L_79096:
	cmpl $0x2,%r11d
	jne L_78975
L_79098:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406289:
L_79107:
	movq (globalObjptr+0x1F30)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x497
L_78978:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78979
L_79082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79083
.p2align 0x4
.long 0x49A
L_79083:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78979:
	cmpq $0x1,0x20(%rbp)
	je L_406343
L_78980:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_406291
	jmp *jumpTable_178(,%rax,8)
.data
.p2align 0x4
jumpTable_178:
.quad L_406342,L_406341,L_406340,L_78981,L_406338,L_406337,L_406336,L_78981,L_406335,L_406334
.text
.p2align 0x4
L_406291:
L_78981:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_406292
	jmp *jumpTable_179(,%rax,8)
.data
.p2align 0x4
jumpTable_179:
.quad L_406333,L_406332,L_406331,L_406330,L_406329,L_406328,L_406327,L_406326,L_406325,L_406324,L_406313,L_406312,L_406311,L_406310,L_406309,L_406308,L_406307,L_406306,L_406305,L_406304,L_406303,L_406302,L_406301,L_406300,L_406299,L_406298,L_406297,L_406296,L_406295,L_406294
.text
.p2align 0x4
L_406292:
L_78982:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_78759
L_78983:
	movl %r15d,0x0(%r13)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (x_225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_406294:
L_79072:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_8
.p2align 0x4
L_406295:
L_79068:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (x_227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_406296:
L_79067:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1435
.p2align 0x4
L_406297:
L_79066:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1436
.p2align 0x4
L_406298:
L_79065:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1437
.p2align 0x4
L_406299:
L_79064:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1438
.p2align 0x4
L_406300:
L_79063:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1439
.p2align 0x4
L_406301:
L_79062:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1440
.p2align 0x4
L_406302:
L_79061:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1441
.p2align 0x4
L_406303:
L_79060:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1442
.p2align 0x4
L_406304:
L_79057:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_406305:
L_79048:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406306:
L_79047:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp goto_2
.p2align 0x4
L_406307:
L_79046:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_9
.p2align 0x4
L_406308:
L_79045:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_10
.p2align 0x4
L_406309:
L_79037:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406310:
L_79036:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp x_1443
.p2align 0x4
L_406311:
L_79035:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_11
.p2align 0x4
L_406312:
L_79031:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (x_226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_406313:
L_79007:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_78786
L_79009:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_942:
	cmpl %ecx,%ebx
	je L_406317
L_79010:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_78790
L_79012:
	movq 0x20(%rbp),%r11
	movq 0x0(%r14,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	je L_406315
L_79013:
	incl %ebx
	jo L_78759
L_79014:
	jmp loop_942
.p2align 0x4
L_406315:
L_79015:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406317:
L_79016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79017
L_79029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79030
.p2align 0x4
.long 0x982
L_79030:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79017:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_79024
L_79018:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_79019:
	movq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_406320
L_79020:
	cmpq $0x1,%r15
	je L_406318
L_79021:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79019
.p2align 0x4
L_406318:
L_79022:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79024
L_79025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79026
.p2align 0x4
.long 0x982
L_79026:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79024:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406320:
L_79027:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406324:
L_79006:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1444
.p2align 0x4
L_406325:
L_79005:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1445
.p2align 0x4
L_406326:
L_79004:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1446
.p2align 0x4
L_406327:
L_79003:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1447
.p2align 0x4
L_406328:
L_78992:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_78993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_406329:
L_78991:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1448
.p2align 0x4
L_406330:
L_78990:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1449
.p2align 0x4
L_406331:
L_78989:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1450
.p2align 0x4
L_406332:
L_78988:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1451
.p2align 0x4
L_406333:
L_78985:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_406334:
L_79080:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406335:
L_79079:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406336:
L_79078:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406337:
L_79077:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406338:
L_79076:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406340:
L_79075:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406341:
L_79074:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406342:
L_79073:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406343:
L_79081:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_78866:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78867
L_78968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78969
.p2align 0x4
.long 0x4E9
L_78969:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_78867:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_406345
	jmp *jumpTable_180(,%rax,8)
.data
.p2align 0x4
jumpTable_180:
.quad L_406396,L_406395,L_406394,L_78868,L_406392,L_406391,L_406390,L_78868,L_406389,L_406388
.text
.p2align 0x4
L_406345:
L_78868:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B51,%rax
	cmpq $0x1D,%rax
	ja L_406346
	jmp *jumpTable_181(,%rax,8)
.data
.p2align 0x4
jumpTable_181:
.quad L_406387,L_406386,L_406385,L_406384,L_406383,L_406382,L_406381,L_406380,L_406379,L_406378,L_406367,L_406366,L_406365,L_406364,L_406363,L_406362,L_406361,L_406360,L_406359,L_406358,L_406357,L_406356,L_406355,L_406354,L_406353,L_406352,L_406351,L_406350,L_406349,L_406348
.text
.p2align 0x4
L_406346:
L_78869:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_78759
L_78870:
	movl %r15d,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_406348:
L_78959:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_406349:
L_78955:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_406350:
L_78954:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1435
.p2align 0x4
L_406351:
L_78953:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1436
.p2align 0x4
L_406352:
L_78952:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1437
.p2align 0x4
L_406353:
L_78951:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1438
.p2align 0x4
L_406354:
L_78950:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1439
.p2align 0x4
L_406355:
L_78949:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1440
.p2align 0x4
L_406356:
L_78948:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1441
.p2align 0x4
L_406357:
L_78947:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1442
.p2align 0x4
L_406358:
L_78944:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_78945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_406359:
L_78935:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_406360:
L_78934:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_406361:
L_78933:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_406362:
L_78932:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_406363:
L_78924:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406364:
L_78923:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1443
.p2align 0x4
L_406365:
L_78922:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_11
.p2align 0x4
L_406366:
L_78918:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_406367:
L_78894:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_78786
L_78896:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_941:
	cmpl %ebx,%ecx
	je L_406371
L_78897:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_78790
L_78899:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x10(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	je L_406369
L_78900:
	incl %ebx
	jo L_78759
L_78901:
	jmp loop_941
.p2align 0x4
L_406369:
L_78902:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406371:
L_78903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78904
L_78916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78917
.p2align 0x4
.long 0x2C
L_78917:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78904:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_78911
L_78905:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_78906:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_406374
L_78907:
	cmpq $0x1,%r15
	je L_406372
L_78908:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_78906
.p2align 0x4
L_406372:
L_78909:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78911
L_78912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78913
.p2align 0x4
.long 0x2C
L_78913:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78911:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406374:
L_78914:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406378:
L_78893:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1444
.p2align 0x4
L_406379:
L_78892:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1445
.p2align 0x4
L_406380:
L_78891:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1446
.p2align 0x4
L_406381:
L_78890:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1447
.p2align 0x4
L_406382:
L_78879:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_406383:
L_78878:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1448
.p2align 0x4
L_406384:
L_78877:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1449
.p2align 0x4
L_406385:
L_78876:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1450
.p2align 0x4
L_406386:
L_78875:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1451
.p2align 0x4
L_406387:
L_78872:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_78873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_406388:
L_78967:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406389:
L_78966:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406390:
L_78965:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406391:
L_78964:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406392:
L_78963:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406394:
L_78962:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406395:
L_78961:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406396:
L_78960:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78761:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
x_220:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78849
L_78850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78851
.p2align 0x4
.long 0x5E6
L_78851:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78849:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_78838:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78839:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_78828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78829
L_78835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78836
.p2align 0x4
.long 0xBA6
L_78836:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78829:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_78831:
	movq 0x0(%r14,%r15,8),%r13
L_78832:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_406401
L_78834:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_406401:
L_78833:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_78817:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78818
L_78822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78823
.p2align 0x4
.long 0x5E8
L_78823:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_78818:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_406404
L_78819:
L_78820:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406404:
L_78821:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_78820
.p2align 0x4
.long 0x490
x_219:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78811
L_78812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78813
.p2align 0x4
.long 0x5E6
L_78813:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78811:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_78770:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78771
L_78778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78779
.p2align 0x4
.long 0x5E6
L_78779:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78771:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_406409
L_78772:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406408
L_78773:
	movq 0x18(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_406407
L_78774:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406407:
L_78775:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406408:
L_78776:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406409:
L_78777:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_78763:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78764:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
x_228:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r13),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_78759
L_79317:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_79318
.p2align 0x4
.long 0x4E6
L_79328:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79330
L_79433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79434
.p2align 0x4
.long 0x4E9
L_79434:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79330
.p2align 0x4
.long 0x4E3
x_233:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79524
L_79525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79526
.p2align 0x4
.long 0x520
L_79526:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79524:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_79420
.p2align 0x4
.long 0x4E3
L_79510:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79511
L_79513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79514
.p2align 0x4
.long 0x520
L_79514:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79511:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_78759
L_79512:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_79408
.p2align 0x4
.long 0x97F
L_79501:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79502
L_79507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79508
.p2align 0x4
.long 0x4F2
L_79508:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79502:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79504:
	movq 0x0(%r14,%r15,8),%r13
L_79505:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78833
L_79506:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x70A
L_79490:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79491
L_79495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79496
.p2align 0x4
.long 0x86F
L_79496:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79491:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_406420
L_79492:
L_79493:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_79387
.p2align 0x4
L_406420:
L_79494:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79493
.p2align 0x4
.long 0x4E3
x_232:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79484
L_79485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79486
.p2align 0x4
.long 0x520
L_79486:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79484:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_79380
.p2align 0x4
.long 0x1
x_229:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_79320:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
x_231:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79421
L_79422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79423
.p2align 0x4
.long 0x5E6
L_79423:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79421:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79409:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_79410:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_79399:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79400
L_79405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79406
.p2align 0x4
.long 0xBA6
L_79406:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79400:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79402:
	movq 0x0(%r14,%r15,8),%r13
L_79403:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78833
L_79404:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x511
L_79388:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79389
L_79393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79394
.p2align 0x4
.long 0x5E8
L_79394:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79389:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_406429
L_79390:
L_79391:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406429:
L_79392:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79391
.p2align 0x4
.long 0x490
x_230:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79381
L_79382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79383
.p2align 0x4
.long 0x5E6
L_79383:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79381:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_79340:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79341
L_79348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79349
.p2align 0x4
.long 0x5E6
L_79349:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79341:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_406434
L_79342:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406433
L_79343:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_406432
L_79344:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406432:
L_79345:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406433:
L_79346:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406434:
L_79347:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79325:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_79326:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97F
L_79439:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79440
L_79447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79448
.p2align 0x4
.long 0x638
L_79448:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79440:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_406439
L_79441:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_79330
L_79442:
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_79330
L_79443:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (globalObjptr+0x2030)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_79339
.p2align 0x4
L_406439:
L_79446:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r13,0x18(%rbp)
	jmp L_79339
.p2align 0x4
.long 0x491
L_79322:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_78759
L_79323:
	movl %r14d,0x0(%r15)
	movq 0x18(%rbp),%r15
	jmp L_79324
.p2align 0x4
.long 0x558
L_79163:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79165
L_79181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79182
.p2align 0x4
.long 0x57A
L_79182:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_79165
.p2align 0x4
.long 0xB9E
L_79267:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79269
L_79272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79273
.p2align 0x4
.long 0x100C
L_79273:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_79269
.p2align 0x4
.long 0x10E7
L_79210:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_406445
L_79211:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_79212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79212
.p2align 0x4
.long 0x10E8
L_79212:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_943:
	cmpq 0x90(%rbp),%r15
	jnl L_406444
L_79251:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_943
.p2align 0x4
L_406444:
L_79213:
	movq %r14,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_79214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
L_406445:
L_79252:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9E
L_79190:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79192
L_79195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79196
.p2align 0x4
.long 0x100C
L_79196:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_79192
.p2align 0x4
.long 0x462
L_79170:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79172
L_79173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79174
.p2align 0x4
.long 0x79A
L_79174:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_79172
.p2align 0x4
.long 0x639
L_79087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78975
L_79089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79090
.p2align 0x4
.long 0x498
L_79090:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_78975
.p2align 0x4
.long 0x639
L_79115:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78975
L_79117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79118
.p2align 0x4
.long 0x498
L_79118:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_78975
.p2align 0x4
.long 0x10E6
L_79099:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79100
L_79105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79106
.p2align 0x4
.long 0x73E
L_79106:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79100:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movslq 0x38(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79102:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_406450
L_79104:
	movq 0x0(%r14),%r15
	jmp L_79085
.p2align 0x4
L_406450:
L_79103:
	movq 0x8(%r14),%r15
	jmp L_78977
.p2align 0x4
.long 0x1
x_225:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78984:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
x_227:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79069
L_79070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79071
.p2align 0x4
.long 0x2C
L_79071:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79069:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79058:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_79059:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_79049:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79050
L_79055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79056
.p2align 0x4
.long 0x45F
L_79056:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79050:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_79052:
	movq 0x0(%r14,%r15,8),%r13
L_79053:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78833
L_79054:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x787
L_79038:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79039
L_79043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79044
.p2align 0x4
.long 0x721
L_79044:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_79039:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_406459
L_79040:
L_79041:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406459:
L_79042:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79041
.p2align 0x4
.long 0x2B
x_226:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79032
L_79033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79034
.p2align 0x4
.long 0x2C
L_79034:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79032:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_78993:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78994
L_79001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79002
.p2align 0x4
.long 0x2C
L_79002:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78994:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_406464
L_78995:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406463
L_78996:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_406462
L_78997:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406462:
L_78998:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406463:
L_78999:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406464:
L_79000:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_78986:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78987:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_221:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78871:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
x_223:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78956
L_78957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78958
.p2align 0x4
.long 0x5E6
L_78958:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78956:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_78945:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78946:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_78936:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78937
L_78942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78943
.p2align 0x4
.long 0xBA6
L_78943:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78937:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_78790
L_78939:
	movq 0x0(%r14,%r15,8),%r13
L_78940:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_78833
L_78941:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x511
L_78925:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78926
L_78930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78931
.p2align 0x4
.long 0x5E8
L_78931:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_78926:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_406473
L_78927:
L_78928:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406473:
L_78929:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_78928
.p2align 0x4
.long 0x490
x_222:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78919
L_78920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78921
.p2align 0x4
.long 0x5E6
L_78921:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78919:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_78880:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78881
L_78888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78889
.p2align 0x4
.long 0x5E6
L_78889:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78881:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_406478
L_78882:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406477
L_78883:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_406476
L_78884:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406476:
L_78885:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406477:
L_78886:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406478:
L_78887:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_78873:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_78759
L_78874:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10E9
L_79214:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79215
L_79249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_79250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79250
.p2align 0x4
.long 0x10F2
L_79250:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_79215:
	movq $0x359B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_79216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x10EA
L_79216:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79217
L_79247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79248
.p2align 0x4
.long 0x10F0
L_79248:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79217:
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_406485
L_79218:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_79219:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_78759
L_79220:
	cmpq $0x1,%r15
	je L_406482
L_79221:
	movq 0x8(%r15),%r15
	jmp L_79219
.p2align 0x4
L_406482:
L_79222:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79223
L_79244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79245
.p2align 0x4
.long 0x10F1
L_79245:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79223:
	movl 0x6C(%rbp),%ecx
L_79224:
	movl %ecx,0xB0(%rbp)
	movq $0x3E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_79225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_406485:
L_79246:
	xorl %ecx,%ecx
	jmp L_79224
.p2align 0x4
.long 0x10EB
L_79225:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79226
L_79242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79243
.p2align 0x4
.long 0x10F0
L_79243:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79226:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_78786
L_79228:
	movl %r13d,%r14d
	decl %r14d
	jo L_78759
L_79229:
	movl %r13d,0xB0(%rbp)
	movq $0x3E75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_79230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
.long 0x10EB
L_79230:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79231
L_79240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79241
.p2align 0x4
.long 0x10F0
L_79241:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79231:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2957,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x210F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x36E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x359D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_79232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x10EC
L_79232:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x90(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_79233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79233
.p2align 0x4
.long 0x10ED
L_79233:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_944:
	cmpq 0x90(%rbp),%r15
	jnl L_406491
L_79239:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_944
.p2align 0x4
L_406491:
L_79234:
	movq %r14,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_79235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
.long 0x10EE
L_79235:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79236
L_79237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_79238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79238
.p2align 0x4
.long 0x10EF
L_79238:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_79236:
	movq $0x359B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.text
.p2align 0x4
.globl get_75
.hidden get_75
get_75:
L_79541:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79542
L_79596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79597
.p2align 0x4
.long 0x460
L_79597:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_79542:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_406502
L_79544:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406501
L_79545:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_79547:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_406500
L_79588:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD36,%r10
	jne L_406499
L_79589:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_406496
L_79548:
	incl %ecx
	jo L_406495
L_79550:
	cmpq $0x1,%r14
	je L_406493
L_79551:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_79547
.p2align 0x4
L_406493:
L_79552:
L_79553:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406494
L_79555:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_234
L_79587:
	movl %ecx,0x0(%r15)
x_234:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406494:
L_79554:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406495:
L_79549:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406496:
L_79591:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79554
L_79592:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406497
L_79594:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406497:
L_79593:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406499:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79548
.p2align 0x4
L_406500:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79548
.p2align 0x4
L_406501:
L_79595:
	xorl %ecx,%ecx
	jmp L_79553
.p2align 0x4
L_406502:
L_79543:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79557:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_79558:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_79559:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF0A0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_79560:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_79561:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79562
L_79585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79586
.p2align 0x4
.long 0x4AF
L_79586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79562:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79563:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79549
L_79564:
	cmpq $0x1,%r14
	je L_406504
L_79565:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79563
.p2align 0x4
L_406504:
L_79566:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79567
L_79583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79584
.p2align 0x4
.long 0x4E7
L_79584:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79567:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406505
L_79568:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_122:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406505:
L_79582:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_122
.p2align 0x4
.long 0x1
rev_120:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406511
L_79569:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79570:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406510
.p2align 0x4,,0x7
L_79571:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406509
L_79572:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79570
.p2align 0x4
L_406509:
L_79574:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406510:
L_79579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79580
.p2align 0x4
.long 0x45C
L_79580:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79571
.p2align 0x4
L_406511:
L_79581:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79574
.p2align 0x4
.long 0x1
L_79575:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79576
L_79577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79578
.p2align 0x4
.long 0x452
L_79578:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79576:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1451
.hidden x_1451
x_1451:
L_79598:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79599
L_79644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79645
.p2align 0x4
.long 0x63D
L_79645:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79599:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x10F3
L_79600:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79601
L_79642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79643
.p2align 0x4
.long 0x9E4
L_79643:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79601:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406514
L_79602:
L_79603:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_406514:
L_79641:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79603
.p2align 0x4
.long 0xDEA
L_79604:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBE
L_79605:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406516
L_79606:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_406516:
L_79640:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F4
L_79607:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79608
L_79638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79639
.p2align 0x4
.long 0x10FB
L_79639:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79608:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406519
L_79609:
	cmpq $0x1,%r15
	je L_406517
L_79610:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406517:
L_79613:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406518
L_79614:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406518:
L_79617:
	movq $0x34B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406519:
L_79624:
	movq $0x36A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x7,0x0(%rbp)
	movq $0x7,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x10F5
L_79611:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79613
L_79634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79635
.p2align 0x4
.long 0x10FB
L_79635:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79613
.p2align 0x4
.long 0x10F4
L_79615:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79617
L_79631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79632
.p2align 0x4
.long 0x10FA
L_79632:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79617
.p2align 0x4
.long 0x10F6
L_79618:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79619
L_79629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79630
.p2align 0x4
.long 0xDE8
L_79630:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79619:
	movq $0x325F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x10F7
L_79620:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79621
L_79627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79628
.p2align 0x4
.long 0x10F9
L_79628:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79621:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xDE3
L_79622:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79624
L_79625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79626
.p2align 0x4
.long 0x10F8
L_79626:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79624
.text
.p2align 0x4
.globl x_1453
.hidden x_1453
x_1453:
L_79646:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79647
L_79700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79701
.p2align 0x4
.long 0x460
L_79701:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_79647:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_406536
L_79649:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_406535
L_79650:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_79652:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_406534
L_79692:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCA6,%r11
	jne L_406533
L_79693:
	movq 0x8(%r15),%r11
	cmpq 0x0(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_406530
L_79653:
	incl %ecx
	jo L_406529
L_79655:
	cmpq $0x1,%r14
	je L_406526
L_79656:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_79652
.p2align 0x4
L_406526:
L_79657:
L_79658:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406528
L_79660:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79662
L_79691:
	movl %ecx,0x0(%r15)
L_79662:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_406528:
L_79659:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406529:
L_79654:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406530:
L_79695:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79659
L_79696:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406531
L_79698:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406531:
L_79697:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406533:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_79653
.p2align 0x4
L_406534:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_79653
.p2align 0x4
L_406535:
L_79699:
	xorl %ecx,%ecx
	jmp L_79658
.p2align 0x4
L_406536:
L_79648:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79663:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_79664:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_79665:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_79666:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79667
L_79689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79690
.p2align 0x4
.long 0x4AF
L_79690:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79667:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79668:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79654
L_79669:
	cmpq $0x1,%r14
	je L_406538
L_79670:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79668
.p2align 0x4
L_406538:
L_79671:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79672
L_79687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79688
.p2align 0x4
.long 0x4E7
L_79688:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79672:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406539
L_79673:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_123:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406539:
L_79686:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_123
.p2align 0x4
.long 0x1
rev_121:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406545
L_79674:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406544
.p2align 0x4,,0x7
L_79676:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406543
L_79677:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79675
.p2align 0x4
L_406543:
L_79679:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406544:
L_79683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79684
.p2align 0x4
.long 0x45C
L_79684:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79676
.p2align 0x4
L_406545:
L_79685:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79679
.p2align 0x4
.long 0x1
bug_214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79680
L_79681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79682
.p2align 0x4
.long 0x452
L_79682:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79680:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_78
.hidden get_78
get_78:
L_79702:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_79732
L_79703:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406559
L_79704:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_406558
L_79706:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_406557
L_79707:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_79709:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_79710
L_79724:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD12,%r13
	jne L_79710
L_79725:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_406552
L_79710:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_406551
L_79712:
	cmpq $0x1,%r15
	je L_406547
L_79713:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79709
.p2align 0x4
L_406547:
L_79714:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79715
L_79722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79723
.p2align 0x4
.long 0x49C
L_79723:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79715:
	movl 0x18(%rbp),%ecx
L_79716:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406549
L_79718:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79720
L_79721:
	movl %ecx,0x0(%r15)
L_79720:
	movq $0x27A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x73F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq $0x1A25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406549:
L_79717:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406551:
L_79711:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406552:
L_79727:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79717
L_79728:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406553
L_79730:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406553:
L_79729:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406557:
L_79731:
	xorl %ecx,%ecx
	jmp L_79716
.p2align 0x4
L_406558:
L_79705:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406559:
L_79732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79733
.p2align 0x4
.long 0x460
L_79733:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_79704
.text
.p2align 0x4
.globl foreach_4
.hidden foreach_4
foreach_4:
L_79734:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79735
L_81873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81874
.p2align 0x4
.long 0x460
L_81874:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_79735:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_79738:
	cmpl $0x0,%r13d
	jl L_81005
L_79739:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_947:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407115
.p2align 0x4,,0x7
L_79740:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_407114
L_79742:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_407112
	cmpq $0x2,%r15
	je L_407068
L_79743:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1929,%rax
	cmpq $0x28,%rax
	ja L_406561
	jmp *jumpTable_182(,%rax,8)
.data
.p2align 0x4
jumpTable_182:
.quad L_407042,L_407039,L_407026,L_407025,L_407018,L_407001,L_406985,L_406970,L_406966,L_406964,L_406962,L_406960,L_406945,L_406941,L_406940,L_406938,L_406931,L_406917,L_406854,L_406851,L_406828,L_406822,L_406820,L_406795,L_406783,L_406781,L_406767,L_406751,L_406749,L_406706,L_406702,L_406698,L_406666,L_406662,L_406647,L_406638,L_406636,L_406626,L_406622,L_406565,L_406563
.text
.p2align 0x4
L_406561:
L_79744:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	jne L_406562
.p2align 0x4,,0x7
L_79761:
	incl 0x14(%rbp)
	jmp loop_947
.p2align 0x4
L_406562:
L_79745:
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406563:
L_81740:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	jne L_79761
L_81741:
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1456
.p2align 0x4
L_406565:
L_81653:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	je L_406580
	cmpq $0xEBB,%r13
	je L_406566
	jmp L_79761
.p2align 0x4
L_406566:
L_81737:
	movq 0x0(%r15),%r11
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_79761
L_81738:
	movq 0x8(%r14),%r10
	movq %r11,%r15
	movq %r10,%r14
setConst_0:
	movq $0x2795,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r11,0x18(%rbp)
	addq $0x10,%r12
	movq %r13,%r15
	movq %r14,%r13
x_236:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_406578
L_79882:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_406577
L_79883:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_79885:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406576
L_79898:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD23,%r11
	jne L_406575
L_79899:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_406572
L_79886:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_406571
L_79887:
	cmpq $0x1,%r15
	je L_406567
L_79888:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_79885
.p2align 0x4
L_406567:
L_79889:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406570
.p2align 0x4,,0x7
L_79890:
	movl 0x30(%rbp),%ecx
L_79891:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406569
L_79892:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79894
L_79895:
	movl %ecx,0x0(%r15)
L_79894:
	movq $0x1A47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406569:
L_79781:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406570:
L_79896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79897
.p2align 0x4
.long 0xC57
L_79897:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_79890
.p2align 0x4
L_406571:
L_79753:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406572:
L_79901:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_79902:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_79904:
	movl %ecx,0x0(%r15)
L_79875:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406575:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_79886
.p2align 0x4
L_406576:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_79886
.p2align 0x4
L_406577:
L_79905:
	xorl %ecx,%ecx
	jmp L_79891
.p2align 0x4
L_406578:
L_79770:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406580:
L_81654:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_79761
L_81655:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x39,%r15
	je L_406620
L_81656:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_81657
L_81658:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF06,%r15
	je L_406618
	cmpq $0xF09,%r15
	je L_406581
L_81657:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x1,0x18(%rbp)
	movq 0x28(%rbp),%r15
	jmp x_236
.p2align 0x4
L_406581:
L_81734:
	movq $0x0,0x38(%rbp)
doit_16:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x0,%r11
	jna L_79832
L_81661:
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_79770
L_81662:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406615
L_81663:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_81665:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_81666
L_81716:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_81666
L_81717:
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_406605
L_81666:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_79753
L_81667:
	cmpq $0x1,%r14
	je L_406582
L_81668:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x50(%rbp)
	jmp L_81665
.p2align 0x4
L_406582:
L_81669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406603
.p2align 0x4,,0x7
L_81670:
	movl 0x54(%rbp),%ecx
L_81671:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81672:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81674
L_81713:
	movl %ecx,0x0(%r15)
L_81674:
	movq $0x1E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
L_81675:
	cmpq $0x1,0x40(%rbp)
	jna L_406600
L_81677:
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_79770
L_81678:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_406598
L_81679:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_81681:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_81682
L_81695:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_81682
L_81696:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_406588
L_81682:
	movl 0x30(%rbp),%r13d
	incl %r13d
	movl %r13d,0x34(%rbp)
	jo L_79753
L_81683:
	cmpq $0x1,%r14
	je L_406583
L_81684:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x30(%rbp)
	jmp L_81681
.p2align 0x4
L_406583:
L_81685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406586
.p2align 0x4,,0x7
L_81686:
	movl 0x34(%rbp),%ecx
L_81687:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81688:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81690
L_81692:
	movl %ecx,0x0(%r15)
L_81690:
	movq $0x1E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_81691:
	movq $0x2793,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r15
	jmp x_236
.p2align 0x4
L_406586:
L_81693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81694
.p2align 0x4
.long 0x111E
L_81694:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_81686
.p2align 0x4
L_406588:
L_81698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406595
.p2align 0x4,,0x7
L_81699:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79781
L_81700:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_406591
L_81702:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_81690
L_81703:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_81690
L_81704:
	movq 0x0(%r14),%r15
L_81705:
	movq $0x1E2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_81691
.p2align 0x4
L_406591:
L_81706:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_81707:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_81690
L_81708:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_81690
L_81709:
	movq 0x0(%r14),%r15
	jmp L_81705
.p2align 0x4
L_406595:
L_81710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_81711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81711
.p2align 0x4
.long 0x111F
L_81711:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_81699
.p2align 0x4
L_406598:
L_81712:
	xorl %ecx,%ecx
	jmp L_81687
.p2align 0x4
L_406600:
L_79832:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406603:
L_81714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_81715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81715
.p2align 0x4
.long 0x1120
L_81715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_81670
.p2align 0x4
L_406605:
L_81719:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406612
.p2align 0x4,,0x7
L_81720:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79781
L_81721:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_406608
L_81723:
	movq 0x58(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_81674
L_81724:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_81674
L_81725:
	movq 0x0(%r14),%r15
L_81726:
	movq $0x1E2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_81675
.p2align 0x4
L_406608:
L_81727:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_81728:
	movq 0x58(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_81674
L_81729:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_81674
L_81730:
	movq 0x0(%r14),%r15
	jmp L_81726
.p2align 0x4
L_406612:
L_81731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81732
.p2align 0x4
.long 0x1121
L_81732:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_81720
.p2align 0x4
L_406615:
L_81733:
	xorl %ecx,%ecx
	jmp L_81671
.p2align 0x4
L_406618:
L_81659:
	movl 0x0(%r14),%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x38(%rbp)
	jmp doit_16
.p2align 0x4
L_406620:
L_81735:
	movq $0x0,0x38(%rbp)
	jmp doit_16
.p2align 0x4
L_406622:
L_81635:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_79761
L_81636:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x3D,%r15
	je L_406624
L_81637:
	andq $0x3,%r13
	jnz L_79761
L_81638:
	jmp L_79761
.p2align 0x4
L_406624:
L_81639:
	movq %r11,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_406626:
L_81609:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBB,%r13
	je L_406631
	cmpq $0xEBC,%r13
	je L_406627
	jmp L_79761
.p2align 0x4
L_406627:
L_81628:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_406630
L_81630:
	testl %r11d,%r11d
	jnz L_79761
L_81632:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_81633:
L_81615:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_406630:
L_79737:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406631:
L_81610:
	movq 0x0(%r15),%r13
L_81611:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_79761
L_81612:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_406633
	cmpq $0xE4C,%r15
	je L_406632
	jmp L_79761
.p2align 0x4
L_406632:
L_81623:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_406633:
L_81613:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_81614:
	jmp L_81615
.p2align 0x4
L_406636:
L_81570:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_79761
L_81571:
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_406638:
L_81542:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne default_1
L_81556:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r10
	movq %r10,0x28(%rbp)
	movq %r13,%r10
	andq $0xFF,%r10
	cmpq $0x47,%r10
	je L_406645
L_81557:
	andq $0x3,%r13
	jnz default_1
L_81558:
default_1:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_406644
	cmpq $0xEB8,%r14
	je L_406643
	cmpq $0xEB9,%r14
	je L_79761
	cmpq $0xEBA,%r14
	je L_406641
	cmpq $0xEBB,%r14
	je L_79761
	cmpq $0xEBC,%r14
	je L_406639
L_81543:
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_406639:
L_81555:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
vs_5:
	movq %r15,0x28(%rbp)
	movq $0x350F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406641:
L_81553:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
	jmp vs_5
.p2align 0x4
L_406643:
L_81548:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_406644:
L_81547:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
	jmp vs_5
.p2align 0x4
L_406645:
L_81559:
	cmpq $0x1,%r11
	je L_406646
L_81560:
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_406646:
L_79993:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406647:
L_81512:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79761
L_81513:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_81514:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_406659
L_81515:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81517:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_81518
L_81533:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_81518
L_81534:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_406654
L_81518:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_81519:
	cmpq $0x1,%r15
	je L_406648
L_81520:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_81517
.p2align 0x4
L_406648:
L_81521:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406652
.p2align 0x4,,0x7
L_81522:
	movl 0x28(%rbp),%ecx
L_81523:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81524:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81526
L_81530:
	movl %ecx,0x0(%r15)
L_81526:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_81527:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79761
L_81528:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406652:
L_81531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81532
.p2align 0x4
.long 0x5E1
L_81532:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_81522
.p2align 0x4
L_406654:
L_81536:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81537:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406655
L_81539:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_81527
.p2align 0x4
L_406655:
L_81538:
	movq %r13,%r15
	jmp L_81527
.p2align 0x4
L_406659:
L_81540:
	xorl %ecx,%ecx
	jmp L_81523
.p2align 0x4
L_406662:
L_81507:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_79761
L_81508:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_406664
L_81509:
	andq $0x3,%r13
	jnz L_79761
L_81510:
	jmp L_79761
.p2align 0x4
L_406664:
L_81511:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406666:
L_81448:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xEB6,%r13
	je L_406683
	cmpq $0xEB7,%r13
	je L_406669
	cmpq $0xEBA,%r13
	je L_406668
	cmpq $0xEBC,%r13
	je L_406667
	jmp L_79761
.p2align 0x4
L_406667:
L_81506:
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq $0x3525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406668:
L_81505:
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq $0x3525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406669:
L_81478:
	movq 0x0(%r10),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r15
	je L_79993
L_81479:
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_79770
L_81480:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_406680
L_81481:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_81483:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406679
L_81496:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_406678
L_81497:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406675
L_81484:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_79753
L_81485:
	cmpq $0x1,%r15
	je L_406670
L_81486:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_81483
.p2align 0x4
L_406670:
L_81487:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81488
L_81494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81495
.p2align 0x4
.long 0xC59
L_81495:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81488:
	movl 0x38(%rbp),%ecx
L_81489:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81490:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81492
L_81493:
	movl %ecx,0x0(%r15)
L_81492:
	movq $0x1A1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x3525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406675:
L_81499:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81500:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_81502:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406678:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81484
.p2align 0x4
L_406679:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81484
.p2align 0x4
L_406680:
L_81503:
	xorl %ecx,%ecx
	jmp L_81489
.p2align 0x4
L_406683:
L_81449:
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_79770
L_81450:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406696
L_81451:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x18(%rbp)
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_81453:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406695
L_81462:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_406694
L_81463:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_406688
L_81454:
	movl 0x18(%rbp),%r11d
	incl %r11d
	jo L_79753
L_81455:
	cmpq $0x1,%r15
	je L_406684
L_81456:
	movl %r11d,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_81453
.p2align 0x4
L_406684:
	movl %r11d,%ecx
L_81458:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81459:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79761
L_81461:
	movl %ecx,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406688:
L_81465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406693
.p2align 0x4,,0x7
L_81466:
	movl 0x18(%rbp),%r10d
	movslq %r10d,%r15
	movq (globalObjptr+0x1070)(%rip),%r9
	addq 0x0(%r9),%r15
	jo L_79781
L_81467:
	movq %r15,0x0(%r9)
	movq (globalObjptr+0x1078)(%rip),%r9
	cmpl %r10d,0x0(%r9)
	jl L_406690
L_81469:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_79761
L_81470:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
L_81471:
	movq $0x1097,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r10,0x20(%rbp)
	addq $0x28,%r12
	addq $0x20,%rbp
	leaq (L_80037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nonSelect_0
.p2align 0x4
L_406690:
L_81472:
	movq (globalObjptr+0x1078)(%rip),%r10
	movl 0x18(%rbp),%r9d
	movl %r9d,0x0(%r10)
L_81473:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_79761
L_81474:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
	jmp L_81471
.p2align 0x4
L_406693:
L_81475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81476
.p2align 0x4
.long 0x52D
L_81476:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_81466
.p2align 0x4
L_406694:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_81454
.p2align 0x4
L_406695:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_81454
.p2align 0x4
L_406696:
L_81477:
	xorl %ecx,%ecx
	jmp L_81458
.p2align 0x4
L_406698:
L_81393:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r11
	je L_79761
L_81394:
	movq 0x8(%r10),%r15
L_81395:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_79761
L_81396:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_79761
L_81397:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_406702:
L_81338:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r11
	je L_79761
L_81339:
	movq 0x8(%r10),%r15
L_81340:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_79761
L_81341:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_79761
L_81342:
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_81343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_406706:
L_81235:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_406722
	cmpq $0xEB7,%r14
	je L_406708
	cmpq $0xEBC,%r14
	je L_406707
	jmp L_79761
.p2align 0x4
L_406707:
L_81336:
	movq %r10,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_81337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_406708:
L_81309:
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_79761
L_81310:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2889,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x13C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x13CB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r10),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_81311:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_406719
L_81312:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81314:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406718
L_81327:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_406717
L_81328:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x28)(%rip)
	je L_406714
L_81315:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_81316:
	cmpq $0x1,%r15
	je L_406709
L_81317:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x28)(%rip),%r14
	jmp L_81314
.p2align 0x4
L_406709:
L_81318:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406712
.p2align 0x4,,0x7
L_81319:
	movl 0x18(%rbp),%ecx
L_81320:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81321:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81323
L_81324:
	movl %ecx,0x0(%r15)
L_81323:
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406712:
L_81325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81326
.p2align 0x4
.long 0x597
L_81326:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_81319
.p2align 0x4
L_406714:
L_81330:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81331:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_81333:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406717:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_81315
.p2align 0x4
L_406718:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_81315
.p2align 0x4
L_406719:
L_81334:
	xorl %ecx,%ecx
	jmp L_81320
.p2align 0x4
L_406722:
L_81236:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x28(%rbp)
	je L_79993
L_81237:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x20(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_79770
L_81238:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_406746
L_81239:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_81241:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406745
L_81300:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_406744
L_81301:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_406728
L_81242:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_79753
L_81243:
	cmpq $0x1,%r15
	je L_406723
L_81244:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_81241
.p2align 0x4
L_406723:
L_81245:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81246
L_81298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81299
.p2align 0x4
.long 0xC59
L_81299:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81246:
	movl 0x38(%rbp),%ecx
L_81247:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81248:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81250
L_81297:
	movl %ecx,0x0(%r15)
L_81250:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_406728:
L_81303:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81304:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406742
L_81306:
	movl %ecx,0x0(%r15)
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_81262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406741
.p2align 0x4,,0x7
L_81263:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_81264:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_406739
L_81265:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81267:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406738
L_81280:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_406737
L_81281:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406734
L_81268:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_81269:
	cmpq $0x1,%r15
	je L_406729
L_81270:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_81267
.p2align 0x4
L_406729:
L_81271:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406732
.p2align 0x4,,0x7
L_81272:
	movl 0x18(%rbp),%ecx
L_81273:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81274:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81276
L_81277:
	movl %ecx,0x0(%r15)
L_81276:
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406732:
L_81278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81279
.p2align 0x4
.long 0x597
L_81279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_81272
.p2align 0x4
L_406734:
L_81283:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81284:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_81286:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406737:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81268
.p2align 0x4
L_406738:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81268
.p2align 0x4
L_406739:
L_81287:
	xorl %ecx,%ecx
	jmp L_81273
.p2align 0x4
L_406741:
L_81288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81289
.p2align 0x4
.long 0x45B
L_81289:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_81263
.p2align 0x4
L_406742:
L_81305:
	movq %r11,0x20(%rbp)
	jmp L_81262
.p2align 0x4
L_406744:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81242
.p2align 0x4
L_406745:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81242
.p2align 0x4
L_406746:
L_81307:
	xorl %ecx,%ecx
	jmp L_81247
.p2align 0x4
L_406749:
L_81214:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_79993
L_81215:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_81216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406751:
L_81180:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79761
L_81181:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_81182:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_406764
L_81183:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81185:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_81186
L_81205:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_81186
L_81206:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_406759
L_81186:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_81187:
	cmpq $0x1,%r15
	je L_406752
L_81188:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_81185
.p2align 0x4
L_406752:
L_81189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406757
.p2align 0x4,,0x7
L_81190:
	movl 0x28(%rbp),%ecx
L_81191:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81192:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81194
L_81202:
	movl %ecx,0x0(%r15)
L_81194:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_81195:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_406754
.p2align 0x4,,0x7
L_81198:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79761
L_81199:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406754:
L_81196:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_81197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406757:
L_81203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81204
.p2align 0x4
.long 0x5E1
L_81204:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_81190
.p2align 0x4
L_406759:
L_81208:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81209:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406760
L_81211:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_81195
.p2align 0x4
L_406760:
L_81210:
	movq %r13,0x18(%rbp)
	jmp L_81195
.p2align 0x4
L_406764:
L_81212:
	xorl %ecx,%ecx
	jmp L_81191
.p2align 0x4
L_406767:
L_81153:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79993
L_81154:
	movq $0x1067,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1067,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1069,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x27DD,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x20(%rbp)
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_79770
L_81155:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_406778
L_81156:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_81158:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406777
L_81171:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF7,%r11
	jne L_406776
L_81172:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_406773
L_81159:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_79753
L_81160:
	cmpq $0x1,%r15
	je L_406768
L_81161:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_81158
.p2align 0x4
L_406768:
L_81162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406771
.p2align 0x4,,0x7
L_81163:
	movl 0x30(%rbp),%ecx
L_81164:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81165:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81167
L_81168:
	movl %ecx,0x0(%r15)
L_81167:
	movq $0x19EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406771:
L_81169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81170
.p2align 0x4
.long 0xC57
L_81170:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_81163
.p2align 0x4
L_406773:
L_81174:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81175:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_81177:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406776:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81159
.p2align 0x4
L_406777:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81159
.p2align 0x4
L_406778:
L_81178:
	xorl %ecx,%ecx
	jmp L_81164
.p2align 0x4
L_406781:
L_81099:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r15
	je L_79761
L_81100:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406783:
L_81057:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_406794
.p2align 0x4,,0x7
L_81060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406793
.p2align 0x4,,0x7
L_81061:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_406791
	cmpq $0xEB7,%r14
	je L_406789
	cmpq $0xEB8,%r14
	je L_406788
	cmpq $0xEBB,%r14
	je L_406786
	cmpq $0xEBC,%r14
	je L_406784
	jmp L_79761
.p2align 0x4
L_406784:
L_81087:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_79737
L_81089:
	movl %r13d,0x40(%rbp)
	movq $0x3A2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_406786:
L_81084:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x27ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_81085:
	movq %r14,0x18(%rbp)
L_81072:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_81073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_406788:
L_81077:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_406789:
L_81066:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_79737
L_81068:
	movl %r13d,0x40(%rbp)
	movq $0x3A27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_406791:
L_81062:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x28(%rbp)
	je L_79761
L_81063:
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_406793:
L_81096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81097
.p2align 0x4
.long 0x555
L_81097:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_81061
.p2align 0x4
L_406794:
L_81058:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r15,0x20(%r10)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r10)
	movq %r10,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_81059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
L_406795:
L_80981:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%r14),%r11
	movq 0x28(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_406819
	cmpq $0xEB8,%r14
	je L_406818
	cmpq $0xEB9,%r14
	je L_80984
	cmpq $0xEBA,%r14
	je L_406813
	cmpq $0xEBB,%r14
	je L_406812
	cmpq $0xEBC,%r14
	je L_406796
L_80982:
	movq %r10,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1364
.p2align 0x4
L_406796:
L_81007:
	movq 0x8(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_79770
L_81008:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_406810
L_81009:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x68(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_81011:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406809
L_81046:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB6,%r11
	jne L_406808
L_81047:
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406804
L_81012:
	movl 0x68(%rbp),%r11d
	incl %r11d
	movl %r11d,0x6C(%rbp)
	jo L_79753
L_81013:
	cmpq $0x1,%r15
	je L_406797
L_81014:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x68(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_81011
.p2align 0x4
L_406797:
L_81015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81016
L_81044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_81045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81045
.p2align 0x4
.long 0xC79
L_81045:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_81016:
	movl 0x6C(%rbp),%ecx
L_81017:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81018:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81020
L_81043:
	movl %ecx,0x0(%r15)
L_81020:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x196D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_249:
	cmpb $0x1,0x0(%r15)
	je L_406799
L_81021:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_406798
L_81040:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_81041+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406798:
L_81022:
L_81023:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_406799:
L_81042:
	movq $0x3519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406804:
L_81049:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81050
L_81054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_81055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81055
.p2align 0x4
.long 0xC7A
L_81055:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_81050:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79781
L_81051:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_406805
L_81052:
	movq 0x70(%rbp),%r15
	jmp x_249
.p2align 0x4
L_406805:
L_81053:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp x_249
.p2align 0x4
L_406808:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81012
.p2align 0x4
L_406809:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_81012
.p2align 0x4
L_406810:
L_81056:
	xorl %ecx,%ecx
	jmp L_81017
.p2align 0x4
L_406812:
L_80984:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_406813:
L_80994:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_79737
L_80996:
	cmpl $0x0,%r13d
	jl L_406815
L_80997:
	movl $0x0,0x5C(%rbp)
loop_955:
	movl 0x58(%rbp),%r15d
	cmpl %r15d,0x5C(%rbp)
	jl L_406814
L_80998:
	movq $0x3519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406814:
L_80999:
	movslq 0x5C(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_81000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_406815:
L_81005:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406818:
L_80992:
	movq %r10,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1364
.p2align 0x4
L_406819:
L_80991:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x3519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406820:
L_80979:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x8(%r13),%r15
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_79753
L_80980:
	movl %r13d,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r11,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_34
.p2align 0x4
L_406822:
L_80916:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	je L_406823
L_80917:
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406823:
L_80978:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_80931:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80932:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80933:
	cmpq $0x1,%r15
	je L_406824
L_80934:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_80932
.p2align 0x4
L_406824:
L_80935:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80936
L_80954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80955
.p2align 0x4
.long 0x636
L_80955:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80936:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406825
L_80937:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_80938:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_80939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_10
.p2align 0x4
L_406825:
L_80953:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_80938
.p2align 0x4
L_406828:
L_80850:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r10
	cmpq $0x1,%r15
	je L_79761
L_80851:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEBB,%r15
	je L_406849
	cmpq $0xEBC,%r15
	je L_406829
	jmp L_79761
.p2align 0x4
L_406829:
L_80900:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r13
	jne L_79737
L_80902:
	testl %r9d,%r9d
	jnz L_406846
L_80911:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_406845
L_80912:
.p2align 0x4,,0x7
set_4:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80860:
	cmpl $0xA,%r13d
	jg L_406843
L_80861:
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_80862:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406842
.p2align 0x4,,0x7
L_80863:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_79770
L_80864:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_406840
L_80865:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_80867:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_80868
L_80880:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC7,%r13
	jne L_80868
L_80881:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_406835
L_80868:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80869:
	cmpq $0x1,%r15
	je L_406830
L_80870:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_80867
.p2align 0x4
L_406830:
L_80871:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406833
.p2align 0x4,,0x7
L_80872:
	movl 0x28(%rbp),%ecx
L_80873:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80874:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80876
L_80877:
	movl %ecx,0x0(%r15)
L_80876:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x198F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406833:
L_80878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80879
.p2align 0x4
.long 0x597
L_80879:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_80872
.p2align 0x4
L_406835:
L_80883:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80884:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406836
L_80887:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_80886:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406836:
L_80885:
	movq %r13,%r15
	jmp L_80886
.p2align 0x4
L_406840:
L_80888:
	xorl %ecx,%ecx
	jmp L_80873
.p2align 0x4
L_406842:
L_80889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80890
.p2align 0x4
.long 0x555
L_80890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_80863
.p2align 0x4
L_406843:
L_80891:
	movq %r15,0x48(%rbp)
	movq $0xA,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_406845:
L_80913:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406846:
L_80903:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_406847
L_80906:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80907+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406847:
L_80904:
L_80905:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE68)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406849:
L_80852:
	movq %r14,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (toString_126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_406851:
L_80846:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r13)
	je L_79761
L_80847:
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_79753
L_80848:
	movl %r15d,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406854:
L_80389:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1EA2,%r15
	je L_406892
	cmpq $0x1EA3,%r15
	je L_406866
L_80390:
	movq 0x40(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%r11),%r15
	movq 0x30(%r11),%r14
	movq 0x28(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r11),%r10
	movq 0x10(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_406863
	cmpq $0xEB8,%r13
	je L_406862
	cmpq $0xEB9,%r13
	je L_406860
	cmpq $0xEBA,%r13
	je L_406858
	cmpq $0xEBB,%r13
	je L_406857
	cmpq $0xEBC,%r13
	je L_406855
L_80391:
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80392+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1312
.p2align 0x4
L_406855:
L_80498:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80500:
	movl %r13d,0x60(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_80501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_406857:
L_80487:
	movq %r15,0x60(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_406858:
L_80483:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80485:
	movl %r13d,0x60(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_80486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_406860:
L_80480:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80481:
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
L_80394:
	movq $0x1,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_80395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
L_406862:
L_80463:
	movq %r10,0x60(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x58(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x20(%rbp)
	addq $0x58,%rbp
	leaq (L_80464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1312
.p2align 0x4
L_406863:
L_80425:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80427:
	cmpl $0x1,%r13d
	je L_406864
L_80428:
	movl %r13d,0x60(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_80429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_406864:
L_80462:
	movq (globalObjptr+0x1EA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406866:
L_80672:
	movq 0x58(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%r11),%r15
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x20(%r11),%r10
	movq 0x18(%r11),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r11),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_406889
	cmpq $0xEB8,%r13
	je L_406888
	cmpq $0xEB9,%r13
	je L_406872
	cmpq $0xEBA,%r13
	je L_406870
	cmpq $0xEBB,%r13
	je L_406869
	cmpq $0xEBC,%r13
	je L_406867
L_80673:
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_80674+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1404
.p2align 0x4
L_406867:
L_80756:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79737
L_80758:
	movl %r13d,0x78(%rbp)
	movq $0x37A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_80759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406869:
L_80755:
	movq %r15,0x78(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_80674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_406870:
L_80751:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79737
L_80753:
	movl %r13d,0x78(%rbp)
	movq $0x37A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_80754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406872:
L_80748:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80749:
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_80676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406886
.p2align 0x4,,0x7
L_80677:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x60(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_406885
L_80698:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_80699:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_406883
L_80700:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_80702:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406882
L_80715:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAA,%r11
	jne L_406881
L_80716:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406878
L_80703:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80704:
	cmpq $0x1,%r15
	je L_406873
L_80705:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_80702
.p2align 0x4
L_406873:
L_80706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406876
.p2align 0x4,,0x7
L_80707:
	movl 0x18(%rbp),%ecx
L_80708:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80709:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80711
L_80712:
	movl %ecx,0x0(%r15)
L_80711:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406876:
L_80713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_80714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80714
.p2align 0x4
.long 0x1112
L_80714:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_80707
.p2align 0x4
L_406878:
L_80718:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80719:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_80721:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406881:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80703
.p2align 0x4
L_406882:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80703
.p2align 0x4
L_406883:
L_80722:
	xorl %ecx,%ecx
	jmp L_80708
.p2align 0x4
L_406885:
L_80678:
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_80679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_406886:
L_80723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_80724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80724
.p2align 0x4
.long 0xCD0
L_80724:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_80677
.p2align 0x4
L_406888:
L_80732:
	movq %r10,0x78(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x70(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x70,%rbp
	leaq (L_80733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1404
.p2align 0x4
L_406889:
L_80726:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79737
L_80728:
	cmpl $0x1,%r13d
	je L_80462
L_80729:
	movl %r13d,0x78(%rbp)
	movq $0x37A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_80730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406892:
L_80521:
	movq 0x38(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%r11),%r15
	movq 0x28(%r11),%r14
	movq 0x20(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r11),%r10
	movq 0x10(%r11),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_406914
	cmpq $0xEB8,%r13
	je L_406913
	cmpq $0xEB9,%r13
	je L_406898
	cmpq $0xEBA,%r13
	je L_406896
	cmpq $0xEBB,%r13
	je L_406895
	cmpq $0xEBC,%r13
	je L_406893
L_80522:
	movq %r10,0x50(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80523+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1313
.p2align 0x4
L_406893:
L_80595:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80597:
	movl %r13d,0x50(%rbp)
	movq $0x38DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_80598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
L_406895:
L_80588:
	movq %r15,0x50(%rbp)
	movq 0x0(%r11),%r15
	movq $0x1DC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_80589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_406896:
L_80584:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79737
L_80586:
	movl %r13d,0x58(%rbp)
	movq $0x38DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_80587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
L_406898:
L_80581:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80582:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_80525:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406911
.p2align 0x4,,0x7
L_80526:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_80527:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_406909
L_80528:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_80530:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406908
L_80543:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE5,%r11
	jne L_406907
L_80544:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406904
L_80531:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80532:
	cmpq $0x1,%r15
	je L_406899
L_80533:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_80530
.p2align 0x4
L_406899:
L_80534:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406902
.p2align 0x4,,0x7
L_80535:
	movl 0x18(%rbp),%ecx
L_80536:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80537:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80539
L_80540:
	movl %ecx,0x0(%r15)
L_80539:
	movq $0x19CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_406902:
L_80541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80542
.p2align 0x4
.long 0x5AB
L_80542:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_80535
.p2align 0x4
L_406904:
L_80546:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80547:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_80549:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_406907:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80531
.p2align 0x4
L_406908:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80531
.p2align 0x4
L_406909:
L_80550:
	xorl %ecx,%ecx
	jmp L_80536
.p2align 0x4
L_406911:
L_80551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80552
.p2align 0x4
.long 0x45B
L_80552:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_80526
.p2align 0x4
L_406913:
L_80572:
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x20(%rbp)
	addq $0x48,%rbp
	leaq (x_245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1313
.p2align 0x4
L_406914:
L_80554:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80556:
	cmpl $0x1,%r13d
	je L_80462
L_80557:
	movl %r13d,0x50(%rbp)
	movq $0x38DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_80558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
L_406917:
L_80361:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_79761
L_80362:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_79770
L_80363:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_406928
L_80364:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_80366:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406927
L_80379:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_406926
L_80380:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_406923
L_80367:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80368:
	cmpq $0x1,%r15
	je L_406918
L_80369:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_80366
.p2align 0x4
L_406918:
L_80370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406921
.p2align 0x4,,0x7
L_80371:
	movl 0x28(%rbp),%ecx
L_80372:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80373:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80375
L_80376:
	movl %ecx,0x0(%r15)
L_80375:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406921:
L_80377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80378
.p2align 0x4
.long 0x5E1
L_80378:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_80371
.p2align 0x4
L_406923:
L_80382:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80383:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406924
L_80386:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_80385:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406924:
L_80384:
	movq %r11,%r15
	jmp L_80385
.p2align 0x4
L_406926:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80367
.p2align 0x4
L_406927:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80367
.p2align 0x4
L_406928:
L_80387:
	xorl %ecx,%ecx
	jmp L_80372
.p2align 0x4
L_406931:
L_80349:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_406937
	cmpq $0xEB8,%r13
	je L_406936
	cmpq $0xEB9,%r13
	je L_79761
	cmpq $0xEBA,%r13
	je L_406934
	cmpq $0xEBB,%r13
	je L_79761
	cmpq $0xEBC,%r13
	je L_406932
L_80350:
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_406932:
L_80360:
	movq 0x0(%r15),%r13
	movq %r13,%r15
vs_4:
	movq %r15,0x28(%rbp)
	movq $0x3517,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_406934:
L_80358:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_4
.p2align 0x4
L_406936:
L_80354:
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_406937:
L_80353:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_4
.p2align 0x4
L_406938:
L_80346:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movl 0x0(%r15),%r10d
	movq 0x8(%r15),%r9
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r8
	cmpq $0x1,%r15
	je L_79761
L_80347:
	movq %r14,0x28(%rbp)
	movq %r11,0x30(%rbp)
	movl %r10d,0x38(%rbp)
	movq %r9,0x40(%rbp)
	movq $0x9C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addDef_0
.p2align 0x4
L_406940:
L_80340:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_80341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canon_0
.p2align 0x4
L_406941:
L_80335:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_79761
L_80336:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_406943
L_80337:
	andq $0x3,%r13
	jnz L_79761
L_80338:
	jmp L_79761
.p2align 0x4
L_406943:
L_80339:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406945:
L_80305:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79761
L_80306:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_80307:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_406957
L_80308:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_80310:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_80311
L_80326:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_80311
L_80327:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_406952
L_80311:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80312:
	cmpq $0x1,%r15
	je L_406946
L_80313:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_80310
.p2align 0x4
L_406946:
L_80314:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406950
.p2align 0x4,,0x7
L_80315:
	movl 0x28(%rbp),%ecx
L_80316:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80317:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80319
L_80323:
	movl %ecx,0x0(%r15)
L_80319:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_80320:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79761
L_80321:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406950:
L_80324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80325
.p2align 0x4
.long 0x5E1
L_80325:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_80315
.p2align 0x4
L_406952:
L_80329:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80330:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406953
L_80332:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_80320
.p2align 0x4
L_406953:
L_80331:
	movq %r13,%r15
	jmp L_80320
.p2align 0x4
L_406957:
L_80333:
	xorl %ecx,%ecx
	jmp L_80316
.p2align 0x4
L_406960:
L_80284:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_79761
L_80285:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406962:
L_80277:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_79761
L_80278:
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_80279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_406964:
L_80220:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_79761
L_80221:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_406966:
L_80163:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r11
	je L_79761
L_80164:
	movq 0x8(%r10),%r15
L_80165:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_79761
L_80166:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_79761
L_80167:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_406970:
L_80112:
	movq 0x0(%rbp),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%r14
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79761
L_80113:
	movq 0x10(%r15),%r13
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r11
	incq %r11
	jo L_79770
L_80114:
	movq %r11,0x0(%r9)
	movq 0x0(%r13),%r9
	cmpq $0x1,%r9
	je L_406982
L_80115:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r9
	xorl %ecx,%ecx
	movq %r8,%r13
	movq %r9,%r11
.p2align 0x4,,0x7
L_80117:
	movq %r11,%r9
	andq $0x3,%r9
	jnz L_406981
L_80126:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	shrq $0x1,%r9
	cmpq $0xD0F,%r9
	jne L_406980
L_80127:
	movq 0x8(%r11),%r9
	cmpq %r14,0x0(%r11)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_406975
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
L_80118:
	incl %ecx
	jo L_79753
L_80119:
	cmpq $0x1,%r10
	je L_406971
L_80120:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	movq (localObjptr+0x18)(%rip),%r15
	movq (localObjptr+0x10)(%rip),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_80117
.p2align 0x4
L_406971:
L_80121:
L_80122:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80123:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79761
L_80125:
	movl %ecx,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_406975:
L_80129:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r14
	jo L_79781
L_80130:
	movq %r14,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406977
L_80158:
	movl %ecx,0x0(%r14)
L_80159:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_79761
L_80160:
	movq 0x18(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r9),%r14
	movq %r14,0x28(%rbp)
	movq %r15,(localObjptr+0x18)(%rip)
	movq %r13,(localObjptr+0x8)(%rip)
L_80134:
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406977:
L_80132:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_79761
L_80133:
	movq 0x18(%r9),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r9),%r11
	movq %r11,0x28(%rbp)
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_80134
.p2align 0x4
L_406980:
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_80118
.p2align 0x4
L_406981:
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_80118
.p2align 0x4
L_406982:
L_80161:
	xorl %ecx,%ecx
	jmp L_80122
.p2align 0x4
L_406985:
L_80078:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_79761
L_80079:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_80080:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_406998
L_80081:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_80083:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_80084
L_80103:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_80084
L_80104:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_406993
L_80084:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80085:
	cmpq $0x1,%r15
	je L_406986
L_80086:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_80083
.p2align 0x4
L_406986:
L_80087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406991
.p2align 0x4,,0x7
L_80088:
	movl 0x28(%rbp),%ecx
L_80089:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80090:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80092
L_80100:
	movl %ecx,0x0(%r15)
L_80092:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_80093:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_406988
.p2align 0x4,,0x7
L_80096:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79761
L_80097:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406988:
L_80094:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x7,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_80095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_406991:
L_80101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80102
.p2align 0x4
.long 0x5E1
L_80102:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_80088
.p2align 0x4
L_406993:
L_80106:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80107:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406994
L_80109:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_80093
.p2align 0x4
L_406994:
L_80108:
	movq %r13,0x18(%rbp)
	jmp L_80093
.p2align 0x4
L_406998:
L_80110:
	xorl %ecx,%ecx
	jmp L_80089
.p2align 0x4
L_407001:
L_80047:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r14
	cmpq $0x1,%r15
	je L_79761
L_80048:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_79761
L_80049:
	movq 0x8(%r14),%r13
	movq %r13,%r14
	andq $0xFF,%r14
	cmpq $0x47,%r14
	jne L_407014
L_80052:
	movq $0x1099,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x109B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x2,0x0(%r11)
	movq $0x109D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r14,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq $0x13BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_79770
L_80053:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_407012
L_80054:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r13
.p2align 0x4,,0x7
L_80056:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_407011
L_80069:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD14,%r11
	jne L_407010
L_80070:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x8)(%rip)
	je L_407007
L_80057:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_79753
L_80058:
	cmpq $0x1,%r15
	je L_407002
L_80059:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_80056
.p2align 0x4
L_407002:
L_80060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407005
.p2align 0x4,,0x7
L_80061:
	movl 0x30(%rbp),%ecx
L_80062:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80063:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80065
L_80066:
	movl %ecx,0x0(%r15)
L_80065:
	movq $0x1A29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_407005:
L_80067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80068
.p2align 0x4
.long 0xC57
L_80068:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_80061
.p2align 0x4
L_407007:
L_80072:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80073:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_80075:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_407010:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_80057
.p2align 0x4
L_407011:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_80057
.p2align 0x4
L_407012:
L_80076:
	xorl %ecx,%ecx
	jmp L_80062
.p2align 0x4
L_407014:
L_80050:
	andq $0x3,%r13
	jnz L_79761
L_80051:
	jmp L_79761
.p2align 0x4
L_407018:
L_80032:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_407024
	cmpq $0xEB8,%r15
	je L_407023
	cmpq $0xEB9,%r15
	je L_79761
	cmpq $0xEBA,%r15
	je L_407021
	cmpq $0xEBB,%r15
	je L_79761
	cmpq $0xEBC,%r15
	je L_407019
L_80033:
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_407019:
L_80046:
	movq 0x0(%r14),%r15
	movq %r11,%r14
vs_3:
	movq %r15,0x28(%rbp)
	movq $0x3527,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407021:
L_80044:
	movq 0x0(%r14),%r15
	movq %r11,%r14
	jmp vs_3
.p2align 0x4
L_407023:
L_80039:
	movq %r11,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_407024:
L_80038:
	movq 0x0(%r14),%r15
	movq %r11,%r14
	jmp vs_3
.p2align 0x4
L_407025:
L_79955:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_407026:
L_79907:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	je L_407038
	cmpq $0xEBB,%r15
	je L_407033
	cmpq $0xEBC,%r15
	je L_407027
	jmp L_79761
.p2align 0x4
L_407027:
L_79948:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_79737
L_79950:
	testl %r11d,%r11d
	jnz L_79941
L_79952:
	cmpq $0x1,0x38(%rbp)
	jne L_407030
.p2align 0x4,,0x7
L_79941:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	jne L_79761
L_79942:
	movq 0x8(%r14),%r15
.p2align 0x4,,0x7
L_79909:
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je setHasEqual_0
	cmpq $0x3A,%r14
	je setHasEqual_1
L_79910:
	andq $0x3,%r15
	jnz L_79761
L_79911:
	jmp L_79761
.p2align 0x4
setHasEqual_1:
setHasEqual_0:
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_407030:
L_79953:
	movq 0x38(%rbp),%r15
L_79932:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_407033:
L_79927:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
L_79928:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_79761
L_79929:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_407035
	cmpq $0xE4C,%r15
	je L_407034
	jmp L_79761
.p2align 0x4
L_407034:
L_79943:
	movq %r10,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_407035:
L_79930:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79941
L_79931:
	jmp L_79932
.p2align 0x4
L_407038:
L_79908:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_79909
.p2align 0x4
L_407039:
L_79879:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEBB,%r13
	jne L_79761
L_79880:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_79761
L_79881:
	movq %r15,%r13
	movq %r10,%r15
	jmp setConst_0
.p2align 0x4
L_407042:
L_79768:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	jne L_407055
.p2align 0x4,,0x7
L_79856:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_407053
	cmpq $0xEB8,%r14
	je L_407051
	cmpq $0xEB9,%r14
	je L_407049
	cmpq $0xEBA,%r14
	je L_407048
	cmpq $0xEBB,%r14
	je L_407046
	cmpq $0xEBC,%r14
	je L_407044
.p2align 0x4,,0x7
L_79792:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79793:
L_79794:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_407044:
.p2align 0x4,,0x7
L_79850:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79851:
	jmp L_79794
.p2align 0x4
L_407046:
.p2align 0x4,,0x7
L_79846:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79847:
	jmp L_79794
.p2align 0x4
L_407048:
L_79861:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
L_79819:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_79820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1431
.p2align 0x4
L_407049:
.p2align 0x4,,0x7
L_79815:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79816:
	jmp L_79794
.p2align 0x4
L_407051:
.p2align 0x4,,0x7
L_79811:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79812:
	jmp L_79794
.p2align 0x4
L_407053:
.p2align 0x4,,0x7
L_79807:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79808:
	jmp L_79794
.p2align 0x4
L_407055:
L_79769:
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq $0x2791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1399,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_79771:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_407066
L_79772:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_79774:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_407065
L_79869:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD28,%r11
	jne L_407064
L_79870:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_407061
L_79775:
	incl %ecx
	movl %ecx,0x70(%rbp)
	jo L_79753
L_79776:
	cmpq $0x1,%r15
	je L_407056
L_79777:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_79774
.p2align 0x4
L_407056:
L_79778:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79779
L_79867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_79868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79868
.p2align 0x4
.long 0xC78
L_79868:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_79779:
	movl 0x70(%rbp),%ecx
L_79780:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_79782:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79784
L_79866:
	movl %ecx,0x0(%r15)
L_79784:
	movq $0x1A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_407061:
L_79872:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_79873:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_79876:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_407064:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_79775
.p2align 0x4
L_407065:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_79775
.p2align 0x4
L_407066:
L_79877:
	xorl %ecx,%ecx
	jmp L_79780
.p2align 0x4
L_407068:
L_81746:
	movq 0x0(%r13),%r14
	movq %r14,%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_79761
L_81747:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r10
L_81748:
	andq $0x3,%r11
	jnz L_79761
L_81749:
L_81750:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_79761
L_81751:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF08,%r14
	jne L_79761
L_81752:
	movq 0x0(%r13),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r10)
	jna L_79832
L_81754:
	movq %r14,0x28(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x20(%rbp)
x_255:
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r11),%r13
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_79770
L_81755:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_407105
L_81756:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81758:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_407104
L_81792:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCF9,%r11
	je L_407084
	movq %r13,(localObjptr+0x0)(%rip)
	movl %ecx,(localWord32+0x0)(%rip)
L_81759:
	incl %ebx
	jo L_79753
L_81760:
	cmpq $0x1,%r14
	je L_407069
L_81761:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_81758
.p2align 0x4
L_407069:
L_81762:
	movl %ebx,%ecx
L_81763:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81764:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl stop_0
L_81791:
	movl %ecx,0x0(%r15)
stop_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407081
.p2align 0x4,,0x7
L_81766:
	movq $0x1DC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_79770
L_81767:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_407079
L_81768:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_81770:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_81771
L_81783:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCF9,%r13
	je L_407075
L_81771:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_81772:
	cmpq $0x1,%r15
	je L_407070
L_81773:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_81770
.p2align 0x4
L_407070:
L_81774:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407073
.p2align 0x4,,0x7
L_81775:
	movl 0x18(%rbp),%ecx
L_81776:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81777:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81779
L_81780:
	movl %ecx,0x0(%r15)
L_81779:
	movq $0x19F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_407073:
L_81781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81782
.p2align 0x4
.long 0x5C2
L_81782:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_81775
.p2align 0x4
L_407075:
L_81784:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_81785:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_81787:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_407079:
L_81788:
	xorl %ecx,%ecx
	jmp L_81776
.p2align 0x4
L_407081:
L_81789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81790
.p2align 0x4
.long 0x45B
L_81790:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_81766
.p2align 0x4
L_407084:
L_81793:
	movq 0x0(%r15),%r11
	movslq %ebx,%r15
	movq (globalObjptr+0x1070)(%rip),%r10
	addq 0x0(%r10),%r15
	jo L_79781
L_81794:
	movq %r15,0x0(%r10)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ebx,0x0(%r15)
	jnl L_407102
L_81868:
	movl %ebx,0x0(%r15)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
L_81796:
	movl 0x0(%r14),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	cmpq $0x0,%r13
	sete %cl
	movzbl %cl,%ecx
	je L_407099
L_81797:
	cmpq %r14,%r15
	jl L_81800
L_81798:
	cmpq %r15,%r14
	jl L_407097
L_81800:
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_407096
L_81801:
	cmpq %r15,%r13
	jl loop_964
L_81802:
	cmpq %r13,%r15
	jnl loop_964
L_81808:
	movq %r15,%r14
	movq 0x48(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_407094
L_81809:
	cmpq %r15,%r13
	jnl L_81811
L_81836:
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_407091
L_81837:
	cmpq %r13,%r15
	jnl L_81811
L_81840:
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jz loop_964
L_81842:
	movl (localWord32+0x0)(%rip),%r14d
	testl %r14d,%r14d
	jnz loop_964
L_81811:
	testl %ecx,%ecx
	jnz L_407088
L_81812:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r13
	cmpq %r13,%r14
	jl L_81815
L_81813:
	cmpq %r14,%r13
	jl stop_0
L_81815:
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_407086
L_81816:
	cmpq %r15,%r13
	jl loop_964
L_81817:
	cmpq %r13,%r15
	jl stop_0
loop_964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407085
.p2align 0x4,,0x7
L_81804:
	movq $0x11EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp x_255
.p2align 0x4
L_407085:
L_81805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81806
.p2align 0x4
.long 0x1122
L_81806:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_81804
.p2align 0x4
L_407086:
L_81821:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_81822:
	cmpl $0x0,%eax
	jl loop_964
L_81823:
	cmpl $0x0,%eax
	jg stop_0
	jmp loop_964
.p2align 0x4
L_407088:
L_81829:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_81830:
	cmpl $0x0,%eax
	jl L_81815
L_81831:
	cmpl $0x0,%eax
	jg stop_0
	jmp L_81815
.p2align 0x4
L_407091:
L_81845:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_81846:
	cmpl $0x0,%eax
	jnl L_407092
	movl %ebx,%ecx
	jmp L_81840
.p2align 0x4
L_407092:
	movl %ebx,%ecx
	jmp L_81811
.p2align 0x4
L_407094:
L_81849:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_81850:
	cmpl $0x0,%eax
	jnl L_407095
	movl %ebx,%ecx
	jmp L_81836
.p2align 0x4
L_407095:
	movl %ebx,%ecx
	jmp L_81811
.p2align 0x4
L_407096:
L_81854:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_81855:
	cmpl $0x0,%eax
	jl loop_964
L_81856:
	cmpl $0x0,%eax
	jng loop_964
	movl %ebx,%ecx
	jmp L_81808
.p2align 0x4
L_407097:
	movq (localObjptr+0x0)(%rip),%r15
	jmp L_81808
.p2align 0x4
L_407099:
L_81862:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_81863:
	cmpl $0x0,%eax
	jl L_407101
L_81864:
	cmpl $0x0,%eax
	jg L_407100
	movl %ebx,%ecx
	jmp L_81800
.p2align 0x4
L_407100:
	movl %ebx,%ecx
	movq (localObjptr+0x0)(%rip),%r15
	jmp L_81808
.p2align 0x4
L_407101:
	movl %ebx,%ecx
	jmp L_81800
.p2align 0x4
L_407102:
L_81795:
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_81796
.p2align 0x4
L_407104:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_81759
.p2align 0x4
L_407105:
L_81869:
	xorl %ecx,%ecx
	jmp L_81763
.p2align 0x4
L_407112:
L_81743:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_79761
L_81744:
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	jmp L_79761
.p2align 0x4
L_407114:
L_79741:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407115:
L_81870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81871
.p2align 0x4
.long 0x45E
L_81871:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79740
.p2align 0x4
.long 0x526
L_79746:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
L_81742:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x541
L_81640:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81641
L_81651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81652
.p2align 0x4
.long 0x531
L_81652:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81641:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_407119
L_81642:
	movl $0x1,0x0(%r15)
L_81643:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_407119:
L_81650:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_81643
.p2align 0x4
.long 0x559
L_81616:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81617
L_81620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81621
.p2align 0x4
.long 0x56E
L_81621:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81617:
	movq 0x20(%rbp),%r15
	andq $0x1,%r15
	jnz L_79875
L_81618:
	movq $0x1967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x526
x_254:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_79761
L_81624:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_81625:
	jmp L_81615
.p2align 0x4
.long 0x541
L_81572:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_79761
L_81574:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x556
L_81544:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_79761
L_81546:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x524
L_79760:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79761
.p2align 0x4
.long 0x556
L_81549:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_79761
L_81551:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x558
L_81561:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_79832
L_81563:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
.long 0x524
L_80037:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79761
.p2align 0x4
.long 0x541
L_81398:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_407134
L_81399:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_79737
L_81401:
	testq %rdx,%rdx
	jz L_407132
L_81402:
	cmpq $0x7FFFFFFF,%rdx
	ja L_407131
L_81403:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81404
.p2align 0x4
.long 0xF35
L_81404:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_81405:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_961:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407130
.p2align 0x4,,0x7
L_81406:
	movq 0x48(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407129
L_81413:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_961
.p2align 0x4
L_407129:
L_81407:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_81408:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_407130:
L_81414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81415
.p2align 0x4
.long 0xE6C
L_81415:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_81406
.p2align 0x4
L_407131:
L_80187:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407132:
L_81417:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_81405
.p2align 0x4
L_407134:
L_81418:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	movq %r13,0x50(%rbp)
	jne L_79737
L_81420:
	testq %rdx,%rdx
	jz L_407143
L_81421:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_81422:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81423
.p2align 0x4
.long 0x1103
L_81423:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
L_81424:
	movq $0x0,0x60(%rbp)
loop_962:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_407141
L_81425:
	movq 0x38(%rbp),%r15
	movq $0x96F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_79737
L_81427:
	testq %rdx,%rdx
	jz L_407139
L_81428:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_81429:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81430
.p2align 0x4
.long 0x5A3
L_81430:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_81431:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_963:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407137
.p2align 0x4,,0x7
L_81432:
	movq 0x58(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407136
L_81434:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x48(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_407135
L_81435:
	movq $0x1,%r15
L_81436:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_963
.p2align 0x4
L_407135:
L_81437:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	jmp L_81436
.p2align 0x4
L_407136:
L_81433:
	movq 0x50(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_81408
.p2align 0x4
L_407137:
L_81438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81439
.p2align 0x4
.long 0xD05
L_81439:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_81432
.p2align 0x4
L_407139:
L_81441:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_81431
.p2align 0x4
L_407141:
L_81442:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_407143:
L_81446:
	movq (globalObjptr+0xEE8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_81424
.p2align 0x4
.long 0x527
L_81343:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_407150
L_81344:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_79737
L_81346:
	testq %rdx,%rdx
	jz L_407148
L_81347:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_81348:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81349
.p2align 0x4
.long 0x78B
L_81349:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x30(%rbp)
L_81350:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407146
.p2align 0x4,,0x7
L_81351:
	movq 0x40(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407145
L_81358:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_958
.p2align 0x4
L_407145:
L_81352:
	movq 0x30(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_81353:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_81354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_407146:
L_81359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81360
.p2align 0x4
.long 0x68D
L_81360:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_81351
.p2align 0x4
L_407148:
L_81362:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_81350
.p2align 0x4
L_407150:
L_81363:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r14,%rdx
	movq %r13,0x48(%rbp)
	jne L_79737
L_81365:
	testq %rdx,%rdx
	jz L_407159
L_81366:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_81367:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_81368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81368
.p2align 0x4
.long 0x111C
L_81368:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x30(%rbp)
L_81369:
	movq $0x0,0x58(%rbp)
loop_959:
	movq 0x50(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_407157
L_81370:
	movq 0x30(%rbp),%r15
	movq $0x96F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_79737
L_81372:
	testq %rdx,%rdx
	jz L_407155
L_81373:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_81374:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81375
.p2align 0x4
.long 0xE4E
L_81375:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_81376:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407153
.p2align 0x4,,0x7
L_81377:
	movq 0x50(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407152
L_81379:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_407151
L_81380:
	movq $0x1,%r15
L_81381:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_960
.p2align 0x4
L_407151:
L_81382:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	jmp L_81381
.p2align 0x4
L_407152:
L_81378:
	movq 0x48(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_81353
.p2align 0x4
L_407153:
L_81383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_81384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81384
.p2align 0x4
.long 0x5FD
L_81384:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_81377
.p2align 0x4
L_407155:
L_81386:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_81376
.p2align 0x4
L_407157:
L_81387:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (x_251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_407159:
L_81391:
	movq (globalObjptr+0xEE0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_81369
.p2align 0x4
.long 0x557
L_81337:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_3
.p2align 0x4
.long 0x541
L_81251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81252
L_81295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81296
.p2align 0x4
.long 0x531
L_81296:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81252:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_407162
L_81253:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_407161
L_81254:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_81255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_407161:
L_81261:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_81262
.p2align 0x4
L_407162:
L_80438:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x527
L_81216:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_81217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x556
L_81197:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_81198
.p2align 0x4
.long 0x559
L_81101:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x4(%r14),%r13d
	movl 0x0(%r14),%r11d
	movl %r11d,0x24(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	cmpl $0x0,%r13d
	jl L_81149
L_81102:
	testl %r10d,%r10d
	jz L_407183
L_81103:
	cmpl $0x1,%r13d
	jl L_407182
L_81104:
	cmpl $0x1,%r11d
	jne L_81106
L_81131:
	movl $0x2,0x18(%rbp)
.p2align 0x4,,0x7
loop_956:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	movl 0x18(%rbp),%r10d
	cmpl $0x0,%r10d
	jl L_81146
L_81132:
	movl 0x24(%rbp),%r9d
	cmpl %r10d,%r9d
	jl L_407179
L_81133:
	cmpl %r10d,%r11d
	jnl L_407167
L_81135:
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpl %r13d,%r9d
	movl %r13d,0x1C(%rbp)
	je loop_956
L_81136:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81137
L_81142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81143
.p2align 0x4
.long 0x539
L_81143:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81137:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_79753
L_81139:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_407164
L_81141:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x19F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movb $0xB,0x50(%rbp)
	addq $0x48,%rbp
	leaq (loop_957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_407164:
L_81140:
	movq $0xA,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407167:
L_81106:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x20(%rbp)
	jl L_407178
L_81107:
	cmpl $0x2,%r11d
	jnl L_407177
L_81109:
	movl $0x2,%ecx
	subl %r11d,%ecx
	jo L_79753
L_81110:
	decl %ecx
	jo L_79753
L_81111:
	cmpl $0x0,%ecx
	jl L_81119
L_81112:
	cmpq $0x1,%r15
	je L_81119
L_81113:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_81114:
	testl %ecx,%ecx
	jz L_407170
L_81115:
	decl %ecx
	jo L_79753
L_81116:
	cmpq $0x1,%r15
	je L_407168
L_81117:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_81114
.p2align 0x4
L_407168:
L_81119:
	movq (globalObjptr+0xE18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407170:
L_81120:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81121
L_81126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81127
.p2align 0x4
.long 0x525
L_81127:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_81121:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407171
L_81122:
L_81123:
	movq $0x2729,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
L_81124:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_407171:
L_81125:
	movq (globalObjptr+0xED0)(%rip),%r15
	jmp L_81124
.p2align 0x4
L_407177:
L_81108:
	movq (globalObjptr+0xEC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407178:
L_81130:
	movq (globalObjptr+0xED8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407179:
L_81146:
	movq (globalObjptr+0x1F38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407182:
L_81149:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407183:
L_81150:
	movl $0x1,0x18(%rbp)
	jmp loop_956
.p2align 0x4
.long 0x526
L_81090:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81091
L_81094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81095
.p2align 0x4
.long 0x555
L_81095:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81091:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_81092:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_81072
.p2align 0x4
.long 0x556
L_81073:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x558
L_81078:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81079
L_81082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81083
.p2align 0x4
.long 0x576
L_81083:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81079:
	movq $0x27EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_81080:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_81072
.p2align 0x4
.long 0x558
L_81069:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81070
L_81075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81076
.p2align 0x4
.long 0x45B
L_81076:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81070:
	movq $0x27E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_81071:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_81072
.p2align 0x4
.long 0x559
L_81064:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1311
.p2align 0x4
.long 0x527
L_81059:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_81060
.p2align 0x4
.long 0x1118
L_80983:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_80984
.p2align 0x4
.long 0x45A
L_81041:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_81023
.p2align 0x4
.long 0x1
toString_127:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xCEC
L_80985:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80986
L_80989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80990
.p2align 0x4
.long 0x1119
L_80990:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80986:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80987:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_0
.p2align 0x4
.long 0x111A
L_81000:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81001
L_81002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81003
.p2align 0x4
.long 0x111B
L_81003:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_81001:
	incl 0x5C(%rbp)
	jmp loop_955
.p2align 0x4
.long 0x57F
L_80918:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
L_80939:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80940
L_80951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80952
.p2align 0x4
.long 0x45B
L_80952:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80940:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80941:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_79753
L_80942:
	cmpq $0x1,%r14
	je L_407194
L_80943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80941
.p2align 0x4
L_407194:
L_80944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80945
L_80949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80950
.p2align 0x4
.long 0x56A
L_80950:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_80945:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407195
L_80946:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_248:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407195:
L_80948:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_248
.p2align 0x4
.long 0x526
L_80892:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80893
L_80895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80896
.p2align 0x4
.long 0x555
L_80896:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_80893:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_80894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x527
L_80914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp set_4
.p2align 0x4
.long 0x527
L_80907:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80908
L_80909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80910
.p2align 0x4
.long 0x564
L_80910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80908:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_80905
.p2align 0x4
.long 0x526
set_3:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp set_4
.p2align 0x4
.long 0x526
toString_126:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (rev_124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x110A
L_80392:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_80393:
	movq %r15,0x30(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_80394
.p2align 0x4
.long 0x59A
L_80501:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
.long 0x110A
L_80488:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_80489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0x593
L_80486:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_80392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1457
.p2align 0x4
.long 0x55B
L_80395:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x110A
L_80464:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_80465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0x110B
L_80429:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80430
L_80459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80460
.p2align 0x4
.long 0x5D1
L_80460:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80430:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80432:
	movq $0x3791,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xC91
L_80674:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_80675:
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_80676
.p2align 0x4
.long 0x1115
L_80759:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq 0x50(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x28(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_79770
L_80760:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407221
L_80761:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_80763:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_407220
L_80805:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCEB,%r10
	jne L_407219
L_80806:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_407209
L_80764:
	incl %ecx
	jo L_79753
L_80765:
	cmpq $0x1,%r14
	je L_407205
L_80766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_80763
.p2align 0x4
L_407205:
L_80767:
L_80768:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80769:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_247
L_80804:
	movl %ecx,0x0(%r15)
x_247:
	movq 0x0(%r13),%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_407206
L_80802:
	movq %r11,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_407206:
L_80771:
	movq %r14,%r15
L_80772:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407209:
L_80808:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80809:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_407217
L_80844:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_80811:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_79737
L_80813:
	movq 0x30(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%ebx
	movslq %ebx,%r15
	cmpq %r10,%r15
	jne L_79737
L_80815:
	cmpl %ebx,%ecx
	jne L_80448
L_80817:
	cmpl $0x0,%ecx
	jl L_407213
L_80818:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_954:
	cmpl %ecx,%ebx
	jnl L_407211
L_80822:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	movq 0x0(%r14,%r11,8),%r10
	movq 0x30(%rbp),%r9
	movq 0x0(%r9,%r11,8),%r8
	movq %r8,0x28(%rbp)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r10),%r11
	cmpq %r11,0x10(%r8)
	jne L_407210
L_80842:
	movl %r13d,%ebx
	jmp loop_954
.p2align 0x4
L_407210:
L_80823:
	movq %r10,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_407211:
L_80819:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_80820:
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_80676
.p2align 0x4
L_407213:
L_80448:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407217:
L_80810:
	movq %r10,%r15
	jmp L_80811
.p2align 0x4
L_407219:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80764
.p2align 0x4
L_407220:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80764
.p2align 0x4
L_407221:
L_80845:
	xorl %ecx,%ecx
	jmp L_80768
.p2align 0x4
.long 0x1114
L_80754:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x70,%rbp
	leaq (L_80674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_4
.p2align 0x4
.long 0x1110
L_80679:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80680
L_80696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_80697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80697
.p2align 0x4
.long 0x1111
L_80697:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_80680:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1113
L_80733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r14
L_80734:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_80735
L_80742:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_407226
L_80743:
	movq 0x0(%r14),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79832
L_80745:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80746:
	movq %r13,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_80676
.p2align 0x4
L_407226:
L_80735:
	movq (globalObjptr+0x1ED8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xC8E
L_80730:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_80674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0xC76
L_80523:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_80524:
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_80525
.p2align 0x4
.long 0x56C
L_80598:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x20(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_79770
L_80599:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407245
L_80600:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_80602:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_407244
L_80644:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCFE,%r10
	jne L_407243
L_80645:
	movq 0x8(%r14),%r10
	movq %r10,0x48(%rbp)
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_407233
L_80603:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_79753
L_80604:
	cmpq $0x1,%r15
	je L_407229
L_80605:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_80602
.p2align 0x4
L_407229:
	movl %r10d,%ecx
L_80607:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80608:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_246
L_80643:
	movl %ecx,0x0(%r15)
x_246:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_407230
L_80641:
	movq %r11,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_407230:
L_80610:
	movq %r14,%r15
L_80611:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407233:
L_80647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80648
L_80669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80670
.p2align 0x4
.long 0x5BB
L_80670:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80648:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79781
L_80649:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_407240
L_80650:
	movq 0x48(%rbp),%r15
L_80651:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x50(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_79737
L_80653:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_79737
L_80655:
	cmpl %r11d,%ecx
	jne L_80448
L_80657:
	cmpl $0x0,%r11d
	jl L_80448
L_80658:
	xorl %ecx,%ecx
loop_953:
	cmpl 0x50(%rbp),%ecx
	jnl L_407234
L_80662:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x54(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_80663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_407234:
L_80659:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1DD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1089,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1087,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DD1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0xFF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80660:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80525
.p2align 0x4
L_407240:
L_80668:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_80651
.p2align 0x4
L_407243:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_80603
.p2align 0x4
L_407244:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_80603
.p2align 0x4
L_407245:
L_80671:
	xorl %ecx,%ecx
	jmp L_80607
.p2align 0x4
.long 0x5BE
L_80589:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80590
L_80593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80594
.p2align 0x4
.long 0x540
L_80594:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80590:
	movq $0xFF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80591:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80525
.p2align 0x4
.long 0x586
L_80587:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_80523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_5
.p2align 0x4
.long 0xC76
x_245:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x5BE
L_80558:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80559
L_80569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80570
.p2align 0x4
.long 0x540
L_80570:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80559:
	movq $0x1DCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_79737
L_80561:
	movl %r13d,0x50(%rbp)
	movq $0x37AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x524
L_80351:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_79753
L_80352:
	movl %r15d,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x524
L_80355:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_79753
L_80356:
	movl %r15d,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x526
L_80341:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_79993
L_80342:
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1410
.p2align 0x4
.long 0x527
L_80286:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x527
L_80279:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80280
L_80281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80282
.p2align 0x4
.long 0xC59
L_80282:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80280:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x31A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
.long 0x527
L_80222:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x541
L_80168:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_407260
L_80169:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_79737
L_80171:
	testq %rdx,%rdx
	jz L_407258
L_80172:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_80173:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80174
.p2align 0x4
.long 0xF35
L_80174:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_80175:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_948:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407256
.p2align 0x4,,0x7
L_80176:
	movq 0x48(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407255
L_80183:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_948
.p2align 0x4
L_407255:
L_80177:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_80178:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_407256:
L_80184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80185
.p2align 0x4
.long 0xE6C
L_80185:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_80176
.p2align 0x4
L_407258:
L_80188:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_80175
.p2align 0x4
L_407260:
L_80189:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	movq %r13,0x50(%rbp)
	jne L_79737
L_80191:
	testq %rdx,%rdx
	jz L_407269
L_80192:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_80193:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80194
.p2align 0x4
.long 0x1103
L_80194:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
L_80195:
	movq $0x0,0x60(%rbp)
loop_949:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_407267
L_80196:
	movq 0x38(%rbp),%r15
	movq $0x96F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_79737
L_80198:
	testq %rdx,%rdx
	jz L_407265
L_80199:
	cmpq $0x7FFFFFFF,%rdx
	ja L_80187
L_80200:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80201
.p2align 0x4
.long 0x5A3
L_80201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_80202:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_950:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407263
.p2align 0x4,,0x7
L_80203:
	movq 0x58(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_407262
L_80205:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x48(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_407261
L_80206:
	movq $0x1,%r15
L_80207:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_950
.p2align 0x4
L_407261:
L_80208:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	jmp L_80207
.p2align 0x4
L_407262:
L_80204:
	movq 0x50(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_80178
.p2align 0x4
L_407263:
L_80209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80210
.p2align 0x4
.long 0xD05
L_80210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_80203
.p2align 0x4
L_407265:
L_80212:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_80202
.p2align 0x4
L_407267:
L_80213:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_407269:
L_80218:
	movq (globalObjptr+0xEB8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_80195
.p2align 0x4
.long 0x526
L_80135:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_80136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x556
L_80095:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_80096
.p2align 0x4
.long 0x556
L_80034:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_79761
L_80036:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x556
L_80040:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_79761
L_80042:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1365
.p2align 0x4
.long 0x54A
L_79956:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79957
L_80030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_80031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80031
.p2align 0x4
.long 0x53E
L_80031:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79957:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_407305
	cmpq $0xEB8,%r15
	je L_407304
	cmpq $0xEB9,%r15
	je L_79761
	cmpq $0xEBA,%r15
	je L_407275
	cmpq $0xEBB,%r15
	je L_79761
	cmpq $0xEBC,%r15
	je L_407273
L_79958:
	movq 0x0(%r14),%r15
L_79959:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_407273:
L_80029:
	movq 0x0(%r14),%r15
vs_2:
	movq %r15,0x28(%rbp)
	movq $0x350D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407275:
L_79968:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x45,%r14
	je L_407301
	cmpq $0x46,%r14
	je L_407299
	cmpq $0x47,%r14
	je L_407277
L_79969:
	andq $0x3,%r15
	jnz L_79970
L_79971:
L_79970:
	movq 0x68(%rbp),%r15
	jmp vs_2
.p2align 0x4
L_407277:
L_79990:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_407292
L_79991:
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r15
L_79992:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_79993
L_79994:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB3,%r14
	jne L_79993
L_79995:
	movq 0x0(%r15),%r14
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x13B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movb $0x1,%r9b
	movzbl %r9b,%ecx
	movl %ecx,0x4(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x53,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x13B7,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r9,0x8(%rsp)
	addq $0x18,%r12
	movq $0x13B9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %rsp,0x0(%r9)
	movq %r15,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r14,0x20(%r9)
	addq $0x30,%r12
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_79770
L_79996:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_407288
L_79997:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_79999:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_80000
L_80012:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD16,%r13
	jne L_80000
L_80013:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_407283
L_80000:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80001:
	cmpq $0x1,%r15
	je L_407278
L_80002:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79999
.p2align 0x4
L_407278:
L_80003:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80004
L_80010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_80011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80011
.p2align 0x4
.long 0x1102
L_80011:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_80004:
	movl 0x18(%rbp),%ecx
L_80005:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80006:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80008
L_80009:
	movl %ecx,0x0(%r15)
L_80008:
	movq $0x1A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r10,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r15
	jmp vs_2
.p2align 0x4
L_407283:
L_80015:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80016:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_80018:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_407288:
L_80019:
	xorl %ecx,%ecx
	jmp L_80005
.p2align 0x4
L_407292:
L_80020:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_407298
	cmpq $0xEB8,%r15
	je L_407297
	cmpq $0xEB9,%r15
	je L_79761
	cmpq $0xEBA,%r15
	je L_407295
	cmpq $0xEBB,%r15
	je L_79761
	cmpq $0xEBC,%r15
	je L_407293
L_80021:
	movq 0x0(%r14),%r15
	jmp L_79959
.p2align 0x4
L_407293:
L_80027:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_407295:
L_80025:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_407297:
L_80023:
	movq 0x8(%r14),%r15
L_79964:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_407298:
L_80022:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_407299:
L_79983:
	movq 0x68(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_79832
L_79985:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_407301:
L_79972:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x0,%r14
	jna L_79832
L_79974:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_79975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_407304:
L_79963:
	movq 0x8(%r14),%r15
	jmp L_79964
.p2align 0x4
L_407305:
L_79962:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
.long 0x529
L_79913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79914
L_79924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79925
.p2align 0x4
.long 0x531
L_79925:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79914:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_407307
L_79915:
	movl $0x1,0x0(%r15)
L_79916:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_407307:
L_79923:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_79916
.p2align 0x4
.long 0x56C
L_79933:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79934
L_79938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79939
.p2align 0x4
.long 0x56B
L_79939:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79934:
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jnz L_79875
L_79935:
	movq $0x1967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	jne L_79761
L_79936:
	movq 0x8(%r14),%r15
	jmp L_79909
.p2align 0x4
.long 0x541
x_237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_79941
L_79944:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79941
L_79945:
	jmp L_79932
.p2align 0x4
.long 0xC5D
L_79795:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79796
L_79803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79804
.p2align 0x4
.long 0x59E
L_79804:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79796:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_407315
L_79797:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407314
L_79798:
L_79799:
	movq $0x41E3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_79800:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_407314:
L_79801:
	movq $0x41E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_79800
.p2align 0x4
L_407315:
L_79802:
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1341
.p2align 0x4
.long 0x588
L_79820:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movb 0x60(%rbp),%r14b
	movb %r14b,0x58(%rbp)
	testb %r14b,%r14b
	jz L_407318
L_79821:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_79822:
	jmp L_79794
.p2align 0x4
L_407318:
L_79824:
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0xC77
L_79785:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79786
L_79864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79865
.p2align 0x4
.long 0x567
L_79865:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79786:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_407326
L_79787:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407325
L_79788:
L_79789:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_79790:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_79807
	cmpq $0xEB8,%r14
	je L_79811
	cmpq $0xEB9,%r14
	je L_79815
	cmpq $0xEBA,%r14
	je L_407321
	cmpq $0xEBB,%r14
	je L_79846
	cmpq $0xEBC,%r14
	je L_79850
	jmp L_79792
.p2align 0x4
L_407321:
L_79818:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	jmp L_79819
.p2align 0x4
L_407325:
L_79853:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_79790
.p2align 0x4
L_407326:
L_79854:
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0x526
L_79747:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x578
L_81644:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81645
L_81648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81649
.p2align 0x4
.long 0x563
L_81649:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81645:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_407328
L_81646:
	movl $0x1,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_407328:
L_81647:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x580
L_81575:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x569
L_81564:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81565
L_81567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81568
.p2align 0x4
.long 0x56A
L_81568:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81565:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11),%r15
	movq $0x27A3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_4
.p2align 0x4
.long 0x559
L_81409:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81410
L_81411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81412
.p2align 0x4
.long 0x45B
L_81412:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81410:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x49A3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x1104
x_252:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
L_81443:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_407332
L_81444:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_962
.p2align 0x4
L_407332:
L_80215:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x556
L_81354:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81355
L_81356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81357
.p2align 0x4
.long 0x562
L_81357:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_81355:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x111D
x_251:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
L_81388:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_80215
L_81389:
	movq 0x0(%r14),%r15
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_959
.p2align 0x4
.long 0x57F
L_81255:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81256
L_81292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81293
.p2align 0x4
.long 0x5A0
L_81293:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81256:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1444,%r13
	jne L_407335
L_81258:
	movl 0x0(%r14),%r13d
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0xD,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_407335:
L_81257:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x527
L_81217:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5C1
loop_957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp loop_956
.p2align 0x4
.long 0x1
rev_125:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407339
L_81024:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_81025:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407338
.p2align 0x4,,0x7
L_81026:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407337
L_81027:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_81025
.p2align 0x4
L_407337:
L_81029:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_81030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407338:
L_81037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81038
.p2align 0x4
.long 0x45C
L_81038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81026
.p2align 0x4
L_407339:
L_81039:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_81029
.p2align 0x4
.long 0x57F
L_80919:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80920
L_80976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80977
.p2align 0x4
.long 0x5A0
L_80977:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80920:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_407340
L_80921:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_80922:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407340:
L_80961:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x556
L_80947:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x526
L_80894:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_80862
.p2align 0x4
.long 0x526
rev_124:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_407344
L_80853:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_80854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407343
.p2align 0x4,,0x7
L_80855:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_407342
L_80856:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_80854
.p2align 0x4
L_407342:
L_80858:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407343:
L_80897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80898
.p2align 0x4
.long 0x531
L_80898:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_80855
.p2align 0x4
L_407344:
L_80899:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80858
.p2align 0x4
.long 0x110C
L_80502:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80503
L_80519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80520
.p2align 0x4
.long 0x5D1
L_80520:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80503:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x58(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_79737
L_80505:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_79737
L_80507:
	cmpl %r11d,%ecx
	jne L_80448
L_80509:
	cmpl $0x0,%r11d
	jl L_80448
L_80510:
	xorl %ecx,%ecx
loop_952:
	cmpl 0x58(%rbp),%ecx
	jnl L_407345
L_80513:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_80514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_407345:
L_80511:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x60(%rbp)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_80512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x110A
L_80489:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp someUseful_0
.p2align 0x4
.long 0x526
L_80396:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80397
L_80422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80423
.p2align 0x4
.long 0x45B
L_80423:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80397:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_79770
L_80398:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_407361
L_80399:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_80401:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_407360
L_80414:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD32,%r11
	jne L_407359
L_80415:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_407356
L_80402:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80403:
	cmpq $0x1,%r15
	je L_407351
L_80404:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_80401
.p2align 0x4
L_407351:
L_80405:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80406
L_80412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80413
.p2align 0x4
.long 0x5AB
L_80413:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80406:
	movl 0x18(%rbp),%ecx
L_80407:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80408:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_80410
L_80411:
	movl %ecx,0x0(%r15)
L_80410:
	movq $0x1A65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_79761
.p2align 0x4
L_407356:
L_80417:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79781
L_80418:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79875
L_80420:
	movl %ecx,0x0(%r15)
	jmp L_79875
.p2align 0x4
L_407359:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80402
.p2align 0x4
L_407360:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_80402
.p2align 0x4
L_407361:
L_80421:
	xorl %ecx,%ecx
	jmp L_80407
.p2align 0x4
.long 0x110C
L_80465:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x593
L_80433:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x69C
L_80803:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80772
.p2align 0x4
.long 0x1
L_80773:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x9B3
L_80824:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80825
L_80840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80841
.p2align 0x4
.long 0x5F5
L_80841:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80825:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x838
L_80681:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80682
L_80694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80695
.p2align 0x4
.long 0x781
L_80695:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80682:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x7C0
L_80736:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x51B
L_80642:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80611
.p2align 0x4
.long 0x1
L_80612:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x110F
L_80663:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80664
L_80665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80666
.p2align 0x4
.long 0xC56
L_80666:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80664:
	movl 0x54(%rbp),%ecx
	jmp loop_953
.p2align 0x4
.long 0xC76
L_80573:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_80438
L_80574:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE6,%r15
	jne L_407369
L_80576:
	movq 0x0(%r13),%r15
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79832
L_80578:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80579:
	movq %r13,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80525
.p2align 0x4
L_407369:
L_80575:
	movq (globalObjptr+0x1EB0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x56C
L_80562:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x577
L_80343:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_80344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_3
.p2align 0x4
.long 0x527
L_80287:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x575
L_80223:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x559
L_80179:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80180
L_80181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80182
.p2align 0x4
.long 0x45B
L_80182:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80180:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x499F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x1104
x_242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
L_80214:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_80215
L_80216:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_949
.p2align 0x4
.long 0x526
L_80136:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
x_238:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_79761
L_79961:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x524
x_239:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_79761
L_79966:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0xCCF
L_79986:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79987
L_79988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79989
.p2align 0x4
.long 0x1101
L_79989:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79987:
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x10FF
L_79975:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79976
L_79981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_79982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79982
.p2align 0x4
.long 0x1100
L_79982:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_79976:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	cmpq $0x1,0x28(%rbp)
	jna L_79832
L_79978:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
.long 0xC76
L_79917:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79918
L_79921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79922
.p2align 0x4
.long 0x53A
L_79922:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79918:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_407378
L_79919:
	movl $0x1,0x0(%r15)
	jmp L_79761
.p2align 0x4
L_407378:
L_79920:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_79761
.p2align 0x4
.long 0x10FC
L_79825:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79826
L_79843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79844
.p2align 0x4
.long 0x10FE
L_79844:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79826:
	movq 0x20(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x3529,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x57F
L_79855:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79856
.p2align 0x4
.long 0x527
L_79748:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1312
.p2align 0x4
.long 0x580
L_81576:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
L_81566:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp L_79761
.p2align 0x4
.long 0x541
L_81259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81261
L_81290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81291
.p2align 0x4
.long 0x564
L_81291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_81261
.p2align 0x4
.long 0x541
L_81218:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1313
.p2align 0x4
.long 0x1
L_81030:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81031
L_81035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81036
.p2align 0x4
.long 0x452
L_81036:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81031:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF0C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xCCA
L_80923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80924
L_80959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80960
.p2align 0x4
.long 0x5D1
L_80960:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80924:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80925:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_79753
L_80926:
	cmpq $0x1,%r14
	je L_407383
L_80927:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80925
.p2align 0x4
L_407383:
L_80928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80929
L_80957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80958
.p2align 0x4
.long 0x547
L_80958:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80929:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407384
L_80930:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_80931
.p2align 0x4
L_407384:
L_80956:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_80931
.p2align 0x4
.long 0x1116
L_80962:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x110E
L_80514:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80515
L_80516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80517
.p2align 0x4
.long 0xFF3
L_80517:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_80515:
	movl 0x20(%rbp),%ecx
	jmp loop_952
.p2align 0x4
.long 0x110B
L_80512:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_80392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0x110B
L_80490:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_407389
L_80491:
	movq 0x20(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
L_407389:
L_80495:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_79761
L_80496:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_80394
.p2align 0x4
.long 0x599
L_80466:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80467
L_80478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80479
.p2align 0x4
.long 0x110D
L_80479:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80467:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_80438
L_80468:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_407392
L_80469:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80471:
	movl %r13d,0x60(%rbp)
	movq $0x3969,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_80472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_407392:
L_80440:
	movq (globalObjptr+0x2140)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x110C
L_80434:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_80435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0x4B0
L_80774:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED60)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x77E
L_80826:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80827
L_80838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80839
.p2align 0x4
.long 0x781
L_80839:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80827:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x848
L_80683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80684
L_80692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80693
.p2align 0x4
.long 0x849
L_80693:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80684:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xEF60)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_80685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x7C0
L_80737:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80738
L_80740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80741
.p2align 0x4
.long 0x6AF
L_80741:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80738:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x4B0
L_80613:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEB80)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x549
L_80563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80564
L_80567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80568
.p2align 0x4
.long 0x56B
L_80568:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80564:
	movq $0xFF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80565:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80525
.p2align 0x4
.long 0x524
L_80344:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_79761
.p2align 0x4
.long 0x541
L_80288:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1313
.p2align 0x4
.long 0x575
L_80224:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x527
L_80137:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_80139
L_80155:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_407400
L_80157:
	movq (globalObjptr+0xE678)(%rip),%r15
L_80140:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407400:
L_80139:
	movq (globalObjptr+0xECE0)(%rip),%r15
	jmp L_80140
.p2align 0x4
.long 0x524
x_240:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_79761
L_79980:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x10FD
L_79827:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je L_407408
	cmpq $0x3A,%r14
	je L_407406
	cmpq $0x3D,%r14
	je L_407404
L_79828:
	andq $0x3,%r15
	jnz L_79761
L_79829:
	jmp L_79761
.p2align 0x4
L_407404:
L_79839:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_79832
L_79841:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_407406:
L_79835:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_79832
L_79837:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_407408:
L_79830:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_79832
L_79833:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
.long 0x528
L_79749:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_79750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_8
.p2align 0x4
.long 0x541
L_81577:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
.long 0x542
L_81219:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0x1
bug_215:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81032
L_81033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81034
.p2align 0x4
.long 0x452
L_81034:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81032:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCCA
L_80963:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80964
L_80974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80975
.p2align 0x4
.long 0x5D1
L_80975:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80964:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80965:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_79753
L_80966:
	cmpq $0x1,%r14
	je L_407411
L_80967:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80965
.p2align 0x4
L_407411:
L_80968:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80969
L_80972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80973
.p2align 0x4
.long 0x1117
L_80973:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80969:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407412
L_80970:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_80922
.p2align 0x4
L_407412:
L_80971:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_80922
.p2align 0x4
.long 0x110B
L_80492:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80493:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80394
.p2align 0x4
.long 0x599
L_80472:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79832
L_80474:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x110C
L_80435:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5B0
L_80775:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x848
L_80828:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80829
L_80836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80837
.p2align 0x4
.long 0x849
L_80837:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80829:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xEF60)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_80830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x77F
L_80685:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_80686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x78C
L_80739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_80689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5B0
L_80614:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x542
L_80289:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0xCF6
L_80225:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_407419
L_80226:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_80227:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_80228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407419:
L_80275:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_80227
.p2align 0x4
.long 0x549
L_80141:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80142
L_80153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80154
.p2align 0x4
.long 0x56B
L_80154:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80142:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80143:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_79753
L_80144:
	cmpq $0x1,%r14
	je L_407420
L_80145:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80143
.p2align 0x4
L_407420:
L_80146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80147
L_80151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80152
.p2align 0x4
.long 0x56E
L_80152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80147:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407421
L_80148:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_241:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407421:
L_80150:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_241
.p2align 0x4
.long 0x55C
L_79842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x55C
L_79838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x55C
L_79834:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x528
L_79750:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79751
L_79765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79766
.p2align 0x4
.long 0x56B
L_79766:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79751:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_79752:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_79754:
	cmpq $0x1,%r14
	je L_407425
L_79755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79752
.p2align 0x4
L_407425:
L_79756:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79757
L_79763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79764
.p2align 0x4
.long 0x57A
L_79764:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79757:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407426
L_79758:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_235:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x38(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_79759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407426:
L_79762:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_235
.p2align 0x4
.long 0x571
L_81578:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_407430
L_81579:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_81580:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_81581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407430:
L_81607:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_81580
.p2align 0x4
.long 0xC5A
L_81220:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81221
L_81232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81233
.p2align 0x4
.long 0xC5B
L_81233:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81221:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_81222:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_81223:
	cmpq $0x1,%r14
	je L_407431
L_81224:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_81222
.p2align 0x4
L_407431:
L_81225:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81226
L_81230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81231
.p2align 0x4
.long 0x57A
L_81231:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81226:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407432
L_81227:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_250:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407432:
L_81229:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_250
.p2align 0x4
.long 0x599
L_80475:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80476:
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_80394
.p2align 0x4
.long 0x593
L_80436:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80437
L_80457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80458
.p2align 0x4
.long 0x5D7
L_80458:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80437:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_80438
L_80439:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_80440
L_80441:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79737
L_80443:
	movl %r13d,0x60(%rbp)
	movq $0x3969,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_80444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x51F
L_80776:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80777
L_80800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80801
.p2align 0x4
.long 0x4AF
L_80801:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80777:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80778:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80779:
	cmpq $0x1,%r14
	je L_407441
L_80780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80778
.p2align 0x4
L_407441:
L_80781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80782
L_80798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80799
.p2align 0x4
.long 0x4E7
L_80799:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80782:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407442
L_80783:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_125:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407442:
L_80797:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_125
.p2align 0x4
.long 0x77F
L_80830:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_80831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x77F
L_80686:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80687
L_80690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80691
.p2align 0x4
.long 0xA51
L_80691:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_80687:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1
L_80689:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_80615:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80616
L_80639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80640
.p2align 0x4
.long 0x4AF
L_80640:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80616:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80617:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79753
L_80618:
	cmpq $0x1,%r14
	je L_407447
L_80619:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80617
.p2align 0x4
L_407447:
L_80620:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80621
L_80637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80638
.p2align 0x4
.long 0x4E7
L_80638:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80621:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407448
L_80622:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_124:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407448:
L_80636:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_124
.p2align 0x4
.long 0xC5A
L_80290:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80291
L_80302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80303
.p2align 0x4
.long 0xC5B
L_80303:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80291:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80292:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80293:
	cmpq $0x1,%r14
	je L_407452
L_80294:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80292
.p2align 0x4
L_407452:
L_80295:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80296
L_80300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80301
.p2align 0x4
.long 0x57A
L_80301:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80296:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407453
L_80297:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_244:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_80298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407453:
L_80299:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_244
.p2align 0x4
.long 0x1105
L_80228:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80229
L_80273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80274
.p2align 0x4
.long 0x1109
L_80274:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_80229:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xF0A8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_407458
L_80230:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_80231:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_79737
L_80233:
	movl %r10d,0x78(%rbp)
	movq $0x3B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x70(%rbp)
	addq $0x20,%r12
	addq $0x70,%rbp
	leaq (L_80234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_407458:
L_80272:
	movq $0x1,%r15
L_80244:
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_80245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x556
L_80149:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x457
L_79759:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x529
L_81581:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81582
L_81605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81606
.p2align 0x4
.long 0x531
L_81606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81582:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF0C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_407461
	cmpq $0x2,%r13
	je L_407460
L_81583:
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_81584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407460:
L_81604:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_81585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407461:
L_81603:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_81585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56D
L_81228:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x593
L_80444:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_79737
L_80446:
	movl 0x38(%rbp),%r15d
	cmpl %ecx,%r15d
	jne L_80448
L_80449:
	cmpl $0x0,%r15d
	jl L_80448
L_80450:
	xorl %ecx,%ecx
loop_951:
	cmpl 0x38(%rbp),%ecx
	jnl L_407463
L_80454:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_80455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_407463:
L_80451:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79761
L_80452:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_80394
.p2align 0x4
.long 0x1
rev_123:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407470
L_80784:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407469
.p2align 0x4,,0x7
L_80786:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407468
L_80787:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80785
.p2align 0x4
L_407468:
L_80789:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407469:
L_80794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80795
.p2align 0x4
.long 0x45C
L_80795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80786
.p2align 0x4
L_407470:
L_80796:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80789
.p2align 0x4
.long 0x77F
L_80831:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80832
L_80834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80835
.p2align 0x4
.long 0xA51
L_80835:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_80832:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x61C
L_80688:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_80689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
rev_122:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407474
L_80623:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80624:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407473
.p2align 0x4,,0x7
L_80625:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407472
L_80626:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80624
.p2align 0x4
L_407472:
L_80628:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407473:
L_80633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80634
.p2align 0x4
.long 0x45C
L_80634:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80625
.p2align 0x4
L_407474:
L_80635:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80628
.p2align 0x4
.long 0x56D
L_80298:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1106
L_80234:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_80235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x10FD
L_80245:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80246
L_80266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80267
.p2align 0x4
.long 0x1107
L_80267:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80246:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF0B0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5CB
L_81584:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_81585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5CB
L_81585:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81586
L_81601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81602
.p2align 0x4
.long 0x5D0
L_81602:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81586:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF0D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_81587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5A7
L_80455:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x3C(%rbp),%ecx
	jmp loop_951
.p2align 0x4
.long 0x1
L_80790:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80791
L_80792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80793
.p2align 0x4
.long 0x452
L_80793:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80791:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_80833:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_80689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_80629:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80630
L_80631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80632
.p2align 0x4
.long 0x452
L_80632:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80630:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1106
L_80235:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80236
L_80270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_80271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80271
.p2align 0x4
.long 0x1108
L_80271:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_80236:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x58(%rbp),%r14d
	incl %r14d
	jo L_79753
L_80237:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_407479
L_80238:
	movl %r14d,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_80231
.p2align 0x4
L_407479:
L_80239:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_80240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407481
.p2align 0x4,,0x7
L_80241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_80244
L_80242:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_80240
.p2align 0x4
L_407481:
L_80268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80269
.p2align 0x4
.long 0x58A
L_80269:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_80241
.p2align 0x4
.long 0x57E
L_80247:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x455
L_81587:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81588
L_81599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81600
.p2align 0x4
.long 0x636
L_81600:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81588:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_81589:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_81590:
	cmpq $0x1,%r14
	je L_407484
L_81591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_81589
.p2align 0x4
L_407484:
L_81592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81593
L_81597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81598
.p2align 0x4
.long 0x579
L_81598:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81593:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407485
L_81594:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_253:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_81595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407485:
L_81596:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_253
.p2align 0x4
.long 0x57E
L_80248:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80249
L_80264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80265
.p2align 0x4
.long 0x531
L_80265:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80249:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF0B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x569
L_81595:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x55C
L_80250:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80251
L_80262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80263
.p2align 0x4
.long 0x555
L_80263:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_80251:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_80252:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_79753
L_80253:
	cmpq $0x1,%r14
	je L_407490
L_80254:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80252
.p2align 0x4
L_407490:
L_80255:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80256
L_80260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80261
.p2align 0x4
.long 0x539
L_80261:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80256:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407491
L_80257:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_243:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_80258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_407491:
L_80259:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_243
.p2align 0x4
.long 0x56D
L_80258:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
