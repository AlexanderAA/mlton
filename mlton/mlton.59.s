/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:17:18 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loopDecs_0
.hidden loopDecs_0
loopDecs_0:
L_172679:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_173087
L_172680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451123
L_172681:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r15),%r11
	cmpq $0x1,%r11
	je L_451122
L_172682:
	movq 0x8(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xE99,%r11
	je L_451077
	cmpq $0xE9A,%r11
	je L_451076
L_172683:
	movq (globalObjptr+0x1D90)(%rip),%r11
	movq %r11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451076:
L_172915:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x339F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_172916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_451077:
L_172684:
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_451078
	jmp *jumpTable_584(,%rax,8)
.data
.p2align 0x4
jumpTable_584:
.quad L_451120,L_451119,L_451118,L_451117,L_451115,L_451088,L_451087,L_451086,L_451084,L_451080,L_451079
.text
.p2align 0x4
L_451078:
L_172685:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_172686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451079:
L_172892:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451080:
L_172858:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_451082
L_172885:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_451081
L_172887:
	movl %r13d,0x68(%rbp)
	movq $0x3753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_451081:
L_172708:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451082:
L_172859:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_172708
L_172861:
	movl %r13d,0x68(%rbp)
	movq $0x380B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
L_451084:
L_172843:
	movq 0x10(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_451085
L_172844:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_172845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451085:
L_172857:
	movq $0x1,%r15
L_172851:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
L_172692:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451086:
L_172842:
	movq %r11,0x10(%rbp)
	jmp L_172692
.p2align 0x4
L_451087:
L_172829:
	movq 0x10(%r11),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_451088:
L_172746:
	movq 0x18(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_172747
L_172748:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_451113
L_172749:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x70(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_172751:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_451112
L_172787:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE1,%r11
	jne L_451111
L_172788:
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_451093
L_172752:
	movl 0x70(%rbp),%r11d
	incl %r11d
	jo L_451092
L_172754:
	cmpq $0x1,%r15
	je L_451089
L_172755:
	movl %r11d,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_172751
.p2align 0x4
L_451089:
	movl %r11d,%ecx
L_172757:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_451091
L_172759:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_172761
L_172786:
	movl %ecx,0x0(%r15)
L_172761:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451091:
L_172758:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451092:
L_172753:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451093:
L_172790:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172791
L_172826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_172827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172827
.p2align 0x4
.long 0x2356
L_172827:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_172791:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_172758
L_172792:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_451108
L_172793:
	movq 0x78(%rbp),%r15
L_172794:
	movl 0x4(%r15),%r13d
	testl %r13d,%r13d
	jz L_172761
L_172796:
	movq $0x2805,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_451106
L_172797:
	movq %r15,0x0(%r13)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_451105
L_172798:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x58(%rbp)
	movl $0x0,0x78(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_172800:
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_451104
L_172813:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE2,%r11
	jne L_451103
L_172814:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_451099
L_172801:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x58(%rbp)
	jo L_172753
L_172802:
	cmpq $0x1,%r15
	je L_451094
L_172803:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x78(%rbp)
	movq %r14,0x58(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_172800
.p2align 0x4
L_451094:
L_172804:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172805
L_172811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_172812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172812
.p2align 0x4
.long 0x2354
L_172812:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_172805:
	movl 0x58(%rbp),%ecx
L_172806:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_172758
L_172807:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_172809
L_172810:
	movl %ecx,0x0(%r15)
L_172809:
	movq $0x19C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_172764:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_451099:
L_172816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172817
L_172822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_172823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172823
.p2align 0x4
.long 0x2355
L_172823:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_172817:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_172758
L_172818:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_451100
L_172819:
	movq 0x58(%rbp),%r15
L_172820:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172764
.p2align 0x4
L_451100:
L_172821:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_172820
.p2align 0x4
L_451103:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172801
.p2align 0x4
L_451104:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172801
.p2align 0x4
L_451105:
L_172824:
	xorl %ecx,%ecx
	jmp L_172806
.p2align 0x4
L_451106:
L_172747:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451108:
L_172825:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_172794
.p2align 0x4
L_451111:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172752
.p2align 0x4
L_451112:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172752
.p2align 0x4
L_451113:
L_172828:
	xorl %ecx,%ecx
	jmp L_172757
.p2align 0x4
L_451115:
L_172739:
	movq 0x10(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_172708
L_172741:
	movl %r11d,0x60(%rbp)
	movq $0x3707,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_172742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_451117:
L_172738:
	movq %r11,0x10(%rbp)
	jmp L_172692
.p2align 0x4
L_451118:
L_172726:
	movl 0x0(%r11),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451119:
L_172714:
	movl 0x0(%r11),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451120:
L_172706:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_172708
L_172709:
	movl %r11d,0x60(%rbp)
	movq $0x3707,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_172710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_451122:
L_173075:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_173076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451123:
L_173087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_173088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173088
.p2align 0x4
.long 0x460
L_173088:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_172681
.p2align 0x4
.long 0xDD1
L_172916:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172917
L_173073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_173074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173074
.p2align 0x4
.long 0xDCF
L_173074:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_172917:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_172918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0xA33
L_172686:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451126
L_172705:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_1:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451126:
L_172687:
	movq 0x28(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xA37
L_172893:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451127
L_172914:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_6:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451127:
L_172894:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x9D6
L_172888:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172889
L_172890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172891
.p2align 0x4
.long 0x85D
L_172891:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172889:
	movq $0x246D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_172864:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x8A7
L_172862:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172863
L_172883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172884
.p2align 0x4
.long 0x9E4
L_172884:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172863:
	movq $0x246B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp L_172864
.p2align 0x4
.long 0xA37
L_172845:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451130
L_172856:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_4:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451130:
L_172846:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1862
L_172693:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172694
L_172699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172700
.p2align 0x4
.long 0x234E
L_172700:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172694:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0xB68
L_172830:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172831
L_172840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172841
.p2align 0x4
.long 0x9E4
L_172841:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172831:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
.long 0x8A7
L_172762:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172764
L_172784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172785
.p2align 0x4
.long 0x85D
L_172785:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_172764
.p2align 0x4
.long 0x2353
L_172765:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x1FFE
L_172742:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172743
L_172744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172745
.p2align 0x4
.long 0x8A8
L_172745:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172743:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x2350
L_172727:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451135
L_172737:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_3:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451135:
L_172728:
	movq 0x50(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_172729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2350
L_172715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451136
L_172725:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_2:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451136:
L_172716:
	movq 0x50(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_172717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x234F
L_172710:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172711
L_172712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172713
.p2align 0x4
.long 0xDDC
L_172713:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172711:
	movq $0x1D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x51A
L_173076:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451138
L_173086:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
mono_8:
	movq $0x1,0x10(%rbp)
	movl $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_173080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451138:
L_173077:
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_173078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xBC4
L_172918:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%rdx
	movq %rdx,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r14,%rdx
	jne L_172708
L_172920:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x48(%rbp)
	je L_451181
L_172921:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172975
L_172922:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172923
.p2align 0x4
.long 0x1DE7
L_172923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_172924:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x58(%rbp)
loop_1748:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_451179
L_172925:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4C(%rbp),%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_451178
L_172926:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172975
L_172927:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172928
.p2align 0x4
.long 0x2361
L_172928:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_172929:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1749:
	cmpq 0x58(%rbp),%r15
	jnl L_451142
.p2align 0x4,,0x7
loop_1758:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_451140
L_173056:
	incl %ecx
	jo L_172753
L_173057:
	jmp loop_1758
.p2align 0x4
L_451140:
L_173054:
	incl %ecx
	jo L_172753
L_173055:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1749
.p2align 0x4
L_451142:
L_172930:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172931
L_173051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_173052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173052
.p2align 0x4
.long 0x236D
L_173052:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172931:
	movq 0x60(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2809,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_451175
L_172932:
	movq 0x40(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_172975
L_172933:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x152D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172934
.p2align 0x4
.long 0x2362
L_172934:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_172935:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1750:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_451173
L_172936:
	movq 0x48(%rbp),%r15
	movq $0x17A3,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_451172
L_172937:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172975
L_172938:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x152F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172939
.p2align 0x4
.long 0x2363
L_172939:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
L_172940:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1751:
	cmpq 0x10(%rbp),%r15
	jnl L_451146
.p2align 0x4,,0x7
loop_1757:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_451144
L_173036:
	incl %ecx
	jo L_172753
L_173037:
	jmp loop_1757
.p2align 0x4
L_451144:
L_173034:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	incl %ecx
	jo L_172753
L_173035:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x0(%r9,%r11,1)
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r10
	movq %r13,0x8(%r9,%r10,1)
	incq %r15
	jmp loop_1751
.p2align 0x4
L_451146:
L_172941:
	movq 0x28(%rbp),%r15
	movq $0x977,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	jne L_172708
L_172943:
	cmpl $0x0,%r13d
	jl L_451169
L_172944:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1752:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_451149
L_172998:
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	movq %r10,0x58(%rbp)
	cmpq $0x1,%r11
	jne L_451147
L_173031:
	movq 0x48(%rbp),%r15
.p2align 0x4,,0x7
L_173016:
	movq %r15,0x48(%rbp)
	incl 0x14(%rbp)
	jmp loop_1752
.p2align 0x4
L_451147:
L_172999:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173000
L_173029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_173030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173030
.p2align 0x4
.long 0x236A
L_173030:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_173000:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	movq %r13,%r15
L_173001:
	movq $0x3FDB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_173002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_451149:
L_172945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172946
L_172996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172997
.p2align 0x4
.long 0x2365
L_172997:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172946:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_451167
L_172947:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_172948:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451166
.p2align 0x4,,0x7
L_172949:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF57,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_451150
L_172950:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_172948
.p2align 0x4
L_451150:
L_172951:
	movq %r13,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_172952:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451165
.p2align 0x4,,0x7
L_172953:
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_451151
L_172954:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_172952
.p2align 0x4
L_451151:
L_172955:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_451159
L_172956:
	movq 0x28(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_172957:
	addq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r13
	je L_451152
L_172958:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_172957
.p2align 0x4
L_451152:
L_172959:
	testq %r15,%r15
	jz L_451158
L_172960:
	cmpq $0x7FFFFFFF,%r15
	ja L_451157
L_172961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172962
.p2align 0x4
.long 0x606
L_172962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_172963:
	movq 0x30(%rbp),%r11
	movq 0x28(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1753:
	cmpq 0x20(%rbp),%r15
	jnl L_451155
.p2align 0x4,,0x7
loop_1754:
	cmpq 0x0(%r13),%r14
	jl L_451154
L_172970:
	cmpq $0x1,%r11
	je L_451153
L_172971:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_1754
.p2align 0x4
L_451153:
L_172972:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451154:
L_172973:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x40(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_1753
.p2align 0x4
L_451155:
L_172964:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172965
L_172967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_172968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172968
.p2align 0x4
.long 0x2364
L_172968:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_172965:
	movq 0x40(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
L_172966:
	movq (globalObjptr+0xF60)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451157:
L_172975:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451158:
L_172976:
	movq (globalObjptr+0x1DB8)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_172963
.p2align 0x4
L_451159:
L_172977:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x20(%rbp)
	je L_451164
L_172978:
	testq %r13,%r13
	jz L_451163
L_172979:
	cmpq $0x7FFFFFFF,%r13
	ja L_172975
L_172980:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172981
.p2align 0x4
.long 0x794
L_172981:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
L_172982:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1755:
	cmpq 0x30(%rbp),%r15
	jnl L_451160
L_172987:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x28(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1755
.p2align 0x4
L_451160:
L_172983:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172984
L_172985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172986
.p2align 0x4
.long 0x607
L_172986:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_172984:
	movq 0x28(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_172966
.p2align 0x4
L_451163:
L_172989:
	movq (globalObjptr+0x1DC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_172982
.p2align 0x4
L_451164:
L_172990:
	movq 0x20(%rbp),%r15
	jmp L_172966
.p2align 0x4
L_451165:
L_172991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172992
.p2align 0x4
.long 0x5E8
L_172992:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_172953
.p2align 0x4
L_451166:
L_172993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172994
.p2align 0x4
.long 0x5E8
L_172994:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_172949
.p2align 0x4
L_451167:
L_172995:
	movq (globalObjptr+0x1DC8)(%rip),%r14
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_172966
.p2align 0x4
L_451169:
L_173032:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451172:
L_173039:
	movq (globalObjptr+0x1DB0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_172940
.p2align 0x4
L_451173:
L_173040:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_173041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451175:
L_173050:
	movq (globalObjptr+0x1DA8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_172935
.p2align 0x4
L_451178:
L_173059:
	movq (globalObjptr+0x1DA0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_172929
.p2align 0x4
L_451179:
L_173060:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_173061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_451181:
L_173072:
	movq (globalObjptr+0x1D98)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_172924
.p2align 0x4
.long 0xDDA
L_172690:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172691
L_172701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172702
.p2align 0x4
.long 0x19BB
L_172702:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172691:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_172692
.p2align 0x4
.long 0x19B1
L_172688:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172689
L_172703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172704
.p2align 0x4
.long 0x19B3
L_172704:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172689:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_1
.p2align 0x4
.long 0x8A7
L_172897:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172898
L_172910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172911
.p2align 0x4
.long 0x9E4
L_172911:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172898:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x9E5
L_172895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172896
L_172912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172913
.p2align 0x4
.long 0xFA8
L_172913:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172896:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_6
.p2align 0x4
.long 0x235B
L_172865:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451187
L_172882:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_5:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451187:
L_172866:
	movq 0x60(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xB68
L_172849:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172850
L_172852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172853
.p2align 0x4
.long 0x85D
L_172853:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172850:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172851
.p2align 0x4
.long 0x235A
L_172847:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172848
L_172854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172855
.p2align 0x4
.long 0xC31
L_172855:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172848:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_4
.p2align 0x4
.long 0x185D
L_172695:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172696
L_172697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172698
.p2align 0x4
.long 0x19E7
L_172698:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172696:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2357
L_172832:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172833
L_172838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_172839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172839
.p2align 0x4
.long 0x2359
L_172839:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_172833:
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_172834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x8EA
L_172766:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451192
L_172778:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451192:
L_172767:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_451193
L_172768:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_172769:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451193:
L_172777:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDA
L_172731:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172732
L_172733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172734
.p2align 0x4
.long 0xE40
L_172734:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172732:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x2351
L_172729:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172730
L_172735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172736
.p2align 0x4
.long 0x2352
L_172736:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172730:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_3
.p2align 0x4
.long 0xDDA
L_172719:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172720
L_172721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172722
.p2align 0x4
.long 0xE40
L_172722:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172720:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x2351
L_172717:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172718
L_172723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172724
.p2align 0x4
.long 0x2352
L_172724:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172718:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_2
.p2align 0x4
.long 0x4B0
L_173080:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173081
L_173082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_173083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173083
.p2align 0x4
.long 0x460
L_173083:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_173081:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F2
L_173078:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173079
L_173084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_173085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173085
.p2align 0x4
.long 0x783
L_173085:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_173079:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp mono_8
.p2align 0x4
.long 0xA96
L_173002:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173003
L_173027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_173028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173028
.p2align 0x4
.long 0x2366
L_173028:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_173003:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_172708
L_173005:
	cmpl %r13d,0x10(%rbp)
	je L_451200
L_173006:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451200:
L_173007:
	movq 0x40(%rbp),%r15
	testq %r15,%r15
	jz L_451205
L_173008:
	cmpq $0x7FFFFFFF,%r15
	ja L_172975
L_173009:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173010
L_173023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_173024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173024
.p2align 0x4
.long 0x2366
L_173024:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_173010:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_173011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173011
.p2align 0x4
.long 0x2366
L_173011:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_173012:
	movq $0x0,0x70(%rbp)
loop_1756:
	movq 0x40(%rbp),%r14
	cmpq %r14,0x70(%rbp)
	jl L_451202
L_173013:
	movq 0x68(%rbp),%r14
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2809,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_173016
L_173014:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_173001
.p2align 0x4
L_451202:
L_173017:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x60(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_173018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451205:
L_173026:
	movq (globalObjptr+0x1DD0)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_173012
.p2align 0x4
.long 0x236B
L_173041:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173042
L_173047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_173048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173048
.p2align 0x4
.long 0x236C
L_173048:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_173042:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1402,%r15
	je L_451208
L_173046:
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
L_173045:
	movl %ecx,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1750
.p2align 0x4
L_451208:
L_173043:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x280B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_172753
L_173044:
	jmp L_173045
.p2align 0x4
.long 0x236E
L_173061:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451211
L_173064:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_173065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_451211:
L_173062:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r14
	xchgq %r14,%r15
L_173063:
	movl %ecx,0x4C(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1748
.p2align 0x4
.long 0x235D
L_172899:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_451212
L_172909:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_7:
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_172903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451212:
L_172900:
	movq 0x68(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2004
L_172869:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172870
L_172878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172879
.p2align 0x4
.long 0x85D
L_172879:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172870:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_451213
L_172871:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_451213:
L_172877:
	movq $0x1,%r14
	xchgq %r14,%r15
L_172874:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x8A7
L_172867:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172868
L_172880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172881
.p2align 0x4
.long 0x1038
L_172881:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172868:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_5
.p2align 0x4
.long 0x2358
L_172834:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172835
L_172836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172837
.p2align 0x4
.long 0xC31
L_172837:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172835:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0xB2F
L_172779:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x8A7
L_172770:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x2367
L_173018:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_173019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x236F
L_173065:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_173066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x235F
L_172903:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172904
L_172905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172906
.p2align 0x4
.long 0x2360
L_172906:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172904:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_172692
.p2align 0x4
.long 0x235E
L_172901:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172902
L_172907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172908
.p2align 0x4
.long 0x2360
L_172908:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172902:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_7
.p2align 0x4
.long 0x235C
L_172872:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172873
L_172875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172876
.p2align 0x4
.long 0xA9F
L_172876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172873:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172874
.p2align 0x4
.long 0x113E
L_172780:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172781
L_172782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172783
.p2align 0x4
.long 0x9AA
L_172783:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172781:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EF
L_172771:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172772
L_172775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_172776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172776
.p2align 0x4
.long 0x9E1
L_172776:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_172772:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451221
L_172773:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_172769
.p2align 0x4
L_451221:
L_172774:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2368
L_173019:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173020
L_173021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_173022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173022
.p2align 0x4
.long 0x2369
L_173022:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_173020:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1756
.p2align 0x4
.long 0x2370
L_173066:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173067
L_173069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_173070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173070
.p2align 0x4
.long 0x2371
L_173070:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_173067:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_172753
L_173068:
	jmp L_173063
.text
.p2align 0x4
.globl shrinkDecs_0
.hidden shrinkDecs_0
shrinkDecs_0:
L_173089:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_176824
L_173090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451247
L_173091:
	movq 0x0(%rbp),%r15
loop_1759:
	movq 0x8(%rbp),%r14
	movq 0xA0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_451246
L_173092:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE99,%r15
	je L_451245
	cmpq $0xE9A,%r15
	je L_451227
	cmpq $0xE9B,%r15
	je L_451226
L_173093:
	movq 0x18(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%r14),%r15
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_173094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451226:
L_176818:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_176819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451227:
L_176694:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	movq %r15,0x40(%rbp)
	jne L_173127
L_176696:
	testl %r10d,%r10d
	jz L_451233
L_176697:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	movq %r10,0x20(%rbp)
	cmpq %r10,%r15
	jne L_451232
L_176699:
	testq %r10,%r10
	jz L_451231
L_176700:
	cmpq $0x7FFFFFFF,%r10
	ja L_451230
L_176701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176702
L_176715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176716
.p2align 0x4
.long 0x2466
L_176716:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_176702:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176703
.p2align 0x4
.long 0x2466
L_176703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x28(%rbp)
L_176704:
	movq $0x0,0x38(%rbp)
loop_1789:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_451228
L_176705:
	movq 0x28(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_176706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451228:
L_176710:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (L_176711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451230:
L_173184:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451231:
L_176718:
	movq (globalObjptr+0x1CA8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_176704
.p2align 0x4
L_451232:
L_173127:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451233:
L_176719:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %r15,%rdx
	jne L_173127
L_176721:
	testq %rdx,%rdx
	jz L_451242
L_176722:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_176723:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176724
.p2align 0x4
.long 0x985
L_176724:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_176725:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1790:
	movq 0x38(%rbp),%rdx
	cmpq %rdx,0x60(%rbp)
	jl L_451240
L_176726:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_451239
L_176727:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_176728:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176729
.p2align 0x4
.long 0x2469
L_176729:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_176730:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1791:
	cmpq 0x38(%rbp),%r15
	jnl L_451237
.p2align 0x4,,0x7
loop_1796:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_451235
L_176799:
	incl %ecx
	jo L_451234
L_176800:
	jmp loop_1796
.p2align 0x4
L_451234:
L_173118:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451235:
L_176797:
	incl %ecx
	jo L_173118
L_176798:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1791
.p2align 0x4
L_451237:
L_176731:
	movq 0x48(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_176732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451239:
L_176802:
	movq (globalObjptr+0x1CB8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_176730
.p2align 0x4
L_451240:
L_176803:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_176804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451242:
L_176817:
	movq (globalObjptr+0x1CB0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_176725
.p2align 0x4
L_451245:
L_173102:
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_173103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451246:
L_176823:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451247:
L_176824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176825
.p2align 0x4
.long 0x45D
L_176825:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_173091
.p2align 0x4
.long 0x986
L_173094:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173095
L_173100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173101
.p2align 0x4
.long 0x2373
L_173101:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173095:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_173096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
.long 0x78C
L_176819:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176820
L_176821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_176822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176822
.p2align 0x4
.long 0x7B6
L_176822:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_176820:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_176706:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176707
L_176708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_176709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176709
.p2align 0x4
.long 0x509
L_176709:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_176707:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2467
L_176711:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176712
L_176713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176714
.p2align 0x4
.long 0x2468
L_176714:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176712:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1789
.p2align 0x4
.long 0x246A
L_176732:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %r14,%rdx
	jne L_173127
L_176734:
	testq %rdx,%rdx
	jz L_451268
L_176735:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_176736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176737
.p2align 0x4
.long 0x985
L_176737:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_176738:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1792:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_451266
L_176739:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_451265
L_176740:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_176741:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1521,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176742
.p2align 0x4
.long 0x246B
L_176742:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
L_176743:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1793:
	cmpq 0x20(%rbp),%r15
	jnl L_451256
.p2align 0x4,,0x7
loop_1795:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_451254
L_176770:
	incl %ecx
	jo L_173118
L_176771:
	jmp loop_1795
.p2align 0x4
L_451254:
L_176768:
	incl %ecx
	jo L_173118
L_176769:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r11),%r8
	movq 0x10(%r11),%rsp
	movq 0x28(%rbp),%r11
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	imulq $0x18,%r14
	movq %r9,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rdi,%r14,1)
	imulq $0x18,%r13
	movq %r8,0x8(%r11,%r13,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rdi,%r14,1)
	imulq $0x18,%r10
	movq %rsp,0x10(%r11,%r10,1)
	incq %r15
	jmp loop_1793
.p2align 0x4
L_451256:
L_176744:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176745
L_176765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_176766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176766
.p2align 0x4
.long 0x246C
L_176766:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_176745:
	movq 0x28(%rbp),%r15
	movq $0x17C1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r14
	jne L_173127
L_176747:
	testl %r13d,%r13d
	jz L_451261
L_176748:
	testq %r11,%r11
	jz L_451260
L_176749:
	cmpq $0x7FFFFFFF,%r11
	ja L_173184
L_176750:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176751
L_176760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_176761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176761
.p2align 0x4
.long 0x246C
L_176761:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_176751:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_176752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176752
.p2align 0x4
.long 0x246C
L_176752:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_176753:
	movq $0x0,0x48(%rbp)
loop_1794:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_451257
L_176754:
	movq 0x38(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451257:
L_176755:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x58(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_176756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451260:
L_176763:
	movq (globalObjptr+0x1CD0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_176753
.p2align 0x4
L_451261:
L_176764:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451265:
L_176773:
	movq (globalObjptr+0x1CC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_176743
.p2align 0x4
L_451266:
L_176774:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_176775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451268:
L_176795:
	movq (globalObjptr+0x1CC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_176738
.p2align 0x4
.long 0x246F
L_176804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176806
L_176814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176815
.p2align 0x4
.long 0x2471
L_176815:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176806:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173106
L_176807:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEAA,%r15
	jne L_451272
L_176808:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_451271
L_176809:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x281B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_173118
L_176810:
	movq 0x68(%rbp),%r15
L_176811:
	movl %ecx,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1790
.p2align 0x4
L_451271:
L_176812:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x2,0xA0(%rbp)
	addq $0x70,%rbp
	leaq (L_176813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451272:
L_173106:
	movq (globalObjptr+0x1C50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2374
L_173103:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173105
L_176692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_176693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176693
.p2align 0x4
.long 0x2465
L_176693:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_173105:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173106
L_173107:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_173106
L_173108:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xB0(%rbp)
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_451275
	jmp *jumpTable_585(,%rax,8)
.data
.p2align 0x4
jumpTable_585:
.quad L_451314,L_451313,L_451312,L_451311,L_451292,L_451289,L_451288,L_451286,L_451278,L_451277,L_451276
.text
.p2align 0x4
L_451275:
L_173109:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451276:
L_176643:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_176644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451277:
L_176379:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451278:
L_176328:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_451284
L_176329:
	cmpq $0x1,%r13
	je L_451279
L_176330:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_176331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451279:
L_176365:
	movq $0x1,0x50(%rbp)
L_176335:
	movq $0x281F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451280
L_176336:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_176337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451280:
L_176355:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_176360
L_176356:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_451282
L_176358:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176359:
	movl %r15d,0x0(%r14)
L_176360:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451282:
L_176357:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_1759
.p2align 0x4
L_451284:
L_176366:
	cmpq $0x1,%r13
	je L_451285
L_176367:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_176368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451285:
L_176378:
	movq $0x1,%r15
L_176373:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
expansive_0:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_173228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451286:
L_176319:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x281D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451287
L_176320:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_176321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451287:
L_176327:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451288:
L_176310:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_176311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451289:
L_176286:
	movq 0x50(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x60(%rbp)
	movq $0x104D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_451290
L_176287:
	movq $0x281B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_176288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451290:
L_176302:
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_451291
L_176303:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movq $0x2,0x70(%rbp)
	addq $0x40,%rbp
	leaq (L_176304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451291:
L_176306:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451292:
L_173237:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x58(%rbp)
	jne L_173127
L_173239:
	testq %rdx,%rdx
	jz L_451309
L_173240:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_173241:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173242
.p2align 0x4
.long 0x2384
L_173242:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x50(%rbp)
L_173243:
	movq $0x0,0x70(%rbp)
loop_1763:
	movq 0x68(%rbp),%rdx
	cmpq %rdx,0x70(%rbp)
	jl L_451307
L_173244:
	movq 0x50(%rbp),%r15
	movq $0xC81,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	movl %r13d,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_173127
L_173246:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x5C(%rbp)
	je L_451305
L_173247:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_173248:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1519,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173249
.p2align 0x4
.long 0x2385
L_173249:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x70(%rbp)
L_173250:
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_1764:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451303
.p2align 0x4,,0x7
L_173251:
	movq 0x78(%rbp),%r14
	cmpq 0x68(%rbp),%r14
	jnl L_451298
L_176260:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451297
L_176263:
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
L_176264:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_451296
L_176266:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x140E,%r15
	je L_451295
	cmpq $0x140F,%r15
	je L_451293
L_176267:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_176262:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1764
.p2align 0x4
L_451293:
L_176269:
	movq 0x8(%r11),%r15
	cmpq $0x1,0x0(%r11)
	je L_451294
L_176270:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_176262
.p2align 0x4
L_451294:
L_176271:
	movq $0x2825,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_176262
.p2align 0x4
L_451295:
L_176268:
	movq 0x0(%r11),%r15
	movq $0x2823,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_176262
.p2align 0x4
L_451296:
L_176265:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_176262
.p2align 0x4
L_451297:
L_176261:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_176262
.p2align 0x4
L_451298:
L_173252:
	movq 0x70(%rbp),%r15
	movq $0x17C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_173127
L_173254:
	decl %r11d
	jo L_173118
L_173255:
	movl %r11d,0x80(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
loop_1765:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_451300
.p2align 0x4,,0x7
L_173256:
	movl 0x80(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_451299
L_173257:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2827,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	jmp loop_1765
.p2align 0x4
L_451299:
L_173258:
	movq 0x88(%rbp),%r14
	movq 0x290(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x288(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x278(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x270(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x268(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0x260(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x258(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x250(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x248(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x240(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x238(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x230(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x228(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x220(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x218(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x210(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x208(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x200(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x1F8(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x1F0(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x1E8(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x1E0(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x1D8(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x1D0(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x1C8(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x1C0(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x1B8(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x1B0(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x1A8(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x1A0(%r14),%r11
	movq %r11,0x180(%rbp)
	movq 0x198(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x190(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x188(%r14),%r11
	movq %r11,0x198(%rbp)
	movq 0x180(%r14),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x178(%r14),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x170(%r14),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x1D0(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x1D8(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x1E0(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x1F8(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x200(%rbp)
	movq 0x118(%r14),%r11
	movq %r11,0x208(%rbp)
	movq 0x110(%r14),%r11
	movq %r11,0x210(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x218(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x220(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x228(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x230(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x238(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x240(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x258(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x260(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x268(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x270(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x278(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x2D8(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x2E0(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x2E8(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x2F0(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x2F8(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x300(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x308(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x310(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x318(%rbp)
	movl $0x80,0x328(%rbp)
	movq $0x3,0x330(%rbp)
	movq %r13,0x338(%rbp)
	addq $0x328,%rbp
	leaq (L_173259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
L_451300:
L_176258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176259
.p2align 0x4
.long 0x2433
L_176259:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_173256
.p2align 0x4
L_451303:
L_176272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176273
.p2align 0x4
.long 0x2434
L_176273:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_173251
.p2align 0x4
L_451305:
L_176275:
	movq (globalObjptr+0x1C88)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_173250
.p2align 0x4
L_451307:
L_176276:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451309:
L_176285:
	movq (globalObjptr+0x1C58)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_173243
.p2align 0x4
L_451311:
L_173236:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
L_451312:
L_173222:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_173223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451313:
L_173186:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451314:
L_173125:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r15
	movq %r14,0x20(%rbp)
	jne L_173127
L_173128:
	testq %r11,%r11
	jz L_451325
L_173129:
	cmpq $0x7FFFFFFF,%r11
	ja L_173184
L_173130:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173131
L_173181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173182
.p2align 0x4
.long 0x2377
L_173182:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173131:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173132
.p2align 0x4
.long 0x2377
L_173132:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x50(%rbp)
L_173133:
	movq $0x0,0x58(%rbp)
loop_1760:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_451322
L_173134:
	movq 0x50(%rbp),%r15
	movq $0xC81,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_451315
L_173135:
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451315:
L_173159:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_173127
L_173161:
	cmpl $0x0,%ecx
	jl L_451320
L_173162:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1762:
	cmpl %ecx,%ebx
	jnl L_451318
L_173167:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_173169
L_173170:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173171:
	movl %r14d,0x0(%r15)
L_173169:
	incl %ebx
	jmp loop_1762
.p2align 0x4
L_451318:
L_173163:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173164
L_173165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_173166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173166
.p2align 0x4
.long 0x1DA8
L_173166:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_173164:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451320:
L_173156:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451322:
L_173173:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451325:
L_173185:
	movq (globalObjptr+0x1C58)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_173133
.p2align 0x4
.long 0x61C
L_173096:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173097
L_173098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_173099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173099
.p2align 0x4
.long 0x2372
L_173099:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_173097:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x246D
L_176756:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176757
L_176758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176759
.p2align 0x4
.long 0x246E
L_176759:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176757:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_1794
.p2align 0x4
.long 0x246F
L_176775:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176777
L_176792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176793
.p2align 0x4
.long 0x2471
L_176793:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176777:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173106
L_176778:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEAA,%r15
	jne L_173106
L_176779:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
L_176780:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_176781
L_176782:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x140D,%r11
	jne L_451335
L_176783:
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_451334
L_176784:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jz L_451333
L_176785:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_173118
L_176786:
	movq 0x68(%rbp),%r15
L_176787:
	movl %ecx,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1792
.p2align 0x4
L_451333:
L_176788:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x2,0xA0(%rbp)
	addq $0x70,%rbp
	leaq (L_176789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451334:
L_176790:
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
	jmp L_176787
.p2align 0x4
L_451335:
L_176781:
	movq (globalObjptr+0x1CD8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2470
L_176813:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
	jmp L_176811
.p2align 0x4
.long 0x2375
L_173110:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173111
L_173123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173124
.p2align 0x4
.long 0x2376
L_173124:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_173111:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451340
L_173112:
	movq %r15,0x20(%rbp)
L_173113:
	movq 0xB8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_173114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_451340:
L_173122:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_173113
.p2align 0x4
.long 0x245D
L_176644:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176645
L_176690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176691
.p2align 0x4
.long 0x2464
L_176691:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176645:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_451342
L_176646:
	movq %r15,0x28(%rbp)
L_176647:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_176648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451342:
L_176689:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x28(%rbp)
	jmp L_176647
.p2align 0x4
.long 0x2442
L_176380:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176381
L_176641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176642
.p2align 0x4
.long 0x245C
L_176642:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176381:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_451365
L_176382:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451363
L_176438:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1236,%r11
	je L_451354
L_176439:
	cmpq $0x1,%r15
	je L_451348
L_176440:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x140E,%r14
	jne L_451347
L_176442:
	movq 0x0(%r15),%r13
	movq %r13,%r15
x_563:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	jne L_176443
L_176444:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
L_176445:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_176443
L_176446:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_451344
L_176447:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451344:
L_176443:
	movq (globalObjptr+0x1C68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451347:
L_176441:
	movq (globalObjptr+0x1C60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451348:
L_176528:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	jne L_451353
L_176530:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451349
L_176531:
	movq %r13,0x20(%rbp)
L_176387:
	movq %r15,0x58(%rbp)
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_176388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451349:
	xchgq %r13,%r15
L_176410:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_451351
L_176412:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_176400:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_176402:
	movl %r13d,0x60(%rbp)
	movq $0x374B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_176403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_451351:
L_176411:
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,0x38(%rbp)
L_176391:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_173127
L_176393:
	movl %r13d,0x60(%rbp)
	movq $0x3803,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_176394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
L_451353:
L_176529:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_451354:
L_176533:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r15
	je L_451358
L_176534:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x140E,%r14
	je L_451357
	cmpq $0x140F,%r14
	je L_451355
	jmp L_176441
.p2align 0x4
L_451355:
L_176536:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_451356
L_176537:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451356:
L_176593:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451357:
L_176535:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp x_563
.p2align 0x4
L_451358:
L_176637:
	movq 0x20(%rbp),%r15
	movq %r13,0x20(%rbp)
L_176414:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_176416:
	cmpl $0x0,%r13d
	jng L_451360
L_176419:
	cmpq $0x0,%r14
	jna L_451359
L_176421:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_176422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_451359:
L_173203:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451360:
L_176418:
	movq 0x20(%rbp),%r15
L_176385:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_176410
L_176386:
	movq %r15,0x20(%rbp)
	movq %r14,%r15
	jmp L_176387
.p2align 0x4
L_451363:
L_176383:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1236,%r13
	jne L_176385
L_176413:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_176414
.p2align 0x4
L_451365:
L_176638:
	movq 0x38(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1236,%r15
	je L_451366
L_176639:
	movq 0x20(%rbp),%r15
	jmp L_176385
.p2align 0x4
L_451366:
L_176640:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r15
	jmp L_176414
.p2align 0x4
.long 0x243E
L_176331:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176332
L_176363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176364
.p2align 0x4
.long 0x23CF
L_176364:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176332:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_451368
L_176333:
L_176334:
	movq %r15,0x50(%rbp)
	jmp L_176335
.p2align 0x4
L_451368:
L_176362:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_176334
.p2align 0x4
.long 0x243F
L_176337:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176338
L_176353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176354
.p2align 0x4
.long 0x2440
L_176354:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176338:
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451372
L_176339:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_451371
L_176340:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451370
L_176344:
	movq 0x10(%r14),%r15
L_176343:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451370:
L_176341:
	movq 0x0(%r14),%r15
	jmp L_176343
.p2align 0x4
L_451371:
L_176345:
	movq $0x1,%r15
	jmp L_176343
.p2align 0x4
L_451372:
L_176346:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_176349
L_176347:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176349
L_176350:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176351:
	movl %r15d,0x0(%r14)
L_176349:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2441
L_176368:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176369
L_176376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176377
.p2align 0x4
.long 0x243C
L_176377:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176369:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_451378
L_176370:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451377
L_176374:
	movq 0x10(%r14),%r15
	jmp L_176373
.p2align 0x4
L_451377:
L_176371:
	movq 0x0(%r14),%r15
	jmp L_176373
.p2align 0x4
L_451378:
L_176375:
	movq 0x60(%rbp),%r15
	jmp L_176373
.p2align 0x4
.long 0x2379
L_173228:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173229
L_173230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173231
.p2align 0x4
.long 0x9C0
L_173231:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173229:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x238D
L_176321:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176322
L_176325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176326
.p2align 0x4
.long 0x238E
L_176326:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176322:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451381
L_176323:
	movq $0x1D4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451381:
L_176324:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1007
L_176311:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176312
L_176317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_176318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176318
.p2align 0x4
.long 0x243D
L_176318:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_176312:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_176313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0x2437
L_176288:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176289
L_176300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176301
.p2align 0x4
.long 0x243A
L_176301:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176289:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451384
L_176290:
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_176291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451384:
L_176295:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_451385
L_176296:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movq $0x2,0x70(%rbp)
	addq $0x40,%rbp
	leaq (L_176297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451385:
L_176298:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F9
L_176304:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176306
L_176307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_176308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176308
.p2align 0x4
.long 0x1DA8
L_176308:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_176306
.p2align 0x4
.long 0x2386
L_173259:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movq 0x328(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x328(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x330(%rbp)
	addq $0x328,%rbp
	leaq (L_173260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2435
L_176277:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176278
L_176282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176283
.p2align 0x4
.long 0x2436
L_176283:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176278:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_451388
L_176279:
L_176280:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1763
.p2align 0x4
L_451388:
L_176281:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_176280
.p2align 0x4
.long 0x2382
L_173223:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173224
L_173234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173235
.p2align 0x4
.long 0x2383
L_173235:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173224:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_451391
L_173225:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451390
L_173232:
	movq 0x10(%r14),%r15
L_173227:
	movq $0x1D41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
L_451390:
L_173226:
	movq 0x0(%r14),%r15
	jmp L_173227
.p2align 0x4
L_451391:
L_173233:
	movq 0x28(%rbp),%r15
	jmp L_173227
.p2align 0x4
.long 0x237D
L_173187:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173188
L_173220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173221
.p2align 0x4
.long 0x2381
L_173221:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_173188:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_451400
L_173189:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_451399
L_173196:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r10d
	testl %r10d,%r10d
	jz L_451397
L_173197:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_451396
L_173198:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x140C,%r13
	jne L_451395
L_173200:
	movq 0x0(%r15),%r14
	movl 0x0(%r11),%r15d
	decl %r15d
	jo L_173118
L_173201:
	movl %r15d,0x0(%r11)
	movslq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_173203
L_173204:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_451395:
L_173199:
	movq (globalObjptr+0x1C80)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451396:
L_173216:
	movq $0x282D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
L_173206:
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451397:
L_173217:
	movl 0x0(%r11),%r14d
	decl %r14d
	jo L_173118
L_173218:
	movl %r14d,0x0(%r11)
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451399:
L_173190:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_173191:
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_173192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451400:
L_173219:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_173191
.p2align 0x4
.long 0x2378
L_173136:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173137
L_173157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173158
.p2align 0x4
.long 0x237A
L_173158:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173137:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451403
L_173138:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_173127
L_173140:
	movl %r13d,0x60(%rbp)
	movq $0x371D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_173141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_451403:
L_173145:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_173127
L_173147:
	cmpl $0x0,%ecx
	jl L_173156
L_173148:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1761:
	cmpl %ecx,%ebx
	jnl L_451406
L_173150:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_173152
L_173153:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173154:
	movl %r14d,0x0(%r15)
L_173152:
	incl %ebx
	jmp loop_1761
.p2align 0x4
L_451406:
L_173149:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x237B
L_173174:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173175
L_173179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173180
.p2align 0x4
.long 0x237C
L_173180:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173175:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_451410
L_173176:
L_173177:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1760
.p2align 0x4
L_451410:
L_173178:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_173177
.p2align 0x4
.long 0x2470
L_176789:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_176790
.p2align 0x4
.long 0x7BD
L_173114:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173115
L_173120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_173121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173121
.p2align 0x4
.long 0x7B7
L_173121:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_173115:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451413
L_173117:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173119:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451413:
L_173116:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
.long 0x245E
L_176648:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176649
L_176687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176688
.p2align 0x4
.long 0x2463
L_176688:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176649:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_451425
L_176650:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451423
L_176655:
	movq 0x10(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpl $0x1,0x0(%r11)
	jne L_451421
L_176660:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_451419
L_176664:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x140D,%r15
	je L_451416
L_176665:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451415
L_176667:
	movq 0x10(%r13),%r15
L_176653:
	movq $0x1D51,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	jmp expansive_0
.p2align 0x4
L_451415:
L_176666:
	movq 0x0(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451416:
L_176668:
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r9),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176670
L_176682:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176683:
	movl %r15d,0x0(%r14)
L_176670:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451419:
L_176661:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451420
L_176663:
	movq 0x10(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451420:
L_176662:
	movq 0x0(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451421:
L_176656:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451422
L_176658:
	movq 0x10(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451422:
L_176657:
	movq 0x0(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451423:
L_176651:
	movq 0x0(%r13),%r14
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451424
L_176654:
	movq 0x10(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451424:
L_176652:
	movq 0x0(%r13),%r15
	jmp L_176653
.p2align 0x4
L_451425:
L_176684:
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451426
L_176686:
	movq 0x10(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_176653
.p2align 0x4
L_451426:
L_176685:
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_176653
.p2align 0x4
.long 0x2447
L_176448:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176449
L_176526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176527
.p2align 0x4
.long 0x2452
L_176527:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176449:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_176452
L_176450:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176452
L_176523:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176524:
	movl %r15d,0x0(%r14)
L_176452:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_173127
L_176454:
	cmpl $0x0,%r13d
	jl L_173156
L_176455:
	movl $0x0,0x4C(%rbp)
loop_1783:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x4C(%rbp)
	jl L_451429
L_176456:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451428
L_176457:
expression_0:
	movq %r15,0xC8(%rbp)
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_176458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451428:
L_176485:
	movq (globalObjptr+0x1C70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451429:
L_176486:
	movslq 0x4C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x234F
L_176388:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176389
L_176407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176408
.p2align 0x4
.long 0x2443
L_176408:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176389:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_451436
L_176399:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	jmp L_176400
.p2align 0x4
L_451436:
L_176390:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r11,0x20(%rbp)
	movq %r13,%r15
	jmp L_176391
.p2align 0x4
.long 0x19B6
L_176403:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176404
L_176405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176406
.p2align 0x4
.long 0x2373
L_176406:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_176404:
	movq $0x246D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r15
L_176396:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x20(%rbp)
	addq $0x20,%r12
	jmp expansive_0
.p2align 0x4
.long 0x1007
L_176394:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176395
L_176397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176398
.p2align 0x4
.long 0x2443
L_176398:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176395:
	movq $0x246B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r15
	jmp L_176396
.p2align 0x4
.long 0x2453
L_176538:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176539
L_176591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176592
.p2align 0x4
.long 0x245B
L_176592:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176539:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_176542
L_176540:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176542
L_176588:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176589:
	movl %r15d,0x0(%r14)
L_176542:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_176544:
	cmpl $0x0,%r13d
	jl L_173156
L_176545:
	movl $0x0,0x54(%rbp)
loop_1785:
	movl 0x50(%rbp),%r14d
	cmpl %r14d,0x54(%rbp)
	jl L_451441
L_176546:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_176485
L_176547:
	jmp expression_0
.p2align 0x4
L_451441:
L_176549:
	movslq 0x54(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x10(%r14),%r11
	movq 0x38(%rbp),%r10
	movq 0x8(%r14),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_176551
L_176557:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_451442
L_176558:
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451442:
L_176551:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2447
L_176594:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176595
L_176635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176636
.p2align 0x4
.long 0x2452
L_176636:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176595:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_176598
L_176596:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176598
L_176632:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_176633:
	movl %r15d,0x0(%r14)
L_176598:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_176600:
	cmpl $0x0,%r13d
	jl L_173156
L_176601:
	movl $0x0,0x4C(%rbp)
loop_1787:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x4C(%rbp)
	jl L_451451
L_176602:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_176485
L_176603:
	jmp expression_0
.p2align 0x4
L_451451:
L_176605:
	movl 0x4C(%rbp),%r15d
	movslq %r15d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r13,1),%r10
	movq %r10,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r11,%r14,1),%r13
	movq 0x10(%r13),%r10
	movq 0x8(%r13),%r9
	movq 0x38(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne x_564
L_176611:
	cmpq $0x1,%r10
	jne x_1787
L_176613:
	incl %r15d
	cmpl $0x0,%r15d
	jl L_176516
L_176614:
	cmpl %r15d,0x48(%rbp)
	jl L_451454
L_176615:
	movl %r15d,0x38(%rbp)
loop_1788:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_451453
L_176616:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451452
L_176617:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x33B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451452:
L_176620:
	movq 0x50(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_451453:
L_176624:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451454:
L_176516:
	movq (globalObjptr+0x1C78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
x_1787:
x_564:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2444
L_176422:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176423
L_176436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_176437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176437
.p2align 0x4
.long 0x2446
L_176437:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_176423:
	movq 0x58(%rbp),%r15
	andq $0x1,%r15
	jnz L_451464
L_176424:
	movl $0xFFFFFFFF,%ecx
L_176425:
	cmpl 0x50(%rbp),%ecx
	jne L_176418
L_176427:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451462
L_176428:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x33B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movb $0x2,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq $0x2,0x88(%rbp)
	addq $0x58,%rbp
	leaq (L_176429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451462:
L_176431:
	movq 0x20(%rbp),%r15
	jmp L_176410
.p2align 0x4
L_451464:
L_176435:
	movq 0x58(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_176425
.p2align 0x4
.long 0x243B
L_176313:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176314
L_176315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176316
.p2align 0x4
.long 0x243C
L_176316:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176314:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
.long 0x2438
L_176291:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176292
L_176293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176294
.p2align 0x4
.long 0x2439
L_176294:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176292:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69C
L_176297:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_176298
.p2align 0x4
.long 0x2387
L_173260:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movq 0x328(%rbp),%r15
	movq %r15,0x320(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173261
L_176256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x330,%rbp
	leaq (L_176257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176257
.p2align 0x4
.long 0x2432
L_176257:
	addq $0xFFFFFFFFFFFFFCD0,%rbp
L_173261:
	movq 0x98(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x8(%r10),%r9
	movq $0x3D4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x320(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x88(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x1763,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x328(%rbp)
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_174161
L_173262:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_173263:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1411,%r13
	jne L_452509
L_174157:
	cmpq $0x1,%r14
	je L_451468
L_174158:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_173263
.p2align 0x4
L_451468:
L_174159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174161
L_176253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_176254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176254
.p2align 0x4
.long 0x2431
L_176254:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174161:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_452507
L_174162:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_174163:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452506
.p2align 0x4,,0x7
L_174164:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1411,%r14
	jne L_452505
L_174166:
	movq 0x0(%r15),%r14
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_451469
L_174167:
	movq %r15,0x78(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_174163
.p2align 0x4
L_451469:
L_174168:
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_174169:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452504
.p2align 0x4,,0x7
L_174170:
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_451470
L_174171:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_174169
.p2align 0x4
L_451470:
L_174173:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xD,%r13
	je L_452488
	cmpq $0x16,%r13
	je L_452473
	cmpq $0x21,%r13
	je L_452455
	cmpq $0x22,%r13
	je L_452442
	cmpq $0x32,%r13
	je L_452429
	cmpq $0x39,%r13
	je L_452410
	cmpq $0x3A,%r13
	je L_452389
	cmpq $0x5A,%r13
	je L_452372
	cmpq $0x5B,%r13
	je L_452354
	cmpq $0x61,%r13
	je L_452339
	cmpq $0x69,%r13
	je L_452324
	cmpq $0x6A,%r13
	je L_452309
	cmpq $0x6B,%r13
	je L_452294
	cmpq $0x6D,%r13
	je L_452276
	cmpq $0x6E,%r13
	je L_452261
	cmpq $0x6F,%r13
	je L_452246
	cmpq $0x71,%r13
	je L_452231
	cmpq $0x72,%r13
	je L_452216
	cmpq $0x73,%r13
	je L_452201
	cmpq $0x75,%r13
	je L_452186
	cmpq $0x76,%r13
	je L_452171
	cmpq $0x77,%r13
	je L_452154
	cmpq $0x79,%r13
	je L_452136
	cmpq $0x7A,%r13
	je L_452118
	cmpq $0x7B,%r13
	je L_452096
	cmpq $0x7E,%r13
	je L_452074
	cmpq $0x7F,%r13
	je L_452052
	cmpq $0x81,%r13
	je L_452034
	cmpq $0x82,%r13
	je L_452013
	cmpq $0x83,%r13
	je L_451992
	cmpq $0x85,%r13
	je L_451969
	cmpq $0x86,%r13
	je L_451942
	cmpq $0x89,%r13
	je L_451924
L_174174:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_174176
L_174279:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x18,%rax
	ja L_451471
	jmp *jumpTable_586(,%rax,8)
.data
.p2align 0x4
jumpTable_586:
.quad L_451905,L_451886,L_451868,L_451850,L_451832,L_451814,L_451787,L_451768,L_451749,L_451731,L_451712,L_451697,L_451682,L_451663,L_451645,L_451627,L_451609,L_451593,L_451575,L_451557,L_451539,L_451520,L_451502,L_174176,L_451484
.text
.p2align 0x4
L_451471:
L_174176:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174177:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174178:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174179:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_173267
L_174180:
	movq 0x0(%r13),%r15
L_174181:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174182:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174183:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451479
L_174222:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451476
	cmpq $0xE4C,%r14
	je L_451473
	movq %r13,%r14
L_174184:
	cmpq $0x1,%r14
	jne L_451472
L_174185:
	movq %r15,0x60(%rbp)
intInfUnary_9:
	movq 0x60(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_451472:
L_173267:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
doit_27:
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1793
.p2align 0x4
L_451473:
L_174274:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451475
L_174275:
	cmpq $0x1,0x8(%r13)
	jne L_173267
x_562:
	leaq L_174198(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r13
	movq %r13,0x108(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_24
.p2align 0x4
L_451475:
L_174278:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451476:
L_174223:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451478
L_174224:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174225:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
x_561:
	movq 0x60(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_451478:
L_174273:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451479:
	movq %r13,%r14
	jmp L_174184
.p2align 0x4
L_451484:
L_175189:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175190:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175191:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175192:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451495
	cmpq $0xE4C,%r15
	je L_451485
	jmp L_173267
.p2align 0x4
L_451485:
L_175205:
	movq 0x0(%r13),%r15
L_175206:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175207:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175208:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451493
L_175211:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451490
	cmpq $0xE4C,%r14
	je L_451487
	movq %r13,%r14
L_175209:
	cmpq $0x1,%r14
	jne L_173267
L_175210:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451487:
L_175216:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451489
L_175217:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451489:
L_175219:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451490:
L_175212:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451492
L_175213:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175214:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451492:
L_175215:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451493:
	movq %r13,%r14
	jmp L_175209
.p2align 0x4
L_451495:
L_175193:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_173267
L_175194:
	movq 0x1A0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_173267
L_175196:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_451496
L_175197:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xC0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1522
.p2align 0x4
L_451496:
L_175204:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xC0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1523
.p2align 0x4
L_451502:
L_175146:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175147:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175148:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175149:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451513
	cmpq $0xE4C,%r15
	je L_451503
	jmp L_173267
.p2align 0x4
L_451503:
L_175173:
	movq 0x0(%r13),%r15
L_175174:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175175:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175176:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451511
L_175179:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451508
	cmpq $0xE4C,%r14
	je L_451505
	movq %r13,%r14
L_175177:
	cmpq $0x1,%r14
	jne L_173267
L_175178:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451505:
L_175184:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451507
L_175185:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451507:
L_175187:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451508:
L_175180:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451510
L_175181:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175182:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451510:
L_175183:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451511:
	movq %r13,%r14
	jmp L_175177
.p2align 0x4
L_451513:
L_175150:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_175151:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175152:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175153:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_175154:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_175155:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_175156:
	movq 0x268(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451520:
L_175109:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_175110:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175111:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175112:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175113:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451531
	cmpq $0xE4C,%r15
	je L_451521
	jmp L_173267
.p2align 0x4
L_451521:
L_175130:
	movq 0x0(%r13),%r15
L_175131:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175132:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175133:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451529
L_175136:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451526
	cmpq $0xE4C,%r14
	je L_451523
	movq %r13,%r14
L_175134:
	cmpq $0x1,%r14
	jne L_173267
L_175135:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451523:
L_175141:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451525
L_175142:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451525:
L_175144:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451526:
L_175137:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451528
L_175138:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175139:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451528:
L_175140:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451529:
	movq %r13,%r14
	jmp L_175134
.p2align 0x4
L_451531:
L_175114:
	movq 0x0(%r13),%r15
L_175115:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175116:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175117:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_175118:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_175119:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_175120:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451532
L_175121:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_175122:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_451532:
L_175124:
	movq %r15,0x1D8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_175125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451539:
L_175080:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175081:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175082:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175083:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451550
	cmpq $0xE4C,%r15
	je L_451540
	jmp L_173267
.p2align 0x4
L_451540:
L_175094:
	movq 0x0(%r13),%r15
L_175095:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175096:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175097:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451548
L_175100:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451545
	cmpq $0xE4C,%r14
	je L_451542
	movq %r13,%r14
L_175098:
	cmpq $0x1,%r14
	jne L_173267
L_175099:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451542:
L_175105:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451544
L_175106:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451544:
L_175108:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451545:
L_175101:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451547
L_175102:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175103:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451547:
L_175104:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451548:
	movq %r13,%r14
	jmp L_175098
.p2align 0x4
L_451550:
L_175084:
	movq 0x0(%r13),%r15
L_175085:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175086:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175087:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_175088:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_175089:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_175090:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x260(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1524
.p2align 0x4
L_451557:
L_175047:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175048:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175049:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175050:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451568
	cmpq $0xE4C,%r15
	je L_451558
	jmp L_173267
.p2align 0x4
L_451558:
L_175064:
	movq 0x0(%r13),%r15
L_175065:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175066:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175067:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451566
L_175070:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451563
	cmpq $0xE4C,%r14
	je L_451560
	movq %r13,%r14
L_175068:
	cmpq $0x1,%r14
	jne L_173267
L_175069:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451560:
L_175075:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451562
L_175076:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451562:
L_175078:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451563:
L_175071:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451565
L_175072:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175073:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451565:
L_175074:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451566:
	movq %r13,%r14
	jmp L_175068
.p2align 0x4
L_451568:
L_175051:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_173267
L_175052:
	movq 0x1A0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_173267
L_175054:
	movq 0x8(%r15),%r14
	cmpq $0x41,%r14
	je L_451570
L_175055:
	cmpq $0x81,%r14
	jne L_451569
L_175057:
	movq %r15,0xC0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1525
.p2align 0x4
L_451569:
L_175056:
	movq (globalObjptr+0x1A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451570:
L_175063:
	movq %r15,0xC0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1526
.p2align 0x4
L_451575:
L_175016:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_175017:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_175018:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175019:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451586
	cmpq $0xE4C,%r15
	je L_451576
	jmp L_173267
.p2align 0x4
L_451576:
L_175031:
	movq 0x0(%r13),%r15
L_175032:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175033:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175034:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451584
L_175037:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451581
	cmpq $0xE4C,%r14
	je L_451578
	movq %r13,%r14
L_175035:
	cmpq $0x1,%r14
	jne L_173267
L_175036:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451578:
L_175042:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451580
L_175043:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451580:
L_175045:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451581:
L_175038:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451583
L_175039:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175040:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451583:
L_175041:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451584:
	movq %r13,%r14
	jmp L_175035
.p2align 0x4
L_451586:
L_175020:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_175021:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175022:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175023:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_175024:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_175025:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_175026:
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451593:
L_174983:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x10(%r14),%r11
	movq %r11,0x60(%rbp)
L_174984:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174985:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174986:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_174987:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451604
	cmpq $0xE4C,%r15
	je L_451594
	jmp L_173267
.p2align 0x4
L_451594:
L_175000:
	movq 0x0(%r11),%r15
L_175001:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_175002:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_175003:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451602
L_175006:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451599
	cmpq $0xE4C,%r14
	je L_451596
	movq %r13,%r14
L_175004:
	cmpq $0x1,%r14
	jne L_173267
L_175005:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451596:
L_175011:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451598
L_175012:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451598:
L_175014:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451599:
L_175007:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451601
L_175008:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_175009:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451601:
L_175010:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451602:
	movq %r13,%r14
	jmp L_175004
.p2align 0x4
L_451604:
L_174988:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_173267
L_174989:
	testl %r13d,%r13d
	jnz L_451605
L_174990:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x238(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_451605:
L_174996:
	movq %r15,0xC0(%rbp)
	movq 0x230(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451609:
L_174954:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174955:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174956:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174957:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451620
	cmpq $0xE4C,%r15
	je L_451610
	jmp L_173267
.p2align 0x4
L_451610:
L_174968:
	movq 0x0(%r13),%r15
L_174969:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174970:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174971:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451618
L_174974:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451615
	cmpq $0xE4C,%r14
	je L_451612
	movq %r13,%r14
L_174972:
	cmpq $0x1,%r14
	jne L_173267
L_174973:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451612:
L_174979:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451614
L_174980:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451614:
L_174982:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451615:
L_174975:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451617
L_174976:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174977:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451617:
L_174978:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451618:
	movq %r13,%r14
	jmp L_174972
.p2align 0x4
L_451620:
L_174958:
	movq 0x0(%r13),%r15
L_174959:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174960:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174961:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174962:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174963:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174964:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x258(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1458
.p2align 0x4
L_451627:
L_174925:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
L_174926:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174927:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174928:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_174929:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451638
	cmpq $0xE4C,%r15
	je L_451628
	jmp L_173267
.p2align 0x4
L_451628:
L_174938:
	movq 0x0(%r11),%r15
L_174939:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174940:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174941:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451636
L_174944:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451633
	cmpq $0xE4C,%r14
	je L_451630
	movq %r13,%r14
L_174942:
	cmpq $0x1,%r14
	jne L_173267
L_174943:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451630:
L_174949:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451632
L_174950:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451632:
L_174952:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451633:
L_174945:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451635
L_174946:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174947:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451635:
L_174948:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451636:
	movq %r13,%r14
	jmp L_174942
.p2align 0x4
L_451638:
L_174930:
	movq 0x0(%r11),%r15
L_174931:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_173267
L_174932:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_174933:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_173267
L_174934:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174935:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_173267
L_174936:
	movl %r13d,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x130(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
L_451645:
L_174877:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_174878:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174879:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174880:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174881:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451656
	cmpq $0xE4C,%r15
	je L_451646
	jmp L_173267
.p2align 0x4
L_451646:
L_174910:
	movq 0x0(%r13),%r15
L_174911:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174912:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174913:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451654
L_174916:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451651
	cmpq $0xE4C,%r14
	je L_451648
	movq %r13,%r14
L_174914:
	cmpq $0x1,%r14
	jne L_173267
L_174915:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451648:
L_174921:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451650
L_174922:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451650:
L_174924:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451651:
L_174917:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451653
L_174918:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174919:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451653:
L_174920:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451654:
	movq %r13,%r14
	jmp L_174914
.p2align 0x4
L_451656:
L_174882:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174883:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174884:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174885:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174886:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174887:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174888:
	movq 0x250(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451663:
L_174844:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_174845:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174846:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174847:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174848:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451674
	cmpq $0xE4C,%r15
	je L_451664
	jmp L_173267
.p2align 0x4
L_451664:
L_174862:
	movq 0x0(%r13),%r15
L_174863:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174864:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174865:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451672
L_174868:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451669
	cmpq $0xE4C,%r14
	je L_451666
	movq %r13,%r14
L_174866:
	cmpq $0x1,%r14
	jne L_173267
L_174867:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451666:
L_174873:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451668
L_174874:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451668:
L_174876:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451669:
L_174869:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451671
L_174870:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174871:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451671:
L_174872:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451672:
	movq %r13,%r14
	jmp L_174866
.p2align 0x4
L_451674:
L_174849:
	movq 0x0(%r13),%r15
L_174850:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174851:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174852:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174853:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174854:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174855:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451675
L_174856:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_174857:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_451675:
L_174859:
	movq %r15,0x1D8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_174860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451682:
L_174815:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174816:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174817:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174818:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451693
	cmpq $0xE4C,%r15
	je L_451683
	jmp L_173267
.p2align 0x4
L_451683:
L_174829:
	movq 0x0(%r13),%r15
L_174830:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174831:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174832:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451691
L_174835:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451688
	cmpq $0xE4C,%r14
	je L_451685
	movq %r13,%r14
L_174833:
	cmpq $0x1,%r14
	jne L_173267
L_174834:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451685:
L_174840:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451687
L_174841:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451687:
L_174843:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451688:
L_174836:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451690
L_174837:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174838:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451690:
L_174839:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451691:
	movq %r13,%r14
	jmp L_174833
.p2align 0x4
L_451693:
L_174819:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r14
	jne L_173267
L_174820:
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xC0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451697:
L_174790:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
L_174791:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174792:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174793:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174794:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451708
	cmpq $0xE4C,%r15
	je L_451698
	jmp L_173267
.p2align 0x4
L_451698:
L_174799:
	movq 0x0(%r13),%r15
L_174800:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174801:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174802:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451706
L_174805:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451703
	cmpq $0xE4C,%r14
	je L_451700
	movq %r13,%r14
L_174803:
	cmpq $0x1,%r14
	jne L_173267
L_174804:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451700:
L_174810:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451702
L_174811:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451702:
L_174813:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451703:
L_174806:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451705
L_174807:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174808:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451705:
L_174809:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451706:
	movq %r13,%r14
	jmp L_174803
.p2align 0x4
L_451708:
L_174795:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_173267
L_174796:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451712:
L_174754:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174755:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174756:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174757:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451723
	cmpq $0xE4C,%r15
	je L_451713
	jmp L_173267
.p2align 0x4
L_451713:
L_174775:
	movq 0x0(%r13),%r15
L_174776:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174777:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174778:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451721
L_174781:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451718
	cmpq $0xE4C,%r14
	je L_451715
	movq %r13,%r14
L_174779:
	cmpq $0x1,%r14
	jne L_173267
L_174780:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451715:
L_174786:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451717
L_174787:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451717:
L_174789:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451718:
L_174782:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451720
L_174783:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174784:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451720:
L_174785:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451721:
	movq %r13,%r14
	jmp L_174779
.p2align 0x4
L_451723:
L_174758:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r14
	jne L_173267
L_174759:
	movq 0x248(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jnz L_451727
L_174768:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_173267
L_174769:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%rsi
	imulq %rsi,%r15
	addq $0x7,%r14
	addq %r14,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x78(%rbp)
	addq $0x0,%r15
	jc L_451725
L_174770:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_174771
L_174773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174774
.p2align 0x4
.long 0x23AA
L_174774:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174771:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_174772:
	movq %rax,0x70(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_174761:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_451725:
L_174067:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_451727:
L_174760:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x70(%rbp)
	jmp L_174761
.p2align 0x4
L_451731:
L_174724:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174725:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174726:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174727:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451742
	cmpq $0xE4C,%r15
	je L_451732
	jmp L_173267
.p2align 0x4
L_451732:
L_174738:
	movq 0x0(%r13),%r15
L_174739:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174740:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174741:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451740
L_174744:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451737
	cmpq $0xE4C,%r14
	je L_451734
	movq %r13,%r14
L_174742:
	cmpq $0x1,%r14
	jne L_173267
L_174743:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451734:
L_174749:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451736
L_174750:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451736:
L_174752:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451737:
L_174745:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451739
L_174746:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174747:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451739:
L_174748:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451740:
	movq %r13,%r14
	jmp L_174742
.p2align 0x4
L_451742:
L_174728:
	movq 0x0(%r13),%r15
L_174729:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174730:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174731:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174732:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174733:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174734:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1459
.p2align 0x4
L_451749:
L_174674:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_174675:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174676:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174677:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174678:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451760
	cmpq $0xE4C,%r15
	je L_451750
	jmp L_173267
.p2align 0x4
L_451750:
L_174708:
	movq 0x0(%r13),%r15
L_174709:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174710:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174711:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451758
L_174714:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451755
	cmpq $0xE4C,%r14
	je L_451752
	movq %r13,%r14
L_174712:
	cmpq $0x1,%r14
	jne L_173267
L_174713:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451752:
L_174719:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451754
L_174720:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451754:
L_174722:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451755:
L_174715:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451757
L_174716:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174717:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451757:
L_174718:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451758:
	movq %r13,%r14
	jmp L_174712
.p2align 0x4
L_451760:
L_174679:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174680:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174681:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174682:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174683:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174684:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174685:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_173267
L_174686:
	movq 0x240(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451768:
L_174625:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_174626:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174627:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174628:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174629:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451779
	cmpq $0xE4C,%r15
	je L_451769
	jmp L_173267
.p2align 0x4
L_451769:
L_174659:
	movq 0x0(%r13),%r15
L_174660:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174661:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174662:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451777
L_174665:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451774
	cmpq $0xE4C,%r14
	je L_451771
	movq %r13,%r14
L_174663:
	cmpq $0x1,%r14
	jne L_173267
L_174664:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451771:
L_174670:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451773
L_174671:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451773:
L_174673:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451774:
L_174666:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451776
L_174667:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174668:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451776:
L_174669:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451777:
	movq %r13,%r14
	jmp L_174663
.p2align 0x4
L_451779:
L_174630:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174631:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174632:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174633:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174634:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174635:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174636:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_173267
L_174637:
	movq 0x1F8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451787:
L_174502:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movb 0x4(%r14),%r11b
	movb %r11b,0x5C(%rbp)
L_174503:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174504:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174505:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_174506:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451798
	cmpq $0xE4C,%r15
	je L_451788
	jmp L_173267
.p2align 0x4
L_451788:
L_174610:
	movq 0x0(%r11),%r15
L_174611:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174612:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174613:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451796
L_174616:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451793
	cmpq $0xE4C,%r14
	je L_451790
	movq %r13,%r14
L_174614:
	cmpq $0x1,%r14
	jne L_173267
L_174615:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451790:
L_174621:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451792
L_174622:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451792:
L_174624:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451793:
L_174617:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451795
L_174618:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174619:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451795:
L_174620:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451796:
	movq %r13,%r14
	jmp L_174614
.p2align 0x4
L_451798:
L_174507:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_173267
L_174508:
	testl %r13d,%r13d
	jnz L_451810
L_174509:
	movq 0x0(%r15),%r14
	movb 0x5C(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_451804
L_174510:
	movq %r14,0x60(%rbp)
L_174511:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_173267
L_174513:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_174514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174514
.p2align 0x4
.long 0x23F8
L_174514:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	testl %eax,%eax
	jz L_451802
L_174515:
	cmpl $0x1,%eax
	je L_451801
L_174516:
	cmpl $0x2,%eax
	je L_451800
L_174517:
	cmpl $0x3,%eax
	jne L_451799
L_174520:
	movb $0x0,0x5C(%rbp)
L_174521:
	leaq L_174541(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_451799:
L_174519:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x778)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451800:
L_174555:
	movb $0x1,0x5C(%rbp)
	jmp L_174521
.p2align 0x4
L_451801:
L_174556:
	movb $0x2,0x5C(%rbp)
	jmp L_174521
.p2align 0x4
L_451802:
L_174557:
	movb $0x3,0x5C(%rbp)
	jmp L_174521
.p2align 0x4
L_451804:
L_174558:
	movq %r14,0x60(%rbp)
L_174559:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_173267
L_174561:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_174562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174562
.p2align 0x4
.long 0x23FD
L_174562:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	testl %eax,%eax
	jz L_451808
L_174563:
	cmpl $0x1,%eax
	je L_451807
L_174564:
	cmpl $0x2,%eax
	je L_451806
L_174565:
	cmpl $0x3,%eax
	jne L_174519
L_174567:
	movb $0x0,0x5C(%rbp)
L_174568:
	leaq L_174588(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_174569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_451806:
L_174603:
	movb $0x1,0x5C(%rbp)
	jmp L_174568
.p2align 0x4
L_451807:
L_174604:
	movb $0x2,0x5C(%rbp)
	jmp L_174568
.p2align 0x4
L_451808:
L_174605:
	movb $0x3,0x5C(%rbp)
	jmp L_174568
.p2align 0x4
L_451810:
L_174606:
	movq %r15,0x1F8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451814:
L_174463:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174464:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174465:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174466:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451825
	cmpq $0xE4C,%r15
	je L_451815
	jmp L_173267
.p2align 0x4
L_451815:
L_174487:
	movq 0x0(%r13),%r15
L_174488:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174489:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174490:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451823
L_174493:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451820
	cmpq $0xE4C,%r14
	je L_451817
	movq %r13,%r14
L_174491:
	cmpq $0x1,%r14
	jne L_173267
L_174492:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451817:
L_174498:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451819
L_174499:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451819:
L_174501:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451820:
L_174494:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451822
L_174495:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174496:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451822:
L_174497:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451823:
	movq %r13,%r14
	jmp L_174491
.p2align 0x4
L_451825:
L_174467:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174468:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174469:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174470:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174471:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174472:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174473:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x220(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x218(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_174474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_451832:
L_174423:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174424:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174425:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174426:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451843
	cmpq $0xE4C,%r15
	je L_451833
	jmp L_173267
.p2align 0x4
L_451833:
L_174447:
	movq 0x0(%r13),%r15
L_174448:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174449:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174450:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451841
L_174453:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451838
	cmpq $0xE4C,%r14
	je L_451835
	movq %r13,%r14
L_174451:
	cmpq $0x1,%r14
	jne L_173267
L_174452:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451835:
L_174458:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451837
L_174459:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451837:
L_174461:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451838:
L_174454:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451840
L_174455:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174456:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451840:
L_174457:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451841:
	movq %r13,%r14
	jmp L_174451
.p2align 0x4
L_451843:
L_174427:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174428:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174429:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174430:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174431:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174432:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174433:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x220(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x218(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_174434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_451850:
L_174392:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
L_174393:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174394:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174395:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_174396:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451861
	cmpq $0xE4C,%r15
	je L_451851
	jmp L_173267
.p2align 0x4
L_451851:
L_174407:
	movq 0x0(%r11),%r15
L_174408:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174409:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174410:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451859
L_174413:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451856
	cmpq $0xE4C,%r14
	je L_451853
	movq %r13,%r14
L_174411:
	cmpq $0x1,%r14
	jne L_173267
L_174412:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451853:
L_174418:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451855
L_174419:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451855:
L_174421:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451856:
L_174414:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451858
L_174415:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174416:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451858:
L_174417:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451859:
	movq %r13,%r14
	jmp L_174411
.p2align 0x4
L_451861:
L_174397:
	movq 0x0(%r11),%r15
L_174398:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_173267
L_174399:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_174400:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_173267
L_174401:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174402:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_173267
L_174403:
	movl %r13d,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x220(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (word_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
L_451868:
L_174353:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174354:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174355:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174356:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451879
	cmpq $0xE4C,%r15
	je L_451869
	jmp L_173267
.p2align 0x4
L_451869:
L_174377:
	movq 0x0(%r13),%r15
L_174378:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174379:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174380:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451877
L_174383:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451874
	cmpq $0xE4C,%r14
	je L_451871
	movq %r13,%r14
L_174381:
	cmpq $0x1,%r14
	jne L_173267
L_174382:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451871:
L_174388:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451873
L_174389:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451873:
L_174391:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451874:
L_174384:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451876
L_174385:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174386:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451876:
L_174387:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451877:
	movq %r13,%r14
	jmp L_174381
.p2align 0x4
L_451879:
L_174357:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174358:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174359:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174360:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174361:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174362:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174363:
	movq 0x210(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451886:
L_174310:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_174311:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174312:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174313:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174314:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451897
	cmpq $0xE4C,%r15
	je L_451887
	jmp L_173267
.p2align 0x4
L_451887:
L_174337:
	movq 0x0(%r13),%r15
L_174338:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174339:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174340:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451895
L_174343:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451892
	cmpq $0xE4C,%r14
	je L_451889
	movq %r13,%r14
L_174341:
	cmpq $0x1,%r14
	jne L_173267
L_174342:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451889:
L_174348:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451891
L_174349:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451891:
L_174351:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451892:
L_174344:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451894
L_174345:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174346:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451894:
L_174347:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451895:
	movq %r13,%r14
	jmp L_174341
.p2align 0x4
L_451897:
L_174315:
	movq 0x0(%r13),%r15
L_174316:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174317:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174318:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174319:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174320:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_174321:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451898
L_174322:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_174323:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_451898:
L_174334:
	movq %r15,0x1D8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_174335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451905:
L_174281:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174282:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174283:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_174284:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451916
	cmpq $0xE4C,%r15
	je L_451906
	jmp L_173267
.p2align 0x4
L_451906:
L_174295:
	movq 0x0(%r13),%r15
L_174296:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174297:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174298:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451914
L_174301:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451911
	cmpq $0xE4C,%r14
	je L_451908
	movq %r13,%r14
L_174299:
	cmpq $0x1,%r14
	jne L_173267
L_174300:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451908:
L_174306:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451910
L_174307:
	cmpq $0x1,0x8(%r13)
	jne L_173267
	jmp x_562
.p2align 0x4
L_451910:
L_174309:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451911:
L_174302:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451913
L_174303:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_174304:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451913:
L_174305:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451914:
	movq %r13,%r14
	jmp L_174299
.p2align 0x4
L_451916:
L_174285:
	movq 0x0(%r13),%r15
L_174286:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174287:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174288:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_173267
L_174289:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_174290:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174291:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x228(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1527
.p2align 0x4
L_451924:
L_176217:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176218:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176219:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176220:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451935
	cmpq $0xE4C,%r15
	je L_451925
	jmp L_173267
.p2align 0x4
L_451925:
L_176233:
	movq 0x0(%r11),%r15
L_176234:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176235:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176236:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451933
L_176239:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451930
	cmpq $0xE4C,%r13
	je L_451927
	xchgq %r11,%r14
L_176237:
	cmpq $0x1,%r14
	jne L_173267
L_176238:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451927:
L_176244:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451929
L_176245:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_451929:
L_176247:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451930:
L_176240:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451932
L_176241:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176242:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451932:
L_176243:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451933:
	xchgq %r11,%r14
	jmp L_176237
.p2align 0x4
L_451935:
L_176221:
	movq 0x0(%r11),%r15
L_176222:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176223:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176224:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176225:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176226:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_176227:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x298(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1528
.p2align 0x4
L_451942:
L_176181:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176182:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176183:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176184:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451953
	cmpq $0xE4C,%r15
	je L_451943
	jmp L_173267
.p2align 0x4
L_451943:
L_176201:
	movq 0x0(%r11),%r15
L_176202:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176203:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176204:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451951
L_176207:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451948
	cmpq $0xE4C,%r13
	je L_451945
	xchgq %r11,%r14
L_176205:
	cmpq $0x1,%r14
	jne L_173267
L_176206:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451945:
L_176212:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451947
L_176213:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_451947:
L_176215:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451948:
L_176208:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451950
L_176209:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176210:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451950:
L_176211:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451951:
	xchgq %r11,%r14
	jmp L_176205
.p2align 0x4
L_451953:
L_176185:
	movq 0x0(%r11),%r15
L_176186:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176187:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176188:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176189:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176190:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_176191:
	movq 0x280(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_173267
L_176193:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_451960
L_176194:
	movsd 0x0(%r15),%xmm15
L_176195:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_451959
L_176197:
	ucomisd 0x0(%r13),%xmm15
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
L_173478:
	cmpl $0x0,0x58(%rbp)
	jl L_173156
L_173479:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1773:
	cmpl 0x58(%rbp),%ebx
	jnl L_451956
L_173496:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451955
L_173499:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173500:
	movl %r14d,0x0(%r15)
	movl %ecx,(localWord32+0x0)(%rip)
L_173498:
	incl %ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1773
.p2align 0x4
L_451955:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_173498
.p2align 0x4
L_451956:
L_173480:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	testl %ecx,%ecx
	jnz L_451957
L_173481:
	movq %r13,0x20(%rbp)
L_173482:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451957:
L_173495:
	movq %r14,0x20(%rbp)
	jmp L_173482
.p2align 0x4
L_451959:
L_176196:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451960:
L_176198:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_451961
L_176200:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_451961:
L_176199:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451969:
L_176155:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176156:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176157:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176158:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451980
	cmpq $0xE4C,%r15
	je L_451970
	jmp L_173267
.p2align 0x4
L_451970:
L_176165:
	movq 0x0(%r11),%r15
L_176166:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176167:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176168:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451978
L_176171:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451975
	cmpq $0xE4C,%r13
	je L_451972
	xchgq %r11,%r14
L_176169:
	cmpq $0x1,%r14
	jne L_173267
L_176170:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451972:
L_176176:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451974
L_176177:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_451974:
L_176179:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451975:
L_176172:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451977
L_176173:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176174:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_451977:
L_176175:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451978:
	xchgq %r11,%r14
	jmp L_176169
.p2align 0x4
L_451980:
L_176159:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_176160:
	movq 0x2D8(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_173267
L_176162:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_451987
L_176163:
	movq $0x8000000000000000,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	xorpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_25:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
L_173389:
	cmpl $0x0,0x58(%rbp)
	jl L_173156
L_173390:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1771:
	cmpl 0x58(%rbp),%ecx
	jnl L_451983
L_173403:
	movslq %ecx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_173405
L_173406:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173407:
	movl %r14d,0x0(%r15)
L_173405:
	incl %ecx
	jmp loop_1771
.p2align 0x4
L_451983:
L_173391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173392
L_173401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173402
.p2align 0x4
.long 0x238F
L_173402:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173392:
	movq $0x281D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451984
L_173393:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451984:
L_173400:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_451987:
L_176164:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x80000000,%r13d
	movd %r13d,%xmm14
	xorps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_25
.p2align 0x4
L_451992:
L_176118:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176119:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176120:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176121:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452003
	cmpq $0xE4C,%r15
	je L_451993
	jmp L_173267
.p2align 0x4
L_451993:
L_176139:
	movq 0x0(%r11),%r15
L_176140:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176141:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176142:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452001
L_176145:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451998
	cmpq $0xE4C,%r13
	je L_451995
	xchgq %r11,%r14
L_176143:
	cmpq $0x1,%r14
	jne L_173267
L_176144:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451995:
L_176150:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451997
L_176151:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_451997:
L_176153:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451998:
L_176146:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452000
L_176147:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176148:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452000:
L_176149:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452001:
	xchgq %r11,%r14
	jmp L_176143
.p2align 0x4
L_452003:
L_176122:
	movq 0x0(%r11),%r15
L_176123:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176124:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176125:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176126:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176127:
	movq 0x0(%r10),%r13
L_176128:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_173267
L_176129:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_176130:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_173267
L_176131:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_173267
L_176132:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_173267
L_176133:
	movq %r11,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x290(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1529
.p2align 0x4
L_452013:
L_176081:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176082:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176083:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176084:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452024
	cmpq $0xE4C,%r15
	je L_452014
	jmp L_173267
.p2align 0x4
L_452014:
L_176102:
	movq 0x0(%r11),%r15
L_176103:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176104:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176105:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452022
L_176108:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452019
	cmpq $0xE4C,%r13
	je L_452016
	xchgq %r11,%r14
L_176106:
	cmpq $0x1,%r14
	jne L_173267
L_176107:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452016:
L_176113:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452018
L_176114:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452018:
L_176116:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452019:
L_176109:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452021
L_176110:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176111:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452021:
L_176112:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452022:
	xchgq %r11,%r14
	jmp L_176106
.p2align 0x4
L_452024:
L_176085:
	movq 0x0(%r11),%r15
L_176086:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176087:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176088:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176089:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176090:
	movq 0x0(%r10),%r13
L_176091:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_173267
L_176092:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_176093:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_173267
L_176094:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_173267
L_176095:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_173267
L_176096:
	movq %r11,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x188(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1530
.p2align 0x4
L_452034:
L_176049:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176050:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176051:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176052:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452045
	cmpq $0xE4C,%r15
	je L_452035
	jmp L_173267
.p2align 0x4
L_452035:
L_176065:
	movq 0x0(%r11),%r15
L_176066:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176067:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176068:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452043
L_176071:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452040
	cmpq $0xE4C,%r13
	je L_452037
	xchgq %r11,%r14
L_176069:
	cmpq $0x1,%r14
	jne L_173267
L_176070:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452037:
L_176076:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452039
L_176077:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452039:
L_176079:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452040:
L_176072:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452042
L_176073:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176074:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452042:
L_176075:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452043:
	xchgq %r11,%r14
	jmp L_176069
.p2align 0x4
L_452045:
L_176053:
	movq 0x0(%r11),%r15
L_176054:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176055:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176056:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176057:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176058:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_176059:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x180(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1528
.p2align 0x4
L_452052:
L_176013:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_176014:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_176015:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_176016:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452063
	cmpq $0xE4C,%r15
	je L_452053
	jmp L_173267
.p2align 0x4
L_452053:
L_176033:
	movq 0x0(%r11),%r15
L_176034:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176035:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176036:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452061
L_176039:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452058
	cmpq $0xE4C,%r13
	je L_452055
	xchgq %r11,%r14
L_176037:
	cmpq $0x1,%r14
	jne L_173267
L_176038:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452055:
L_176044:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452057
L_176045:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452057:
L_176047:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452058:
L_176040:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452060
L_176041:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176042:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452060:
L_176043:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452061:
	xchgq %r11,%r14
	jmp L_176037
.p2align 0x4
L_452063:
L_176017:
	movq 0x0(%r11),%r15
L_176018:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_176019:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176020:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_176021:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_176022:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_176023:
	movq 0x198(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_173267
L_176025:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_452065
L_176026:
	movsd 0x0(%r15),%xmm15
L_176027:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_452064
L_176029:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452064:
L_176028:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452065:
L_176030:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_452066
L_176032:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452066:
L_176031:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452074:
L_175977:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175978:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175979:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175980:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452085
	cmpq $0xE4C,%r15
	je L_452075
	jmp L_173267
.p2align 0x4
L_452075:
L_175997:
	movq 0x0(%r11),%r15
L_175998:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175999:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_176000:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452083
L_176003:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452080
	cmpq $0xE4C,%r13
	je L_452077
	xchgq %r11,%r14
L_176001:
	cmpq $0x1,%r14
	jne L_173267
L_176002:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452077:
L_176008:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452079
L_176009:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452079:
L_176011:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452080:
L_176004:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452082
L_176005:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_176006:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452082:
L_176007:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452083:
	xchgq %r11,%r14
	jmp L_176001
.p2align 0x4
L_452085:
L_175981:
	movq 0x0(%r11),%r15
L_175982:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175983:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175984:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175985:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_175986:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_175987:
	movq 0x288(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_173267
L_175989:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_452087
L_175990:
	movsd 0x0(%r15),%xmm15
L_175991:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_452086
L_175993:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452086:
L_175992:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452087:
L_175994:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_452088
L_175996:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452088:
L_175995:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452096:
L_175941:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175942:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175943:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175944:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452107
	cmpq $0xE4C,%r15
	je L_452097
	jmp L_173267
.p2align 0x4
L_452097:
L_175961:
	movq 0x0(%r11),%r15
L_175962:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175963:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175964:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452105
L_175967:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452102
	cmpq $0xE4C,%r13
	je L_452099
	xchgq %r11,%r14
L_175965:
	cmpq $0x1,%r14
	jne L_173267
L_175966:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452099:
L_175972:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452101
L_175973:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452101:
L_175975:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452102:
L_175968:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452104
L_175969:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175970:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452104:
L_175971:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452105:
	xchgq %r11,%r14
	jmp L_175965
.p2align 0x4
L_452107:
L_175945:
	movq 0x0(%r11),%r15
L_175946:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175947:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175948:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175949:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_175950:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_175951:
	movq 0x190(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_173267
L_175953:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_452109
L_175954:
	movsd 0x0(%r15),%xmm15
L_175955:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_452108
L_175957:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452108:
L_175956:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452109:
L_175958:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_452110
L_175960:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452110:
L_175959:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452118:
L_175909:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175910:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175911:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175912:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452129
	cmpq $0xE4C,%r15
	je L_452119
	jmp L_173267
.p2align 0x4
L_452119:
L_175925:
	movq 0x0(%r11),%r15
L_175926:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175927:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175928:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452127
L_175931:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452124
	cmpq $0xE4C,%r13
	je L_452121
	xchgq %r11,%r14
L_175929:
	cmpq $0x1,%r14
	jne L_173267
L_175930:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452121:
L_175936:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452123
L_175937:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452123:
L_175939:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452124:
L_175932:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452126
L_175933:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175934:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452126:
L_175935:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452127:
	xchgq %r11,%r14
	jmp L_175929
.p2align 0x4
L_452129:
L_175913:
	movq 0x0(%r11),%r15
L_175914:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175915:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175916:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175917:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_175918:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_175919:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2A0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1528
.p2align 0x4
L_452136:
L_175877:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175878:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175879:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175880:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452147
	cmpq $0xE4C,%r15
	je L_452137
	jmp L_173267
.p2align 0x4
L_452137:
L_175893:
	movq 0x0(%r11),%r15
L_175894:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175895:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175896:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452145
L_175899:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452142
	cmpq $0xE4C,%r13
	je L_452139
	xchgq %r11,%r14
L_175897:
	cmpq $0x1,%r14
	jne L_173267
L_175898:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452139:
L_175904:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452141
L_175905:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452141:
L_175907:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452142:
L_175900:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452144
L_175901:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175902:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452144:
L_175903:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452145:
	xchgq %r11,%r14
	jmp L_175897
.p2align 0x4
L_452147:
L_175881:
	movq 0x0(%r11),%r15
L_175882:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175883:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175884:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175885:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_175886:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_175887:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x178(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1528
.p2align 0x4
L_452154:
L_175851:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175852:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175853:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175854:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452165
	cmpq $0xE4C,%r15
	je L_452155
	jmp L_173267
.p2align 0x4
L_452155:
L_175861:
	movq 0x0(%r11),%r15
L_175862:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175863:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175864:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452163
L_175867:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452160
	cmpq $0xE4C,%r13
	je L_452157
	xchgq %r11,%r14
L_175865:
	cmpq $0x1,%r14
	jne L_173267
L_175866:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452157:
L_175872:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452159
L_175873:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452159:
L_175875:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452160:
L_175868:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452162
L_175869:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175870:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452162:
L_175871:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452163:
	xchgq %r11,%r14
	jmp L_175865
.p2align 0x4
L_452165:
L_175855:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175856:
	movq 0x148(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_173267
L_175858:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_452166
L_175859:
	movq $0x7FFFFFFFFFFFFFFF,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	andpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_24:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
L_452166:
L_175860:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x7FFFFFFF,%r13d
	movd %r13d,%xmm14
	andps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_24
.p2align 0x4
L_452171:
L_175824:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175825:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175826:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175827:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452182
	cmpq $0xE4C,%r15
	je L_452172
	jmp L_173267
.p2align 0x4
L_452172:
L_175835:
	movq 0x0(%r11),%r15
L_175836:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175837:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175838:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452180
L_175841:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452177
	cmpq $0xE4C,%r13
	je L_452174
	xchgq %r11,%r14
L_175839:
	cmpq $0x1,%r14
	jne L_173267
L_175840:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452174:
L_175846:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452176
L_175847:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452176:
L_175849:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452177:
L_175842:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452179
L_175843:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175844:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452179:
L_175845:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452180:
	xchgq %r11,%r14
	jmp L_175839
.p2align 0x4
L_452182:
L_175828:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175829:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2A8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452186:
L_175797:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175798:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175799:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175800:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452197
	cmpq $0xE4C,%r15
	je L_452187
	jmp L_173267
.p2align 0x4
L_452187:
L_175808:
	movq 0x0(%r11),%r15
L_175809:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175810:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175811:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452195
L_175814:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452192
	cmpq $0xE4C,%r13
	je L_452189
	xchgq %r11,%r14
L_175812:
	cmpq $0x1,%r14
	jne L_173267
L_175813:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452189:
L_175819:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452191
L_175820:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452191:
L_175822:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452192:
L_175815:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452194
L_175816:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175817:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452194:
L_175818:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452195:
	xchgq %r11,%r14
	jmp L_175812
.p2align 0x4
L_452197:
L_175801:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175802:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452201:
L_175770:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175771:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175772:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175773:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452212
	cmpq $0xE4C,%r15
	je L_452202
	jmp L_173267
.p2align 0x4
L_452202:
L_175781:
	movq 0x0(%r11),%r15
L_175782:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175783:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175784:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452210
L_175787:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452207
	cmpq $0xE4C,%r13
	je L_452204
	xchgq %r11,%r14
L_175785:
	cmpq $0x1,%r14
	jne L_173267
L_175786:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452204:
L_175792:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452206
L_175793:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452206:
L_175795:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452207:
L_175788:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452209
L_175789:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175790:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452209:
L_175791:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452210:
	xchgq %r11,%r14
	jmp L_175785
.p2align 0x4
L_452212:
L_175774:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175775:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_63+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452216:
L_175743:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175744:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175745:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175746:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452227
	cmpq $0xE4C,%r15
	je L_452217
	jmp L_173267
.p2align 0x4
L_452217:
L_175754:
	movq 0x0(%r11),%r15
L_175755:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175756:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175757:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452225
L_175760:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452222
	cmpq $0xE4C,%r13
	je L_452219
	xchgq %r11,%r14
L_175758:
	cmpq $0x1,%r14
	jne L_173267
L_175759:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452219:
L_175765:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452221
L_175766:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452221:
L_175768:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452222:
L_175761:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452224
L_175762:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175763:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452224:
L_175764:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452225:
	xchgq %r11,%r14
	jmp L_175758
.p2align 0x4
L_452227:
L_175747:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175748:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x168(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_62+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452231:
L_175716:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175717:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175718:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175719:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452242
	cmpq $0xE4C,%r15
	je L_452232
	jmp L_173267
.p2align 0x4
L_452232:
L_175727:
	movq 0x0(%r11),%r15
L_175728:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175729:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175730:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452240
L_175733:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452237
	cmpq $0xE4C,%r13
	je L_452234
	xchgq %r11,%r14
L_175731:
	cmpq $0x1,%r14
	jne L_173267
L_175732:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452234:
L_175738:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452236
L_175739:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452236:
L_175741:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452237:
L_175734:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452239
L_175735:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175736:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452239:
L_175737:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452240:
	xchgq %r11,%r14
	jmp L_175731
.p2align 0x4
L_452242:
L_175720:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175721:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2B8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_61+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452246:
L_175689:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175690:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175691:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175692:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452257
	cmpq $0xE4C,%r15
	je L_452247
	jmp L_173267
.p2align 0x4
L_452247:
L_175700:
	movq 0x0(%r11),%r15
L_175701:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175702:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175703:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452255
L_175706:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452252
	cmpq $0xE4C,%r13
	je L_452249
	xchgq %r11,%r14
L_175704:
	cmpq $0x1,%r14
	jne L_173267
L_175705:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452249:
L_175711:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452251
L_175712:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452251:
L_175714:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452252:
L_175707:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452254
L_175708:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175709:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452254:
L_175710:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452255:
	xchgq %r11,%r14
	jmp L_175704
.p2align 0x4
L_452257:
L_175693:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175694:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452261:
L_175662:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175663:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175664:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175665:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452272
	cmpq $0xE4C,%r15
	je L_452262
	jmp L_173267
.p2align 0x4
L_452262:
L_175673:
	movq 0x0(%r11),%r15
L_175674:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175675:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175676:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452270
L_175679:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452267
	cmpq $0xE4C,%r13
	je L_452264
	xchgq %r11,%r14
L_175677:
	cmpq $0x1,%r14
	jne L_173267
L_175678:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452264:
L_175684:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452266
L_175685:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452266:
L_175687:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452267:
L_175680:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452269
L_175681:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175682:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452269:
L_175683:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452270:
	xchgq %r11,%r14
	jmp L_175677
.p2align 0x4
L_452272:
L_175666:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175667:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_59+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452276:
L_175630:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175631:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175632:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175633:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452287
	cmpq $0xE4C,%r15
	je L_452277
	jmp L_173267
.p2align 0x4
L_452277:
L_175646:
	movq 0x0(%r11),%r15
L_175647:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175648:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175649:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452285
L_175652:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452282
	cmpq $0xE4C,%r13
	je L_452279
	xchgq %r11,%r14
L_175650:
	cmpq $0x1,%r14
	jne L_173267
L_175651:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452279:
L_175657:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452281
L_175658:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452281:
L_175660:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452282:
L_175653:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452284
L_175654:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175655:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452284:
L_175656:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452285:
	xchgq %r11,%r14
	jmp L_175650
.p2align 0x4
L_452287:
L_175634:
	movq 0x0(%r11),%r15
L_175635:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175636:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175637:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175638:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_173267
L_175639:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_173267
L_175640:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x158(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1528
.p2align 0x4
L_452294:
L_175603:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175604:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175605:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175606:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452305
	cmpq $0xE4C,%r15
	je L_452295
	jmp L_173267
.p2align 0x4
L_452295:
L_175614:
	movq 0x0(%r11),%r15
L_175615:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175616:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175617:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452303
L_175620:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452300
	cmpq $0xE4C,%r13
	je L_452297
	xchgq %r11,%r14
L_175618:
	cmpq $0x1,%r14
	jne L_173267
L_175619:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452297:
L_175625:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452299
L_175626:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452299:
L_175628:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452300:
L_175621:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452302
L_175622:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175623:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452302:
L_175624:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452303:
	xchgq %r11,%r14
	jmp L_175618
.p2align 0x4
L_452305:
L_175607:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175608:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452309:
L_175576:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175577:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175578:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175579:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452320
	cmpq $0xE4C,%r15
	je L_452310
	jmp L_173267
.p2align 0x4
L_452310:
L_175587:
	movq 0x0(%r11),%r15
L_175588:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175589:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175590:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452318
L_175593:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452315
	cmpq $0xE4C,%r13
	je L_452312
	xchgq %r11,%r14
L_175591:
	cmpq $0x1,%r14
	jne L_173267
L_175592:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452312:
L_175598:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452314
L_175599:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452314:
L_175601:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452315:
L_175594:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452317
L_175595:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175596:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452317:
L_175597:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452318:
	xchgq %r11,%r14
	jmp L_175591
.p2align 0x4
L_452320:
L_175580:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175581:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x150(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452324:
L_175549:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175550:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175551:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175552:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452335
	cmpq $0xE4C,%r15
	je L_452325
	jmp L_173267
.p2align 0x4
L_452325:
L_175560:
	movq 0x0(%r11),%r15
L_175561:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175562:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175563:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452333
L_175566:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452330
	cmpq $0xE4C,%r13
	je L_452327
	xchgq %r11,%r14
L_175564:
	cmpq $0x1,%r14
	jne L_173267
L_175565:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452327:
L_175571:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452329
L_175572:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452329:
L_175574:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452330:
L_175567:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452332
L_175568:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175569:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452332:
L_175570:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452333:
	xchgq %r11,%r14
	jmp L_175564
.p2align 0x4
L_452335:
L_175553:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175554:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2D0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1531
.p2align 0x4
L_452339:
L_175510:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175511:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175512:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175513:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_452350
	cmpq $0xE4C,%r15
	je L_452340
	jmp L_173267
.p2align 0x4
L_452340:
L_175533:
	movq 0x0(%r11),%r15
L_175534:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175535:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175536:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452348
L_175539:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452345
	cmpq $0xE4C,%r13
	je L_452342
	xchgq %r11,%r14
L_175537:
	cmpq $0x1,%r14
	jne L_173267
L_175538:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452342:
L_175544:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452344
L_175545:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452344:
L_175547:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452345:
L_175540:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452347
L_175541:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175542:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452347:
L_175543:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452348:
	xchgq %r11,%r14
	jmp L_175537
.p2align 0x4
L_452350:
L_175514:
	movq 0x0(%r11),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r13
	jne L_173267
L_175515:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x218(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x78(%rbp)
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_175516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452354:
L_175477:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175478:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175479:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175480:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452365
	cmpq $0xE4C,%r15
	je L_452355
	jmp L_173267
.p2align 0x4
L_452355:
L_175494:
	movq 0x0(%r11),%r15
L_175495:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175496:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175497:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452363
L_175500:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452360
	cmpq $0xE4C,%r13
	je L_452357
	xchgq %r11,%r14
L_175498:
	cmpq $0x1,%r14
	jne L_173267
L_175499:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452357:
L_175505:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452359
L_175506:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452359:
L_175508:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452360:
L_175501:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452362
L_175502:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175503:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452362:
L_175504:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452363:
	xchgq %r11,%r14
	jmp L_175498
.p2align 0x4
L_452365:
L_175481:
	movq 0x8(%r11),%r15
	movq %r15,0x60(%rbp)
L_175482:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175483:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_175484:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_173267
L_175485:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_173267
L_175486:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	jne L_173267
L_175487:
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_175488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452372:
L_175440:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175441:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175442:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175443:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452383
	cmpq $0xE4C,%r15
	je L_452373
	jmp L_173267
.p2align 0x4
L_452373:
L_175461:
	movq 0x0(%r11),%r15
L_175462:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175463:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175464:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452381
L_175467:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452378
	cmpq $0xE4C,%r13
	je L_452375
	xchgq %r11,%r14
L_175465:
	cmpq $0x1,%r14
	jne L_173267
L_175466:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452375:
L_175472:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452377
L_175473:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452377:
L_175475:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452378:
L_175468:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452380
L_175469:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175470:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452380:
L_175471:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452381:
	xchgq %r11,%r14
	jmp L_175465
.p2align 0x4
L_452383:
L_175444:
	movq 0x8(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175445:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_452385
L_175447:
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x60(%rbp)
	movq 0x2E0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452384
L_175448:
	movq %r13,0xC8(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_175449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452384:
L_175456:
	movq %r10,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452385:
L_175446:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452389:
L_175403:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175404:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175405:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_452408
L_175424:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_452398
L_175425:
	movq 0x0(%r11),%r15
L_175426:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175427:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175428:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_173267
L_175429:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452393
	cmpq $0xE4C,%r13
	je L_452390
	jmp L_173267
.p2align 0x4
L_452390:
L_175434:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452392
L_175435:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452392:
L_175437:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175438:
	movl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452393:
L_175430:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_173267
L_175431:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175432:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452398:
	movq %r13,%r15
	xchgq %r11,%r14
L_175407:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175408:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_173267
L_175410:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173267
L_175411:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452402
	cmpq $0xE4A,%r15
	je L_452399
	jmp L_173267
.p2align 0x4
L_452399:
L_175416:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_175417:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_173267
L_175418:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_173267
L_175419:
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_452402:
L_175412:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_175413:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175414:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	jne L_173267
L_175415:
	movq %r14,0xC8(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_452408:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_175407
.p2align 0x4
L_452410:
L_175367:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175368:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175369:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_452427
L_175386:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_452420
L_175387:
	movq 0x0(%r11),%r10
L_175388:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_173267
L_175389:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_175390:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_175391
L_175393:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452415
	cmpq $0xE4C,%r13
	je L_452412
L_175391:
	cmpq $0x1,%r15
	jne L_173267
L_175392:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452412:
L_175398:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_452414
L_175399:
	cmpq $0x1,0x8(%r15)
	jne L_173267
	movq %r10,%r15
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452414:
L_175401:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452415:
L_175394:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_452417
L_175395:
	cmpq $0x1,0x8(%r15)
	jne L_173267
L_175396:
	movq %r10,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452417:
L_175397:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452420:
	movq %r13,%r15
	xchgq %r11,%r14
L_175371:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175372:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_173267
L_175374:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_175375
L_175376:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_452423
L_175377:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_175378:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_175379
L_175380:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_452421
L_175381:
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_452421:
L_175379:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452423:
L_175375:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452427:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_175371
.p2align 0x4
L_452429:
L_175341:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175342:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175343:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175344:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_173267
L_175345:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	je L_452438
L_175346:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175347:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452437
L_175350:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452434
	cmpq $0xE4C,%r13
	je L_452431
	xchgq %r11,%r14
L_175348:
	cmpq $0x1,%r14
	jne L_173267
L_175349:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452431:
L_175355:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452433
L_175356:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452433:
L_175358:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452434:
L_175351:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452436
L_175352:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175353:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452436:
L_175354:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452437:
	xchgq %r11,%r14
	jmp L_175348
.p2align 0x4
L_452438:
L_175359:
	movq %r15,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x140(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_452442:
L_175320:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175321:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175322:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175323:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_173267
L_175324:
	movq 0x0(%r11),%r15
L_175325:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175326:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175327:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452450
L_175330:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452447
	cmpq $0xE4C,%r13
	je L_452444
	xchgq %r11,%r14
L_175328:
	cmpq $0x1,%r14
	jne L_173267
L_175329:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452444:
L_175335:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452446
L_175336:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452446:
L_175338:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175339:
	movl %eax,%ecx
	jmp L_173478
.p2align 0x4
L_452447:
L_175331:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452449
L_175332:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175333:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452449:
L_175334:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452450:
	xchgq %r11,%r14
	jmp L_175328
.p2align 0x4
L_452455:
L_175279:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175280:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175281:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175282:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_173267
L_175283:
	movq 0x0(%r11),%r15
L_175284:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175285:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175286:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452468
L_175289:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452465
	cmpq $0xE4C,%r13
	je L_452457
	xchgq %r11,%r14
L_175287:
	cmpq $0x1,%r14
	jne L_173267
L_175288:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452457:
L_175294:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452459
L_175295:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452459:
L_175297:
	movq %r15,%r11
	andq %r13,%r11
	andq $0x1,%r11
	jz L_452462
L_175298:
	cmpq %r13,%r15
	jl L_452461
L_175299:
	cmpq %r15,%r13
	jl L_452460
L_175301:
	movq $0x1,0x60(%rbp)
L_175302:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_175303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452460:
L_175310:
	movq $0x3,0x60(%rbp)
	jmp L_175302
.p2align 0x4
L_452461:
L_175312:
	movq $0xFFFFFFFFFFFFFFFF,0x60(%rbp)
	jmp L_175302
.p2align 0x4
L_452462:
L_175313:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_175314:
	cmpl $0x0,%eax
	jl L_175312
L_175315:
	cmpl $0x0,%eax
	jg L_175310
	jmp L_175301
.p2align 0x4
L_452465:
L_175290:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452467
L_175291:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175292:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452467:
L_175293:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452468:
	xchgq %r11,%r14
	jmp L_175287
.p2align 0x4
L_452473:
L_175245:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175246:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_452484
L_175247:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_173267
L_175248:
	movq 0x0(%r11),%r15
L_175249:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175250:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175251:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452481
L_175254:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452478
	cmpq $0xE4C,%r13
	je L_452475
	xchgq %r11,%r14
L_175252:
	cmpq $0x1,%r14
	jne L_173267
L_175253:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452475:
L_175259:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452477
L_175260:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452477:
L_175262:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452478:
L_175255:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452480
L_175256:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175257:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452480:
L_175258:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452481:
	xchgq %r11,%r14
	jmp L_175252
.p2align 0x4
L_452484:
L_175263:
	cmpq $0x1,%r13
	jne L_173267
L_175264:
	movq 0x2E8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452485
L_175265:
	movq %r13,0x308(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x300(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x300,%rbp
	leaq (L_175266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452485:
L_175273:
	movq %r10,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452488:
L_175221:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_175222:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175223:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_173267
L_175224:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_452499
	cmpq $0xE4C,%r15
	je L_452489
	jmp L_173267
.p2align 0x4
L_452489:
L_175229:
	movq 0x0(%r11),%r15
L_175230:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_173267
L_175231:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175232:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452497
L_175235:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452494
	cmpq $0xE4C,%r13
	je L_452491
	xchgq %r11,%r14
L_175233:
	cmpq $0x1,%r14
	jne L_173267
L_175234:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452491:
L_175240:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452493
L_175241:
	cmpq $0x1,0x8(%r11)
	jne L_173267
	xchgq %r13,%r14
	jmp x_562
.p2align 0x4
L_452493:
L_175243:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452494:
L_175236:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452496
L_175237:
	cmpq $0x1,0x8(%r11)
	jne L_173267
L_175238:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_561
.p2align 0x4
L_452496:
L_175239:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452497:
	xchgq %r11,%r14
	jmp L_175233
.p2align 0x4
L_452499:
L_175225:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_175226:
	cmpq $0x1,0x0(%r15)
	jne L_173267
L_175228:
	movq $0x1,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452504:
L_176248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_176249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176249
.p2align 0x4
.long 0x2430
L_176249:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	jmp L_174170
.p2align 0x4
L_452505:
L_174165:
	movq (globalObjptr+0x1A48)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452506:
L_176250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_176251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176251
.p2align 0x4
.long 0x2430
L_176251:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	jmp L_174164
.p2align 0x4
L_452507:
L_176252:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_174173
.p2align 0x4
L_452509:
L_173264:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173266
L_174155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174156
.p2align 0x4
.long 0x23DC
L_174156:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173266:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_173317:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1411,%r15
	je L_452701
	cmpq $0x1412,%r15
	je L_452693
L_173318:
	movq 0x0(%r13),%r15
L_173319:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_173320:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	je L_452640
	cmpq $0x1411,%r14
	je L_452510
	jmp L_173267
.p2align 0x4
L_452510:
L_173538:
	movq 0x0(%r11),%r14
L_173539:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_173267
L_173540:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE4A,%r11
	je L_452519
	cmpq $0xE4B,%r11
	je L_452515
	cmpq $0xE4C,%r11
	je L_452511
	jmp L_173267
.p2align 0x4
L_452511:
L_173939:
	movq 0x0(%r14),%r11
L_173940:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_173267
L_173941:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1410,%r13
	jne L_173267
L_173942:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	jne L_173267
L_173943:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl $0x1,0x70(%rbp)
	movq %r11,%r15
varIntInf_3:
	movq %r15,0x338(%rbp)
	leaq L_174002(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x338,%rbp
	leaq (L_173944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452515:
L_173888:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	jne L_173267
L_173889:
	movq %r11,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl $0x1,0x70(%rbp)
varReal_3:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_173267
L_173891:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_452516
L_173892:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xC8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_173893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1532
.p2align 0x4
L_452516:
L_173938:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xC8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_173893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1533
.p2align 0x4
L_452519:
L_173541:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_452537
L_173542:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_173543:
	cmpq $0x1,0x0(%r11)
	jne L_173267
L_173545:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1F,%r13
	je L_452534
	cmpq $0x25,%r13
	je L_452521
L_173546:
	andq $0x3,%r14
	jnz L_173267
L_173547:
	jmp L_173267
.p2align 0x4
L_452521:
L_173549:
	movq %r15,0x20(%rbp)
L_173345:
	cmpl $0x0,0x58(%rbp)
	jl L_173156
L_173346:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1769:
	cmpl 0x58(%rbp),%ecx
	jnl L_452532
L_173355:
	movslq %ecx,%r15
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452530
L_173379:
	movq 0x10(%r10),%r13
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452529
L_173381:
	movq 0x10(%r11),%r14
	movq %r10,%r15
L_173358:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne x_559
L_173364:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r11
	jne L_173127
L_173366:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%esp
	movslq %esp,%r14
	cmpq %r14,%r8
	jne L_173127
L_173368:
	cmpl %esp,%ebx
	jne x_559
L_173370:
	xorl %r8d,%r8d
	movq %r10,%r14
	movq %r9,%r13
	xchgl %r8d,%ecx
	movl %r8d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_1770:
	cmpl %ecx,%ebx
	je L_452526
L_173371:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_173203
L_173373:
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r13,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne x_1789
L_173375:
	incl %ecx
	jo L_173118
L_173376:
	jmp loop_1770
.p2align 0x4
x_1789:
	movl (localWord32+0x0)(%rip),%ecx
x_559:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_173361
L_173362:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_173118
L_173363:
	movl %r15d,0x0(%r14)
L_173361:
	incl %ecx
	jmp loop_1769
.p2align 0x4
L_452526:
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_173361
.p2align 0x4
L_452529:
L_173380:
	movq 0x0(%r11),%r14
	movq %r10,%r15
	jmp L_173358
.p2align 0x4
L_452530:
L_173356:
	movq 0x0(%r10),%r13
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452531
L_173378:
	movq 0x10(%r11),%r14
	movq %r10,%r15
	jmp L_173358
.p2align 0x4
L_452531:
L_173357:
	movq 0x0(%r11),%r14
	movq %r10,%r15
	jmp L_173358
.p2align 0x4
L_452532:
L_173347:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_173348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_452534:
L_173548:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452537:
L_173550:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_452637
	cmpq $0x15,%r13
	je L_452634
L_173551:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_173552:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x16,%rax
	ja L_173267
	jmp *jumpTable_587(,%rax,8)
.data
.p2align 0x4
jumpTable_587:
.quad L_452631,L_452628,L_452581,L_452576,L_452575,L_452572,L_173267,L_452567,L_452563,L_452561,L_173267,L_173267,L_173267,L_452557,L_452553,L_452549,L_452545,L_173267,L_173267,L_173267,L_452543,L_452541,L_452539
.text
.p2align 0x4
L_452539:
L_173874:
	movq %r15,%r14
	movq %r11,%r15
L_173875:
	cmpq $0x1,0x0(%r15)
	jne L_173267
L_173877:
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452541:
L_173870:
	movq %r15,%r14
	movq %r11,%r15
L_173871:
	cmpq $0x1,0x0(%r15)
	jne L_173267
L_173873:
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452543:
L_173860:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r11,%r15
L_173861:
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_452544
L_173862:
	movq 0x2F8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452544:
L_173869:
	movq %r14,0x20(%rbp)
zero_5:
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452545:
L_173857:
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
shift_3:
	testl %ecx,%ecx
	jz L_452547
L_173859:
	movq %r14,0x68(%rbp)
	movq %r13,0x70(%rbp)
	movq %r15,%r13
L_173683:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	jne L_452546
L_173701:
	movq %r13,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452546:
L_173684:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_173685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452547:
L_173858:
	xchgq %r13,%r14
L_173673:
	cmpq $0x1,0x0(%r13)
	jne L_173267
L_173675:
	movq %r14,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452549:
L_173817:
	movq %r11,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl $0x1,%ecx
L_173818:
	testl %ecx,%ecx
	jnz L_452551
L_173819:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x308(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	testl %ebx,%ebx
	jnz L_452550
L_173820:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452550:
L_173833:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452551:
L_173837:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x300(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	testl %ebx,%ebx
	jnz L_452552
L_173838:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452552:
L_173852:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452553:
L_173803:
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,%r15
L_173804:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_452556
L_173805:
	cmpq $0x3,%r14
	je L_452555
L_173806:
	testl %ecx,%ecx
	jz L_173267
L_173808:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452555:
L_173815:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452556:
L_173816:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
L_452557:
L_173789:
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,%r15
L_173790:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_452560
L_173791:
	cmpq $0x3,%r14
	je L_452559
L_173792:
	testl %ecx,%ecx
	jz L_173267
L_173794:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452559:
L_173801:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452560:
L_173802:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
L_452561:
L_173776:
	movq %r11,0x68(%rbp)
L_173777:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	jne L_452562
L_173788:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452562:
L_173778:
	movq 0x2F8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452563:
L_173762:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_173763:
	testl %ecx,%ecx
	jz L_173267
L_173765:
	cmpq $0x3,0x0(%r15)
	je L_452565
L_173766:
	testl %ebx,%ebx
	jz L_173267
L_173768:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452565:
L_173775:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452567:
L_173750:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_173751:
	testl %ecx,%ecx
	jz L_173267
L_173753:
	cmpq $0x3,0x0(%r15)
	je L_452569
L_173754:
	testl %ebx,%ebx
	jz L_173267
L_173756:
	movq %r15,0x300(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x300,%rbp
	leaq (L_173757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452569:
L_173760:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452572:
L_173749:
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
ro_3:
	testl %ecx,%ecx
	jz L_452573
L_173732:
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_173733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452573:
L_173719:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_452574
L_173720:
	movq 0x2F8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452574:
L_173728:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452575:
L_173718:
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
	jmp ro_3
.p2align 0x4
L_452576:
L_173669:
	movq %r11,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r11
	movl $0x1,0x5C(%rbp)
	movq %r15,%r14
	movq %r11,%r15
L_173670:
	testl %ecx,%ecx
	jnz L_452578
L_173671:
	movl 0x5C(%rbp),%r11d
	testl %r11d,%r11d
	jz L_452577
L_173682:
	movq %r15,0x70(%rbp)
	movq %r14,%r13
	jmp L_173683
.p2align 0x4
L_452577:
L_173672:
	movq 0x68(%rbp),%r13
	movq %r15,%r14
	jmp L_173673
.p2align 0x4
L_452578:
L_173702:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq $0x1,%r11
	jne L_452580
L_173715:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452579
L_173716:
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452579:
L_173717:
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452580:
L_173703:
	movq 0x2F8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452581:
L_173663:
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_173664:
	cmpq $0x1,0x0(%r14)
	jne L_173267
L_173666:
	testl %ecx,%ecx
	jnz L_452626
L_173667:
	movq $0x243B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_173563:
	incl %ecx
	jo L_173118
L_173564:
	cmpq $0x1,%r13
	je L_452582
L_173565:
	movq 0x8(%r13),%r13
	jmp L_173563
.p2align 0x4
L_452582:
L_173566:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_452624
L_173567:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_173568:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173569
.p2align 0x4
.long 0x2390
L_173569:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x70(%rbp)
L_173570:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1774:
	cmpq 0x60(%rbp),%r15
	jnl L_452584
L_173649:
	cmpq $0x1,%r14
	je L_452583
L_173650:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1774
.p2align 0x4
L_452583:
L_173651:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4B0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452584:
L_173571:
	movq 0x70(%rbp),%r15
	movq $0xC81,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_452622
L_173572:
	movq 0x68(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_173573:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173574
.p2align 0x4
.long 0x239F
L_173574:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x28(%rbp)
L_173575:
	movl $0x0,0x5C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1775:
	cmpq 0x68(%rbp),%r15
	jnl L_452601
L_173614:
	movl %r15d,%ebx
	movslq %ebx,%r14
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r13
	movq 0x70(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_173127
L_173616:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1781:
	cmpl %ebx,%ecx
	je L_452599
L_173617:
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_173203
L_173619:
	movq 0x70(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xEA9,%r11
	je L_452596
L_173643:
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r10
	shrq $0x1,%r10
	cmpq $0xEA9,%r10
	je L_452595
L_173645:
	movq 0x10(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
L_173622:
	movq 0x8(%r11),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq 0x0(%r11),%rsi
	movq 0x10(%rsi),%rdi
	cmpq %rdi,0x10(%rsp)
	jne L_173624
L_173626:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	movl %r10d,%esp
	movslq %esp,%r15
	cmpq %r15,%r10
	jne L_173127
L_173628:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%rsi
	movl %esi,%edi
	movslq %edi,%r15
	cmpq %r15,%rsi
	jne L_173127
L_173630:
	cmpl %edi,%esp
	jne L_173624
L_173632:
	xorl %esi,%esi
	movq %r9,%r15
	movq %r8,%r11
	xchgl %esp,%ecx
	xchgl %esi,%ebx
	movl %esp,(localWord32+0x4)(%rip)
	movl %esi,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_1782:
	cmpl %ebx,%ecx
	je L_452589
L_173633:
	movslq %ebx,%r9
	cmpq %r10,%r9
	jnb L_173203
L_173635:
	movq 0x0(%r11,%r9,8),%r8
	movq 0x0(%r15,%r9,8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_452586
L_173637:
	incl %ebx
	jo L_173118
L_173638:
	jmp loop_1782
.p2align 0x4
L_452586:
	movl (localWord32+0x4)(%rip),%ecx
	movl (localWord32+0x0)(%rip),%ebx
L_173624:
	incl %ebx
	jo L_173118
L_173625:
	movq (localWord64+0x0)(%rip),%r15
	jmp loop_1781
.p2align 0x4
L_452589:
L_173639:
	movl 0x5C(%rbp),%ecx
	incl %ecx
	jo L_173118
L_173640:
	movl $0x1,%ebx
	movq (localWord64+0x0)(%rip),%r15
L_173641:
	movq %r15,%r14
	movq %r15,%r11
	movl %ecx,0x5C(%rbp)
	salq $0x4,%r14
	movq 0x28(%rbp),%r10
	movl %ebx,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r11
	movq %r13,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_1775
.p2align 0x4
L_452595:
L_173644:
	movq 0x0(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_173622
.p2align 0x4
L_452596:
L_173620:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r10
	shrq $0x1,%r10
	cmpq $0xEA9,%r10
	je L_452597
L_173642:
	movq 0x10(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_173622
.p2align 0x4
L_452597:
L_173621:
	movq 0x0(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_173622
.p2align 0x4
L_452599:
L_173646:
	movl 0x5C(%rbp),%ecx
	xorl %ebx,%ebx
	jmp L_173641
.p2align 0x4
L_452601:
L_173576:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173577
L_173612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173613
.p2align 0x4
.long 0x23A1
L_173613:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173577:
	movq 0x28(%rbp),%r14
	movq $0x17C7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movslq 0x5C(%rbp),%r15
	testq %r15,%r15
	jz L_173580
L_173578:
	cmpq $0x7FFFFFFF,%r15
	ja L_173184
L_173580:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1776:
	cmpq %r15,%r14
	jnl L_452605
L_173605:
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1780:
	movslq %ecx,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	cmpl $0x1,0x0(%r11,%r13,1)
	je L_452603
L_173606:
	incl %ecx
	jo L_173118
L_173607:
	jmp loop_1780
.p2align 0x4
L_452603:
L_173608:
	incl %ecx
	jo L_173118
L_173609:
	movq 0x50(%rbp),%r13
	movl %ecx,0x0(%r13)
	incq %r14
	jmp loop_1776
.p2align 0x4
L_452605:
L_173581:
	movq 0x50(%rbp),%r15
	movl $0x0,0x0(%r15)
	movl 0x58(%rbp),%r15d
	subl 0x5C(%rbp),%r15d
	jo L_173118
L_173582:
	movslq %r15d,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_452616
L_173583:
	cmpq $0x7FFFFFFF,%rdx
	ja L_173184
L_173584:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173585
.p2align 0x4
.long 0x23A0
L_173585:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,%r15
L_173586:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1777:
	cmpq 0x58(%rbp),%r14
	jnl L_452609
L_173598:
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1779:
	movslq %ecx,%r13
	movq %r13,%r11
	salq $0x4,%r11
	salq $0x4,%r13
	movq 0x28(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movl 0x0(%r10,%r11,1),%r13d
	testl %r13d,%r13d
	jz L_452607
L_173599:
	incl %ecx
	jo L_173118
L_173600:
	jmp loop_1779
.p2align 0x4
L_452607:
L_173601:
	incl %ecx
	jo L_173118
L_173602:
	movq 0x50(%rbp),%r13
	movl %ecx,0x0(%r13)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r9,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1777
.p2align 0x4
L_452609:
L_173587:
	movq $0xC81,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_173127
L_173589:
	cmpl $0x0,%ecx
	jl L_173156
L_173590:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1778:
	cmpl %ecx,%ebx
	jnl L_452612
L_173592:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_173594
L_173595:
	movq 0x0(%r13),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_173118
L_173596:
	movl %r13d,0x0(%r14)
L_173594:
	incl %ebx
	jmp loop_1778
.p2align 0x4
L_452612:
L_173591:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452616:
L_173604:
	movq (globalObjptr+0x1CA0)(%rip),%r15
	jmp L_173586
.p2align 0x4
L_452622:
L_173648:
	movq (globalObjptr+0x1C98)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_173575
.p2align 0x4
L_452624:
L_173653:
	movq (globalObjptr+0x1C90)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_173570
.p2align 0x4
L_452626:
L_173668:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452628:
L_173657:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_173658:
	cmpq $0x1,0x0(%r14)
	jne L_173267
L_173660:
	testl %ecx,%ecx
	jnz L_452629
L_173661:
	movq $0x2439,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452629:
L_173662:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452631:
L_173553:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r11,%r15
L_173554:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_452632
L_173555:
	movq 0x2F8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452632:
L_173656:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452634:
L_173882:
	movl $0x1,%ecx
	xchgq %r15,%r14
	xchgq %r11,%r15
L_173883:
	cmpq $0x1,0x0(%r15)
	jne L_173267
L_173885:
	testl %ecx,%ecx
	jz L_173267
L_173887:
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452637:
L_173878:
	xchgq %r15,%r14
	xchgq %r11,%r15
L_173879:
	cmpq $0x1,0x0(%r15)
	jne L_173267
L_173881:
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452640:
L_173321:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r13
	je L_452660
L_173322:
	cmpq $0x1,0x8(%r13)
	jne L_173267
L_173323:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452657
L_173417:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452656
L_173419:
	movq 0x10(%r10),%r10
	movq %r10,%r14
L_173326:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_173267
L_173328:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r14
	cmpq %r11,%r14
	jne L_173127
L_173330:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%r14
	cmpq %r8,%r14
	jne L_173127
L_173332:
	cmpl %ebx,%ecx
	jne L_173267
L_173334:
	xorl %ebx,%ebx
	movq %r10,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
loop_1768:
	cmpl %ebx,%ecx
	je L_452644
L_173335:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_173203
L_173337:
	movq 0x0(%r13,%r10,8),%r9
	movq 0x0(%r14,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne L_173267
L_173339:
	incl %ebx
	jo L_173118
L_173340:
	jmp loop_1768
.p2align 0x4
L_452644:
L_173341:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1E,%r13
	je L_452651
	cmpq $0x2A,%r13
	je L_452650
	cmpq $0x2B,%r13
	je L_452649
	cmpq $0x2D,%r13
	je L_173413
	cmpq $0x2E,%r13
	je L_173413
	cmpq $0x33,%r13
	je L_452646
L_173342:
	andq $0x3,%r14
	jnz L_173267
L_173343:
	jmp L_173267
.p2align 0x4
L_452646:
L_173413:
	xorl %ecx,%ecx
x_560:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_452649:
L_173385:
	movl $0x1,%ecx
	jmp x_560
.p2align 0x4
L_452650:
L_173383:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452651:
L_173344:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452656:
L_173418:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_173326
.p2align 0x4
L_452657:
L_173324:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452658
L_173416:
	movq 0x10(%r10),%r10
	movq %r10,%r14
	jmp L_173326
.p2align 0x4
L_452658:
L_173325:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_173326
.p2align 0x4
L_452660:
L_173420:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452690
L_173535:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452689
L_173537:
	movq 0x10(%r10),%r10
	movq %r10,%r14
L_173423:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_173267
L_173425:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r11
	jne L_173127
L_173427:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r8
	jne L_173127
L_173429:
	cmpl %ebx,%ecx
	jne L_173267
L_173431:
	xorl %ebx,%ebx
	movq %r10,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
loop_1772:
	cmpl %ebx,%ecx
	je L_452664
L_173432:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_173203
L_173434:
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r13,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne L_173267
L_173436:
	incl %ebx
	jo L_173118
L_173437:
	jmp loop_1772
.p2align 0x4
L_452664:
L_173438:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xA,%r13
	je L_452683
	cmpq $0xB,%r13
	je L_173519
	cmpq $0x11,%r13
	je L_452681
	cmpq $0x21,%r13
	je L_452680
	cmpq $0x22,%r13
	je L_173519
	cmpq $0x39,%r13
	je L_173519
	cmpq $0x3A,%r13
	je L_452677
	cmpq $0x7F,%r13
	je L_452676
	cmpq $0x86,%r13
	je L_452675
L_173439:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_173440:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1211,%r13
	je L_452673
	cmpq $0x1212,%r13
	je L_452672
	cmpq $0x1213,%r13
	je L_452671
	cmpq $0x1218,%r13
	je L_452670
	cmpq $0x1219,%r13
	je L_452669
	cmpq $0x121A,%r13
	je L_452668
	cmpq $0x1220,%r13
	je L_452667
	cmpq $0x1223,%r13
	je L_452666
	cmpq $0x1225,%r13
	je L_452665
	jmp L_173267
.p2align 0x4
L_452665:
L_173503:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452666:
L_173502:
	movl $0x1,%ecx
	jmp L_173478
.p2align 0x4
L_452667:
L_173477:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452668:
L_173476:
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452669:
L_173469:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x218(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452670:
L_173462:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452671:
L_173455:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452672:
L_173448:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452673:
L_173441:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452675:
L_173533:
	movl $0x1,%ecx
	jmp L_173478
.p2align 0x4
L_452676:
L_173532:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452677:
L_173519:
	movl $0x1,%ecx
	jmp L_173478
.p2align 0x4
L_452680:
L_173522:
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_173523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452681:
L_173521:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452683:
L_173504:
	movq 0x318(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452684
L_173505:
	movq %r13,0x308(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_173506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452684:
L_173513:
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_173514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452689:
L_173536:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_173423
.p2align 0x4
L_452690:
L_173421:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452691
L_173534:
	movq 0x10(%r10),%r10
	movq %r10,%r14
	jmp L_173423
.p2align 0x4
L_452691:
L_173422:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_173423
.p2align 0x4
L_452693:
L_174143:
	movq 0x0(%r13),%r15
L_174144:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173267
L_174145:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1412,%r14
	jne L_173267
L_174146:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_173267
L_174147:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	andq $0xFF,%r11
	cmpq $0x39,%r11
	je L_174151
	cmpq $0x3A,%r11
	je L_452695
L_174148:
	andq $0x3,%r13
	jnz L_173267
L_174149:
	jmp L_173267
.p2align 0x4
L_452695:
L_174151:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_173519
	jmp L_173521
.p2align 0x4
L_452701:
L_174007:
	movq 0x0(%r13),%r15
L_174008:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_173267
L_174009:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452718
	cmpq $0xE4B,%r13
	je L_452714
	cmpq $0xE4C,%r13
	je L_452702
	jmp L_173267
.p2align 0x4
L_452702:
L_174040:
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
L_174041:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173267
L_174042:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	je L_452710
	cmpq $0x1411,%r14
	je L_452704
L_174043:
	cmpq $0x1,%r15
	jne L_173267
intInfUnary_8:
	movq 0x78(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_452704:
L_174079:
	movq 0x0(%r13),%r11
L_174080:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_452709
L_174083:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_452707
	cmpq $0xE4C,%r14
	je L_452705
	movq %r15,%r14
L_174081:
	cmpq $0x1,%r14
	je intInfUnary_8
	jmp L_173267
.p2align 0x4
L_452705:
L_174135:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	je intInfUnary_8
L_174136:
	cmpq $0x1,0x8(%r15)
	jne L_173267
L_174137:
	movq 0xC8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x100(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_24
.p2align 0x4
L_452707:
L_174084:
	movq 0x0(%r11),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r15
	je intInfUnary_8
L_174085:
	cmpq $0x1,0x8(%r15)
	jne L_173267
L_174086:
	movq 0x78(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_452709:
	movq %r15,%r14
	jmp L_174081
.p2align 0x4
L_452710:
L_174074:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je intInfUnary_8
L_174075:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1410,%r15
	jne L_173267
L_174076:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_173267
L_174077:
	movq %r14,0x80(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r15,0x78(%rbp)
	movq %r14,%r15
	jmp varIntInf_3
.p2align 0x4
L_452714:
L_174035:
	movq 0x0(%r15),%r13
L_174036:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173267
L_174037:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	jne L_173267
L_174038:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_173267
L_174039:
	movq %r13,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movl $0x0,0x70(%rbp)
	jmp varReal_3
.p2align 0x4
L_452718:
L_174010:
	movq 0x0(%r15),%r13
L_174011:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_173267
L_174012:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	jne L_173267
L_174013:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_173267
L_174014:
	movq 0x28(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x9,%r11
	je L_452739
	cmpq $0x15,%r11
	je L_452738
L_174015:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_173267
L_174016:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x16,%rax
	ja L_173267
	jmp *jumpTable_588(,%rax,8)
.data
.p2align 0x4
jumpTable_588:
.quad L_452736,L_452735,L_452734,L_452733,L_452732,L_452731,L_173267,L_452729,L_452728,L_452727,L_173267,L_173267,L_173267,L_452726,L_452725,L_452724,L_452723,L_173267,L_173267,L_173267,L_452722,L_452721,L_452720
.text
.p2align 0x4
L_452720:
L_174032:
	movq %r13,%r15
	jmp L_173875
.p2align 0x4
L_452721:
L_174031:
	movq %r13,%r15
	jmp L_173871
.p2align 0x4
L_452722:
L_174030:
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_173861
.p2align 0x4
L_452723:
L_174029:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp shift_3
.p2align 0x4
L_452724:
L_174028:
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ebx
	xorl %ecx,%ecx
	jmp L_173818
.p2align 0x4
L_452725:
L_174027:
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,%r15
	jmp L_173804
.p2align 0x4
L_452726:
L_174026:
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,%r15
	jmp L_173790
.p2align 0x4
L_452727:
L_174025:
	movq %r13,0x68(%rbp)
	movq %r14,%r15
	jmp L_173777
.p2align 0x4
L_452728:
L_174024:
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_173763
.p2align 0x4
L_452729:
L_174023:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x60(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_173751
.p2align 0x4
L_452731:
L_174022:
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_3
.p2align 0x4
L_452732:
L_174021:
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_3
.p2align 0x4
L_452733:
L_174020:
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movl $0x0,0x5C(%rbp)
	jmp L_173670
.p2align 0x4
L_452734:
L_174019:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_173664
.p2align 0x4
L_452735:
L_174018:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_173658
.p2align 0x4
L_452736:
L_174017:
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq %r13,%r15
	jmp L_173554
.p2align 0x4
L_452738:
L_174034:
	xorl %ecx,%ecx
	xchgq %r13,%r15
	jmp L_173883
.p2align 0x4
L_452739:
L_174033:
	xchgq %r13,%r15
	jmp L_173879
.p2align 0x4
.long 0x237E
L_173205:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq $0x1,0x28(%rbp)
	jmp L_173206
.p2align 0x4
.long 0x237F
L_173207:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173208
L_173214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173215
.p2align 0x4
.long 0x2380
L_173215:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173208:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452749
L_173209:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452748
L_173210:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452748:
L_173211:
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452749:
L_173212:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173213:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2379
L_173192:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173193
L_173194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173195
.p2align 0x4
.long 0x9C0
L_173195:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173193:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2379
L_173141:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173142
L_173143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173144
.p2align 0x4
.long 0x9C0
L_173144:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173142:
	movq $0x1D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x245F
L_176671:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176673
L_176680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176681
.p2align 0x4
.long 0x2462
L_176681:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176673:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173106
L_176674:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_173106
L_176675:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_176676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
.long 0x2448
L_176458:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
.long 0x244B
L_176487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176488
L_176520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176521
.p2align 0x4
.long 0x2451
L_176521:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176488:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_176490
L_176495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176496
L_176518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176519
.p2align 0x4
.long 0x2451
L_176519:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176496:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_176497:
	testl %eax,%eax
	jz L_452761
L_176499:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	cmpl $0x0,%r15d
	jl L_176516
L_176500:
	cmpl %r15d,0x48(%rbp)
	jl L_176516
L_176501:
	movl %r15d,0x38(%rbp)
loop_1784:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_452758
L_176502:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452757
L_176503:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x33B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452757:
L_176506:
	movq 0x50(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_452758:
L_176510:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452761:
L_176490:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2455
L_176559:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176561
L_176585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176586
.p2align 0x4
.long 0x245A
L_176586:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176561:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173106
L_176562:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_173106
L_176563:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_176564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
.long 0x2453
L_176552:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176553
L_176554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176555
.p2align 0x4
.long 0x2454
L_176555:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176553:
	incl 0x54(%rbp)
	jmp loop_1785
.p2align 0x4
.long 0x244D
L_176618:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176620
L_176621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176622
.p2align 0x4
.long 0x244E
L_176622:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_176620
.p2align 0x4
.long 0x244F
L_176625:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176626
L_176627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176628
.p2align 0x4
.long 0x2450
L_176628:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176626:
	incl 0x38(%rbp)
	jmp loop_1788
.p2align 0x4
.long 0x2447
L_176607:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176608
L_176609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176610
.p2align 0x4
.long 0x244C
L_176610:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176608:
	incl 0x4C(%rbp)
	jmp loop_1787
.p2align 0x4
.long 0x234F
L_176429:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176431
L_176432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176433
.p2align 0x4
.long 0x2445
L_176433:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_176431
.p2align 0x4
.long 0x23DD
L_174186:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_173267
L_174187:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_452779
	cmpq $0x29,%r14
	je L_452774
L_174188:
	andq $0x3,%r15
	jnz L_173267
L_174189:
	jmp L_173267
.p2align 0x4
L_452774:
L_174206:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_452775
L_174207:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x60(%rbp)
intInf_16:
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_452775:
L_174214:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_173267
L_174215:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r11
	imulq %r11,%r13
	addq $0x7,%rsi
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x68(%rbp)
	addq $0x0,%r14
	jc L_174067
L_174216:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_174217
L_174219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174220
.p2align 0x4
.long 0x23DE
L_174220:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174217:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_174218:
	movq %rax,0x60(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_16
.p2align 0x4
L_452779:
L_174190:
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x338(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2388
L_173268:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movb 0xC0(%rbp),%r15b
	movb %r15b,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173269
L_173315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173316
.p2align 0x4
.long 0x238B
L_173316:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173269:
	movb 0x50(%rbp),%r15b
	testb %r15b,%r15b
	jz L_452788
L_173270:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452781
L_173271:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_452781:
L_173294:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_173127
L_173296:
	cmpl $0x0,%ecx
	jl L_173156
L_173297:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1767:
	cmpl %ecx,%ebx
	jnl L_452784
L_173302:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_173304
L_173305:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173306:
	movl %r14d,0x0(%r15)
L_173304:
	incl %ebx
	jmp loop_1767
.p2align 0x4
L_452784:
L_173298:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173299
L_173300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_173301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173301
.p2align 0x4
.long 0x1DA8
L_173301:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_173299:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_452788:
L_173308:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_173310:
	movl %r13d,0x60(%rbp)
	movq $0x3717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_173311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
.long 0x238C
L_174277:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
L_174140:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173267
L_174141:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x25
L_174198:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1,%r15
	je L_173267
	cmpq $0x3,%r15
	je L_173267
	cmpq $0x6,%r15
	je L_173267
	cmpq $0x7,%r15
	je L_173267
L_174199:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_174200
L_174201:
L_174200:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23DF
L_174226:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_173267
L_174227:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_452800
	cmpq $0x25,%r14
	je L_452799
	cmpq $0x2F,%r14
	je L_452798
L_174228:
	andq $0x3,%r15
	jnz L_173267
L_174229:
	jmp L_173267
.p2align 0x4
L_452798:
L_174257:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x130(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x130,%rbp
	leaq (L_174258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452799:
L_174239:
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452800:
L_174230:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x238C
L_175198:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175199
L_175202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175203
.p2align 0x4
.long 0x23CF
L_175203:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175199:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175200:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23ED
L_175157:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175158
L_175171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175172
.p2align 0x4
.long 0x2420
L_175172:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175158:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_452804
L_175159:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452804:
L_175163:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x23E8
L_175123:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
wordOrOverflow_3:
	movl %ecx,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x241D
L_175125:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_175126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x238C
word_52:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175091
L_175092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175093
.p2align 0x4
.long 0x23E7
L_175093:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175091:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_54:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175058
L_175061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175062
.p2align 0x4
.long 0x23CF
L_175062:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175058:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175059:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x241C
L_175027:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_173521
L_175029:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175030:
	movl %eax,%ecx
	jmp L_173478
.p2align 0x4
.long 0x23A7
L_174991:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23AC
L_174997:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x238C
word_50:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174965
L_174966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174967
.p2align 0x4
.long 0x23E7
L_174967:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174965:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2403
L_174937:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%ecx
	movl %ecx,0x5C(%rbp)
	jmp L_173478
.p2align 0x4
.long 0x2413
L_174889:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	testl %r15d,%r15d
	jnz L_452811
L_174890:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452811:
L_174894:
	movl 0x5C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_452812
L_174895:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
L_174896:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
L_174897:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_452812:
L_174905:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23E8
L_174858:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x2411
L_174860:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_174861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x240C
L_174821:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x240B
L_174797:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2407
L_174762:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x238C
word_49:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174735
L_174736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174737
.p2align 0x4
.long 0x23E7
L_174737:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174735:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23C2
L_174687:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	testl %r15d,%r15d
	jnz L_452814
L_174688:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1978)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452814:
L_174692:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452815
L_174693:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x70(%rbp),%r15
L_174694:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_452815:
L_174702:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23C2
L_174638:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	testl %r15d,%r15d
	jnz L_452816
L_174639:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452816:
L_174643:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452817
L_174644:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x70(%rbp),%r15
L_174645:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_452817:
L_174653:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23F9
L_174522:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x25
L_174541:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174542
.p2align 0x4
.long 0x23FC
L_174542:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	testl %eax,%eax
	jz L_452822
L_174543:
	cmpl $0x1,%eax
	je L_452821
L_174544:
	cmpl $0x2,%eax
	je L_452820
L_174545:
	cmpl $0x3,%eax
	jne L_174519
L_174547:
	xorb %dl,%dl
L_174548:
	movb 0x5C(%rbp),%r15b
	cmpb %r15b,%dl
	je L_173267
L_174549:
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_452820:
L_174552:
	movb $0x1,%dl
	jmp L_174548
.p2align 0x4
L_452821:
L_174553:
	movb $0x2,%dl
	jmp L_174548
.p2align 0x4
L_452822:
L_174554:
	movb $0x3,%dl
	jmp L_174548
.p2align 0x4
.long 0x23FE
L_174569:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	leaq L_174602(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_174570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x25
L_174588:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_174589:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174590
.p2align 0x4
.long 0x23FC
L_174590:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	testl %eax,%eax
	jz L_452827
L_174591:
	cmpl $0x1,%eax
	je L_452826
L_174592:
	cmpl $0x2,%eax
	je L_452825
L_174593:
	cmpl $0x3,%eax
	jne L_174519
L_174595:
	xorb %dl,%dl
L_174596:
	movb 0x5C(%rbp),%r15b
	cmpb %dl,%r15b
	je L_173267
L_174597:
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_452825:
L_174599:
	movb $0x1,%dl
	jmp L_174596
.p2align 0x4
L_452826:
L_174600:
	movb $0x2,%dl
	jmp L_174596
.p2align 0x4
L_452827:
L_174601:
	movb $0x3,%dl
	jmp L_174596
.p2align 0x4
.long 0x2401
L_174607:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x5C(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_174559
	jmp L_174511
.p2align 0x4
.long 0x23F4
L_174474:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_174475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23F4
L_174434:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_174435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x238C
word_48:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174404
L_174405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174406
.p2align 0x4
.long 0x23E7
L_174406:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174404:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23ED
L_174364:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_452830
L_174365:
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452830:
L_174369:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	leaq L_174198(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23E8
L_174324:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x23EB
L_174335:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_174336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x238C
word_47:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174292
L_174293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174294
.p2align 0x4
.long 0x23E7
L_174294:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174292:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_71:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176228
L_176231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176232
.p2align 0x4
.long 0x23CF
L_176232:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176228:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_176229:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2394
L_173483:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173484
L_173493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173494
.p2align 0x4
.long 0x238B
L_173494:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173484:
	movq $0x281F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_452834
L_173485:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_452834:
L_173492:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
.long 0x238D
L_173394:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173395
L_173398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173399
.p2align 0x4
.long 0x238E
L_173399:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173395:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452836
L_173396:
	movq $0x1D4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452836:
L_173397:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x238C
realOpt_70:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176134
L_176137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176138
.p2align 0x4
.long 0x23CF
L_176138:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176134:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_176135:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_69:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176097
L_176100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176101
.p2align 0x4
.long 0x23CF
L_176101:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176097:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_176098:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_68:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176060
L_176063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_176064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176064
.p2align 0x4
.long 0x23CF
L_176064:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_176060:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_176061:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_67:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175920
L_175923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175924
.p2align 0x4
.long 0x23CF
L_175924:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175920:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175921:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_66:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175888
L_175891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175892
.p2align 0x4
.long 0x23CF
L_175892:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175888:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175889:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_65:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175830
L_175833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175834
.p2align 0x4
.long 0x23CF
L_175834:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175830:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175831:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_64:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175803
L_175806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175807
.p2align 0x4
.long 0x23CF
L_175807:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175803:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175804:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_63:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175776
L_175779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175780
.p2align 0x4
.long 0x23CF
L_175780:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175776:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175777:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_62:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175749
L_175752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175753
.p2align 0x4
.long 0x23CF
L_175753:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175749:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175750:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_61:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175722
L_175725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175726
.p2align 0x4
.long 0x23CF
L_175726:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175722:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175723:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_60:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175695
L_175698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175699
.p2align 0x4
.long 0x23CF
L_175699:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175695:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175696:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_59:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175668
L_175671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175672
.p2align 0x4
.long 0x23CF
L_175672:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175668:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175669:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_58:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175641
L_175644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175645
.p2align 0x4
.long 0x23CF
L_175645:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175641:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175642:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_57:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175609
L_175612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175613
.p2align 0x4
.long 0x23CF
L_175613:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175609:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175610:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_56:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175582
L_175585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175586
.p2align 0x4
.long 0x23CF
L_175586:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175582:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175583:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x238C
realOpt_55:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175555
L_175558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175559
.p2align 0x4
.long 0x23CF
L_175559:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175555:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175556:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x242A
L_175516:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_175517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2396
L_175488:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175489
L_175492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175493
.p2align 0x4
.long 0x23CF
L_175493:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175489:
	movslq 0x5C(%rbp),%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_173267
L_175491:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2428
L_175449:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23EE
L_175457:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (bug_468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2427
L_175420:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_173521
L_175422:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175423:
	movl %eax,%ecx
	jmp L_173478
.p2align 0x4
.long 0x2427
L_175382:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_173521
L_175384:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175385:
	movl %eax,%ecx
	jmp L_173478
.p2align 0x4
.long 0x238C
L_175360:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175361
L_175364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175365
.p2align 0x4
.long 0x23CF
L_175365:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175361:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_173267
L_175362:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x2424
L_175303:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_175304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2421
L_175266:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x2F0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23EE
L_175274:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (bug_467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x23CB
L_173944:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173945
L_174000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174001
.p2align 0x4
.long 0x23CC
L_174001:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173945:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_452909
	cmpq $0x1E,%r14
	je L_452906
	cmpq $0x1F,%r14
	je L_452903
	cmpq $0x23,%r14
	je L_452900
	cmpq $0x25,%r14
	je L_452898
	cmpq $0x26,%r14
	je L_452894
	cmpq $0x2A,%r14
	je L_452891
	cmpq $0x2B,%r14
	je L_452887
	cmpq $0x2D,%r14
	je L_452883
	cmpq $0x2E,%r14
	je L_452880
	cmpq $0x33,%r14
	je L_452877
L_173946:
	andq $0x3,%r15
	jnz L_173267
L_173947:
	jmp L_173267
.p2align 0x4
L_452877:
L_173995:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_452879
L_173996:
	cmpl $0xFFFFFFFF,%r14d
	jne L_173267
L_173998:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x29,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452879:
L_173999:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452880:
L_173990:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_173267
L_173992:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_452881
L_173993:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452881:
L_173994:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452883:
L_173983:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jz L_173267
L_173985:
	movl 0x74(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_173413
L_173986:
	cmpl $0x1,%r14d
	je L_173413
	jmp L_173267
.p2align 0x4
L_452887:
L_173978:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jz L_173267
L_173980:
	movl 0x74(%rbp),%r14d
	cmpl $0x1,%r14d
	je L_452889
	cmpl $0xFFFFFFFF,%r14d
	je L_452888
	jmp L_173267
.p2align 0x4
L_452888:
L_173982:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452889:
L_173981:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452891:
L_173973:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_452893
L_173974:
	cmpl $0xFFFFFFFF,%r14d
	jne L_173267
L_173960:
	movl $0xFFFFFFFF,%ecx
	jmp x_560
.p2align 0x4
L_452893:
L_173977:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452894:
L_173970:
	movl 0x74(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_173413
	cmpl $0x1,%r14d
	je L_452896
	cmpl $0xFFFFFFFF,%r14d
	je L_452895
	jmp L_173267
.p2align 0x4
L_452895:
L_173972:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452896:
L_173971:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452898:
L_173967:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_173413
	jmp L_173267
.p2align 0x4
L_452900:
L_173962:
	movl 0x74(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_173385
L_173963:
	cmpl $0x1,%r14d
	je L_173385
	jmp L_173267
.p2align 0x4
L_452903:
L_173956:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_173413
L_173957:
	cmpl $0xFFFFFFFF,%r14d
	je L_173960
	jmp L_173267
.p2align 0x4
L_452906:
L_173951:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_173413
L_173952:
	cmpl $0xFFFFFFFF,%r14d
	jne L_173267
L_173954:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452909:
L_173948:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_173267
L_173950:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_173345
.p2align 0x4
.long 0x25
L_174002:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_173267
L_174003:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_174004
L_174005:
L_174004:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23C9
L_173893:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173894
L_173936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173937
.p2align 0x4
.long 0x23CA
L_173937:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_173894:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_452932
	cmpq $0x2,%r14
	je L_173267
	cmpq $0x3,%r14
	je L_173267
	cmpq $0x5,%r14
	je L_173267
	cmpq $0x6,%r14
	je L_452922
L_173895:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x28(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x7A,%r11
	je L_452918
	cmpq $0x81,%r11
	je L_452915
L_173896:
	andq $0x3,%r15
	jnz L_173267
L_173897:
	jmp L_173267
.p2align 0x4
L_452915:
L_173905:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jnz L_173267
L_173906:
	cmpl $0x2,%r13d
	jne L_173267
L_173908:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452918:
L_173898:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_173267
L_173900:
	testl %r14d,%r14d
	jnz L_173267
L_173901:
	testl %r13d,%r13d
	jnz L_173267
L_173903:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_173563
.p2align 0x4
L_452922:
L_173925:
	shrq $0x3,%r15
	movl %r15d,%r14d
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x7A,%r13
	je L_452926
	cmpq $0x81,%r13
	je L_452924
L_173926:
	andq $0x3,%r15
	jnz L_173267
L_173927:
	jmp L_173267
.p2align 0x4
L_452924:
L_173933:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jz L_452925
L_173935:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
L_452925:
L_173934:
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452926:
L_173928:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_173267
L_173930:
	testl %r14d,%r14d
	jz L_452927
L_173932:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
L_452927:
L_173931:
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
L_452932:
L_173910:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x6D,%r13
	je L_452942
	cmpq $0x79,%r13
	je L_452941
	cmpq $0x7A,%r13
	je L_452940
	cmpq $0x7B,%r13
	je L_452939
	cmpq $0x7E,%r13
	je L_452938
	cmpq $0x7F,%r13
	je L_452937
	cmpq $0x81,%r13
	je L_452936
	cmpq $0x86,%r13
	je L_452935
	cmpq $0x89,%r13
	je L_452934
L_173911:
	andq $0x3,%r14
	jnz L_173267
L_173912:
	jmp L_173267
.p2align 0x4
L_452934:
L_173921:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452935:
L_173920:
	movl $0x1,%ecx
	jmp L_173478
.p2align 0x4
L_452936:
L_173919:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452937:
L_173918:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452938:
L_173917:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452939:
L_173916:
	xorl %ecx,%ecx
	jmp L_173478
.p2align 0x4
L_452940:
L_173915:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452941:
L_173914:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_173389
.p2align 0x4
L_452942:
L_173913:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x7BD
L_173348:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173349
L_173353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_173354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173354
.p2align 0x4
.long 0x7B7
L_173354:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_173349:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452945
L_173351:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173352:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
L_452945:
L_173350:
	movq 0x30(%rbp),%r15
	jmp loop_1759
.p2align 0x4
.long 0x23C6
L_173863:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2396
L_173676:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A3
L_173685:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x300(%rbp)
	movq $0x3,0x308(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_173686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23BB
L_173821:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23C2
L_173834:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	decl %r15d
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23BB
L_173839:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23C2
L_173853:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	decl %r15d
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23B9
L_173809:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173810
L_173813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173814
.p2align 0x4
.long 0x23BA
L_173814:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173810:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_173267
L_173812:
	movq $0x243B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
.long 0x23B9
L_173795:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173796
L_173799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173800
.p2align 0x4
.long 0x23BA
L_173800:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173796:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_173267
L_173798:
	movq $0x2439,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
.long 0x23A7
L_173779:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23B7
L_173769:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173770
L_173773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173774
.p2align 0x4
.long 0x23B8
L_173774:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173770:
	cmpq $0xFFFFFFFFFFFFFFFF,0x60(%rbp)
	jne L_173267
L_173772:
	movq $0x243B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
.long 0x23B6
L_173757:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_173760
	jmp L_173267
.p2align 0x4
.long 0x23AD
L_173733:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_173734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23A7
L_173721:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A7
L_173704:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x239C
L_173556:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x238C
L_173386:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173387
L_173410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173411
.p2align 0x4
.long 0x2390
L_173411:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173387:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_173388:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x2391
L_173470:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2391
L_173463:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2391
L_173456:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2391
L_173449:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2391
L_173442:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2398
L_173523:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_173524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2395
L_173506:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x2F0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x474
L_173514:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x23CD
L_174045:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_173267
L_174046:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_452962
	cmpq $0x29,%r14
	je L_452957
L_174047:
	andq $0x3,%r15
	jnz L_173267
L_174048:
	jmp L_173267
.p2align 0x4
L_452957:
L_174057:
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_452958
L_174058:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x60(%rbp)
intInf_15:
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_452958:
L_174065:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_173118
L_174066:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r11
	imulq %r11,%r13
	addq $0x7,%rsi
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x60(%rbp)
	addq $0x0,%r14
	jc L_174067
L_174068:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_174069
L_174071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174072
.p2align 0x4
.long 0x23D0
L_174072:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174069:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%rsi
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_174070:
	movq %rax,0x60(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_15
.p2align 0x4
L_452962:
L_174049:
	movq 0x78(%rbp),%r14
	movq %r14,0x338(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x238C
L_174138:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_174140
.p2align 0x4
.long 0x23D1
L_174087:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_173267
L_174088:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_452967
	cmpq $0x25,%r14
	je L_452966
	cmpq $0x2F,%r14
	je L_452965
L_174089:
	andq $0x3,%r15
	jnz L_173267
L_174090:
	jmp L_173267
.p2align 0x4
L_452965:
L_174118:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_174119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452966:
L_174100:
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452967:
L_174091:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2460
L_176676:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176677
L_176678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176679
.p2align 0x4
.long 0x2461
L_176679:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176677:
	movq 0x38(%rbp),%r14
	movl $0x1,0x0(%r14)
	movq 0x20(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp expression_0
.p2align 0x4
.long 0x2449
L_176459:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176460
L_176482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176483
.p2align 0x4
.long 0x244A
L_176483:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176460:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_452970
L_176461:
L_176462:
	movq 0xB8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_176463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_452970:
L_176481:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_176462
.p2align 0x4
.long 0x244D
L_176504:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176506
L_176507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176508
.p2align 0x4
.long 0x244E
L_176508:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_176506
.p2align 0x4
.long 0x244F
L_176511:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176512
L_176513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176514
.p2align 0x4
.long 0x2450
L_176514:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176512:
	incl 0x38(%rbp)
	jmp loop_1784
.p2align 0x4
.long 0x2447
L_176491:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176492
L_176493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176494
.p2align 0x4
.long 0x244C
L_176494:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176492:
	incl 0x4C(%rbp)
	jmp loop_1783
.p2align 0x4
.long 0x2456
L_176564:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176565
L_176583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176584
.p2align 0x4
.long 0x2459
L_176584:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176565:
	movl 0x54(%rbp),%r15d
	incl %r15d
	cmpl $0x0,%r15d
	jl L_176516
L_176566:
	cmpl %r15d,0x50(%rbp)
	jl L_176516
L_176567:
	movl %r15d,0x38(%rbp)
loop_1786:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_452976
L_176568:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452975
L_176569:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x33B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452975:
L_176572:
	movq 0x70(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_452976:
L_176576:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x33B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_176577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2396
L_174208:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174209
L_174212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174213
.p2align 0x4
.long 0x23CF
L_174213:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174209:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174210:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23CE
L_174191:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x2389
L_173272:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173273
L_173292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173293
.p2align 0x4
.long 0x238A
L_173293:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173273:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452983
L_173274:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_173127
L_173276:
	movl %r13d,0x60(%rbp)
	movq $0x3717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_173277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_452983:
L_173281:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_173127
L_173283:
	cmpl $0x0,%ecx
	jl L_173156
L_173284:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1766:
	cmpl %ecx,%ebx
	jnl L_452986
L_173286:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_173288
L_173289:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_173118
L_173290:
	movl %r14d,0x0(%r15)
L_173288:
	incl %ebx
	jmp loop_1766
.p2align 0x4
L_452986:
L_173285:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19B6
L_173311:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173312
L_173313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173314
.p2align 0x4
.long 0x2373
L_173314:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173312:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
.long 0x23E5
L_174258:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpl $0x2,%r15d
	je L_452997
	cmpl $0x8,%r15d
	je L_452996
	cmpl $0xA,%r15d
	je L_452995
	cmpl $0x10,%r15d
	je L_452991
L_174259:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1A40)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452991:
L_174271:
	xorb %dl,%dl
L_174261:
	movq 0x118(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_452994
	cmpb $0x2,%dl
	je L_452993
	cmpb $0x3,%dl
	je L_452992
L_174262:
L_174263:
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_174264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_452992:
	movq %r13,%r15
	jmp L_174263
.p2align 0x4
L_452993:
L_174267:
	movq %r10,%r15
	jmp L_174263
.p2align 0x4
L_452994:
L_174266:
	movq %r11,%r15
	jmp L_174263
.p2align 0x4
L_452995:
L_174270:
	movb $0x1,%dl
	jmp L_174261
.p2align 0x4
L_452996:
L_174269:
	movb $0x2,%dl
	jmp L_174261
.p2align 0x4
L_452997:
L_174260:
	movb $0x3,%dl
	jmp L_174261
.p2align 0x4
.long 0x23D3
L_174240:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23E0
L_174231:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_174198(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1534
.p2align 0x4
.long 0x23EE
bug_466:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175160
L_175161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_175162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175162
.p2align 0x4
.long 0x7BB
L_175162:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_175160:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23EF
L_175164:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23E9
L_174325:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_173267
L_174327:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x241E
L_175126:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175127
L_175128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_175129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175129
.p2align 0x4
.long 0x241F
L_175129:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_175127:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	jmp L_175122
.p2align 0x4
.long 0x23AB
L_174992:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x239C
L_174998:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23EE
bug_465:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174891
L_174892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174893
.p2align 0x4
.long 0x7BB
L_174893:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174891:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2414
L_174898:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2419
L_174906:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x5C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_453002
L_174907:
	jmp L_174896
.p2align 0x4
L_453002:
L_174908:
	movq 0x68(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x2412
L_174861:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r14
	jmp L_174857
.p2align 0x4
.long 0x240D
L_174822:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23E8
L_174798:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl $0x1,%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x2408
L_174763:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23EE
bug_464:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174689
L_174690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174691
.p2align 0x4
.long 0x7BB
L_174691:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174689:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2402
L_174695:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2405
L_174703:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_453004
L_174704:
	movq 0x70(%rbp),%r15
	jmp L_174694
.p2align 0x4
L_453004:
L_174705:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23EE
bug_463:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174640
L_174641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174642
.p2align 0x4
.long 0x7BB
L_174642:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174640:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2402
L_174646:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2405
L_174654:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_453006
L_174655:
	movq 0x70(%rbp),%r15
	jmp L_174645
.p2align 0x4
L_453006:
L_174656:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23F9
L_174523:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movsd 0x1F8(%rbp),%xmm15
	movsd %xmm15,0x68(%rbp)
	movb $0x1,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23EE
L_174550:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_173267
.p2align 0x4
.long 0x23FE
L_174570:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movss 0x1E8(%rbp),%xmm15
	movss %xmm15,0x68(%rbp)
	leaq L_174588(%rip),%r15
	movq %r15,0x10(%rbp)
	movb $0x1,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_174571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x25
L_174602:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_174589
.p2align 0x4
.long 0x23F4
L_174475:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_174476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23F4
L_174435:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_174436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23EE
bug_462:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174366
L_174367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174368
.p2align 0x4
.long 0x7BB
L_174368:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174366:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23EF
L_174370:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23EC
L_174336:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r14
	jmp L_174323
.p2align 0x4
.long 0x237F
L_173486:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173487
L_173490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173491
.p2align 0x4
.long 0x2380
L_173491:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173487:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_453008
L_173488:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453008:
L_173489:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x242B
L_175517:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_175518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A8
L_175450:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23EE
bug_468:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175458
L_175459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_175460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175460
.p2align 0x4
.long 0x7BB
L_175460:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_175458:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2425
L_175304:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_175305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2422
L_175267:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23EE
bug_467:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175275
L_175276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_175277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175277
.p2align 0x4
.long 0x7BB
L_175277:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_175275:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23C7
L_173864:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2397
L_173677:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A4
L_173686:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x300(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x308(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_173687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23BC
L_173822:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23C3
L_173835:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x23BC
L_173840:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23C3
L_173854:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x23A8
L_173780:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23AE
L_173734:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x208(%rbp)
	movq $0x3,0x210(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_173735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23AB
L_173722:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23A8
L_173705:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x239D
L_173557:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2392
L_173471:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2392
L_173464:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2392
L_173457:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2392
L_173450:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2392
L_173443:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2399
L_173524:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x148(%rbp)
	movq $0x1,0x150(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_173525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2396
L_173507:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x474
bug_459:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173515
L_173516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_173517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173517
.p2align 0x4
.long 0x49E
L_173517:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_173515:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2396
L_174059:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174060
L_174063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174064
.p2align 0x4
.long 0x23CF
L_174064:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174060:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174061:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23CE
L_174050:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x23D9
L_174119:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x2,%r15d
	je L_453021
	cmpl $0x8,%r15d
	je L_453020
	cmpl $0xA,%r15d
	je L_453019
	cmpl $0x10,%r15d
	je L_453015
L_174120:
	movq (globalObjptr+0x1A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453015:
L_174132:
	xorb %dl,%dl
L_174122:
	movq 0x118(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_453018
	cmpb $0x2,%dl
	je L_453017
	cmpb $0x3,%dl
	je L_453016
L_174123:
L_174124:
	movq %r15,0x138(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_174125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_453016:
	movq %r13,%r15
	jmp L_174124
.p2align 0x4
L_453017:
L_174128:
	movq %r10,%r15
	jmp L_174124
.p2align 0x4
L_453018:
L_174127:
	movq %r11,%r15
	jmp L_174124
.p2align 0x4
L_453019:
L_174131:
	movb $0x1,%dl
	jmp L_174122
.p2align 0x4
L_453020:
L_174130:
	movb $0x2,%dl
	jmp L_174122
.p2align 0x4
L_453021:
L_174121:
	movb $0x3,%dl
	jmp L_174122
.p2align 0x4
.long 0x23D3
L_174101:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23D2
L_174092:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1534
.p2align 0x4
.long 0x8FA
L_176463:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_176464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
.long 0x2457
L_176570:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176572
L_176573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176574
.p2align 0x4
.long 0x2458
L_176574:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_176572
.p2align 0x4
.long 0x2456
L_176577:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176578
L_176579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_176580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176580
.p2align 0x4
.long 0x2459
L_176580:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_176578:
	incl 0x38(%rbp)
	jmp loop_1786
.p2align 0x4
.long 0x2396
L_174192:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174193
L_174196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174197
.p2align 0x4
.long 0x23CF
L_174197:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174193:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174194:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x9B2
L_173277:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173278
L_173279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_173280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173280
.p2align 0x4
.long 0x4B6
L_173280:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_173278:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23E6
L_174264:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x23E1
L_174241:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x101,0x340(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23CE
L_174232:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x23F0
L_175165:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A7
L_174328:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2396
word_51:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174993
L_174994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174995
.p2align 0x4
.long 0x23E7
L_174995:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174993:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x241B
L_174999:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2415
L_174899:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x241A
L_174909:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_174897
.p2align 0x4
.long 0x240E
L_174823:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2409
L_174764:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174765
L_174766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174767
.p2align 0x4
.long 0x240A
L_174767:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174765:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23BD
L_174696:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2406
L_174706:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_174694
.p2align 0x4
.long 0x23BD
L_174647:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2406
L_174657:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_174645
.p2align 0x4
.long 0x23F9
L_174524:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x23FE
L_174571:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	leaq L_174602(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_174572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x23F5
L_174476:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174477
L_174485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_174486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174486
.p2align 0x4
.long 0x23F7
L_174486:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_174477:
	movl 0x60(%rbp),%r15d
	movl 0x5C(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	addq $0x10,%r12
	movl %r14d,0x4(%r13)
	movq %r13,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x23F5
L_174436:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174437
L_174445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_174446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174446
.p2align 0x4
.long 0x23F7
L_174446:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_174437:
	movl 0x60(%rbp),%r15d
	movl 0x5C(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
	movl %r14d,0x0(%r13)
	movq %r13,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x23F0
L_174371:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x242C
L_175518:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175519
L_175531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_175532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175532
.p2align 0x4
.long 0x242F
L_175532:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_175519:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x1,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_175520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
.long 0x2429
L_175451:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2398
L_175305:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175306
L_175307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_175308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175308
.p2align 0x4
.long 0x2426
L_175308:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_175306:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2423
L_175268:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23C8
L_173865:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%rsi
	movq %rsi,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173866:
	testl %eax,%eax
	jz L_173267
L_173868:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
.p2align 0x4
.long 0x2393
L_173678:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173679
L_173680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173681
.p2align 0x4
.long 0x2390
L_173681:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173679:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23A5
L_173687:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_173688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x23BD
L_173823:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23C4
L_173836:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x3,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23BD
L_173841:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x78(%rbp)
L_173842:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23C4
L_173855:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x3,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23A9
L_173781:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173782
L_173786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173787
.p2align 0x4
.long 0x23AA
L_173787:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173782:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173783:
	testl %eax,%eax
	jz L_173267
L_173785:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23AF
L_173735:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x208(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_173736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23AC
L_173723:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173724
L_173729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173730
.p2align 0x4
.long 0x23AA
L_173730:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173724:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173725:
	testl %eax,%eax
	jnz L_173728
	jmp L_173267
.p2align 0x4
.long 0x23A9
L_173706:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173707
L_173713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173714
.p2align 0x4
.long 0x23AA
L_173714:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173707:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173708:
	testl %eax,%eax
	jz L_173267
L_173710:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_173711:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x239E
L_173558:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173559
L_173654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173655
.p2align 0x4
.long 0x23A2
L_173655:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173559:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173560:
	testl %eax,%eax
	jz L_173267
L_173562:
	movq $0x2437,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_173563
.p2align 0x4
.long 0x2393
L_173472:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173473
L_173474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173475
.p2align 0x4
.long 0x2390
L_173475:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173473:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2393
L_173465:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173466
L_173467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173468
.p2align 0x4
.long 0x2390
L_173468:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173466:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2393
L_173458:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173459
L_173460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173461
.p2align 0x4
.long 0x2390
L_173461:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173459:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2393
L_173451:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173452
L_173453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173454
.p2align 0x4
.long 0x2390
L_173454:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173452:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2393
L_173444:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173445
L_173446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173447
.p2align 0x4
.long 0x2390
L_173447:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173445:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x239A
L_173525:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173526
L_173527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_173528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173528
.p2align 0x4
.long 0x239B
L_173528:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_173526:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2397
L_173508:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2396
L_174051:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174052
L_174055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174056
.p2align 0x4
.long 0x23CF
L_174056:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174052:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174053:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23DA
L_174125:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x23D4
L_174102:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x101,0x340(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23CE
L_174093:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x51B
L_176464:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_453057
L_176465:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_453056
L_176466:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_176467:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453055
.p2align 0x4,,0x7
L_176468:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_453052
L_176469:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_176467
.p2align 0x4
L_453052:
L_176470:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_176471:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453054
.p2align 0x4,,0x7
L_176472:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_453053
L_176473:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_176471
.p2align 0x4
L_453053:
L_176474:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453054:
L_176475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_176476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176476
.p2align 0x4
.long 0x4FD
L_176476:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_176472
.p2align 0x4
L_453055:
L_176477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_176478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176478
.p2align 0x4
.long 0x5EF
L_176478:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_176468
.p2align 0x4
L_453056:
L_176479:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453057:
L_176480:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x238C
L_174265:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23E2
L_174242:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174243
L_174255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174256
.p2align 0x4
.long 0x23D8
L_174256:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174243:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x0,0x338(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_174244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
.long 0x2396
L_174233:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174234
L_174237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174238
.p2align 0x4
.long 0x23CF
L_174238:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174234:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174235:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23F1
L_175166:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23AB
L_174329:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2416
L_174900:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x240F
L_174824:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23C1
L_174697:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23C1
L_174648:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23FA
L_174525:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movsd 0x1F8(%rbp),%xmm15
	movsd %xmm15,0x60(%rbp)
	movb 0x5C(%rbp),%r15b
	movb %r15b,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_174526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23FF
L_174572:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movss 0x1E8(%rbp),%xmm15
	movss %xmm15,0x60(%rbp)
	leaq L_174588(%rip),%r15
	movq %r15,0x10(%rbp)
	movb 0x5C(%rbp),%r15b
	movb %r15b,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_174573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23F6
L_174478:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23F6
L_174438:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23F1
L_174372:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x242D
L_175520:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175521
L_175529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_175530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175530
.p2align 0x4
.long 0x242E
L_175530:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_175521:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x338(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_175522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23EA
L_175452:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175453
L_175454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175455
.p2align 0x4
.long 0x23E7
L_175455:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175453:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2396
L_175269:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175270
L_175271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175272
.p2align 0x4
.long 0x23E7
L_175272:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175270:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23A6
L_173688:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_453064
L_173689:
	movq (globalObjptr+0x19C8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453064:
L_173693:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	movq 0x60(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_453066
L_173694:
	cmpq %r13,%r15
	jl L_173267
L_173695:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_453066:
L_173697:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_173698:
	cmpl $0x0,%eax
	jl L_173267
L_173699:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
.long 0x23BE
L_173824:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23BE
L_173843:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23C5
L_173856:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp L_173842
.p2align 0x4
.long 0x23B0
L_173736:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1F8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_173737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x2393
L_173509:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173510
L_173511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173512
.p2align 0x4
.long 0x2390
L_173512:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173510:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23DB
L_174126:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23D5
L_174103:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174104
L_174116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174117
.p2align 0x4
.long 0x23D8
L_174117:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174104:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x0,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_174105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
.long 0x2396
L_174094:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174095
L_174098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174099
.p2align 0x4
.long 0x23CF
L_174099:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174095:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174096:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23E3
L_174244:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_173267
L_174246:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23F2
L_175167:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175168
L_175169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175170
.p2align 0x4
.long 0x23F3
L_175170:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175168:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23EA
L_174330:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174331
L_174332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174333
.p2align 0x4
.long 0x23E7
L_174333:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174331:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2417
L_174901:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174902
L_174903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174904
.p2align 0x4
.long 0x2418
L_174904:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174902:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23B7
L_174825:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174826
L_174827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174828
.p2align 0x4
.long 0x2410
L_174828:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174826:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2403
L_174698:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174699
L_174700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174701
.p2align 0x4
.long 0x2404
L_174701:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174699:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x2403
L_174649:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174650
L_174651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174652
.p2align 0x4
.long 0x2404
L_174652:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174650:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23FA
L_174526:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174527
L_174539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_174540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174540
.p2align 0x4
.long 0x23FB
L_174540:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_174527:
	movsd 0x60(%rbp),%xmm15
	movsd 0x68(%rbp),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453083
L_174528:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453082
L_174529:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453081
L_174530:
	xorb %dl,%dl
L_174531:
	cmpb $0x2,%dl
	jne L_173267
L_174533:
	movsd 0x68(%rbp),%xmm15
	movd %xmm15,%r15
	movq 0x1E8(%rbp),%r14
	movq 0x10(%r14),%r13
	andq %r13,%r15
	cmpq %r13,%r15
	sete %al
	movzbl %al,%eax
	movsd 0x60(%rbp),%xmm14
	movd %xmm14,%r15
	andq %r13,%r15
	cmpq %r15,%r13
	sete %bl
	movzbl %bl,%ebx
	cmpl %ebx,%eax
	jne L_173267
L_174535:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
real_23:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
L_453081:
L_174536:
	movb $0x2,%dl
	jmp L_174531
.p2align 0x4
L_453082:
L_174537:
	movb $0x1,%dl
	jmp L_174531
.p2align 0x4
L_453083:
L_174538:
	movb $0x3,%dl
	jmp L_174531
.p2align 0x4
.long 0x23FF
L_174573:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174574
L_174586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_174587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174587
.p2align 0x4
.long 0x2400
L_174587:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_174574:
	movss 0x60(%rbp),%xmm15
	movss 0x68(%rbp),%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453089
L_174575:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453088
L_174576:
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_453087
L_174577:
	xorb %dl,%dl
L_174578:
	cmpb $0x2,%dl
	jne L_173267
L_174580:
	movss 0x68(%rbp),%xmm15
	movd %xmm15,%r14d
	movq 0x1D8(%rbp),%r13
	movl 0xC(%r13),%r11d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %al
	movzbl %al,%eax
	movss 0x60(%rbp),%xmm14
	movd %xmm14,%r14d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %bl
	movzbl %bl,%ebx
	cmpl %ebx,%eax
	jne L_173267
L_174582:
	movd %xmm15,%r14d
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_23
.p2align 0x4
L_453087:
L_174583:
	movb $0x2,%dl
	jmp L_174578
.p2align 0x4
L_453088:
L_174584:
	movb $0x1,%dl
	jmp L_174578
.p2align 0x4
L_453089:
L_174585:
	movb $0x3,%dl
	jmp L_174578
.p2align 0x4
.long 0x23A7
L_174479:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A7
L_174439:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23F2
L_174373:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174374
L_174375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174376
.p2align 0x4
.long 0x23F3
L_174376:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174374:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23CE
L_175522:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x474
bug_460:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173690
L_173691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_173692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173692
.p2align 0x4
.long 0x49E
L_173692:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_173690:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23BF
L_173825:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23BF
L_173844:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23B1
L_173737:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_453093
L_173738:
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453093:
L_173742:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x23D6
L_174105:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_173267
L_174107:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23E4
L_174247:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23AB
L_174480:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23AB
L_174440:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2396
L_175523:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175524
L_175527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175528
.p2align 0x4
.long 0x23CF
L_175528:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175524:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_175525:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23C0
L_173826:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x23C0
L_173845:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x474
bug_461:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173739
L_173740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_173741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173741
.p2align 0x4
.long 0x49E
L_173741:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_173739:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23B2
L_173743:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D7
L_174108:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23CE
L_174248:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x23EA
L_174481:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174482
L_174483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174484
.p2align 0x4
.long 0x23E7
L_174484:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174482:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23EA
L_174441:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174442
L_174443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174444
.p2align 0x4
.long 0x23E7
L_174444:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174442:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_173389
.p2align 0x4
.long 0x23C1
L_173827:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_173267
L_173829:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173830:
	testl %eax,%eax
	jnz L_173521
	jmp L_173267
.p2align 0x4
.long 0x23C1
L_173846:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_173267
L_173848:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rsi
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173849:
	testl %eax,%eax
	jnz L_173521
	jmp L_173267
.p2align 0x4
.long 0x23B3
L_173744:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23CE
L_174109:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x2396
L_174249:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174250
L_174253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174254
.p2align 0x4
.long 0x23CF
L_174254:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174250:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174251:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23B4
L_173745:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2396
L_174110:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174111
L_174114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174115
.p2align 0x4
.long 0x23CF
L_174115:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174111:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_173267
L_174112:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_173389
.p2align 0x4
.long 0x23B5
L_173746:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	jne L_173267
L_173748:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_173345
