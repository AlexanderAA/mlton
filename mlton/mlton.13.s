/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:19:34 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1284
.hidden x_1284
x_1284:
L_42819:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_42820
L_42857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_42858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42858
.p2align 0x4
.long 0x460
L_42858:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_42820:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_390244
L_42823:
	testl %r11d,%r11d
	jz L_390243
L_42824:
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_42825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp seqOnto_0
.p2align 0x4
L_390243:
L_42853:
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390244:
L_42822:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_42825:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42826
L_42854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_42855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42855
.p2align 0x4
.long 0x2C
L_42855:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_42826:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_42853
L_42827:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_390249
L_42828:
	movq $0xBD7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_42829:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_390248
L_42831:
	cmpq $0x1,%r15
	je L_390246
L_42832:
	movq 0x8(%r15),%r15
	jmp L_42829
.p2align 0x4
L_390246:
L_42833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42834
L_42849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_42850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42850
.p2align 0x4
.long 0x982
L_42850:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_42834:
	movq $0x3981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_42835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_390248:
L_42830:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390249:
L_42851:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_42835:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42836
L_42847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_42848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42848
.p2align 0x4
.long 0x2C
L_42848:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_42836:
	movq $0x1EA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r15
	cmpq %r14,%r15
	jne L_42822
L_42838:
	cmpl $0x0,%r11d
	jl L_390253
L_42839:
	movq $0x1,%r15
	movl $0x0,0x2C(%rbp)
loop_575:
	movl 0x28(%rbp),%r14d
	cmpl %r14d,0x2C(%rbp)
	jl L_390252
L_42840:
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390252:
L_42841:
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_42842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390253:
L_42846:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64F
L_42842:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42843
L_42844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_42845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42845
.p2align 0x4
.long 0x654
L_42845:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_42843:
	incl 0x2C(%rbp)
	movq 0x30(%rbp),%r15
	jmp loop_575
.text
.p2align 0x4
.globl seqOnto_0
.hidden seqOnto_0
seqOnto_0:
L_42859:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_42860
L_42891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_42892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42892
.p2align 0x4
.long 0x45C
L_42892:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_42860:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_390268
L_42862:
	decl %r13d
	jo L_390267
L_42864:
	movl %r13d,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
loop_576:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390266
.p2align 0x4,,0x7
L_42865:
	movl 0x20(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_390265
L_42866:
	movl %r11d,%r10d
	decl %r10d
	movl %r10d,0x24(%rbp)
	movslq %r11d,%r15
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x0(%r10),%r14
	cmpq $0x1,%r14
	je L_390264
L_42867:
	movq 0x8(%r10),%r13
L_42868:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_390263
L_42884:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF52,%r15
	je L_390262
	movq %r10,%r15
L_42869:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_390261
L_42870:
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r11
	movq %r13,%r9
	andq $0x7,%r9
	cmpq $0x1,%r9
	jne L_390259
L_42875:
	movq %r11,%r9
	andq $0x7,%r9
	cmpq $0x1,%r9
	je L_390258
L_42876:
	andq $0x3,%r11
	jnz L_42877
L_42878:
L_42877:
	movq $0x23B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
.p2align 0x4,,0x7
L_42873:
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_576
.p2align 0x4
L_390258:
L_42879:
	movq 0x0(%r10),%r15
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (bits_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390259:
L_42871:
	andq $0x3,%r13
	jnz L_42872
L_42874:
L_42872:
	movq $0x23B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_42873
.p2align 0x4
L_390261:
L_42883:
	movq $0x23B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_42873
.p2align 0x4
L_390262:
L_42885:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_42886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp seqOnto_0
.p2align 0x4
L_390263:
	movq %r10,%r15
	jmp L_42869
.p2align 0x4
L_390264:
L_42887:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_576
.p2align 0x4
L_390265:
L_42888:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390266:
L_42889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_42890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42890
.p2align 0x4
.long 0x4E2
L_42890:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_42865
.p2align 0x4
L_390267:
L_42863:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390268:
L_42861:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x786
bits_8:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42880
L_42881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_42882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42882
.p2align 0x4
.long 0x4F2
L_42882:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_42880:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x23B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_42873
.p2align 0x4
.long 0xB1F
L_42886:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_42873
.text
.p2align 0x4
.globl padToWidth_0
.hidden padToWidth_0
padToWidth_0:
L_42893:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_42894
L_43036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43037
.p2align 0x4
.long 0x45C
L_43037:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_42894:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_390277
L_43010:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43011
L_43034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_43035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43035
.p2align 0x4
.long 0x525
L_43035:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_43011:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r11
	movl 0x0(%r14),%r10d
	movl %r10d,0x10(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0x0(%r14),%r13
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%rsi
	movq %rsi,%r14
	xchgq %r14,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call IntInf_equal
L_43012:
	testl %eax,%eax
	jnz L_390275
L_43013:
	andq $0x1,%r15
	jnz L_390274
L_43014:
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r9
	movq %r9,0x8(%rbp)
	movq %r13,%r11
	andq %r14,%r11
	andq $0x1,%r11
	jz L_390272
L_43015:
	cmpq %r14,%r13
	jnl L_390271
L_43018:
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bits_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390271:
L_42901:
	movq (globalObjptr+0x51F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390272:
L_43028:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43029:
	cmpl $0x0,%eax
	jnl L_42901
	jmp L_43018
.p2align 0x4
L_390274:
L_43008:
	movq (globalObjptr+0x51F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390275:
	xchgq %rbx,%r14
L_43023:
	movq $0x218F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390277:
L_42895:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%rdi
	movq %rdi,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%rsi
	movq %rsi,%r14
	xchgq %r14,%rsi
	movq %rdi,%r11
	xchgq %r11,%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call IntInf_equal
L_42896:
	testl %eax,%eax
	jnz L_390282
L_42897:
	andq $0x1,%r15
	jnz L_43008
L_42898:
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r9
	movq %r9,0x8(%rbp)
	movq %rbx,%r11
	andq %r14,%r11
	andq $0x1,%r11
	jz L_390279
L_42899:
	cmpq %r14,%rbx
	jnl L_42901
L_42903:
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (bits_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390279:
L_43003:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %rbx,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43004:
	cmpl $0x0,%eax
	jnl L_42901
	jmp L_42903
.p2align 0x4
L_390282:
L_43009:
	movq %r13,0x18(%rbp)
L_42908:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (bits_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x497
bits_11:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43019
L_43026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43027
.p2align 0x4
.long 0x730
L_43027:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43019:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xB20
bits_9:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42904
L_43001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43002
.p2align 0x4
.long 0x4EC
L_43002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_42904:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	movl $0x2,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_42905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x787
bits_10:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42909
L_42997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_42998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42998
.p2align 0x4
.long 0x721
L_42998:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_42909:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x0,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_42910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42910
.p2align 0x4
.long 0x9AD
L_42910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_577:
	cmpq $0x1,%r15
	jnl L_390286
L_42996:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11,%r14,1)
	salq $0x4,%r13
	movl $0xFFFFFFFF,0x0(%r11,%r13,1)
	incq %r15
	jmp loop_577
.p2align 0x4
L_390286:
L_42911:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42912
L_42994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_42995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42995
.p2align 0x4
.long 0x721
L_42995:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_42912:
	movq 0x20(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_42913:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390313
.p2align 0x4,,0x7
L_42914:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_390287
L_42915:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_42913
.p2align 0x4
L_390287:
L_42916:
	movq %r13,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_42917:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390312
.p2align 0x4,,0x7
L_42918:
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_390288
L_42919:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_42917
.p2align 0x4
L_390288:
L_42920:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_390306
L_42921:
	movq 0x38(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_42922:
	addq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r13
	je L_390289
L_42923:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_42922
.p2align 0x4
L_390289:
L_42924:
	testq %r15,%r15
	jz L_390305
L_42925:
	cmpq $0x7FFFFFFF,%r15
	ja L_390304
L_42926:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42927
.p2align 0x4
.long 0xB22
L_42927:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_42928:
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_578:
	cmpq 0x20(%rbp),%r15
	jnl L_390292
.p2align 0x4,,0x7
loop_580:
	cmpq 0x0(%r13),%r14
	jl L_390291
L_42969:
	cmpq $0x1,%r11
	je L_390290
L_42970:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_580
.p2align 0x4
L_390290:
L_42971:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390291:
L_42972:
	movq %r14,%r10
	movq %r14,%r9
	movq %r15,%r8
	movq %r15,%rsp
	salq $0x4,%r10
	movq 0x8(%r13),%rsi
	movq 0x8(%rsi,%r10,1),%rdi
	salq $0x4,%r9
	movl 0x0(%rsi,%r9,1),%r10d
	incq %r14
	movq 0x48(%rbp),%r9
	movq %r9,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rsi,1)
	salq $0x4,%r8
	movq %rdi,0x8(%r9,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movl %r10d,0x0(%r9,%rax,1)
	incq %r15
	jmp loop_578
.p2align 0x4
L_390292:
L_42929:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42930
L_42966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_42967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42967
.p2align 0x4
.long 0xB26
L_42967:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_42930:
	movq 0x48(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x20(%rbp)
L_42931:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390302
L_42932:
	movq 0x0(%r9),%r15
	movq %r15,0x28(%rbp)
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_390299
L_42933:
	cmpq %r13,%r15
	jl L_42943
L_42935:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_390293
L_42936:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390293:
L_42937:
	cmpl $0x0,0x28(%rbp)
	jl L_390297
L_42938:
	movq $0x1,0x40(%rbp)
	movl $0x0,0x2C(%rbp)
loop_579:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_390296
L_42939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42940
L_42945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42946
.p2align 0x4
.long 0xB23
L_42946:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_42940:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_42941:
	testl %eax,%eax
	jz L_390294
L_42944:
	movq $0x218D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390294:
L_42943:
	movq (globalObjptr+0x5200)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390296:
L_42947:
	movslq 0x2C(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_42948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390297:
L_42952:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390299:
L_42954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42955
L_42959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_42960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42960
.p2align 0x4
.long 0x5E8
L_42960:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_42955:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42956:
	cmpl $0x0,%eax
	jg L_42943
	jmp L_42935
.p2align 0x4
L_390302:
L_42961:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_42962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390304:
L_42974:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390305:
L_42975:
	movq (globalObjptr+0x698)(%rip),%r14
	movq %r14,0x48(%rbp)
	jmp L_42928
.p2align 0x4
L_390306:
L_42976:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x20(%rbp)
	je L_42931
L_42977:
	testq %r13,%r13
	jz L_390310
L_42978:
	cmpq $0x7FFFFFFF,%r13
	ja L_42974
L_42979:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42980
.p2align 0x4
.long 0xB27
L_42980:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_42981:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_581:
	cmpq 0x40(%rbp),%r15
	jnl L_390307
L_42986:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	salq $0x4,%r14
	movq 0x20(%rbp),%r9
	movq 0x8(%r9,%r14,1),%r8
	salq $0x4,%r13
	movl 0x0(%r9,%r13,1),%r14d
	movq 0x38(%rbp),%r13
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r11
	movq %r8,0x8(%r13,%r11,1)
	salq $0x4,%r10
	movl %r14d,0x0(%r13,%r10,1)
	incq %r15
	jmp loop_581
.p2align 0x4
L_390307:
L_42982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42983
L_42984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_42985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42985
.p2align 0x4
.long 0x606
L_42985:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_42983:
	movq 0x38(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x20(%rbp)
	jmp L_42931
.p2align 0x4
L_390310:
L_42988:
	movq (globalObjptr+0x6A0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_42981
.p2align 0x4
L_390312:
L_42990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42991
.p2align 0x4
.long 0x5EC
L_42991:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_42918
.p2align 0x4
L_390313:
L_42992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42993
.p2align 0x4
.long 0x5EC
L_42993:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_42914
.p2align 0x4
.long 0xB28
L_43020:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xB21
L_42905:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_42906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xB24
L_42948:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42949
L_42950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_42951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42951
.p2align 0x4
.long 0xB25
L_42951:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_42949:
	incl 0x2C(%rbp)
	jmp loop_579
.p2align 0x4
.long 0x1
L_42962:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x48B
L_43021:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43022
L_43024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_43025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43025
.p2align 0x4
.long 0x27
L_43025:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_43022:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x0,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	jmp L_43023
.p2align 0x4
.long 0x792
L_42906:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42907
L_42999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43000
.p2align 0x4
.long 0xA48
L_43000:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_42907:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp L_42908
.p2align 0x4
.long 0x1
bug_67:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42963
L_42964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42965
.p2align 0x4
.long 0x452
L_42965:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42963:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1286
.hidden x_1286
x_1286:
L_43038:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43039
L_43115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_43116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43116
.p2align 0x4
.long 0x460
L_43116:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_43039:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r15,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_390338
L_43040:
	cmpq $0x1,%r15
	jl L_390337
L_43042:
	cmpq $0x1,%r15
	je L_390336
L_43043:
	movq %r15,%r13
	andq $0x11,%r13
	andq $0x1,%r13
	jz L_390334
L_43044:
	cmpq $0x11,%r15
	jl L_390333
L_43046:
	cmpq $0x11,%r15
	je L_390332
L_43047:
	movq %r15,%r13
	andq $0x21,%r13
	andq $0x1,%r13
	jz L_390330
L_43048:
	cmpq $0x21,%r15
	jl L_390329
L_43050:
	cmpq $0x21,%r15
	je L_390328
L_43051:
	movq %r15,%r13
	andq $0x41,%r13
	andq $0x1,%r13
	jz L_390326
L_43052:
	cmpq $0x41,%r15
	jl L_390325
L_43054:
	cmpq $0x41,%r15
	je L_390324
L_43055:
	movq %r15,%r13
	andq $0x81,%r13
	andq $0x1,%r13
	jz L_390322
L_43056:
	cmpq $0x81,%r15
	jnl L_390320
L_43062:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x81,0x28(%rbp)
	addq $0x20,%rbp
	leaq (bits_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390320:
L_43058:
	cmpq $0x81,%r15
	je L_390321
L_43059:
	movq (globalObjptr+0x51E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390321:
L_43060:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390322:
L_43067:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x81,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43068:
	cmpl $0x0,%eax
	jnl L_43058
	jmp L_43062
.p2align 0x4
L_390324:
L_43071:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390325:
L_43073:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x41,0x28(%rbp)
	addq $0x20,%rbp
	leaq (bits_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390326:
L_43078:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x41,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43079:
	cmpl $0x0,%eax
	jl L_43073
	jmp L_43054
.p2align 0x4
L_390328:
L_43082:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390329:
L_43084:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x21,0x28(%rbp)
	addq $0x20,%rbp
	leaq (bits_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390330:
L_43089:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x21,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43090:
	cmpl $0x0,%eax
	jl L_43084
	jmp L_43050
.p2align 0x4
L_390332:
L_43093:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390333:
L_43095:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x20,%rbp
	leaq (bits_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390334:
L_43100:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x11,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43101:
	cmpl $0x0,%eax
	jl L_43095
	jmp L_43046
.p2align 0x4
L_390336:
L_43104:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390337:
L_43106:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (bits_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390338:
L_43111:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43112:
	cmpl $0x0,%eax
	jl L_43106
	jmp L_43042
.p2align 0x4
.long 0x789
bits_12:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43063
L_43065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43066
.p2align 0x4
.long 0x45C
L_43066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43063:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x789
bits_13:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43074
L_43076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43077
.p2align 0x4
.long 0x45C
L_43077:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43074:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x789
bits_14:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43085
L_43087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43088
.p2align 0x4
.long 0x45C
L_43088:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43085:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x789
bits_15:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43096
L_43098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43099
.p2align 0x4
.long 0x45C
L_43099:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43096:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x789
bits_16:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43107
L_43109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43110
.p2align 0x4
.long 0x45C
L_43110:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43107:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x2B
L_43064:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x2B
L_43075:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x2B
L_43086:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x2B
L_43097:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x2B
L_43108:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1284
.text
.p2align 0x4
.globl equals_1
.hidden equals_1
equals_1:
L_43117:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43118
L_43190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_43191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43191
.p2align 0x4
.long 0x460
L_43191:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_43118:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_43119:
	testl %eax,%eax
	jz L_43121
L_43122:
	movq 0x8(%r15),%r13
	movq 0x8(%r14),%r15
	movq %r13,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_390381
	cmpq $0x2,%r14
	je L_390378
	cmpq $0x3,%r14
	je L_390375
	cmpq $0x5,%r14
	je L_390372
	cmpq $0x6,%r14
	je L_390369
L_43123:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF52,%r14
	je L_390361
	cmpq $0xF53,%r14
	je L_390351
	cmpq $0xF54,%r14
	je L_390348
L_43124:
	movq 0x0(%r13),%r14
L_43125:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_43121
L_43126:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	jne L_390346
L_43127:
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp equals_0
.p2align 0x4
L_390346:
L_43121:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390348:
L_43166:
	movq 0x0(%r13),%r14
L_43167:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_43121
L_43168:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF54,%r13
	jne L_43121
L_43169:
	movq 0x0(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390351:
L_43149:
	movq 0x0(%r13),%r11
L_43150:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_43121
L_43151:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	jne L_43121
L_43152:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r13
	jne L_43133
L_43154:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movl %r10d,%ebx
	movslq %ebx,%r15
	cmpq %r15,%r10
	jne L_390357
L_43156:
	cmpl %ecx,%ebx
	jne L_43121
L_43158:
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_583:
	cmpl %ebx,%ecx
	je L_390355
L_43159:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_390354
L_43161:
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r15,%r11,8),%r9
	movl 0x0(%r9),%r8d
	cmpl %r8d,0x0(%r10)
	jne L_43121
L_43163:
	incl %ebx
	jo L_390352
L_43164:
	jmp loop_583
.p2align 0x4
L_390352:
L_43145:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390354:
L_43141:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390355:
L_43148:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390357:
L_43133:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390361:
L_43128:
	movq 0x0(%r13),%r14
	movq %r14,0x0(%rbp)
L_43129:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_43121
L_43130:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF52,%r13
	jne L_43121
L_43131:
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x10(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_43133
L_43134:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_43133
L_43136:
	cmpl %r14d,%r11d
	jne L_43121
L_43138:
	movl $0x0,0x1C(%rbp)
loop_582:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_43148
L_43139:
	movslq %r15d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_43141
L_43142:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (not_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_390369:
L_43186:
	shrq $0x3,%r13
	movb %r13b,%r14b
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x6,%r13
	jne L_390370
L_43189:
	shrq $0x3,%r15
	movb %r15b,%r13b
	cmpb %r13b,%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390370:
L_43187:
	andq $0x3,%r15
	jnz L_43121
L_43188:
	jmp L_43121
.p2align 0x4
L_390372:
L_43182:
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x5,%r14
	je L_43148
L_43183:
	andq $0x3,%r15
	jnz L_43121
L_43184:
	jmp L_43121
.p2align 0x4
L_390375:
L_43178:
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x3,%r14
	je L_43148
L_43179:
	andq $0x3,%r15
	jnz L_43121
L_43180:
	jmp L_43121
.p2align 0x4
L_390378:
L_43174:
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x2,%r14
	je L_43148
L_43175:
	andq $0x3,%r15
	jnz L_43121
L_43176:
	jmp L_43121
.p2align 0x4
L_390381:
L_43170:
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_43148
L_43171:
	andq $0x3,%r15
	jnz L_43121
L_43172:
	jmp L_43121
.p2align 0x4
.long 0x5F9
not_6:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_43121
L_43144:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_43145
L_43146:
	movl %r15d,0x1C(%rbp)
	jmp loop_582
.text
.p2align 0x4
.globl x_1289
.hidden x_1289
x_1289:
L_43192:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43193
L_43263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43264
.p2align 0x4
.long 0x453
L_43264:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43193:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_390399
L_43194:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_390398
L_43196:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2061,%r15
	je L_390397
	cmpq $0x2062,%r15
	je L_390396
	cmpq $0x2063,%r15
	je L_390394
	cmpq $0x2064,%r15
	je L_390392
	cmpq $0x2065,%r15
	je L_390390
	cmpq $0x2066,%r15
	je L_390388
L_43197:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_390388:
L_43249:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390389
L_43250:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390389:
L_43257:
	movq %r11,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390390:
L_43236:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390391
L_43237:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390391:
L_43244:
	movq %r11,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390392:
L_43223:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390393
L_43224:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390393:
L_43231:
	movq %r11,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390394:
L_43209:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390395
L_43210:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390395:
L_43218:
	movq %r11,0x28(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390396:
L_43208:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_390397:
L_43207:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_43202(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_390398:
L_43195:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390399:
L_43262:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB29
L_43198:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43199
L_43200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43201
.p2align 0x4
.long 0xB2A
L_43201:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43199:
	movq $0x2939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_43202:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43203
L_43205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43206
.p2align 0x4
.long 0xB2B
L_43206:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43203:
	movq 0x20(%rbp),%r15
L_43204:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x466
L_43251:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43252
L_43255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43256
.p2align 0x4
.long 0x71C
L_43256:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43252:
	cmpq $0x1,0x30(%rbp)
	jne L_390403
L_43254:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_390403:
L_43214:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_43204
.p2align 0x4
.long 0xB29
L_43258:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43238:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43239
L_43242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43243
.p2align 0x4
.long 0x71C
L_43243:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43239:
	cmpq $0x1,0x30(%rbp)
	jne L_43214
L_43241:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43245:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43225:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43226
L_43229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43230
.p2align 0x4
.long 0x71C
L_43230:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43226:
	cmpq $0x1,0x30(%rbp)
	jne L_43214
L_43228:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43232:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43211:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43212
L_43216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43217
.p2align 0x4
.long 0x71C
L_43217:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43212:
	cmpq $0x1,0x30(%rbp)
	jne L_43214
L_43215:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43219:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
bug_71:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43259
L_43260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43261
.p2align 0x4
.long 0xB2B
L_43261:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43259:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43204
.p2align 0x4
.long 0xB29
bug_70:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43246
L_43247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43248
.p2align 0x4
.long 0xB2B
L_43248:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43246:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43204
.p2align 0x4
.long 0xB29
bug_69:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43233
L_43234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43235
.p2align 0x4
.long 0xB2B
L_43235:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43233:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43204
.p2align 0x4
.long 0xB29
bug_68:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43220
L_43221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43222
.p2align 0x4
.long 0xB2B
L_43222:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43220:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43204
.text
.p2align 0x4
.globl x_1291
.hidden x_1291
x_1291:
L_43265:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43266
L_43268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_43269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43269
.p2align 0x4
.long 0x460
L_43269:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_43266:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_43267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1289
.p2align 0x4
.long 0x522
L_43267:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq $0x11,0x0(%rbp)
	movq 0x8(%rbp),%r14
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1182
.text
.p2align 0x4
.globl x_1293
.hidden x_1293
x_1293:
L_43270:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43271
L_43347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_43348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43348
.p2align 0x4
.long 0x75D
L_43348:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_43271:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_43272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0x741
L_43272:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43273
L_43345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43346
.p2align 0x4
.long 0x75C
L_43346:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43273:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_390428
L_43274:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_390427
L_43278:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2061,%r15
	je L_390426
	cmpq $0x2062,%r15
	je L_390425
	cmpq $0x2063,%r15
	je L_390423
	cmpq $0x2064,%r15
	je L_390421
	cmpq $0x2065,%r15
	je L_390419
	cmpq $0x2066,%r15
	je L_390417
L_43279:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_390417:
L_43331:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390418
L_43332:
	movq 0x0(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_43333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390418:
L_43339:
	movq %r11,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_43340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390419:
L_43318:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390420
L_43319:
	movq 0x0(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_43320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390420:
L_43326:
	movq %r11,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_43327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390421:
L_43305:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390422
L_43306:
	movq 0x0(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_43307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390422:
L_43313:
	movq %r11,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_43314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390423:
L_43291:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390424
L_43292:
	movq 0x0(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_43293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390424:
L_43300:
	movq %r11,0x48(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_43301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390425:
L_43290:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_390426:
L_43289:
	movq 0x18(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	leaq L_43284(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_390427:
L_43275:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
L_43276:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390428:
L_43344:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB2C
L_43280:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43281
L_43282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_43283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43283
.p2align 0x4
.long 0xB2D
L_43283:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_43281:
	movq $0x2939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_43276
.p2align 0x4
.long 0x474
L_43284:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43285
L_43287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43288
.p2align 0x4
.long 0xB2E
L_43288:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_43285:
	movq 0x10(%rbp),%r15
L_43286:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB2F
L_43333:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43334
L_43337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_43338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43338
.p2align 0x4
.long 0xB30
L_43338:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_43334:
	cmpq $0x1,0x50(%rbp)
	jne L_390432
L_43336:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_390432:
L_43296:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_43286
.p2align 0x4
.long 0x4A1
L_43340:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (bug_75+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB2F
L_43320:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43321
L_43324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_43325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43325
.p2align 0x4
.long 0xB30
L_43325:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_43321:
	cmpq $0x1,0x50(%rbp)
	jne L_43296
L_43323:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x4A1
L_43327:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (bug_74+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB2F
L_43307:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43308
L_43311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_43312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43312
.p2align 0x4
.long 0xB30
L_43312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_43308:
	cmpq $0x1,0x50(%rbp)
	jne L_43296
L_43310:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x4A1
L_43314:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (bug_73+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB2F
L_43293:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43294
L_43298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_43299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43299
.p2align 0x4
.long 0xB30
L_43299:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_43294:
	cmpq $0x1,0x50(%rbp)
	jne L_43296
L_43297:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_43280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x4A1
L_43301:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (bug_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x603
L_43277:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x4A1
bug_75:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43341
L_43342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43343
.p2align 0x4
.long 0xB2E
L_43343:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_43341:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43286
.p2align 0x4
.long 0x4A1
bug_74:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43328
L_43329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43330
.p2align 0x4
.long 0xB2E
L_43330:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_43328:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43286
.p2align 0x4
.long 0x4A1
bug_73:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43315
L_43316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43317
.p2align 0x4
.long 0xB2E
L_43317:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_43315:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43286
.p2align 0x4
.long 0x4A1
bug_72:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43302
L_43303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_43304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43304
.p2align 0x4
.long 0xB2E
L_43304:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_43302:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43286
.text
.p2align 0x4
.globl x_1294
.hidden x_1294
x_1294:
L_43349:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43350
L_43420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43421
.p2align 0x4
.long 0x453
L_43421:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_43350:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_390455
L_43351:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_390454
L_43353:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2061,%r15
	je L_390453
	cmpq $0x2062,%r15
	je L_390452
	cmpq $0x2063,%r15
	je L_390450
	cmpq $0x2064,%r15
	je L_390448
	cmpq $0x2065,%r15
	je L_390446
	cmpq $0x2066,%r15
	je L_390444
L_43354:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_390444:
L_43406:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390445
L_43407:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390445:
L_43414:
	movq %r11,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390446:
L_43393:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390447
L_43394:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390447:
L_43401:
	movq %r11,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390448:
L_43380:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390449
L_43381:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390449:
L_43388:
	movq %r11,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390450:
L_43366:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390451
L_43367:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_43368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390451:
L_43375:
	movq %r11,0x28(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390452:
L_43365:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_390453:
L_43364:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_43359(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_390454:
L_43352:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390455:
L_43419:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB29
L_43355:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43356
L_43357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43358
.p2align 0x4
.long 0xB2A
L_43358:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43356:
	movq $0x2939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_43359:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43360
L_43362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43363
.p2align 0x4
.long 0xB2B
L_43363:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43360:
	movq 0x20(%rbp),%r15
L_43361:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x466
L_43408:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43409
L_43412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43413
.p2align 0x4
.long 0x71C
L_43413:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43409:
	cmpq $0x1,0x30(%rbp)
	jne L_390459
L_43411:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_390459:
L_43371:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_43361
.p2align 0x4
.long 0xB29
L_43415:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_79+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43395:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43396
L_43399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43400
.p2align 0x4
.long 0x71C
L_43400:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43396:
	cmpq $0x1,0x30(%rbp)
	jne L_43371
L_43398:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43402:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_78+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43382:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43383
L_43386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43387
.p2align 0x4
.long 0x71C
L_43387:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43383:
	cmpq $0x1,0x30(%rbp)
	jne L_43371
L_43385:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43389:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_77+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x466
L_43368:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43369
L_43373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43374
.p2align 0x4
.long 0x71C
L_43374:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43369:
	cmpq $0x1,0x30(%rbp)
	jne L_43371
L_43372:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB29
L_43376:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
bug_79:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43416
L_43417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43418
.p2align 0x4
.long 0xB2B
L_43418:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43416:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43361
.p2align 0x4
.long 0xB29
bug_78:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43403
L_43404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43405
.p2align 0x4
.long 0xB2B
L_43405:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43403:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43361
.p2align 0x4
.long 0xB29
bug_77:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43390
L_43391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43392
.p2align 0x4
.long 0xB2B
L_43392:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43390:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43361
.p2align 0x4
.long 0xB29
bug_76:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43377
L_43378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43379
.p2align 0x4
.long 0xB2B
L_43379:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43377:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_43361
.text
.p2align 0x4
.globl x_1292
.hidden x_1292
x_1292:
L_43422:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43423
L_43425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_43426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43426
.p2align 0x4
.long 0x460
L_43426:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_43423:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_43424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0x522
L_43424:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp bigNeg_0
.text
.p2align 0x4
.globl x_1290
.hidden x_1290
x_1290:
L_43427:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43428
L_43735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43736
.p2align 0x4
.long 0x562
L_43736:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43428:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x78(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x98(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x14(%rbp)
	movslq %r15d,%r13
	movq %r13,0xA0(%rbp)
	cmpq %r13,%r14
	jne L_390491
L_43431:
	cmpl $0x0,%r15d
	jl L_390490
L_43432:
	movq $0x1,0x20(%rbp)
	movl $0x0,0xA8(%rbp)
loop_584:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0xA8(%rbp)
	jl L_390488
L_43433:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390472
L_43434:
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1289
.p2align 0x4
L_390472:
L_43669:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_390487
L_43670:
	movl $0x0,0x10(%rbp)
.p2align 0x4,,0x7
loop_597:
	movl 0x10(%rbp),%r14d
	cmpl %r14d,0x14(%rbp)
	je L_390486
L_43671:
	movslq %r14d,%r15
	cmpq 0x98(%rbp),%r15
	jnb L_390485
L_43673:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390484
L_43719:
	movq 0x8(%r11),%r15
L_43675:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_390482
L_43676:
	andq $0x3,%r13
	jnz L_43677
L_43715:
L_43677:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390480
L_43714:
	movq 0x8(%r14),%r15
L_43679:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_43680:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_43681
L_43709:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF51,%r15
	je L_390478
.p2align 0x4,,0x7
L_43681:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390477
L_43708:
	movq 0x8(%r14),%r15
L_43683:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_43684:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_43685
L_43687:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_390474
.p2align 0x4,,0x7
L_43685:
	movl 0x10(%rbp),%r15d
	incl %r15d
	jo L_390473
L_43686:
	movl %r15d,0x10(%rbp)
	jmp loop_597
.p2align 0x4
L_390473:
L_43464:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390474:
L_43688:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390475
L_43689:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_390475:
L_43703:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_43704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390477:
L_43682:
	movq 0x8(%r14),%r15
	jmp L_43683
.p2align 0x4
L_390478:
L_43710:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_390480:
L_43678:
	movq 0x8(%r14),%r15
	jmp L_43679
.p2align 0x4
L_390482:
L_43716:
	shrq $0x3,%r13
	movb %r13b,%r15b
	testb %r15b,%r15b
	jnz L_43677
L_43694:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq $0x3,0xB0(%rbp)
	movq $0x11,0xB8(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390484:
L_43674:
	movq 0x8(%r11),%r15
	jmp L_43675
.p2align 0x4
L_390485:
L_43475:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390486:
L_43720:
	movq 0x20(%rbp),%r15
L_43700:
	movq %r15,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390487:
L_43721:
	movq 0x20(%rbp),%r15
	jmp L_43700
.p2align 0x4
L_390488:
L_43722:
	movslq 0xA8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390489
L_43733:
	movq 0x8(%r11),%r15
L_43724:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq $0x11,0xC8(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_43725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390489:
L_43723:
	movq 0x8(%r11),%r15
	jmp L_43724
.p2align 0x4
L_390490:
L_43734:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390491:
L_43430:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB31
L_43435:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_390494
L_43436:
	cmpq %r14,%r15
	jnl L_43438
L_43664:
	movq %r14,0x28(%rbp)
L_43438:
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
L_390494:
L_43665:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43666:
	cmpl $0x0,%eax
	jng L_43438
L_43668:
	movq %r14,0x28(%rbp)
	jmp L_43438
.p2align 0x4
.long 0xB58
L_43690:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_43691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1
L_43704:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB5D
L_43711:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	testl %r15d,%r15d
	jnz L_43694
	jmp L_43681
.p2align 0x4
.long 0xB59
L_43695:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43696
L_43701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43702
.p2align 0x4
.long 0xB5C
L_43702:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_43696:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_43697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB39
L_43450:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43451
L_43651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43652
.p2align 0x4
.long 0xB3A
L_43652:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_43451:
	cmpq $0x1,0x28(%rbp)
	je L_390521
L_43452:
	movq 0xA0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_390520
L_43453:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43575
L_43454:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43455
.p2align 0x4
.long 0xB3A
L_43455:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x40(%rbp)
L_43456:
	movl $0x0,0x10(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_585:
	cmpq 0xA0(%rbp),%r15
	jnl L_390501
L_43640:
	movl %r15d,%r11d
	movslq %r11d,%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_390500
L_43647:
	movq 0x8(%r11),%r11
	movq %r11,%r14
L_43642:
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_390498
L_43643:
	movl 0x10(%rbp),%ecx
	xorl %ebx,%ebx
L_43644:
	movq %r15,%r14
	movq %r15,%r11
	movl %ecx,0x10(%rbp)
	salq $0x4,%r14
	movq 0x40(%rbp),%r10
	movl %ebx,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r11
	movq %r13,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_585
.p2align 0x4
L_390498:
L_43645:
	movl 0x10(%rbp),%ecx
	incl %ecx
	jo L_43464
L_43646:
	movl $0x1,%ebx
	jmp L_43644
.p2align 0x4
L_390500:
L_43641:
	movq 0x8(%r11),%r11
	movq %r11,%r14
	jmp L_43642
.p2align 0x4
L_390501:
L_43457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43458
L_43638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43639
.p2align 0x4
.long 0xB53
L_43639:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43458:
	movq 0x40(%rbp),%r15
	movq $0x1727,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x18(%rbp)
	movslq 0x10(%rbp),%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_390517
L_43459:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43575
L_43460:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43461
.p2align 0x4
.long 0xB3B
L_43461:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x50(%rbp)
L_43462:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_586:
	cmpq 0x48(%rbp),%r15
	jnl L_390505
L_43631:
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%ecx
.p2align 0x4,,0x7
loop_596:
	movslq %ecx,%r14
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x40(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	cmpl $0x1,0x0(%r11,%r13,1)
	je L_390503
L_43632:
	incl %ecx
	jo L_43464
L_43633:
	jmp loop_596
.p2align 0x4
L_390503:
L_43634:
	incl %ecx
	jo L_43464
L_43635:
	movq 0x18(%rbp),%r14
	movl %ecx,0x0(%r14)
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r9
	movq 0x50(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r11,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r10,%r13,1)
	incq %r15
	jmp loop_586
.p2align 0x4
L_390505:
L_43463:
	movq 0x50(%rbp),%r15
	movq $0x1729,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
	movl 0x14(%rbp),%r15d
	subl 0x10(%rbp),%r15d
	jo L_43464
L_43465:
	movslq %r15d,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_390514
L_43466:
	cmpq $0x7FFFFFFF,%rdx
	ja L_390513
L_43467:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43468
.p2align 0x4
.long 0xB3C
L_43468:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x48(%rbp)
L_43469:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_587:
	cmpq 0x10(%rbp),%r15
	jnl L_390509
L_43624:
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%ecx
.p2align 0x4,,0x7
loop_595:
	movslq %ecx,%r14
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x40(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movl 0x0(%r11,%r13,1),%r14d
	testl %r14d,%r14d
	jz L_390507
L_43625:
	incl %ecx
	jo L_43464
L_43626:
	jmp loop_595
.p2align 0x4
L_390507:
L_43627:
	incl %ecx
	jo L_43464
L_43628:
	movq 0x18(%rbp),%r14
	movl %ecx,0x0(%r14)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_587
.p2align 0x4
L_390509:
L_43470:
	movq 0x48(%rbp),%r15
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r11,%r14
	jne L_43430
L_43472:
	testl %r13d,%r13d
	jz L_390511
L_43473:
	cmpq $0x0,%r14
	jna L_43475
L_43476:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_43477:
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_43478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_390511:
L_43623:
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_43477
.p2align 0x4
L_390513:
L_43575:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390514:
L_43630:
	movq (globalObjptr+0x5228)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_43469
.p2align 0x4
L_390517:
L_43637:
	movq (globalObjptr+0x5220)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_43462
.p2align 0x4
L_390520:
L_43649:
	movq (globalObjptr+0x5218)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_43456
.p2align 0x4
L_390521:
L_43650:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
L_43519:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_43430
L_43521:
	movl %r13d,0xA8(%rbp)
	movq $0x397B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_43522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xB5E
L_43725:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq $0x1,%r15
	je L_390524
L_43726:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390524:
L_43727:
	movq 0xB0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x11,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_43728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB32
L_43439:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43440
L_43662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43663
.p2align 0x4
.long 0xB57
L_43663:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_43440:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_43441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB58
L_43691:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_43694
	jmp L_43685
.p2align 0x4
.long 0x1
bug_81:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43705
L_43706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_43707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43707
.p2align 0x4
.long 0x452
L_43707:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_43705:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB5A
L_43697:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x11,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xB3D
L_43478:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq $0x9,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_43479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xB42
L_43522:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_43523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xB5F
L_43728:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43729
L_43731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_43732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43732
.p2align 0x4
.long 0xB61
L_43732:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_43729:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_43730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB31
L_43441:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_390529
L_43442:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq $0x3,0xB0(%rbp)
	movq $0x11,0xB8(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390529:
L_43655:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x3,0xB0(%rbp)
	movq $0x9,0xB8(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xB5B
L_43698:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xB3D
L_43479:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0xA0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	addq $0xA0,%rbp
	leaq (sextdFromInt32ToInt64_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
.long 0xB43
L_43523:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43524
L_43546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43547
.p2align 0x4
.long 0xB46
L_43547:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43524:
	movq 0x18(%rbp),%r14
	cmpq $0x1,0x0(%r14)
	jne L_43526
L_43543:
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r14b
	testb %r14b,%r14b
	jnz L_390533
L_43544:
	movq $0x81,%r15
bits_17:
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x18(%rbp)
L_43526:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43527
.p2align 0x4
.long 0xB44
L_43527:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_592:
	cmpq $0x1,%r15
	jnl L_390530
L_43542:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_592
.p2align 0x4
L_390530:
L_43528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43529
L_43540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43541
.p2align 0x4
.long 0xB45
L_43541:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43529:
	movq 0x20(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390531
L_43530:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_43531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_390531:
L_43535:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_43536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390533:
L_43545:
	movq $0x41,%r15
	jmp bits_17
.p2align 0x4
.long 0xB60
L_43730:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	incl 0xA8(%rbp)
	jmp loop_584
.p2align 0x4
.long 0xB33
L_43443:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43444
L_43653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43654
.p2align 0x4
.long 0xB54
L_43654:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_43444:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_43445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB55
L_43656:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43657
L_43660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_43661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43661
.p2align 0x4
.long 0xB54
L_43661:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_43657:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_43658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB38
L_43699:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_43700
.p2align 0x4
.long 0xB3D
sextdFromInt32ToInt64_1:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43480
L_43621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43622
.p2align 0x4
.long 0xB3E
L_43622:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43480:
	movslq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	testq %r15,%r15
	jz L_390572
L_43481:
	cmpq $0x7FFFFFFF,%r15
	ja L_43575
L_43482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43483
L_43617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43618
.p2align 0x4
.long 0xB3E
L_43618:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43483:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43484
.p2align 0x4
.long 0xB3E
L_43484:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x20(%rbp)
L_43485:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_588:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_390569
L_43486:
	movq 0x20(%rbp),%r15
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r15
	testq %r15,%r15
	jz L_390568
L_43487:
	cmpq $0x7FFFFFFF,%r15
	ja L_43575
L_43488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43489
L_43604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43605
.p2align 0x4
.long 0xB3F
L_43605:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43490
.p2align 0x4
.long 0xB3F
L_43490:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x40(%rbp)
L_43491:
	movq $0x0,0x58(%rbp)
loop_589:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_390565
L_43492:
	movq 0x40(%rbp),%r15
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2615,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2615,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_43493:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390564
.p2align 0x4,,0x7
L_43494:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF5B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_390538
L_43495:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_43493
.p2align 0x4
L_390538:
L_43496:
	movq %r13,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_43497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390563
.p2align 0x4,,0x7
L_43498:
	movq $0x2981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_390539
L_43499:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_43497
.p2align 0x4
L_390539:
L_43500:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_390558
L_43501:
	movq 0x20(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_43502:
	addq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je L_390540
L_43503:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_43502
.p2align 0x4
L_390540:
L_43504:
	testq %r15,%r15
	jz L_390557
L_43505:
	cmpq $0x7FFFFFFF,%r15
	ja L_43575
L_43506:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43507
.p2align 0x4
.long 0xB40
L_43507:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,%r15
L_43508:
	movq 0x40(%rbp),%r10
	movq 0x20(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_590:
	cmpq 0x10(%rbp),%r14
	jnl L_390543
.p2align 0x4,,0x7
loop_593:
	cmpq 0x0(%r11),%r13
	jl L_390542
L_43578:
	cmpq $0x1,%r10
	je L_390541
L_43579:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_593
.p2align 0x4
L_390541:
L_43580:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390542:
L_43581:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_590
.p2align 0x4
L_390543:
L_43509:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_43510:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_43430
L_43512:
	testq %rdx,%rdx
	jz L_390554
L_43513:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43575
L_43514:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43515
.p2align 0x4
.long 0xB41
L_43515:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x40(%rbp)
L_43516:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_591:
	movq 0x48(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_390551
L_43550:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x58(%rbp)
L_43551:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_43552
L_43554:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10CA,%r15
	jne L_390549
L_43555:
	movq 0x8(%r11),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	movq %r14,%r15
	movq 0x18(%rbp),%r13
	andq %r13,%r15
	andq $0x1,%r15
	jz L_390546
L_43556:
	cmpq %r13,%r14
	jnl L_390544
L_43566:
	movq %r11,%r15
.p2align 0x4,,0x7
L_43553:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_591
.p2align 0x4
L_390544:
L_43557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43559
L_43564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43565
.p2align 0x4
.long 0xB4A
L_43565:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43559:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_43560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390546:
L_43567:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390548
.p2align 0x4,,0x7
L_43568:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rsi
	movq 0x68(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_43569:
	cmpl $0x0,%eax
	jnl L_43559
L_43571:
	movq 0x50(%rbp),%r15
	jmp L_43553
.p2align 0x4
L_390548:
L_43572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43573
.p2align 0x4
.long 0xB4B
L_43573:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_43568
.p2align 0x4
L_390549:
L_43552:
	movq 0x50(%rbp),%r15
	jmp L_43553
.p2align 0x4
L_390551:
L_43517:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43518
L_43548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43549
.p2align 0x4
.long 0xB47
L_43549:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43518:
	movq 0x40(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	jmp L_43519
.p2align 0x4
L_390554:
L_43576:
	movq (globalObjptr+0x5250)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_43516
.p2align 0x4
L_390557:
L_43583:
	movq (globalObjptr+0x5240)(%rip),%r14
	xchgq %r14,%r15
	jmp L_43508
.p2align 0x4
L_390558:
L_43584:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x10(%rbp)
	je L_43510
L_43585:
	testq %r13,%r13
	jz L_390561
L_43586:
	cmpq $0x7FFFFFFF,%r13
	ja L_43575
L_43587:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43588
.p2align 0x4
.long 0xB41
L_43588:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,%r15
L_43589:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_594:
	cmpq 0x40(%rbp),%r14
	jnl L_390559
L_43591:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_594
.p2align 0x4
L_390559:
L_43590:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_43510
.p2align 0x4
L_390561:
L_43593:
	movq (globalObjptr+0x5248)(%rip),%r15
	jmp L_43589
.p2align 0x4
L_390563:
L_43595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43596
.p2align 0x4
.long 0xB4C
L_43596:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_43498
.p2align 0x4
L_390564:
L_43597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43598
.p2align 0x4
.long 0xB4C
L_43598:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_43494
.p2align 0x4
L_390565:
L_43599:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_43600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390568:
L_43607:
	movq (globalObjptr+0x5238)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_43491
.p2align 0x4
L_390569:
L_43608:
	movq $0x41,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_43609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_390572:
L_43620:
	movq (globalObjptr+0x5230)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_43485
.p2align 0x4
.long 0x642
L_43531:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43532
L_43533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_43534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43534
.p2align 0x4
.long 0x4DF
L_43534:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_43532:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1273,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_43536:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB34
L_43445:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x11,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xB56
L_43658:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x9,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xB48
L_43560:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43561
L_43562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43563
.p2align 0x4
.long 0xB49
L_43563:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43561:
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_43553
.p2align 0x4
.long 0xB4D
L_43600:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43601
L_43602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43603
.p2align 0x4
.long 0xB4E
L_43603:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43601:
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_589
.p2align 0x4
.long 0xB4F
L_43609:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43610
L_43615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43616
.p2align 0x4
.long 0xB52
L_43616:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43610:
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_43611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1
bug_80:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43537
L_43538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_43539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43539
.p2align 0x4
.long 0x452
L_43539:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_43537:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB35
L_43446:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xB35
L_43659:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xB50
L_43611:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43612
L_43613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_43614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43614
.p2align 0x4
.long 0xB51
L_43614:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_43612:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_588
.p2align 0x4
.long 0xB36
L_43447:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0xB37
L_43448:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xB38
L_43449:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_43450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.text
.p2align 0x4
.globl x_1285
.hidden x_1285
x_1285:
L_43737:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_43738
L_43868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_43869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43869
.p2align 0x4
.long 0x460
L_43869:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_43738:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x18(%rbp)
	jne L_43740
L_43741:
	testl %r15d,%r15d
	jz L_390629
L_43742:
	testq %rdx,%rdx
	jz L_390628
L_43743:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43813
L_43744:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43745
.p2align 0x4
.long 0x48F
L_43745:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x8(%rbp)
L_43746:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_598:
	cmpq 0x20(%rbp),%r15
	jnl L_390583
L_43858:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
L_43859:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_390582
L_43862:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	jne L_390581
L_43863:
	movq 0x0(%r10),%r14
	incl %ecx
	jo L_390580
L_43864:
	movl %ecx,(localWord32+0x0)(%rip)
L_43861:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_598
.p2align 0x4
L_390580:
L_43785:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390581:
	movl %ecx,(localWord32+0x0)(%rip)
L_43860:
	movq $0x1,%r14
	jmp L_43861
.p2align 0x4
L_390582:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_43860
.p2align 0x4
L_390583:
L_43747:
	movq 0x8(%rbp),%r15
	movq $0x172B,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_390626
L_43748:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43813
L_43749:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1571,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43750
.p2align 0x4
.long 0x6FF
L_43750:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_43751:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_599:
	cmpq 0x20(%rbp),%r15
	jnl L_390587
.p2align 0x4,,0x7
loop_606:
	movslq %ecx,%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_390585
L_43854:
	incl %ecx
	jo L_43785
L_43855:
	jmp loop_606
.p2align 0x4
L_390585:
L_43852:
	incl %ecx
	jo L_43785
L_43853:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_599
.p2align 0x4
L_390587:
L_43752:
	movq 0x28(%rbp),%r15
	movq $0x172D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_43740
L_43754:
	testl %r15d,%r15d
	jz L_390623
L_43755:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_43822
L_43756:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_600:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_390590
L_43845:
	movslq %ebx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_390589
L_43847:
	addl %ecx,%r10d
	jo L_43785
L_43848:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_600
.p2align 0x4
L_390589:
L_43740:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390590:
L_43757:
	cmpq $0x0,0x8(%rbp)
	jna L_43759
L_43760:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_390620
L_43761:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43813
L_43762:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43763
.p2align 0x4
.long 0xB62
L_43763:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_43764:
	xorl %ecx,%ecx
	movq 0x20(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_601:
	cmpq 0x30(%rbp),%r14
	jnl L_390596
.p2align 0x4,,0x7
loop_605:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_43740
L_43835:
	cmpl %r10d,%ecx
	jl L_390593
L_43836:
	incl %ebx
	jo L_43785
L_43837:
	movslq %ebx,%r11
	cmpq 0x8(%rbp),%r11
	jnb L_390591
L_43839:
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_605
.p2align 0x4
L_390591:
L_43759:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390593:
L_43840:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_43759
L_43842:
	movq 0x0(%r13,%r10,8),%r11
	incl %ecx
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_601
.p2align 0x4
L_390596:
L_43765:
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
L_43766:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x20(%rbp)
	jne L_43740
L_43768:
	testl %r15d,%r15d
	jz L_390616
L_43769:
	cmpq $0x7FFFFFFF,%rdx
	ja L_43813
L_43770:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_43771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43771
.p2align 0x4
.long 0x4A4
L_43771:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_602:
	cmpq 0x28(%rbp),%r15
	jnl L_390598
L_43826:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x20(%rbp),%r13
	jnb L_43759
L_43828:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_602
.p2align 0x4
L_390598:
L_43772:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43773
L_43824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_43825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43825
.p2align 0x4
.long 0x969
L_43825:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_43773:
	movq 0x28(%rbp),%r13
	movl %r13d,%r11d
	movl %r11d,0x20(%rbp)
	movslq %r11d,%r10
	movq %r10,0x30(%rbp)
	cmpq %r10,%r13
	jne L_43740
L_43775:
	testl %r11d,%r11d
	jz L_390606
L_43776:
	movq $0x172F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r10,0x8(%r15)
	cmpq $0x0,%r13
	jna L_43759
L_43778:
	movq 0x0(%r10),%r14
	cmpl $0x0,%r11d
	jl L_390604
L_43779:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_603:
	cmpl 0x20(%rbp),%ecx
	jnl L_390600
L_43817:
	movslq %ecx,%r13
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl 0x0(%r10),%r13d
	cmpl %r13d,0x0(%r14)
	jnl L_390599
L_43820:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r10,%r14
	movq %r15,(localObjptr+0x0)(%rip)
L_43819:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_603
.p2align 0x4
L_390599:
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_43819
.p2align 0x4
L_390600:
L_43780:
	movl 0x20(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x28(%rbp),%r11
	cmpq %r11,%r13
	jnb L_43759
L_43782:
	movq 0x18(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_43759
L_43784:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_43785
L_43786:
	movl %r14d,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movl $0x0,0x44(%rbp)
	movq %r10,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_43787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_10
.p2align 0x4
L_390604:
L_43822:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390606:
L_43790:
	movq 0x30(%rbp),%rdx
	testq %rdx,%rdx
	jz L_390612
L_43791:
	cmpq $0x7FFFFFFF,%rdx
	ja L_390611
L_43792:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43793
.p2align 0x4
.long 0x8B4
L_43793:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x20(%rbp)
L_43794:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_604:
	cmpq 0x30(%rbp),%r15
	jnl L_390608
L_43809:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_43759
L_43811:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_604
.p2align 0x4
L_390608:
L_43795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43796
L_43807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43808
.p2align 0x4
.long 0x982
L_43808:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43796:
	movq 0x20(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390609
L_43797:
	movq %r14,0x30(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_43798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_390609:
L_43802:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_43803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390611:
L_43813:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390612:
L_43814:
	movq (globalObjptr+0x24C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_43794
.p2align 0x4
L_390616:
L_43830:
	cmpq $0x0,0x18(%rbp)
	jna L_43759
L_43832:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390620:
L_43844:
	movq (globalObjptr+0x24B0)(%rip),%r15
	jmp L_43764
.p2align 0x4
L_390623:
L_43850:
	movq (globalObjptr+0x24B8)(%rip),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	jmp L_43766
.p2align 0x4
L_390626:
L_43857:
	movq (globalObjptr+0x24A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_43751
.p2align 0x4
L_390628:
L_43866:
	movq (globalObjptr+0x24A0)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_43746
.p2align 0x4
L_390629:
L_43867:
	movq (globalObjptr+0x24C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x966
L_43787:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43788
L_43815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_43816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43816
.p2align 0x4
.long 0x8B4
L_43816:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_43788:
	movq $0x3CF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl $0x1,0x4C(%rbp)
	addq $0x40,%rbp
	leaq (L_43789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x490
L_43798:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43799
L_43800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43801
.p2align 0x4
.long 0x5E6
L_43801:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43799:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_43803:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_82+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x966
L_43789:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_43790
.p2align 0x4
.long 0x1
bug_82:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43804
L_43805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_43806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43806
.p2align 0x4
.long 0x452
L_43806:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_43804:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl qsort_10
.hidden qsort_10
qsort_10:
L_43870:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_607
L_43918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_43919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43919
.p2align 0x4
.long 0x4E9
L_43919:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_607:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_43872
L_43873:
	cmpl $0x14,%r15d
	jng L_390636
L_43875:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_390635
L_43876:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_43877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_390635:
L_43872:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390636:
L_43874:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_43877:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_43878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_43878:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%esp
	movl %esp,0x18(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_43872
L_43879:
	movq 0x10(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_43881
L_43882:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_43881
L_43884:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_43881
L_43886:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_43881
L_43888:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x8(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_43881
L_43890:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_43872
L_43891:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_609:
	incl %ebx
	movl %ebx,0x18(%rbp)
	jo L_43872
L_43892:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_43881
L_43894:
	movq 0x8(%rbp),%rsi
	movq %rsp,%rax
	movq 0x0(%rsi,%rax,8),%rsp
	movl 0x0(%r9),%edi
	cmpl %edi,0x0(%rsp)
	jl L_390649
	xchgq %rax,%r15
	movq %r11,(localObjptr+0x8)(%rip)
	movq %r8,(localWord64+0x18)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
.p2align 0x4,,0x7
loop_610:
	decl %ecx
	jo L_43872
L_43896:
	movslq %ecx,%r14
	cmpq %r10,%r14
	jnb L_43881
L_43898:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movl 0x0(%r11),%r8d
	cmpl %r8d,0x0(%r9)
	jnl L_390638
L_43916:
	jmp loop_610
.p2align 0x4
L_390638:
L_43899:
	movl 0x18(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_390643
L_43900:
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r15
	jnb L_43881
L_43902:
	movq (localObjptr+0x0)(%rip),%r13
	movq 0x0(%r13,%r15,8),%r11
	cmpq %rsp,%r14
	jnb L_43881
L_43904:
	movq 0x0(%r13,%r14,8),%r8
	movq (localWord64+0x18)(%rip),%rsi
	cmpq %rsi,%r15
	jnb L_43881
L_43906:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r8,0x0(%rdi,%r15,8)
	cmpq %rsi,%r14
	jnb L_390639
L_43908:
	movq %rdi,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rax,%r15,1)
	movq %r11,0x0(%rdi,%r14,8)
	movq %rsp,%r14
	movq %rdi,%r11
	movq %rsi,%r8
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_609
.p2align 0x4
L_390639:
L_43881:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390643:
L_43909:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r15,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r14
	jnb L_43881
L_43911:
	movq 0x0(%r15,%r14,8),%r10
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r14
	jnb L_43881
L_43913:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	decl %ecx
	jo L_43872
L_43914:
	movl %ecx,0x28(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_43915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_10
.p2align 0x4
L_390649:
L_43917:
	movl 0x18(%rbp),%ebx
	jmp loop_609
.p2align 0x4
.long 0x4F5
L_43915:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_607
.text
.p2align 0x4
.globl toString_542
.hidden toString_542
toString_542:
L_43920:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_44155
L_43921:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390817
L_43922:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x88,%rax
	ja L_390659
	jmp *jumpTable_66(,%rax,8)
.data
.p2align 0x4
jumpTable_66:
.quad L_390816,L_390815,L_390814,L_43923,L_390812,L_390811,L_390810,L_43923,L_390809,L_390808,L_390807,L_43923,L_390806,L_390805,L_390804,L_43923,L_390803,L_390802,L_390801,L_43923,L_390800,L_390799,L_390798,L_43923,L_390797,L_390796,L_390795,L_43923,L_390794,L_390793,L_390792,L_43923,L_390791,L_390790,L_390789,L_43923,L_390788,L_390787,L_390786,L_43923,L_390785,L_390784,L_390783,L_43923,L_390782,L_390781,L_390780,L_43923,L_390779,L_390778,L_390777,L_43923,L_390776,L_390775,L_390774,L_43923,L_390773,L_390772,L_390771,L_43923,L_390770,L_390769,L_390768,L_43923,L_390767,L_390766,L_390765,L_43923,L_390764,L_390763,L_390762,L_43923,L_390761,L_390760,L_390759,L_43923,L_390758,L_390757,L_390756,L_43923,L_390755,L_390754,L_390753,L_43923,L_390752,L_390751,L_390750,L_43923,L_390749,L_390748,L_390747,L_43923,L_390746,L_390745,L_390744,L_43923,L_390743,L_390742,L_390741,L_43923,L_390739,L_390737,L_390736,L_43923,L_390735,L_390734,L_390733,L_43923,L_390732,L_390731,L_390730,L_43923,L_390729,L_390728,L_390727,L_43923,L_390726,L_390725,L_390724,L_43923,L_390723,L_390722,L_390721,L_43923,L_390720,L_390719,L_390718,L_43923,L_390717,L_390716,L_390715,L_43923,L_390714,L_390713,L_390711,L_43923,L_390707
.text
.p2align 0x4
L_390659:
L_43923:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A6,%rax
	cmpq $0x1E,%rax
	ja L_390660
	jmp *jumpTable_67(,%rax,8)
.data
.p2align 0x4
jumpTable_67:
.quad L_390706,L_390705,L_390704,L_390702,L_390701,L_390699,L_390698,L_390697,L_390695,L_390693,L_390691,L_390690,L_390689,L_390688,L_390687,L_390685,L_390683,L_390681,L_390680,L_390678,L_390677,L_390676,L_390675,L_390673,L_390672,L_390668,L_390666,L_390665,L_390663,L_390662,L_390661
.text
.p2align 0x4
L_390660:
L_43924:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xA520)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xCE20)(%rip),%r14
	movq %r14,0x18(%rbp)
word8Seq_2:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390661:
L_44033:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390662:
L_44028:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390663:
L_44025:
	movq 0x0(%rbp),%r15
	movq 0x40(%r15),%r14
	cmpq $0x1,%r14
	je L_390664
L_44026:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390664:
L_44027:
	movq (globalObjptr+0xE368)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390665:
L_44024:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390666:
L_44016:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movb 0x0(%r14),%r13b
	testb %r13b,%r13b
	jnz L_390667
L_44017:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq %r14,0x10(%rbp)
L_44018:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_44019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390667:
L_44023:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_44018
.p2align 0x4
L_390668:
L_44004:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movb 0x4(%r14),%r13b
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_390670
L_44005:
	testb %r13b,%r13b
	jnz L_390669
L_44006:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x18(%rbp)
L_44007:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_44008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390669:
L_44012:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_44007
.p2align 0x4
L_390670:
L_44013:
	testb %r13b,%r13b
	jnz L_390671
L_44014:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_44007
.p2align 0x4
L_390671:
L_44015:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_44007
.p2align 0x4
L_390672:
L_44003:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xA510)(%rip),%r14
word_5:
	movq %r15,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390673:
L_44000:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390674
L_44001:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD8C0)(%rip),%r14
	movq %r14,0x18(%rbp)
L_43938:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390674:
L_44002:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD8C0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390675:
L_43999:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xA528)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390676:
L_43991:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_43992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390677:
L_43990:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD8B0)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390678:
L_43981:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_390679
L_43982:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x18(%rbp)
L_43983:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390679:
L_43989:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43983
.p2align 0x4
L_390680:
L_43980:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD8A0)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390681:
L_43977:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390682
L_43978:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA568)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390682:
L_43979:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA568)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390683:
L_43974:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390684
L_43975:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA550)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390684:
L_43976:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA550)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390685:
L_43971:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390686
L_43972:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD898)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390686:
L_43973:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD898)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390687:
L_43970:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD890)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390688:
L_43969:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD888)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390689:
L_43968:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD880)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390690:
L_43967:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xA530)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390691:
L_43964:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390692
L_43965:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA558)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390692:
L_43966:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA558)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390693:
L_43961:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390694
L_43962:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA560)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390694:
L_43963:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA560)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390695:
L_43950:
	movq 0x0(%rbp),%r13
	movb 0x4(%r13),%r14b
	movb %r14b,0x10(%rbp)
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_390696
L_43951:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x18(%rbp)
L_43952:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_43953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390696:
L_43960:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43952
.p2align 0x4
L_390697:
L_43949:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD858)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390698:
L_43948:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xD850)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390699:
L_43945:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390700
L_43946:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD848)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390700:
L_43947:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD848)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390701:
L_43944:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xA520)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390702:
L_43936:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_390703
L_43937:
	movq (globalObjptr+0xD830)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD838)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390703:
L_43943:
	movq (globalObjptr+0xD840)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD838)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_43938
.p2align 0x4
L_390704:
L_43931:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xA538)(%rip),%r14
	jmp word_5
.p2align 0x4
L_390705:
L_43930:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xA520)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD828)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp word8Seq_2
.p2align 0x4
L_390706:
L_43929:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xD820)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xD828)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp word8Seq_2
.p2align 0x4
L_390707:
L_44147:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r11b
	testb %r11b,%r11b
	jnz L_390709
L_44148:
	testb %r13b,%r13b
	jnz L_390708
L_44149:
	movq (globalObjptr+0xD860)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
L_44150:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r15
	movq %r15,0x0(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD870)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390708:
L_44151:
	movq (globalObjptr+0xD878)(%rip),%r15
	movq (globalObjptr+0xD860)(%rip),%r14
	jmp L_44150
.p2align 0x4
L_390709:
L_44152:
	testb %r13b,%r13b
	jnz L_390710
L_44153:
	movq (globalObjptr+0xD860)(%rip),%r15
	movq (globalObjptr+0xD878)(%rip),%r14
	jmp L_44150
.p2align 0x4
L_390710:
L_44154:
	movq (globalObjptr+0xD878)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_44150
.p2align 0x4
L_390711:
L_44146:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA520)(%rip),%r15
real_3:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r13
	movq %r13,0x0(%r15)
	testb %dl,%dl
	jnz L_390712
L_44120:
	movq (globalObjptr+0xD860)(%rip),%r14
L_44121:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390712:
L_44122:
	movq (globalObjptr+0xD878)(%rip),%r14
	jmp L_44121
.p2align 0x4
L_390713:
L_44145:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDBB8)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390714:
L_44144:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDBB0)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390715:
L_44143:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xD890)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390716:
L_44142:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDBA8)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390717:
L_44141:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDBA0)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390718:
L_44140:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA550)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390719:
L_44139:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA568)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390720:
L_44138:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA570)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390721:
L_44137:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB98)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390722:
L_44136:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xD8B0)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390723:
L_44135:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA540)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390724:
L_44134:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xA510)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390725:
L_44133:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB90)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390726:
L_44132:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB88)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390727:
L_44131:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB80)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390728:
L_44130:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB78)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390729:
L_44129:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB70)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390730:
L_44128:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB68)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390731:
L_44127:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB60)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390732:
L_44126:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB58)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390733:
L_44125:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB50)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390734:
L_44124:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB48)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390735:
L_44123:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB40)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390736:
L_44119:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq (globalObjptr+0xDB38)(%rip),%r15
	jmp real_3
.p2align 0x4
L_390737:
L_44116:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r13b
	testb %r13b,%r13b
	jnz L_390738
L_44117:
	movq (globalObjptr+0xD860)(%rip),%r15
	movq (globalObjptr+0xD1F8)(%rip),%r14
cpointerSet_2:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD8C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390738:
L_44118:
	movq (globalObjptr+0xD878)(%rip),%r15
	movq (globalObjptr+0xD1F8)(%rip),%r14
	jmp cpointerSet_2
.p2align 0x4
L_390739:
L_44113:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r13b
	testb %r13b,%r13b
	jnz L_390740
L_44114:
	movq (globalObjptr+0xD860)(%rip),%r15
	movq (globalObjptr+0xD1F8)(%rip),%r14
cpointerGet_2:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD8D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390740:
L_44115:
	movq (globalObjptr+0xD878)(%rip),%r15
	movq (globalObjptr+0xD1F8)(%rip),%r14
	jmp cpointerGet_2
.p2align 0x4
L_390741:
L_44112:
	movq (globalObjptr+0xDB30)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390742:
L_44111:
	movq (globalObjptr+0xDB28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390743:
L_44110:
	movq (globalObjptr+0xDB20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390744:
L_44109:
	movq (globalObjptr+0xDB18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390745:
L_44108:
	movq (globalObjptr+0xDB10)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390746:
L_44107:
	movq (globalObjptr+0xDB08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390747:
L_44106:
	movq (globalObjptr+0xDB00)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390748:
L_44105:
	movq (globalObjptr+0xDAF8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390749:
L_44104:
	movq (globalObjptr+0xDAF0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390750:
L_44103:
	movq (globalObjptr+0xDAE8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390751:
L_44102:
	movq (globalObjptr+0xDAE0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390752:
L_44101:
	movq (globalObjptr+0xDAD8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390753:
L_44100:
	movq (globalObjptr+0xDAD0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390754:
L_44099:
	movq (globalObjptr+0xDAC8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390755:
L_44098:
	movq (globalObjptr+0xDAC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390756:
L_44097:
	movq (globalObjptr+0xDAB8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390757:
L_44096:
	movq (globalObjptr+0xDAB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390758:
L_44095:
	movq (globalObjptr+0xDAA8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390759:
L_44094:
	movq (globalObjptr+0xDAA0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390760:
L_44093:
	movq (globalObjptr+0xDA98)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390761:
L_44092:
	movq (globalObjptr+0xDA90)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390762:
L_44091:
	movq (globalObjptr+0xDA88)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390763:
L_44090:
	movq (globalObjptr+0xDA80)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390764:
L_44089:
	movq (globalObjptr+0xDA78)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390765:
L_44088:
	movq (globalObjptr+0xDA70)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390766:
L_44087:
	movq (globalObjptr+0xDA68)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390767:
L_44086:
	movq (globalObjptr+0xDA60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390768:
L_44085:
	movq (globalObjptr+0xDA58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390769:
L_44084:
	movq (globalObjptr+0xDA50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390770:
L_44083:
	movq (globalObjptr+0xDA40)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390771:
L_44082:
	movq (globalObjptr+0xDA38)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390772:
L_44081:
	movq (globalObjptr+0xDA30)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390773:
L_44080:
	movq (globalObjptr+0xDA28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390774:
L_44079:
	movq (globalObjptr+0xDA20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390775:
L_44078:
	movq (globalObjptr+0xDA18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390776:
L_44077:
	movq (globalObjptr+0xDA10)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390777:
L_44076:
	movq (globalObjptr+0xDA08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390778:
L_44075:
	movq (globalObjptr+0xDA00)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390779:
L_44074:
	movq (globalObjptr+0xD9F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390780:
L_44073:
	movq (globalObjptr+0xD9F0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390781:
L_44072:
	movq (globalObjptr+0xD9E8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390782:
L_44071:
	movq (globalObjptr+0xD9E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390783:
L_44070:
	movq (globalObjptr+0xD9D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390784:
L_44069:
	movq (globalObjptr+0xD9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390785:
L_44068:
	movq (globalObjptr+0xD9C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390786:
L_44067:
	movq (globalObjptr+0xD9C0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390787:
L_44066:
	movq (globalObjptr+0xD9B8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390788:
L_44065:
	movq (globalObjptr+0xD9B0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390789:
L_44064:
	movq (globalObjptr+0xD9A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390790:
L_44063:
	movq (globalObjptr+0xD9A0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390791:
L_44062:
	movq (globalObjptr+0xD998)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390792:
L_44061:
	movq (globalObjptr+0xD990)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390793:
L_44060:
	movq (globalObjptr+0xD988)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390794:
L_44059:
	movq (globalObjptr+0xD980)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390795:
L_44058:
	movq (globalObjptr+0xD978)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390796:
L_44057:
	movq (globalObjptr+0xD970)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390797:
L_44056:
	movq (globalObjptr+0xD968)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390798:
L_44055:
	movq (globalObjptr+0xD960)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390799:
L_44054:
	movq (globalObjptr+0xD958)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390800:
L_44053:
	movq (globalObjptr+0xD950)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390801:
L_44052:
	movq (globalObjptr+0xD948)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390802:
L_44051:
	movq (globalObjptr+0xD940)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390803:
L_44050:
	movq (globalObjptr+0xD938)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390804:
L_44049:
	movq (globalObjptr+0xD930)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390805:
L_44048:
	movq (globalObjptr+0xD928)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390806:
L_44047:
	movq (globalObjptr+0xD920)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390807:
L_44046:
	movq (globalObjptr+0xD918)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390808:
L_44045:
	movq (globalObjptr+0xD910)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390809:
L_44044:
	movq (globalObjptr+0xD908)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390810:
L_44043:
	movq (globalObjptr+0xD900)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390811:
L_44042:
	movq (globalObjptr+0xD8F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390812:
L_44041:
	movq (globalObjptr+0xD8F0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390814:
L_44040:
	movq (globalObjptr+0xD8E8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390815:
L_44039:
	movq (globalObjptr+0xD8E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390816:
L_44038:
	movq (globalObjptr+0xD8D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390817:
L_44155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44156
.p2align 0x4
.long 0x460
L_44156:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_43922
.p2align 0x4
.long 0x491
L_43925:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43926
L_43927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43928
.p2align 0x4
.long 0x4B2
L_43928:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43926:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_44034:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44035
L_44036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44037
.p2align 0x4
.long 0x452
L_44037:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44035:
	movq 0x0(%rbp),%r15
	movq (globalObjptr+0xCE28)(%rip),%r14
	jmp cpointerGet_2
.p2align 0x4
.long 0x1
L_44029:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44030
L_44031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44032
.p2align 0x4
.long 0x452
L_44032:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44030:
	movq 0x0(%rbp),%r15
	movq (globalObjptr+0xCE28)(%rip),%r14
	jmp cpointerSet_2
.p2align 0x4
.long 0x2B
L_44019:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44020
L_44021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_44022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44022
.p2align 0x4
.long 0x2C
L_44022:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_44020:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD8B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491
L_44008:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44009
L_44010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44011
.p2align 0x4
.long 0x4B2
L_44011:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44009:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD870)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_43932:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43933
L_43934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_43935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43935
.p2align 0x4
.long 0x2C
L_43935:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_43933:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491
L_43939:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43940
L_43941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43942
.p2align 0x4
.long 0x4B2
L_43942:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43940:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48B
L_43992:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43993
L_43997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_43998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43998
.p2align 0x4
.long 0x27
L_43998:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_43993:
	movb 0x10(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_390826
L_43994:
	movq (globalObjptr+0xD860)(%rip),%r15
L_43995:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD8B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390826:
L_43996:
	movq (globalObjptr+0xD878)(%rip),%r15
	jmp L_43995
.p2align 0x4
.long 0x5F0
L_43984:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_43985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x490
L_43953:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43954
L_43958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_43959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43959
.p2align 0x4
.long 0x5E6
L_43959:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_43954:
	movb 0x10(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_390828
L_43955:
	movq (globalObjptr+0xD860)(%rip),%r15
L_43956:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD1F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD870)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_390828:
L_43957:
	movq (globalObjptr+0xD878)(%rip),%r15
	jmp L_43956
.p2align 0x4
.long 0x51A
L_43985:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_43986
L_43987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_43988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_43988
.p2align 0x4
.long 0x51D
L_43988:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_43986:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD868)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD8A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl layout_22
.hidden layout_22
layout_22:
L_44157:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_44158
L_44454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44455
.p2align 0x4
.long 0x460
L_44455:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44158:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_390839
	cmpq $0x2,%r15
	je L_390838
	cmpq $0x3,%r15
	je L_390837
L_44159:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1091,%r11
	je L_390836
	cmpq $0x1092,%r11
	je L_390835
	cmpq $0x1093,%r11
	je L_390834
	cmpq $0x1094,%r11
	je L_390833
	cmpq $0x1095,%r11
	je L_390832
	cmpq $0x1096,%r11
	je L_390831
L_44160:
	movq 0x0(%r15),%r11
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xEA30)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390831:
L_44415:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_390832:
L_44392:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
L_390833:
L_44276:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_390834:
L_44198:
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x48,%rbp
	leaq (L_44199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_390835:
L_44196:
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_543
.p2align 0x4
L_390836:
L_44177:
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq (globalObjptr+0xEA38)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_44178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390837:
L_44453:
	movq (globalObjptr+0xEA60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_390838:
L_44452:
	movq (globalObjptr+0xEA58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_390839:
L_44451:
	movq (globalObjptr+0xEA50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A1
L_44161:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_44162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x73B
L_44416:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x463
L_44393:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xEA40)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x994
L_44277:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x731
L_44199:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_44197:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2B
L_44178:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_44179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x2B
L_44162:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_44163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x73B
L_44417:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44418
L_44449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44450
.p2align 0x4
.long 0x73C
L_44450:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44418:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_390841
L_44419:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_44420:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390841:
L_44434:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x786
L_44394:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x994
L_44278:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44279
L_44390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44391
.p2align 0x4
.long 0x9CC
L_44391:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44279:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_390847
L_44280:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_44281:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44282:
	addl 0x0(%r14),%ecx
	movl %ecx,0x14(%rbp)
	jo L_390846
L_44283:
	cmpq $0x1,%r15
	je L_390843
L_44284:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_44282
.p2align 0x4
L_390843:
L_44285:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44286
L_44373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44374
.p2align 0x4
.long 0xA2D
L_44374:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44286:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390844
L_44287:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_44288:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEA48)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390844:
L_44372:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44288
.p2align 0x4
L_390846:
L_44166:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390847:
L_44375:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_44376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x731
L_44200:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_44179:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44180
L_44194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44195
.p2align 0x4
.long 0x5E6
L_44195:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44180:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_44163:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44164
L_44175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_44176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44176
.p2align 0x4
.long 0x2C
L_44176:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_44164:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44165:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_44166
L_44167:
	cmpq $0x1,%r14
	je L_390850
L_44168:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44165
.p2align 0x4
L_390850:
L_44169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44170
L_44173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44174
.p2align 0x4
.long 0x4E7
L_44174:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44170:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_390851
L_44171:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390851:
L_44172:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97F
L_44421:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_44422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x4E4
L_44435:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x491
L_44395:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44396
L_44413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44414
.p2align 0x4
.long 0x4B2
L_44414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44396:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44397:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_44166
L_44398:
	cmpq $0x1,%r14
	je L_390855
L_44399:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44397
.p2align 0x4
L_390855:
L_44400:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44401
L_44411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44412
.p2align 0x4
.long 0x980
L_44412:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44401:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390856
L_44402:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_44403:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_390856:
L_44410:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44403
.p2align 0x4
.long 0x67A
L_44289:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA90
L_44376:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0xB63
L_44201:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44202
L_44274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44275
.p2align 0x4
.long 0x4EC
L_44275:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44202:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_390860
L_44204:
	movl %r13d,0x50(%rbp)
	movq $0x3C9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_390860:
L_44203:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_44181:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8AA
L_44422:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44423
L_44432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44433
.p2align 0x4
.long 0x520
L_44433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44423:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_44424:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_44166
L_44425:
	cmpq $0x1,%r14
	je L_390862
L_44426:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44424
.p2align 0x4
L_390862:
L_44427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44428
L_44430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44431
.p2align 0x4
.long 0x51E
L_44431:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44428:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44172
L_44429:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA86
L_44436:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44437
L_44447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44448
.p2align 0x4
.long 0x73C
L_44448:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44437:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44438:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_44166
L_44439:
	cmpq $0x1,%r14
	je L_390867
L_44440:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44438
.p2align 0x4
L_390867:
L_44441:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44442
L_44445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44446
.p2align 0x4
.long 0xA2D
L_44446:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44442:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390868
L_44443:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_44420
.p2align 0x4
L_390868:
L_44444:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44420
.p2align 0x4
.long 0x1
L_44404:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44405
L_44408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44409
.p2align 0x4
.long 0x495
L_44409:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44405:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44172
L_44406:
	decl %r15d
	jo L_44166
L_44407:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x994
L_44290:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x0(%r13),%r11d
	movl %r11d,0x14(%rbp)
	testl %r11d,%r11d
	jnz L_390889
L_44291:
	movl $0x1,0x0(%r13)
	testl %r15d,%r15d
	jz L_390888
L_44292:
	movq %r14,0x20(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
L_44293:
	movl $0x1F,%ebx
	movl 0x10(%rbp),%ecx
.p2align 0x4,,0x7
loop_611:
	movl %ecx,%eax
	movl $0x10,%edi
	xorl %edx,%edx
	divl %edi
	cmpl $0x0,%edx
	jl L_44304
L_44294:
	movslq %edx,%r15
	cmpq $0x10,%r15
	jnb L_44296
L_44300:
	movq (globalObjptr+0xDCD8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movslq %ebx,%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,%r11
	jnb L_44296
L_44302:
	movb %r13b,0x0(%r15,%r11,1)
	shrl $0x4,%ecx
	jz L_390877
L_44303:
	decl %ebx
	jo L_390875
L_44307:
	jmp loop_611
.p2align 0x4
L_390875:
L_44304:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390876
L_44305:
	movq $0x3,%r15
L_44298:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390876:
L_44306:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390877:
L_44308:
	movq 0x48(%rbp),%r15
	cmpq %r15,%r14
	jb L_390883
L_44309:
	subq %r15,%r14
	movq %r14,0x50(%rbp)
	jz L_390882
L_44310:
	cmpq $0x7FFFFFFF,%r14
	ja L_390880
L_44311:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_44312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44312
.p2align 0x4
.long 0xB65
L_44312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_44313:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_612:
	cmpq 0x50(%rbp),%r14
	jnl L_390878
L_44357:
	movq %r14,%r13
	addq 0x48(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_612
.p2align 0x4
L_390878:
L_44314:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_44316
L_44315:
	movq 0x40(%rbp),%r14
	movl $0x0,0x0(%r14)
L_44316:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390880:
L_44358:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_390881
L_44359:
	movq $0x5,%r15
	jmp L_44298
.p2align 0x4
L_390881:
L_44360:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390882:
L_44361:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_44313
.p2align 0x4
L_390883:
L_44296:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390884
L_44297:
	movq $0x6,%r15
	jmp L_44298
.p2align 0x4
L_390884:
L_44299:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390888:
L_44365:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390889:
L_44366:
	testl %r15d,%r15d
	jz L_44365
L_44367:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x20,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44368
.p2align 0x4
.long 0x9FC
L_44368:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_613:
	cmpq $0x20,%r15
	jnl L_390890
L_44370:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_613
.p2align 0x4
L_390890:
L_44369:
	movq %r14,0x20(%rbp)
	jmp L_44293
.p2align 0x4
.long 0x9C7
L_44377:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44378
L_44388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44389
.p2align 0x4
.long 0x9CC
L_44389:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44378:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44379:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_44166
L_44380:
	cmpq $0x1,%r14
	je L_390892
L_44381:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44379
.p2align 0x4
L_390892:
L_44382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44383
L_44386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44387
.p2align 0x4
.long 0xB67
L_44387:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44383:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390893
L_44384:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_44281
.p2align 0x4
L_390893:
L_44385:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44281
.p2align 0x4
.long 0x9C7
L_44205:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_44206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x490
L_44182:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44183
L_44192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44193
.p2align 0x4
.long 0x5E6
L_44193:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44183:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44184:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_44166
L_44185:
	cmpq $0x1,%r14
	je L_390897
L_44186:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44184
.p2align 0x4
L_390897:
L_44187:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44188
L_44190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44191
.p2align 0x4
.long 0x5E5
L_44191:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44188:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44172
L_44189:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA3
L_44317:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44318
L_44354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44355
.p2align 0x4
.long 0x737
L_44355:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44318:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44319:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_44166
L_44320:
	cmpq $0x1,%r14
	je L_390902
L_44321:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44319
.p2align 0x4
L_390902:
L_44322:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44323
L_44352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44353
.p2align 0x4
.long 0xB66
L_44353:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44323:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390903
L_44324:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_44325:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD398)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_390903:
L_44351:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44325
.p2align 0x4
.long 0x9C7
L_44206:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44207
L_44272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44273
.p2align 0x4
.long 0x736
L_44273:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44207:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44208:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_44166
L_44209:
	cmpq $0x1,%r14
	je L_390907
L_44210:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44208
.p2align 0x4
L_390907:
L_44211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44212
L_44270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44271
.p2align 0x4
.long 0xB64
L_44271:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44212:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390909
L_44213:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_44214:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_390908
L_44215:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_390908:
L_44268:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390909:
L_44269:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44214
.p2align 0x4
.long 0x50E
L_44326:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x653
L_44216:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x50E
L_44327:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44328
L_44349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44350
.p2align 0x4
.long 0x80E
L_44350:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44328:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x653
L_44217:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44218
L_44266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44267
.p2align 0x4
.long 0x654
L_44267:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44218:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_390918
L_44219:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_44220:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44221:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_44166
L_44222:
	cmpq $0x1,%r15
	je L_390914
L_44223:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_44221
.p2align 0x4
L_390914:
L_44224:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44225
L_44249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44250
.p2align 0x4
.long 0x45F
L_44250:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44225:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390915
L_44226:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_44227:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xEA40)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390915:
L_44248:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44227
.p2align 0x4
L_390918:
L_44251:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F2
L_44329:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44330
L_44347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44348
.p2align 0x4
.long 0x48A
L_44348:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44330:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44331:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_44166
L_44332:
	cmpq $0x1,%r14
	je L_390920
L_44333:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44331
.p2align 0x4
L_390920:
L_44334:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44335
L_44345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44346
.p2align 0x4
.long 0x6F8
L_44346:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44335:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390921
L_44336:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_44337:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_390921:
L_44344:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44337
.p2align 0x4
.long 0x51A
L_44228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44229
L_44246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44247
.p2align 0x4
.long 0x51D
L_44247:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44229:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44230:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_44166
L_44231:
	cmpq $0x1,%r14
	je L_390925
L_44232:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44230
.p2align 0x4
L_390925:
L_44233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44234
L_44244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44245
.p2align 0x4
.long 0x608
L_44245:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44234:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390926
L_44235:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_44236:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_390926:
L_44243:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44236
.p2align 0x4
.long 0x4A7
L_44252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x1
L_44338:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44339
L_44342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44343
.p2align 0x4
.long 0x495
L_44343:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44339:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44172
L_44340:
	decl %r15d
	jo L_44166
L_44341:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_44237:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44238
L_44241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44242
.p2align 0x4
.long 0x495
L_44242:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44238:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44172
L_44239:
	decl %r15d
	jo L_44166
L_44240:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA1
L_44253:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44254
L_44264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44265
.p2align 0x4
.long 0x654
L_44265:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44254:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44255:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_44166
L_44256:
	cmpq $0x1,%r14
	je L_390936
L_44257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44255
.p2align 0x4
L_390936:
L_44258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44259
L_44262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44263
.p2align 0x4
.long 0x451
L_44263:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44259:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390937
L_44260:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_44220
.p2align 0x4
L_390937:
L_44261:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44220
.text
.p2align 0x4
.globl toString_543
.hidden toString_543
toString_543:
L_44456:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_44547
L_44457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390950
L_44458:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	je L_390945
L_44503:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	je L_390941
L_44546:
	movq 0x0(%r13),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_390941:
L_44504:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_390944
L_44505:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_44506:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390943
.p2align 0x4,,0x7
L_44507:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_390942
L_44508:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_44506
.p2align 0x4
L_390942:
L_44509:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_44510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_390943:
L_44543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44544
.p2align 0x4
.long 0x638
L_44544:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_44507
.p2align 0x4
L_390944:
L_44545:
	movq $0x1,%r15
L_44512:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_44513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_390945:
L_44459:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	je L_390946
L_44502:
	movq 0x0(%r13),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_390946:
L_44460:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_390949
L_44461:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_44462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390948
.p2align 0x4,,0x7
L_44463:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_390947
L_44464:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_44462
.p2align 0x4
L_390947:
L_44465:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_44466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_390948:
L_44499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44500
.p2align 0x4
.long 0x638
L_44500:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_44463
.p2align 0x4
L_390949:
L_44501:
	movq $0x1,%r15
L_44468:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_44469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_390950:
L_44547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44548
.p2align 0x4
.long 0x460
L_44548:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_44458
.p2align 0x4
.long 0x1
L_44523:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44524
L_44525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44526
.p2align 0x4
.long 0x452
L_44526:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44524:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEA70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x518
L_44510:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44511
L_44541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44542
.p2align 0x4
.long 0x4EA
L_44542:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44511:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_44512
.p2align 0x4
.long 0x4E6
L_44513:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44514
L_44539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_44540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44540
.p2align 0x4
.long 0x4E8
L_44540:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_44514:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_390955
L_44515:
	cmpb $0x5,0x0(%r14)
	je L_390954
L_44516:
	movq %r11,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_390954:
L_44531:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x2C(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_390955:
L_44538:
	movq (globalObjptr+0xE448)(%rip),%r14
	xchgq %r14,%r15
L_44522:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_44479:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44480
L_44481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44482
.p2align 0x4
.long 0x452
L_44482:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44480:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEA68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x518
L_44466:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44467
L_44497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44498
.p2align 0x4
.long 0x4EA
L_44498:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44467:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_44468
.p2align 0x4
.long 0x4E6
L_44469:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44470
L_44495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_44496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44496
.p2align 0x4
.long 0x4E8
L_44496:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_44470:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_390960
L_44471:
	cmpb $0x5,0x0(%r14)
	je L_390959
L_44472:
	movq %r11,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_390959:
L_44487:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x2C(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_390960:
L_44494:
	movq (globalObjptr+0xE448)(%rip),%r14
	xchgq %r14,%r15
L_44478:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8AA
L_44517:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x8AB
L_44532:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x8AA
L_44473:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x8AB
L_44488:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x71F
L_44518:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44519
L_44529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44530
.p2align 0x4
.long 0x51D
L_44530:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44519:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x80D
L_44533:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x71F
L_44474:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44475
L_44485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44486
.p2align 0x4
.long 0x51D
L_44486:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44475:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x80D
L_44489:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x490
L_44520:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44521
L_44527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44528
.p2align 0x4
.long 0x5E6
L_44528:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44521:
	movq 0x20(%rbp),%r15
	jmp L_44522
.p2align 0x4
.long 0x605
L_44534:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44535
L_44536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44537
.p2align 0x4
.long 0x8AC
L_44537:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44535:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x490
L_44476:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44477
L_44483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44484
.p2align 0x4
.long 0x5E6
L_44484:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44477:
	movq 0x20(%rbp),%r15
	jmp L_44478
.p2align 0x4
.long 0x605
L_44490:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44491
L_44492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44493
.p2align 0x4
.long 0x8AC
L_44493:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44491:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl layout_21
.hidden layout_21
layout_21:
L_44549:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_44550
L_44647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44648
.p2align 0x4
.long 0x460
L_44648:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44550:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_390970
L_44551:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF62,%r13
	je L_390969
	cmpq $0xF63,%r13
	je L_390968
L_44552:
	movl 0x0(%r15),%r13d
	movl %r13d,0x8(%rbp)
	movq (globalObjptr+0xEA38)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_44553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_390968:
L_44623:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_44624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
L_390969:
L_44573:
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x28,%rbp
	leaq (L_44574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_390970:
L_44646:
	movq (globalObjptr+0xEA78)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2B
L_44553:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_44554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E1
L_44624:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F0
L_44574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_44554:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44555
L_44571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44572
.p2align 0x4
.long 0x5E6
L_44572:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44555:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5F0
L_44625:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_44626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x5F0
L_44575:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_44556:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2
L_44626:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44627
L_44644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44645
.p2align 0x4
.long 0x4B2
L_44645:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44627:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44628:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_390976
L_44629:
	cmpq $0x1,%r14
	je L_390973
L_44630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44628
.p2align 0x4
L_390973:
L_44631:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44632
L_44642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44643
.p2align 0x4
.long 0x980
L_44643:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44632:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390974
L_44633:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_44634:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_390974:
L_44641:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44634
.p2align 0x4
L_390976:
L_44560:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_44576:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44577
L_44621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44622
.p2align 0x4
.long 0x638
L_44622:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44577:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_390978
L_44579:
	movl %r13d,0x40(%rbp)
	movq $0x3B5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_390978:
L_44578:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_44557:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44558
L_44569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44570
.p2align 0x4
.long 0x5E6
L_44570:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44558:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44559:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_44560
L_44561:
	cmpq $0x1,%r14
	je L_390980
L_44562:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44559
.p2align 0x4
L_390980:
L_44563:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44564
L_44567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44568
.p2align 0x4
.long 0x5E5
L_44568:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44564:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_390981
L_44565:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390981:
L_44566:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_44635:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44636
L_44639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44640
.p2align 0x4
.long 0x495
L_44640:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44636:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44566
L_44637:
	decl %r15d
	jo L_44560
L_44638:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67A
L_44580:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_44581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x67A
L_44581:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44582
L_44619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44620
.p2align 0x4
.long 0x638
L_44620:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44582:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44583:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_44560
L_44584:
	cmpq $0x1,%r14
	je L_390988
L_44585:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44583
.p2align 0x4
L_390988:
L_44586:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44587
L_44617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44618
.p2align 0x4
.long 0x798
L_44618:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44587:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390990
L_44588:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_44589:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_390989
L_44590:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_44591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
L_390989:
L_44615:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390990:
L_44616:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44589
.p2align 0x4
.long 0x2B
L_44591:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44592
L_44613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_44614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44614
.p2align 0x4
.long 0x2C
L_44614:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_44592:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_44593:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44594
L_44611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44612
.p2align 0x4
.long 0x51D
L_44612:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44594:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44595:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_44560
L_44596:
	cmpq $0x1,%r14
	je L_390995
L_44597:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44595
.p2align 0x4
L_390995:
L_44598:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44599
L_44609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44610
.p2align 0x4
.long 0x608
L_44610:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44599:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_390996
L_44600:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_44601:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_390996:
L_44608:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44601
.p2align 0x4
.long 0x1
L_44602:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44603
L_44606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44607
.p2align 0x4
.long 0x495
L_44607:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_44603:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44566
L_44604:
	decl %r15d
	jo L_44560
L_44605:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_5
.hidden layout_5
layout_5:
L_44649:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_44970
L_44650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_391044
L_44651:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_391043
	cmpq $0x2,%r15
	je L_391042
	cmpq $0x3,%r15
	je L_391041
	cmpq $0x5,%r15
	je L_391040
L_44652:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_391003
	jmp *jumpTable_68(,%rax,8)
.data
.p2align 0x4
jumpTable_68:
.quad L_391032,L_391031,L_391023,L_391022,L_391021,L_391013,L_391012,L_391004
.text
.p2align 0x4
L_391003:
L_44653:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_44654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_391004:
L_44893:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x2,%r14
	je L_44961
	cmpq $0x5,%r14
	je L_391010
	cmpq $0x6,%r14
	je L_391008
L_44894:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_44895
L_44957:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	je L_391006
	cmpq $0xF54,%r14
	je L_391005
L_44895:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_44896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_391005:
L_44959:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_44907:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13C8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE9C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_44908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_391006:
L_44958:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_44907
.p2align 0x4
L_391008:
L_44963:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_391009
L_44964:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_44907
.p2align 0x4
L_391009:
L_44965:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_44907
.p2align 0x4
L_391010:
L_44961:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_44907
.p2align 0x4
L_391012:
L_44874:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE9C0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391013:
L_44820:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_44869
	cmpq $0x5,%r13
	je L_391019
	cmpq $0x6,%r13
	je L_391017
L_44821:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_44822
L_44865:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_391015
	cmpq $0xF54,%r13
	je L_391014
L_44822:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_391014:
L_44867:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_44834:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13C8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE3A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_44835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_391015:
L_44866:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_44834
.p2align 0x4
L_391017:
L_44871:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_391018
L_44872:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_44834
.p2align 0x4
L_391018:
L_44873:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_44834
.p2align 0x4
L_391019:
L_44869:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_44834
.p2align 0x4
L_391021:
L_44790:
	movq 0x8(%r9),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movl 0x4(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movq (globalObjptr+0xE898)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391022:
L_44788:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_391023:
L_44722:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x2,%r14
	je L_44783
	cmpq $0x5,%r14
	je L_391029
	cmpq $0x6,%r14
	je L_391027
L_44723:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_44724
L_44779:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	je L_391025
	cmpq $0xF54,%r14
	je L_391024
L_44724:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_44725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_391024:
L_44781:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_44736:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13C8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE9B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_44737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_391025:
L_44780:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_44736
.p2align 0x4
L_391027:
L_44785:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_391028
L_44786:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_44736
.p2align 0x4
L_391028:
L_44787:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_44736
.p2align 0x4
L_391029:
L_44783:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_44736
.p2align 0x4
L_391031:
L_44721:
	movq %r13,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x11F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp layout_1
.p2align 0x4
L_391032:
L_44659:
	movq 0x10(%r10),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x2,%r14
	je L_44716
	cmpq $0x5,%r14
	je L_391038
	cmpq $0x6,%r14
	je L_391036
L_44660:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_44661
L_44712:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	je L_391034
	cmpq $0xF54,%r14
	je L_391033
L_44661:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_391033:
L_44714:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_44673:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_391034:
L_44713:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_44673
.p2align 0x4
L_391036:
L_44718:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_391037
L_44719:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_44673
.p2align 0x4
L_391037:
L_44720:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_44673
.p2align 0x4
L_391038:
L_44716:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_44673
.p2align 0x4
L_391040:
L_44969:
	movq (globalObjptr+0xEA88)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_391041:
L_44968:
	movq (globalObjptr+0xE9D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_391042:
L_44967:
	movq (globalObjptr+0xE450)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_391043:
L_44966:
	movq (globalObjptr+0xEA80)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_391044:
L_44970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_44971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44971
.p2align 0x4
.long 0x460
L_44971:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_44651
.p2align 0x4
.long 0x1
L_44654:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44655
L_44657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44658
.p2align 0x4
.long 0x452
L_44658:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44655:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xB6B
L_44896:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44897
L_44955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_44956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44956
.p2align 0x4
.long 0x619
L_44956:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_44897:
	movl 0x3C(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_391050
	cmpl $0x10,%r15d
	je L_391049
	cmpl $0x20,%r15d
	je L_391048
	cmpl $0x40,%r15d
	je L_391047
L_44898:
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_44899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_391047:
L_44954:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_44907
.p2align 0x4
L_391048:
L_44953:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_44907
.p2align 0x4
L_391049:
L_44952:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_44907
.p2align 0x4
L_391050:
L_44906:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_44907
.p2align 0x4
.long 0xB6C
L_44908:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_44909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A6
L_44875:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x518
L_44823:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44824
L_44863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44864
.p2align 0x4
.long 0x63B
L_44864:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44824:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_391055
	cmpl $0x10,%r15d
	je L_391054
	cmpl $0x20,%r15d
	je L_391053
	cmpl $0x40,%r15d
	je L_391052
L_44825:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_44826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_391052:
L_44862:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_44834
.p2align 0x4
L_391053:
L_44861:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_44834
.p2align 0x4
L_391054:
L_44860:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_44834
.p2align 0x4
L_391055:
L_44833:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_44834
.p2align 0x4
.long 0x522
L_44835:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_44836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_44791:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_44789:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB68
L_44725:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44726
L_44777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_44778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44778
.p2align 0x4
.long 0xB6A
L_44778:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_44726:
	movl 0x50(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_391060
	cmpl $0x10,%r15d
	je L_391059
	cmpl $0x20,%r15d
	je L_391058
	cmpl $0x40,%r15d
	je L_391057
L_44727:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_44728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_391057:
L_44776:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_44736
.p2align 0x4
L_391058:
L_44775:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_44736
.p2align 0x4
L_391059:
L_44774:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_44736
.p2align 0x4
L_391060:
L_44735:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_44736
.p2align 0x4
.long 0xAA2
L_44737:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_44738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4ED
L_44662:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44663
L_44710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44711
.p2align 0x4
.long 0x73E
L_44711:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44663:
	movl 0x38(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_391065
	cmpl $0x10,%r15d
	je L_391064
	cmpl $0x20,%r15d
	je L_391063
	cmpl $0x40,%r15d
	je L_391062
L_44664:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_44665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_391062:
L_44709:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_44673
.p2align 0x4
L_391063:
L_44708:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_44673
.p2align 0x4
L_391064:
L_44707:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_44673
.p2align 0x4
L_391065:
L_44672:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_44673
.p2align 0x4
.long 0x4A7
L_44674:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_44656:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_44899:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44900
L_44904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44905
.p2align 0x4
.long 0x452
L_44905:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44900:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_86+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xB6C
L_44909:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_44910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x4E3
L_44876:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_44877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x1
L_44826:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44827
L_44831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44832
.p2align 0x4
.long 0x452
L_44832:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44827:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_85+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x522
L_44836:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x5,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (paren_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x4E3
L_44792:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_44728:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44729
L_44733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44734
.p2align 0x4
.long 0x452
L_44734:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44729:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_84+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xAA2
L_44738:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x1
L_44665:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44666
L_44670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44671
.p2align 0x4
.long 0x452
L_44671:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44666:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_83+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A7
L_44675:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_44676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x1
bug_86:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44901
L_44902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44903
.p2align 0x4
.long 0x452
L_44903:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44901:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67C
L_44910:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_44911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x5EE
L_44877:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44878
L_44891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44892
.p2align 0x4
.long 0x4FD
L_44892:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44878:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_44879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1
bug_85:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44828
L_44829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44830
.p2align 0x4
.long 0x452
L_44830:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44828:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
paren_20:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_44837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E3
L_44793:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44794
L_44818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44819
.p2align 0x4
.long 0x80E
L_44819:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44794:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDEE8)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_391074
L_44795:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_44796:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391074:
L_44817:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_44796
.p2align 0x4
.long 0x1
bug_84:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44730
L_44731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44732
.p2align 0x4
.long 0x452
L_44732:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44730:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A9
L_44739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_44740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x1
bug_83:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44667
L_44668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_44669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44669
.p2align 0x4
.long 0x452
L_44669:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_44667:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x80D
L_44676:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (paren_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA87
L_44911:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	movb 0x38(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_391080
	cmpb $0x2,%r14b
	je L_391079
	cmpb $0x3,%r14b
	je L_391078
L_44912:
	movq (globalObjptr+0xD660)(%rip),%r15
L_44913:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_44914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391078:
L_44951:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	jmp L_44913
.p2align 0x4
L_391079:
L_44950:
	movq (globalObjptr+0xD800)(%rip),%r15
	jmp L_44913
.p2align 0x4
L_391080:
L_44949:
	movq (globalObjptr+0xD668)(%rip),%r15
	jmp L_44913
.p2align 0x4
.long 0x51B
L_44879:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44880
L_44889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44890
.p2align 0x4
.long 0x489
L_44890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44880:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44881:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_391084
L_44882:
	cmpq $0x1,%r14
	je L_391081
L_44883:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44881
.p2align 0x4
L_391081:
L_44884:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44885
L_44887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44888
.p2align 0x4
.long 0x51C
L_44888:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44885:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_391082
L_44886:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391082:
L_44697:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391084:
L_44681:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_44837:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_44838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA47
L_44797:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44798
L_44815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44816
.p2align 0x4
.long 0xA48
L_44816:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44798:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE8A0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0xB69
L_44740:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_44741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x80D
paren_19:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA88
L_44914:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_44915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x8AA
L_44838:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44839
L_44858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_44859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44859
.p2align 0x4
.long 0x520
L_44859:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_44839:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44840:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_44681
L_44841:
	cmpq $0x1,%r14
	je L_391087
L_44842:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44840
.p2align 0x4
L_391087:
L_44843:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44844
L_44856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44857
.p2align 0x4
.long 0xA31
L_44857:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44844:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391092
L_44845:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_44846:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44847:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_44681
L_44848:
	cmpq $0x1,%r15
	je L_391088
L_44849:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_44847
.p2align 0x4
L_391088:
L_44850:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44851
L_44853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44854
.p2align 0x4
.long 0x49D
L_44854:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44851:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44697
L_44852:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391092:
L_44855:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44846
.p2align 0x4
.long 0x7B5
L_44799:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44800
L_44813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44814
.p2align 0x4
.long 0x5F5
L_44814:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44800:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_44801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xB69
L_44741:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44742
L_44772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44773
.p2align 0x4
.long 0x70F
L_44773:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44742:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_44743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x511
L_44677:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_44678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB6D
L_44915:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_44916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51B
L_44801:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44802
L_44811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44812
.p2align 0x4
.long 0x489
L_44812:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44802:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44803:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_44681
L_44804:
	cmpq $0x1,%r14
	je L_391098
L_44805:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44803
.p2align 0x4
L_391098:
L_44806:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44807
L_44809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44810
.p2align 0x4
.long 0x51C
L_44810:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44807:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44697
L_44808:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x80C
L_44743:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44744
L_44770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44771
.p2align 0x4
.long 0x721
L_44771:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44744:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_391107
L_44745:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_44746:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_44747:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_44681
L_44748:
	cmpq $0x1,%r15
	je L_391103
L_44749:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_44747
.p2align 0x4
L_391103:
L_44750:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44751
L_44753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44754
.p2align 0x4
.long 0x51E
L_44754:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44751:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44697
L_44752:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391107:
L_44755:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F1
L_44678:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44679
L_44705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44706
.p2align 0x4
.long 0x5EC
L_44706:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44679:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44680:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_44681
L_44682:
	cmpq $0x1,%r14
	je L_391109
L_44683:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44680
.p2align 0x4
L_391109:
L_44684:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44685
L_44703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_44704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44704
.p2align 0x4
.long 0xA46
L_44704:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_44685:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391110
L_44686:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_44687:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391110:
L_44702:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44687
.p2align 0x4
.long 0xB6D
L_44916:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44917
L_44947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_44948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44948
.p2align 0x4
.long 0xA8D
L_44948:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_44917:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_44918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x511
L_44756:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x511
L_44688:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x80C
L_44918:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44919
L_44945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_44946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44946
.p2align 0x4
.long 0x721
L_44946:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_44919:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_391119
L_44920:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_44921:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_44922:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_44681
L_44923:
	cmpq $0x1,%r15
	je L_391115
L_44924:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_44922
.p2align 0x4
L_391115:
L_44925:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44926
L_44928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44929
.p2align 0x4
.long 0x51E
L_44929:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44926:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44697
L_44927:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391119:
L_44930:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_44931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x512
L_44757:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44758
L_44768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44769
.p2align 0x4
.long 0x5EF
L_44769:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44758:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44759:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_44681
L_44760:
	cmpq $0x1,%r14
	je L_391121
L_44761:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44759
.p2align 0x4
L_391121:
L_44762:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44763
L_44766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44767
.p2align 0x4
.long 0x79F
L_44767:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44763:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391122
L_44764:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_44746
.p2align 0x4
L_391122:
L_44765:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44746
.p2align 0x4
.long 0x7B5
L_44689:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44690
L_44700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44701
.p2align 0x4
.long 0x5F5
L_44701:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44690:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_44691:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_44681
L_44692:
	cmpq $0x1,%r14
	je L_391126
L_44693:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44691
.p2align 0x4
L_391126:
L_44694:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44695
L_44698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_44699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44699
.p2align 0x4
.long 0xA29
L_44699:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_44695:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_44697
L_44696:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_44931:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_44932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x512
L_44932:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44933
L_44943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_44944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44944
.p2align 0x4
.long 0x5EF
L_44944:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_44933:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_44934:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_44681
L_44935:
	cmpq $0x1,%r14
	je L_391131
L_44936:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_44934
.p2align 0x4
L_391131:
L_44937:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44938
L_44941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_44942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44942
.p2align 0x4
.long 0x79F
L_44942:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_44938:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391132
L_44939:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_44921
.p2align 0x4
L_391132:
L_44940:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_44921
.text
.p2align 0x4
.globl x_1219
.hidden x_1219
x_1219:
L_44972:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_45002
L_44973:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_391148
L_44974:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_391147
L_44976:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_391146
L_44977:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_44979:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_391145
L_44994:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC7,%r11
	jne L_391144
L_44995:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_391141
L_44980:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_391140
L_44982:
	cmpq $0x1,%r15
	je L_391136
L_44983:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_44979
.p2align 0x4
L_391136:
L_44984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_44985
L_44992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_44993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_44993
.p2align 0x4
.long 0x45F
L_44993:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_44985:
	movl 0x20(%rbp),%ecx
L_44986:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_391138
L_44988:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_44990
L_44991:
	movl %ecx,0x0(%r15)
L_44990:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x198F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_83:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391138:
L_44987:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391140:
L_44981:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391141:
L_44997:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_44987
L_44998:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_391142
L_45000:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp x_83
.p2align 0x4
L_391142:
L_44999:
	movq %r11,%r15
	jmp x_83
.p2align 0x4
L_391144:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_44980
.p2align 0x4
L_391145:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_44980
.p2align 0x4
L_391146:
L_45001:
	xorl %ecx,%ecx
	jmp L_44986
.p2align 0x4
L_391147:
L_44975:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391148:
L_45002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_45003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45003
.p2align 0x4
.long 0x460
L_45003:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_44974
.text
.p2align 0x4
.globl layout_20
.hidden layout_20
layout_20:
L_45004:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_45005
L_45320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_45321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45321
.p2align 0x4
.long 0x460
L_45321:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_45005:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_45006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x98E
L_45006:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98E
L_45007:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_45008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BC
L_45008:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45009
L_45318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45319
.p2align 0x4
.long 0x8C2
L_45319:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45009:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_391151
L_45012:
	movl %r13d,0x70(%rbp)
	movq $0x3C61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_45013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_391151:
L_45011:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB6E
L_45013:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_45014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB6E
L_45014:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45015
L_45316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45317
.p2align 0x4
.long 0xB9D
L_45317:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45015:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45016:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_391157
L_45018:
	cmpq $0x1,%r14
	je L_391153
L_45019:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45016
.p2align 0x4
L_391153:
L_45020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45021
L_45314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_45315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45315
.p2align 0x4
.long 0x923
L_45315:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_45021:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391155
L_45022:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_45023:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_45011
L_45025:
	movl %r13d,0x60(%rbp)
	movq $0x3B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_391155:
L_45313:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_45023
.p2align 0x4
L_391157:
L_45017:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6DC
L_45026:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x6DC
L_45027:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45028
L_45311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_45312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45312
.p2align 0x4
.long 0xB9C
L_45312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_45028:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391170
L_45029:
	decl %ecx
	jo L_45017
L_45030:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_45031:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_391168
L_45032:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xF31,%r10
	je L_391167
	cmpq $0xF32,%r10
	je L_391166
	cmpq $0xF33,%r10
	je L_391165
	cmpq $0xF34,%r10
	je L_391161
	cmpq $0xF35,%r10
	je L_391160
	cmpq $0xF36,%r10
	je L_391159
L_45033:
	movq 0x10(%r15),%r10
	movq %r10,0x78(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x58(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_45034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_391159:
L_45278:
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_45279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_391160:
L_45208:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_45209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_391161:
L_45140:
	movq 0x10(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1208,%r15
	je L_391163
L_45205:
	movq 0x0(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r15
	jne L_45011
L_45207:
	movl %r10d,0x80(%rbp)
	movq $0x3C5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_391163:
L_45141:
	movq 0x8(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_45011
L_45143:
	movl %r10d,0x80(%rbp)
	movq $0x3B6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq %r11,0x0(%r13)
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_391165:
L_45118:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r11,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_45119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_391166:
L_45098:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE360)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_45099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391167:
L_45073:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE970)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391168:
L_45305:
	movq (globalObjptr+0xEAA8)(%rip),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391170:
L_45310:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_45031
.p2align 0x4
.long 0xB6F
L_45034:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB70
L_45279:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_45280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB82
L_45209:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_45210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB75
L_45144:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,0x58(%rbp)
	je L_391172
L_45145:
	movq (globalObjptr+0xEA90)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391172:
L_45204:
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
L_45166:
	movq (globalObjptr+0xE388)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB78
L_45119:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_45120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB78
L_45099:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45100
L_45116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_45117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45117
.p2align 0x4
.long 0x6FB
L_45117:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_45100:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_45011
L_45102:
	movl %r13d,0x78(%rbp)
	movq $0x3B71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xB75
L_45074:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45075
L_45096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_45097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45097
.p2align 0x4
.long 0xB77
L_45097:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_45075:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_45011
L_45077:
	cmpl $0x1,%r13d
	je L_391175
L_45078:
	movl %r13d,0x78(%rbp)
	movq $0x3B71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_391175:
L_45092:
	cmpq $0x0,%r14
	ja L_391176
L_45093:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391176:
L_45094:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_45095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x77E
L_45306:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45307
L_45308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_45309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45309
.p2align 0x4
.long 0x781
L_45309:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_45307:
	movq 0x50(%rbp),%r15
L_45048:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0xB6F
L_45035:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_45036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB70
L_45280:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB82
L_45210:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_45211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB6F
L_45146:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_45147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xB75
L_45167:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_45168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xB78
L_45120:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB76
L_45103:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_45104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB76
L_45079:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_45080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB76
L_45095:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x90E
L_45049:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45050
L_45062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45063
.p2align 0x4
.long 0xB72
L_45063:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45050:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391181
L_45051:
	decl %ecx
	jo L_45017
L_45052:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_45053:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_45054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_391181:
L_45061:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_45053
.p2align 0x4
.long 0xB70
L_45036:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45037
L_45071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45072
.p2align 0x4
.long 0xB74
L_45072:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45037:
	movq $0x3CCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_45038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_2
.p2align 0x4
.long 0xB93
L_45281:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45282
L_45303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_45304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45304
.p2align 0x4
.long 0xB9B
L_45304:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_45282:
	movq $0x3CCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_45283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_2
.p2align 0x4
.long 0xB70
L_45211:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45212
L_45276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45277
.p2align 0x4
.long 0xB74
L_45277:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45212:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_45011
L_45214:
	movl %r13d,0x90(%rbp)
	movq $0x3B71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xB7C
L_45147:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_45148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB7D
L_45168:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB79
L_45121:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45122
L_45138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_45139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45139
.p2align 0x4
.long 0xB77
L_45139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_45122:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_45011
L_45124:
	movl %r13d,0x80(%rbp)
	movq $0x3B71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_45125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xB76
L_45104:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45105
L_45114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_45115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45115
.p2align 0x4
.long 0x772
L_45115:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_45105:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45106:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45107:
	cmpq $0x1,%r14
	je L_391189
L_45108:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45106
.p2align 0x4
L_391189:
L_45109:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45110
L_45112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45113
.p2align 0x4
.long 0x9F8
L_45113:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45110:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_391190
L_45111:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
L_391190:
L_45064:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_45048
.p2align 0x4
.long 0xB76
L_45080:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45081
L_45090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_45091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45091
.p2align 0x4
.long 0x772
L_45091:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_45081:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45082:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45083:
	cmpq $0x1,%r14
	je L_391194
L_45084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45082
.p2align 0x4
L_391194:
L_45085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45086
L_45088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45089
.p2align 0x4
.long 0x9F8
L_45089:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45086:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_45064
L_45087:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0x1
L_45054:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45055
L_45059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_45060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45060
.p2align 0x4
.long 0x495
L_45060:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_45055:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_391200
L_45056:
	decl %r15d
	jo L_45017
L_45057:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_391200:
L_45058:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB71
L_45038:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45039
L_45069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45070
.p2align 0x4
.long 0xB73
L_45070:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45039:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_45040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB94
L_45283:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x98(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45284
L_45301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_45302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45302
.p2align 0x4
.long 0xB9A
L_45302:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_45284:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x90(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_45285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB83
L_45215:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_45216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB7C
L_45148:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45149
L_45202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_45203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45203
.p2align 0x4
.long 0xB80
L_45203:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_45149:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45150:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_45017
L_45151:
	cmpq $0x1,%r14
	je L_391204
L_45152:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45150
.p2align 0x4
L_391204:
L_45153:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45154
L_45200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45201
.p2align 0x4
.long 0xB81
L_45201:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45154:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391210
L_45155:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_45156:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_45166
L_45157:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_45158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_391208
.p2align 0x4,,0x7
L_45159:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_391205
L_45160:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_45158
.p2align 0x4
L_391205:
L_45161:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_45162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_391207
.p2align 0x4,,0x7
L_45163:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_391206
L_45164:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_45162
.p2align 0x4
L_391206:
L_45165:
	movq %r15,0x58(%rbp)
	jmp L_45166
.p2align 0x4
L_391207:
L_45194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_45195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45195
.p2align 0x4
.long 0xB80
L_45195:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_45163
.p2align 0x4
L_391208:
L_45196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45197
.p2align 0x4
.long 0xB74
L_45197:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_45159
.p2align 0x4
L_391210:
L_45199:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_45156
.p2align 0x4
.long 0xB7D
L_45169:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE390)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_45170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB7A
L_45125:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_45126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB71
L_45040:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45041
L_45067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45068
.p2align 0x4
.long 0xB73
L_45068:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45041:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45042:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45043:
	cmpq $0x1,%r14
	je L_391214
L_45044:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45042
.p2align 0x4
L_391214:
L_45045:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45046
L_45065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45066
.p2align 0x4
.long 0x9F8
L_45066:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45046:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_45064
L_45047:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0xB94
L_45285:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xEA98)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_45286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB83
L_45216:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB79
L_45170:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45171
L_45192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_45193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45193
.p2align 0x4
.long 0xB77
L_45193:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_45171:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45172:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45173:
	cmpq $0x1,%r14
	je L_391219
L_45174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45172
.p2align 0x4
L_391219:
L_45175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45176
L_45190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_45191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45191
.p2align 0x4
.long 0xB7F
L_45191:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_45176:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_391220
L_45177:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_45178:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xDF80)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_45179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
L_391220:
L_45189:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_45178
.p2align 0x4
.long 0xB7A
L_45126:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45127
L_45136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_45137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45137
.p2align 0x4
.long 0xB7B
L_45137:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_45127:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45128:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45129:
	cmpq $0x1,%r14
	je L_391224
L_45130:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45128
.p2align 0x4
L_391224:
L_45131:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45132
L_45134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45135
.p2align 0x4
.long 0x9F8
L_45135:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45132:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_45064
L_45133:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0xB95
L_45286:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_45287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xB84
L_45217:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_391230
	cmpq $0x2,%r15
	je L_391229
L_45218:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq (globalObjptr+0xE978)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_45219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391229:
L_45275:
	movq (globalObjptr+0xE8C0)(%rip),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391230:
L_45270:
	movq (globalObjptr+0xE988)(%rip),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x770
L_45179:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45180
L_45187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_45188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45188
.p2align 0x4
.long 0xB7E
L_45188:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_45180:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_45181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0xB96
L_45287:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_45288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB85
L_45219:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_45220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xB91
L_45271:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45272
L_45273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45274
.p2align 0x4
.long 0xB92
L_45274:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45272:
	movq 0x50(%rbp),%r15
L_45243:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45244:
	addl 0x0(%r14),%ecx
	movl %ecx,0x58(%rbp)
	jo L_45017
L_45245:
	cmpq $0x1,%r15
	je L_391232
L_45246:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_45244
.p2align 0x4
L_391232:
L_45247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45248
L_45250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45251
.p2align 0x4
.long 0xB8A
L_45251:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45248:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jz L_45064
L_45249:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0x77E
L_45181:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45182
L_45185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_45186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45186
.p2align 0x4
.long 0x9F8
L_45186:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_45182:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jz L_45064
L_45183:
	decl %r14d
	jo L_45017
L_45184:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0xB96
L_45288:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xEAA0)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_45289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB86
L_45220:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_45221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB97
L_45289:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45290
L_45299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_45300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45300
.p2align 0x4
.long 0xB99
L_45300:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_45290:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_45291:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45292:
	cmpq $0x1,%r14
	je L_391240
L_45293:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45291
.p2align 0x4
L_391240:
L_45294:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45295
L_45297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_45298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45298
.p2align 0x4
.long 0xB98
L_45298:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_45295:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_45064
L_45296:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45048
.p2align 0x4
.long 0xB86
L_45221:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45222
L_45268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_45269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45269
.p2align 0x4
.long 0xB90
L_45269:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_45222:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE980)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_391246
	cmpq $0x2,%r15
	je L_391245
L_45223:
	movq (globalObjptr+0xE8B8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_45224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391245:
L_45267:
	movq (globalObjptr+0xDE38)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_45263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_391246:
L_45262:
	movq (globalObjptr+0xE8C0)(%rip),%r14
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_45263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB87
L_45224:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_45225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xB8E
L_45263:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45264
L_45265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_45266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45266
.p2align 0x4
.long 0xB8F
L_45266:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_45264:
	movq 0x50(%rbp),%r15
L_45234:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_45235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xB88
L_45225:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_45226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB89
L_45235:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45236
L_45255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_45256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45256
.p2align 0x4
.long 0xB74
L_45256:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_45236:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45237:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45238:
	cmpq $0x1,%r14
	je L_391249
L_45239:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45237
.p2align 0x4
L_391249:
L_45240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45241
L_45253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_45254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45254
.p2align 0x4
.long 0xB8B
L_45254:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_45241:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_391250
L_45242:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45243
.p2align 0x4
L_391250:
L_45252:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_45243
.p2align 0x4
.long 0xB88
L_45226:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45227
L_45260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_45261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45261
.p2align 0x4
.long 0xB8D
L_45261:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_45227:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_45228:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_45017
L_45229:
	cmpq $0x1,%r14
	je L_391254
L_45230:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_45228
.p2align 0x4
L_391254:
L_45231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_45232
L_45258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_45259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_45259
.p2align 0x4
.long 0xB8C
L_45259:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_45232:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_391255
L_45233:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_45234
.p2align 0x4
L_391255:
L_45257:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_45234
