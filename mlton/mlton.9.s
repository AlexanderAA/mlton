/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:07 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1261
.hidden x_1261
x_1261:
L_32098:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32099
L_32150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32151
.p2align 0x4
.long 0x80B
L_32151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32099:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A7
L_32100:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_385998
L_32101:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385997
L_32102:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_32103:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385997:
L_32111:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_385998:
L_32147:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_32111
L_32148:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_32103
.p2align 0x4
.long 0x8EF
L_32104:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386003
L_32106:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386002
L_32107:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386001
L_32108:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_32111
L_32109:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_32103
.p2align 0x4
L_386001:
L_32112:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_32113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386002:
L_32145:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386003:
L_32105:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F0
L_32113:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386004
L_32114:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386004:
L_32142:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F1
L_32115:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_32143:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_32144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F2
L_32116:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_32117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8C0
L_32144:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_32132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F3
L_32117:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32118
L_32140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32141
.p2align 0x4
.long 0x7AD
L_32141:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32118:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32119:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_32120
L_32121:
	cmpq $0x1,%r14
	je L_386005
L_32122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32119
.p2align 0x4
L_386005:
L_32123:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32124
L_32138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32139
.p2align 0x4
.long 0x8F7
L_32139:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32124:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386007
L_32125:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_32126:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386006
L_32127:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_32128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386006:
L_32120:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386007:
L_32137:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32126
.p2align 0x4
.long 0x61C
L_32132:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32133
L_32134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32135
.p2align 0x4
.long 0x61D
L_32135:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32133:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_32128:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386012
L_32129:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_32130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386012:
L_32136:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F5
L_32130:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_32131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F6
L_32131:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl isInRange_0
.hidden isInRange_0
isInRange_0:
L_32152:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32153
L_32181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32182
.p2align 0x4
.long 0x4E8
L_32182:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32153:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386013
L_32154:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386013:
L_32176:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_32177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F8
L_32155:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7BF
L_32177:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	decl %r15d
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F9
L_32156:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x3,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_32157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x8FA
L_32178:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_32179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x522
L_32157:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,%r15
L_32158:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	andq %r15,%r11
	andq $0x1,%r11
	jz L_386019
L_32159:
	cmpq %r15,%r13
	jl L_32166
L_32161:
	movq %r14,%r15
	movq 0x8(%rbp),%r13
	andq %r13,%r15
	andq $0x1,%r15
	jz L_386016
L_32162:
	cmpq %r13,%r14
	jl L_386015
L_32164:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386015:
L_32166:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386016:
L_32167:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32168:
	cmpl $0x0,%eax
	jg L_32166
	jmp L_32164
.p2align 0x4
L_386019:
L_32172:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32173:
	cmpl $0x0,%eax
	jg L_32166
	jmp L_32161
.p2align 0x4
.long 0x8FB
L_32179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x3,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_32180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4E1
L_32180:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_32158
.text
.p2align 0x4
.globl layout_33
.hidden layout_33
layout_33:
L_32183:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32184
L_32220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32221
.p2align 0x4
.long 0x460
L_32221:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32184:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_386028
L_32185:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x128F,%r15
	je L_386024
	cmpq $0x1290,%r15
	je L_386023
	cmpq $0x1291,%r15
	je L_386022
	cmpq $0x1292,%r15
	je L_386021
L_32186:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_32187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_386021:
L_32211:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386022:
L_32209:
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_386023:
L_32208:
	movq 0x0(%r11),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_386024:
L_32192:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_386027
L_32194:
	decl %ecx
	jo L_386026
L_32196:
	movq $0x1,0x20(%rbp)
loop_465:
	cmpl $0x0,%ecx
	jl L_386025
L_32197:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_32198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386025:
L_32202:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386026:
L_32195:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386027:
L_32193:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386028:
L_32217:
	shrq $0x1,%r11
	movl %r11d,%r15d
	testl %r15d,%r15d
	jnz L_386029
L_32218:
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_386029:
L_32219:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32187:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32188
L_32190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32191
.p2align 0x4
.long 0x452
L_32191:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32188:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32212:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32213
L_32215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32216
.p2align 0x4
.long 0x452
L_32216:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32213:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32210:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x64F
L_32198:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32199
L_32200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32201
.p2align 0x4
.long 0x654
L_32201:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32199:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x28(%rbp),%ecx
	jmp loop_465
.p2align 0x4
.long 0x1
L_32203:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32204
L_32206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32207
.p2align 0x4
.long 0x452
L_32207:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32204:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32189:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32205:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.text
.p2align 0x4
.globl x_1260
.hidden x_1260
x_1260:
L_32222:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32223
L_32278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32279
.p2align 0x4
.long 0x61E
L_32279:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32223:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EF
L_32224:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32225
L_32276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_32277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32277
.p2align 0x4
.long 0x901
L_32277:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_32225:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386038
L_32226:
L_32227:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_386037
L_32228:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386036
L_32229:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_32230:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386036:
L_32238:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386037:
L_32274:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386038:
L_32275:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_32227
.p2align 0x4
.long 0x8EF
L_32231:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386043
L_32233:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386042
L_32234:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x10(%r13)
	je L_386041
L_32235:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_32238
L_32236:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_32230
.p2align 0x4
L_386041:
L_32239:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_32240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386042:
L_32272:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386043:
L_32232:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FC
L_32240:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386044
L_32241:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386044:
L_32269:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_32270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FD
L_32242:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_32270:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FE
L_32243:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_32244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x900
L_32271:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_32259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A9
L_32244:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32245
L_32267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32268
.p2align 0x4
.long 0x7AD
L_32268:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32245:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32246:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_32247
L_32248:
	cmpq $0x1,%r14
	je L_386045
L_32249:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32246
.p2align 0x4
L_386045:
L_32250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32251
L_32265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32266
.p2align 0x4
.long 0x8FF
L_32266:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32251:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386047
L_32252:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_32253:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386046
L_32254:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_32255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386046:
L_32247:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386047:
L_32264:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32253
.p2align 0x4
.long 0x51B
L_32259:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32260
L_32261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32262
.p2align 0x4
.long 0x489
L_32262:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32260:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C7
L_32255:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386052
L_32256:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386052:
L_32263:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B5
L_32257:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_32258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79C
L_32258:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_32259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1259
.hidden x_1259
x_1259:
L_32280:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32281
L_32326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32327
.p2align 0x4
.long 0x647
L_32327:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32281:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4EE
L_32282:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386057
L_32283:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_32284:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386056
L_32324:
L_32286:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_386055
L_32287:
	cmpq $0x1,%r14
	je L_386054
L_32288:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_32284
.p2align 0x4
L_386054:
L_32289:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386055:
L_32290:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_32291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386056:
	movq %r10,%r13
	jmp L_32286
.p2align 0x4
L_386057:
L_32325:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_32284
.p2align 0x4
.long 0x902
L_32291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32292
L_32322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_32323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32323
.p2align 0x4
.long 0x906
L_32323:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_32292:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386058
L_32293:
	movq 0x0(%r14),%r15
L_32294:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386058:
L_32295:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x903
L_32296:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x904
L_32297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_32298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x865
L_32298:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32299
L_32320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32321
.p2align 0x4
.long 0x86C
L_32321:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32299:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32300:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_32301
L_32302:
	cmpq $0x1,%r14
	je L_386060
L_32303:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32300
.p2align 0x4
L_386060:
L_32304:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32305
L_32318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32319
.p2align 0x4
.long 0x7C8
L_32319:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32305:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386062
L_32306:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_32307:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386061
L_32308:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_32309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386061:
L_32301:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386062:
L_32317:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32307
.p2align 0x4
.long 0x905
L_32309:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32310
L_32315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_32316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32316
.p2align 0x4
.long 0x479
L_32316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_32310:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386067
L_32311:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386066
L_32312:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_32294
.p2align 0x4
L_386066:
L_32313:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp L_32294
.p2align 0x4
L_386067:
L_32314:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl make_0
.hidden make_0
make_0:
L_32328:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_32589
L_32329:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386070
L_32330:
	movq 0x10(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x28(%rbp)
	movss 0x20(%r15),%xmm15
	movss %xmm15,0x4(%rbp)
	movss 0x1C(%r15),%xmm15
	movss %xmm15,0x30(%rbp)
	movss 0x18(%r15),%xmm15
	movss %xmm15,0x34(%rbp)
	movss 0x14(%r15),%xmm15
	movss %xmm15,0x38(%rbp)
	movss 0x10(%r15),%xmm15
	movss %xmm15,0x3C(%rbp)
	movss 0xC(%r15),%xmm15
	movss %xmm15,0x40(%rbp)
	movss 0x8(%r15),%xmm15
	movss %xmm15,0x44(%rbp)
	movq 0x28(%r15),%r13
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x48(%rbp)
	movb 0x0(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_386069
L_32331:
	movsd 0x28(%r13),%xmm15
	movsd %xmm15,0x10(%rbp)
	movsd 0x20(%r13),%xmm15
	movsd %xmm15,0x28(%rbp)
	movsd 0x18(%r13),%xmm15
	movsd %xmm15,0x30(%rbp)
	movsd 0x10(%r13),%xmm15
	movsd %xmm15,0x38(%rbp)
	movsd 0x8(%r13),%xmm15
	movsd %xmm15,0x40(%rbp)
	movsd 0x0(%r13),%xmm15
	movsd %xmm15,0x50(%rbp)
	movq 0x38(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x70(%rbp)
	movq $0x3E3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1270
.p2align 0x4
L_386069:
L_32462:
	movq %r14,0x58(%rbp)
	movq $0x3E3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_32463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1270
.p2align 0x4
L_386070:
L_32589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32590
.p2align 0x4
.long 0x910
L_32590:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32330
.p2align 0x4
.long 0x907
L_32332:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r15
	je L_386091
L_32333:
	movl 0x4(%r15),%r14d
	movl %r14d,0x68(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x6C(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x8(%r15),%r14b
	movb %r14b,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_32334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32334
.p2align 0x4
.long 0x908
L_32334:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl %eax,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32335
L_32458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_32459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32459
.p2align 0x4
.long 0x908
L_32459:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_32335:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386087
L_32336:
	cmpl $0x1,%r15d
	je L_386084
L_32337:
	cmpl $0x2,%r15d
	je L_386081
L_32338:
	cmpl $0x3,%r15d
	jne L_386080
L_32341:
	movb 0x78(%rbp),%r15b
	cmpb $0x1,%r15b
	je doit_2
	cmpb $0x2,%r15b
	je doit_33
	cmpb $0x3,%r15b
	je L_386076
	cmpb $0x4,%r15b
	je L_386074
L_32343:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386073
L_32344:
	movsd 0x30(%rbp),%xmm15
	movsd %xmm15,%xmm7
L_32345:
	movq $0x7FFFFFFFFFFFFFFF,%r15
	movd %r15,%xmm15
	andpd %xmm7,%xmm15
	ucomisd 0x48(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_386072
L_32348:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm7,%xmm15
	movsd %xmm15,0x0(%r15)
	addq $0x10,%r12
	movq $0x1C91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386072:
L_32347:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386073:
L_32349:
	movsd 0x38(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
L_386074:
L_32437:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386075
L_32438:
	movsd 0x40(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
L_386075:
L_32439:
	movsd 0x50(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
L_386076:
L_32433:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386077
L_32434:
	movsd 0x10(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
L_386077:
L_32435:
	movsd 0x28(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
doit_33:
doit_2:
	movb $0x0,0x28(%rbp)
doit_3:
	movl 0x6C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_386078
L_32351:
	leaq L_32424(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_32352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386078:
L_32425:
	negl %r15d
	jo L_386079
L_32426:
	movl %r15d,0x80(%rbp)
	leaq L_32424(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_32427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386079:
L_32361:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386080:
L_32340:
	movq (globalObjptr+0x778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386081:
L_32440:
	movb 0x78(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_4
	cmpb $0x2,%r14b
	je doit_35
	cmpb $0x3,%r14b
	je L_32433
	cmpb $0x4,%r14b
	je L_32437
	jmp L_32343
.p2align 0x4
doit_35:
doit_4:
	movb $0x1,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386084:
L_32446:
	movb 0x78(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_5
	cmpb $0x2,%r14b
	je doit_37
	cmpb $0x3,%r14b
	je L_32433
	cmpb $0x4,%r14b
	je L_32437
	jmp L_32343
.p2align 0x4
doit_37:
doit_5:
	movb $0x2,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386087:
L_32452:
	movb 0x78(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_6
	cmpb $0x2,%r14b
	je doit_39
	cmpb $0x3,%r14b
	je L_32433
	cmpb $0x4,%r14b
	je L_32437
	jmp L_32343
.p2align 0x4
doit_39:
doit_6:
	movb $0x3,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386091:
L_32461:
	movq (globalObjptr+0x19D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90C
L_32463:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_32461
L_32464:
	movl 0x4(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x8(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32465
.p2align 0x4
.long 0x90D
L_32465:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl %eax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32466
L_32586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32587
.p2align 0x4
.long 0x90D
L_32587:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32466:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386107
L_32467:
	cmpl $0x1,%r15d
	je L_386104
L_32468:
	cmpl $0x2,%r15d
	je L_386101
L_32469:
	cmpl $0x3,%r15d
	jne L_32340
L_32471:
	movb 0x50(%rbp),%r15b
	cmpb $0x1,%r15b
	je doit_7
	cmpb $0x2,%r15b
	je doit_41
	cmpb $0x3,%r15b
	je L_386096
	cmpb $0x4,%r15b
	je L_386094
L_32473:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386093
L_32474:
	movss 0x38(%rbp),%xmm15
	movss %xmm15,%xmm7
L_32475:
	movl $0x7FFFFFFF,%r15d
	movd %r15d,%xmm15
	andps %xmm7,%xmm15
	ucomiss 0x44(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_32347
L_32477:
	movd %xmm7,%r15d
	movl %r15d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x1C91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386093:
L_32478:
	movss 0x34(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
L_386094:
L_32565:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386095
L_32566:
	movss 0x30(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
L_386095:
L_32567:
	movss 0x4(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
L_386096:
L_32561:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386097
L_32562:
	movss 0x40(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
L_386097:
L_32563:
	movss 0x3C(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
doit_41:
doit_7:
	movb $0x0,0x30(%rbp)
doit_8:
	movl 0x14(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_386098
L_32480:
	leaq L_32552(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_32481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386098:
L_32553:
	negl %r15d
	jo L_386099
L_32554:
	movl %r15d,0x58(%rbp)
	leaq L_32552(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_32555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386099:
L_32490:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386101:
L_32568:
	movb 0x50(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_9
	cmpb $0x2,%r14b
	je doit_43
	cmpb $0x3,%r14b
	je L_32561
	cmpb $0x4,%r14b
	je L_32565
	jmp L_32473
.p2align 0x4
doit_43:
doit_9:
	movb $0x1,0x30(%rbp)
	jmp doit_8
.p2align 0x4
L_386104:
L_32574:
	movb 0x50(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_10
	cmpb $0x2,%r14b
	je doit_45
	cmpb $0x3,%r14b
	je L_32561
	cmpb $0x4,%r14b
	je L_32565
	jmp L_32473
.p2align 0x4
doit_45:
doit_10:
	movb $0x2,0x30(%rbp)
	jmp doit_8
.p2align 0x4
L_386107:
L_32580:
	movb 0x50(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_11
	cmpb $0x2,%r14b
	je doit_47
	cmpb $0x3,%r14b
	je L_32561
	cmpb $0x4,%r14b
	je L_32565
	jmp L_32473
.p2align 0x4
doit_47:
doit_11:
	movb $0x3,0x30(%rbp)
	jmp doit_8
.p2align 0x4
.long 0x909
L_32352:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x68(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386146
L_32353:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_386145
L_32354:
	movq 0x8(%r14),%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32355:
	incl %ecx
	cmpq $0x1,%r15
	je L_386112
L_32356:
	movq 0x8(%r15),%r15
	jmp L_32355
.p2align 0x4
L_386112:
L_32357:
L_32358:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	movq %r14,0x38(%rbp)
	jne L_386144
L_32360:
	addl %ecx,%r15d
	jo L_32361
L_32362:
	addl $0x4,%r15d
	jo L_32361
L_32363:
	addl %ebx,%r15d
	jo L_32361
L_32364:
	movslq %r15d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386140
L_32365:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_32366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32366
.p2align 0x4
.long 0x90A
L_32366:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x68(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386138
L_32367:
	xorl %ecx,%ecx
	movq %rax,%r15
L_32368:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32370
L_32371:
	movb $0x30,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32361
L_32372:
	movslq %ecx,%r14
	cmpq %r13,%r14
	jnb L_32370
L_32374:
	movb $0x2E,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32361
L_32375:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_32387
L_32376:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movl %ecx,%ebx
	movl %r11d,%ecx
.p2align 0x4,,0x7
L_32377:
	cmpl $0x0,%ecx
	jl L_32413
L_32378:
	cmpl $0x9,%ecx
	jg L_386131
L_32379:
	addl $0x30,%ecx
	jo L_32361
L_32380:
	cmpl $0xFF,%ecx
	ja L_386129
L_32381:
	movb %cl,%r13b
	movslq %ebx,%r11
	cmpq 0x40(%rbp),%r11
	jnb L_32370
L_32383:
	movb %r13b,0x0(%r15,%r11,1)
	incl %ebx
	jo L_32361
L_32384:
	cmpq $0x1,%r14
	je L_386113
L_32385:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_32377
.p2align 0x4
L_386113:
	movl %ebx,%ecx
L_32387:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_32370
L_32389:
	movb $0x45,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32361
L_32390:
	movq 0x38(%rbp),%r13
	decq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_466:
	cmpq %r14,%r13
	jl L_386116
L_32391:
	movq %r14,%r11
	incq %r11
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r9b
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_386115
L_32393:
	movb %r9b,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32361
L_32394:
	movq %r11,%r14
	jmp loop_466
.p2align 0x4
L_386115:
L_32370:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386116:
L_32395:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32370
L_32397:
	movb $0x0,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32361
L_32398:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	decq %r13
	jo L_32361
L_32399:
	movb 0x0(%r15,%r13,1),%r14b
	testb %r14b,%r14b
	jnz L_386121
L_32401:
	movb 0x28(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_386120
	cmpb $0x2,%r14b
	je L_386119
	cmpb $0x3,%r14b
	je L_386118
L_32402:
	xorl %ecx,%ecx
L_32403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movsd %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_32404
.p2align 0x4
.long 0x90B
L_32404:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movsd (cReturnTemp+0x0)(%rip),%xmm15
	movsd %xmm15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32405
L_32406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32407
.p2align 0x4
.long 0x90B
L_32407:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32405:
	movsd 0x28(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32345
.p2align 0x4
L_386118:
L_32410:
	movl $0x1,%ecx
	jmp L_32403
.p2align 0x4
L_386119:
L_32409:
	movl $0x3,%ecx
	jmp L_32403
.p2align 0x4
L_386120:
L_32408:
	movl $0x2,%ecx
	jmp L_32403
.p2align 0x4
L_386121:
L_32400:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x750)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386129:
L_32411:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386131:
L_32413:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386138:
L_32416:
	cmpq $0x0,0x40(%rbp)
	jna L_32370
L_32418:
	movb $0x2D,0x0(%rax)
	movl $0x1,%ecx
	movq %rax,%r15
	jmp L_32368
.p2align 0x4
L_386140:
L_32419:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386144:
L_32359:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386145:
L_32420:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	jmp L_32358
.p2align 0x4
L_386146:
L_32421:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_386147
L_32422:
	movq 0x8(%r14),%r15
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32355
.p2align 0x4
L_386147:
L_32423:
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32358
.p2align 0x4
.long 0x48B
L_32424:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x909
L_32427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32428
L_32429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_32430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32430
.p2align 0x4
.long 0x90A
L_32430:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_32428:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_32352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x90E
L_32481:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%rbp)
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386183
L_32482:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386182
L_32483:
	movq 0x8(%r14),%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32484:
	incl %ecx
	cmpq $0x1,%r15
	je L_386149
L_32485:
	movq 0x8(%r15),%r15
	jmp L_32484
.p2align 0x4
L_386149:
L_32486:
L_32487:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	movq %r14,0x38(%rbp)
	jne L_386181
L_32489:
	addl %ecx,%r15d
	jo L_32490
L_32491:
	addl $0x4,%r15d
	jo L_32490
L_32492:
	addl %ebx,%r15d
	jo L_32490
L_32493:
	movslq %r15d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386177
L_32494:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32495
.p2align 0x4
.long 0x90D
L_32495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386175
L_32496:
	xorl %ecx,%ecx
	movq %rax,%r15
L_32497:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32499
L_32500:
	movb $0x30,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32490
L_32501:
	movslq %ecx,%r14
	cmpq %r13,%r14
	jnb L_32499
L_32503:
	movb $0x2E,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32490
L_32504:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_32516
L_32505:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movl %ecx,%ebx
	movl %r11d,%ecx
.p2align 0x4,,0x7
L_32506:
	cmpl $0x0,%ecx
	jl L_32413
L_32507:
	cmpl $0x9,%ecx
	jg L_32413
L_32508:
	addl $0x30,%ecx
	jo L_32490
L_32509:
	cmpl $0xFF,%ecx
	ja L_386166
L_32510:
	movb %cl,%r13b
	movslq %ebx,%r11
	cmpq 0x50(%rbp),%r11
	jnb L_32499
L_32512:
	movb %r13b,0x0(%r15,%r11,1)
	incl %ebx
	jo L_32490
L_32513:
	cmpq $0x1,%r14
	je L_386150
L_32514:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_32506
.p2align 0x4
L_386150:
	movl %ebx,%ecx
L_32516:
	movslq %ecx,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_32499
L_32518:
	movb $0x45,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32490
L_32519:
	movq 0x38(%rbp),%r13
	decq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_467:
	cmpq %r14,%r13
	jl L_386153
L_32520:
	movq %r14,%r11
	incq %r11
	movq 0x28(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r9b
	movslq %ecx,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_386152
L_32522:
	movb %r9b,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32490
L_32523:
	movq %r11,%r14
	jmp loop_467
.p2align 0x4
L_386152:
L_32499:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386153:
L_32524:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32499
L_32526:
	movb $0x0,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32490
L_32527:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	decq %r13
	jo L_32490
L_32528:
	movb 0x0(%r15,%r13,1),%r14b
	testb %r14b,%r14b
	jnz L_386158
L_32530:
	movb 0x30(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_386157
	cmpb $0x2,%r14b
	je L_386156
	cmpb $0x3,%r14b
	je L_386155
L_32531:
	xorl %ecx,%ecx
L_32532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real32_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movss %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_32533
.p2align 0x4
.long 0x477
L_32533:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movss (cReturnTemp+0x0)(%rip),%xmm15
	movss %xmm15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32534
L_32535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32536
.p2align 0x4
.long 0x477
L_32536:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_32534:
	movss 0x28(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32475
.p2align 0x4
L_386155:
L_32539:
	movl $0x1,%ecx
	jmp L_32532
.p2align 0x4
L_386156:
L_32538:
	movl $0x3,%ecx
	jmp L_32532
.p2align 0x4
L_386157:
L_32537:
	movl $0x2,%ecx
	jmp L_32532
.p2align 0x4
L_386158:
L_32529:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x750)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386166:
L_32540:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386175:
L_32544:
	cmpq $0x0,0x50(%rbp)
	jna L_32499
L_32546:
	movb $0x2D,0x0(%rax)
	movl $0x1,%ecx
	movq %rax,%r15
	jmp L_32497
.p2align 0x4
L_386177:
L_32547:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386181:
L_32488:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386182:
L_32548:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	jmp L_32487
.p2align 0x4
L_386183:
L_32549:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386184
L_32550:
	movq 0x8(%r14),%r15
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32484
.p2align 0x4
L_386184:
L_32551:
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32487
.p2align 0x4
.long 0x48B
L_32552:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90E
L_32555:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32556
L_32557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32558
.p2align 0x4
.long 0x90F
L_32558:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32556:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_32481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl x_1270
.hidden x_1270
x_1270:
L_32591:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32592
L_32733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32734
.p2align 0x4
.long 0x460
L_32734:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32592:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386238
L_32732:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0x0,0x20(%rbp)
.p2align 0x4,,0x7
L_32718:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386237
.p2align 0x4,,0x7
L_32719:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32597
L_32721:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386234
L_32725:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32727:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x18(%rbp),%r15
	movl %ecx,0x10(%rbp)
	movl %r14d,%ecx
L_32686:
	movzbq %dl,%r14
	movq 0x8(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_32624
L_32688:
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_386222
L_32715:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F1D,%r13
	je L_386186
L_32717:
	movq %r14,0x18(%rbp)
	movl %ecx,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_32718
.p2align 0x4
L_386186:
L_32716:
	movq %r14,0x18(%rbp)
	movl %ecx,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
.p2align 0x4,,0x7
L_32594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386221
.p2align 0x4,,0x7
L_32595:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32597
L_32598:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386188
L_32683:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386187
L_32685:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x18(%rbp),%r15
	movl %ecx,0x10(%rbp)
	movl %r14d,%ecx
	jmp L_32686
.p2align 0x4
L_386187:
L_32624:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386188:
L_32599:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386219
L_32600:
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl %ecx,0x14(%rbp)
.p2align 0x4,,0x7
L_32601:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386218
.p2align 0x4,,0x7
L_32602:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386189
L_32603:
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movb %r15b,0x10(%rbp)
	jmp L_32601
.p2align 0x4
L_386189:
L_32604:
	movq %r15,0x8(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x10(%rbp)
L_32605:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386217
L_32606:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32607:
	incl %ecx
	cmpq $0x1,%r15
	je L_386190
L_32608:
	movq 0x8(%r15),%r15
	jmp L_32607
.p2align 0x4
L_386190:
L_32609:
L_32610:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_386216
L_32611:
	cmpq $0x7FFFFFFF,%rdx
	ja L_386215
L_32612:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32613
.p2align 0x4
.long 0x45D
L_32613:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_32614:
	movq 0x8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_468:
	cmpq 0x18(%rbp),%r14
	jnl L_386192
L_32672:
	cmpq $0x1,%r13
	je L_386191
L_32673:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_468
.p2align 0x4
L_386191:
L_32675:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386192:
L_32615:
	movl 0x10(%rbp),%ecx
L_32616:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386211
L_32665:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32597
L_32667:
	cmpl %r13d,%ecx
	jnl L_32621
L_32669:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32671:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32626:
	cmpb $0x2B,%dl
	je L_386200
	cmpb $0x2D,%dl
	je normal_3
	cmpb $0x7E,%dl
	je normal_16
L_32627:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movb %dl,0x4(%rbp)
	movl %ecx,0x0(%rbp)
	jmp normalP_0
.p2align 0x4
normal_16:
normal_3:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386196
L_32658:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_386195
L_32660:
	cmpl %r13d,%ecx
	jnl L_386194
L_32662:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32664:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32651:
	movl %ecx,0x8(%rbp)
	movb %dl,0xC(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_32652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp normalP_0
.p2align 0x4
L_386194:
L_32621:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386195:
L_32597:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386196:
L_32644:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32597
L_32646:
	cmpl %r13d,%ecx
	jnl L_32621
L_32648:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32650:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32651
.p2align 0x4
L_386200:
L_32628:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386204
L_32637:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32597
L_32639:
	cmpl %r13d,%ecx
	jnl L_32621
L_32641:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32643:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32636:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movb %dl,0x4(%rbp)
	movl %ecx,0x0(%rbp)
	jmp normalP_0
.p2align 0x4
L_386204:
L_32629:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32597
L_32631:
	cmpl %r13d,%ecx
	jnl L_32621
L_32633:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32635:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32636
.p2align 0x4
L_386211:
L_32617:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32597
L_32619:
	cmpl %r13d,%ecx
	jnl L_32621
L_32622:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32624
L_32625:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32626
.p2align 0x4
L_386215:
L_32677:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386216:
L_32678:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_32614
.p2align 0x4
L_386217:
L_32679:
	xorl %ecx,%ecx
	jmp L_32610
.p2align 0x4
L_386218:
L_32680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32681
.p2align 0x4
.long 0x525
L_32681:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32602
.p2align 0x4
L_386219:
L_32682:
	movq $0x1,0x8(%rbp)
	movl %ecx,0x10(%rbp)
	jmp L_32605
.p2align 0x4
L_386221:
L_32730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32731
.p2align 0x4
.long 0x4E0
L_32731:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32595
.p2align 0x4
L_386222:
L_32689:
	cmpq $0x1,%r15
	je L_386231
L_32690:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32691:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386230
.p2align 0x4,,0x7
L_32692:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386223
L_32693:
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movb %r15b,0x14(%rbp)
	jmp L_32691
.p2align 0x4
L_386223:
L_32694:
	movq %r15,0x8(%rbp)
L_32695:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386229
L_32696:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32697:
	incl %ecx
	cmpq $0x1,%r15
	je L_386224
L_32698:
	movq 0x8(%r15),%r15
	jmp L_32697
.p2align 0x4
L_386224:
L_32699:
L_32700:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_386228
L_32701:
	cmpq $0x7FFFFFFF,%rdx
	ja L_32677
L_32702:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32703
.p2align 0x4
.long 0x45D
L_32703:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_32704:
	movq 0x8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_469:
	cmpq 0x18(%rbp),%r14
	jnl L_386226
L_32706:
	cmpq $0x1,%r13
	je L_32675
L_32707:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_469
.p2align 0x4
L_386226:
L_32705:
	movl 0x10(%rbp),%ecx
	jmp L_32616
.p2align 0x4
L_386228:
L_32710:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_32704
.p2align 0x4
L_386229:
L_32711:
	xorl %ecx,%ecx
	jmp L_32700
.p2align 0x4
L_386230:
L_32712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32713
.p2align 0x4
.long 0x525
L_32713:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32692
.p2align 0x4
L_386231:
L_32714:
	movq $0x1,0x8(%rbp)
	jmp L_32695
.p2align 0x4
L_386234:
L_32722:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386235
L_32723:
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl %ecx,0x14(%rbp)
	jmp L_32601
.p2align 0x4
L_386235:
L_32724:
	movq $0x1,0x8(%rbp)
	movl %ecx,0x10(%rbp)
	jmp L_32605
.p2align 0x4
L_386237:
L_32728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32729
.p2align 0x4
.long 0x4E0
L_32729:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32719
.p2align 0x4
L_386238:
L_32593:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0x0,0x20(%rbp)
	jmp L_32594
.p2align 0x4
.long 0x1
L_32652:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32653
L_32656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32657
.p2align 0x4
.long 0x452
L_32657:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32653:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_32621
L_32654:
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movb 0x8(%r15),%r11b
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x1,0x4(%r15)
	movzbl %r11b,%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl normalP_0
.hidden normalP_0
normalP_0:
L_32735:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_33513
L_32736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386317
L_32737:
	movb 0x4(%rbp),%r15b
	cmpb $0x5A,%r15b
	ja L_386316
L_32738:
	cmpb $0x41,%r15b
	jb L_386315
L_32739:
	movzbl %r15b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
L_32740:
	cmpb $0x2E,%dl
	je L_386304
	cmpb $0x69,%dl
	je L_386266
	cmpb $0x6E,%dl
	je L_386245
L_32741:
	movb 0x4(%rbp),%r15b
	cmpb $0x39,%r15b
	ja L_33222
L_32742:
	cmpb $0x30,%r15b
	jb L_386243
L_32743:
	movzbl %r15b,%r14d
	subl $0x30,%r14d
	jo L_386242
L_32745:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_32746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386242:
L_32744:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386243:
L_33222:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386245:
L_33466:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386262
L_33504:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33506:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33508:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33510:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33474:
	cmpb $0x5A,%dl
	ja L_33477
L_33475:
	cmpb $0x41,%dl
	jb L_33477
L_33476:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33477:
	cmpb $0x61,%dl
	jne L_33222
L_33479:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386252
L_33495:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_386251
L_33497:
	cmpl %r13d,%ecx
	jnl L_33222
L_33499:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386249
L_33501:
	movb 0x0(%r14,%r13,1),%dl
L_33487:
	cmpb $0x5A,%dl
	ja L_33490
L_33488:
	cmpb $0x41,%dl
	jb L_33490
L_33489:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33490:
	cmpb $0x6E,%dl
	jne L_33222
L_33492:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386249:
L_32929:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386251:
L_32750:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386252:
L_33480:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33482:
	cmpl %r13d,%ecx
	jnl L_33222
L_33484:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33486:
	movb 0x0(%r14,%r13,1),%dl
	jmp L_33487
.p2align 0x4
L_386262:
L_33467:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33469:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33471:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33473:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33474
.p2align 0x4
L_386266:
L_33381:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386300
L_33459:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33461:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33463:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33465:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33389:
	cmpb $0x5A,%dl
	ja L_33392
L_33390:
	cmpb $0x41,%dl
	jb L_33392
L_33391:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33392:
	cmpb $0x6E,%dl
	jne L_33222
L_33394:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386290
L_33450:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33452:
	cmpl %r13d,%ecx
	jnl L_33222
L_33454:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33456:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33402:
	cmpb $0x5A,%dl
	ja L_33405
L_33403:
	cmpb $0x41,%dl
	jb L_33405
L_33404:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33405:
	cmpb $0x66,%dl
	jne L_33222
L_33407:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_470:
	cmpl $0x5,%ebx
	je L_386282
L_33408:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386277
L_33434:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33436:
	cmpl %r13d,%ecx
	jnl L_386274
L_33441:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33443:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33420:
	cmpb $0x5A,%dl
	ja L_33423
L_33421:
	cmpb $0x41,%dl
	jb L_33423
L_33422:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33423:
	movslq %ebx,%r15
	cmpq $0x5,%r15
	jnb L_32929
L_33425:
	movq (globalObjptr+0xE4B0)(%rip),%r14
	cmpb %dl,0x0(%r14,%r15,1)
	jne L_386268
L_33430:
	incl %ebx
	jo L_32744
L_33431:
	jmp loop_470
.p2align 0x4
L_386268:
L_33426:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33427
L_33428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33429
.p2align 0x4
.long 0x0
L_33429:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33427:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386274:
L_33437:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33414
L_33439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33440
.p2align 0x4
.long 0x0
L_33440:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33414:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386277:
L_33409:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33411:
	cmpl %r13d,%ecx
	jnl L_386279
L_33417:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33419:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33420
.p2align 0x4
L_386279:
L_33412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33414
L_33415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33416
.p2align 0x4
.long 0x0
L_33416:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	jmp L_33414
.p2align 0x4
L_386282:
L_33444:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33445
L_33446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33447
.p2align 0x4
.long 0x0
L_33447:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33445:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386290:
L_33395:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33397:
	cmpl %r13d,%ecx
	jnl L_33222
L_33399:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33401:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33402
.p2align 0x4
L_386300:
L_33382:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33384:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33386:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33388:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33389
.p2align 0x4
L_386304:
L_33224:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386311
L_33374:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33376:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33378:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33380:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33232:
	cmpb $0x39,%dl
	ja L_33222
L_33233:
	cmpb $0x30,%dl
	jb L_33222
L_33234:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33235:
	movl %ecx,0x18(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_33236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386311:
L_33225:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33227:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33222
L_33229:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33231:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33232
.p2align 0x4
L_386315:
L_33511:
	movb %r15b,%dl
	jmp L_32740
.p2align 0x4
L_386316:
L_33512:
	movb %r15b,%dl
	jmp L_32740
.p2align 0x4
L_386317:
L_33513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_33514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33514
.p2align 0x4
.long 0x495
L_33514:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_32737
.p2align 0x4
.long 0x522
L_32746:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32747
L_33219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_33220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33220
.p2align 0x4
.long 0x523
L_33220:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32747:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386451
L_33210:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33212:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386448
L_33216:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33218:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32931:
	cmpb $0x5A,%dl
	ja L_32934
L_32932:
	cmpb $0x41,%dl
	jb L_32934
L_32933:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_32934:
	cmpb $0x2E,%dl
	je L_386430
	cmpb $0x65,%dl
	je L_386386
L_32935:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386385
L_32936:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32754:
	testl %ecx,%ecx
	jnz L_386382
L_32916:
	incl %ebx
	jo L_32744
L_32917:
	cmpq $0x1,%r15
	je L_386319
L_32918:
	movl 0x0(%r15),%ecx
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r15
	jmp L_32754
.p2align 0x4
L_386319:
L_32919:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32920
L_32924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32925
.p2align 0x4
.long 0x4E9
L_32925:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32920:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x10(%rbp),%r15
L_32921:
	cmpq $0x1,%r15
	je L_386378
L_32922:
	movl %ecx,0x4(%rbp)
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32758:
	cmpq $0x1,%r14
	je L_386320
L_32759:
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movl %r15d,0x0(%rbp)
	jmp L_32758
.p2align 0x4
L_386320:
L_32760:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32761
L_32908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32909
.p2align 0x4
.long 0x4E8
L_32909:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32761:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386365
L_32762:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_386364
L_32763:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32764:
	imull $0xA,%ebx
	jo L_32765
L_32798:
	addl %ebx,%ecx
	movl %ecx,0x4(%rbp)
	jo L_386361
L_32799:
	cmpq $0x1,%r14
	je L_386321
L_32800:
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movl %ecx,%ebx
	movl %r15d,%ecx
	jmp L_32764
.p2align 0x4
L_386321:
L_32801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32802
L_32876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32877
.p2align 0x4
.long 0x4E9
L_32877:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32802:
	movl 0x0(%rbp),%ecx
	movl 0x4(%rbp),%ebx
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
L_32803:
	testl %ecx,%ecx
	jz L_386359
L_32873:
	negl %ebx
	jo L_386356
L_32875:
	movl %ebx,0x10(%rbp)
L_32805:
	movl 0x10(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	cmpq $0x1,0x0(%rbp)
	jne L_386331
L_32872:
	movq 0x8(%rbp),%r15
L_32773:
	cmpq $0x1,%r15
	je L_386330
L_32774:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_386329
L_32776:
	shrq $0x1,%r14
	movl %r14d,0x0(%rbp)
L_32777:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_386328
L_32779:
	movl 0x0(%r15),%ecx
	movq %r15,0x8(%rbp)
	movq 0x8(%r15),%r15
	movl $0x0,0x4(%rbp)
.p2align 0x4,,0x7
L_32780:
	testl %ecx,%ecx
	jnz L_386326
L_32787:
	movl 0x4(%rbp),%r14d
	incl %r14d
	movl %r14d,0x8(%rbp)
	jo L_32744
L_32788:
	cmpq $0x1,%r15
	je L_386322
L_32789:
	movl 0x0(%r15),%ecx
	movl %r14d,0x4(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x8(%r15),%r15
	jmp L_32780
.p2align 0x4
L_386322:
L_32790:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32791
L_32792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32793
.p2align 0x4
.long 0x26
L_32793:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32791:
	movq $0x1,%r15
	movl 0x8(%rbp),%ecx
L_32783:
	movl 0x0(%rbp),%r14d
	subl %ecx,%r14d
	jo L_32744
L_32784:
	xorl %ebx,%ebx
	movb $0x2,%dl
	movl %r14d,%ecx
L_32771:
	movq $0x2963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movl %ebx,0x4(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386326:
L_32781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32782
L_32785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32786
.p2align 0x4
.long 0x495
L_32786:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32782:
	movq 0x8(%rbp),%r15
	movl 0x4(%rbp),%ecx
	jmp L_32783
.p2align 0x4
L_386328:
L_32778:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386329:
L_32775:
	movl 0x4(%r14),%ebx
	movl 0x0(%r14),%ecx
	movq 0x10(%r14),%r15
	movb 0x8(%r14),%dl
	jmp L_32771
.p2align 0x4
L_386330:
L_32794:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq $0x1,%r15
	xorb %dl,%dl
	jmp L_32771
.p2align 0x4
L_386331:
L_32806:
	cmpq $0x1,0x8(%rbp)
	je L_386353
L_32808:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386332
L_32809:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386332:
L_32810:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_32811:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386352
.p2align 0x4,,0x7
L_32812:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386333
L_32813:
	movq %r15,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32811
.p2align 0x4
L_386333:
L_32814:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_32815:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386351
.p2align 0x4,,0x7
L_32816:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386334
L_32817:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32815
.p2align 0x4
L_386334:
L_32818:
	movl 0x14(%rbp),%ecx
	movq 0x18(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_32819:
	cmpq $0x1,%r15
	je L_386335
L_32820:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32819
.p2align 0x4
L_386335:
L_32821:
	movq %r14,%r15
L_32822:
	testl %ecx,%ecx
	jz L_386340
L_32824:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_386339
L_32826:
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32827:
	incl %ecx
	movl %ecx,0x14(%rbp)
	cmpq $0x1,%r15
	je L_386336
L_32828:
	movq 0x8(%r15),%r15
	jmp L_32827
.p2align 0x4
L_386336:
L_32829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32830
L_32832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32833
.p2align 0x4
.long 0x27
L_32833:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32830:
	movl 0x10(%rbp),%ecx
	addl 0x14(%rbp),%ecx
	jo L_32744
L_32831:
	movq 0x18(%rbp),%r15
	movb $0x2,%dl
	xorl %ebx,%ebx
	jmp L_32771
.p2align 0x4
L_386339:
L_32825:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386340:
L_32835:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_386350
L_32837:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32838:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386349
.p2align 0x4,,0x7
L_32839:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386341
L_32840:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32838
.p2align 0x4
L_386341:
L_32841:
	movq 0x18(%rbp),%r15
	movl 0x14(%rbp),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32842:
	testl %ecx,%ecx
	jnz L_386345
L_32853:
	incl %ebx
	jo L_32744
L_32854:
	cmpq $0x1,%r15
	je L_386342
L_32855:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32842
.p2align 0x4
L_386342:
L_32857:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386343
L_32858:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386343:
L_32859:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq $0x1,0x18(%rbp)
	xorl %ecx,%ecx
	jmp L_32827
.p2align 0x4
L_386345:
L_32843:
	movq %r15,0x8(%rbp)
	movl %ecx,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32844:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386348
.p2align 0x4,,0x7
L_32845:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386346
L_32846:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32844
.p2align 0x4
L_386346:
L_32848:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_386347
L_32850:
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
	jmp L_32827
.p2align 0x4
L_386347:
L_32849:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386348:
L_32851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32852
.p2align 0x4
.long 0x525
L_32852:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32845
.p2align 0x4
L_386349:
L_32860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32861
.p2align 0x4
.long 0x525
L_32861:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32839
.p2align 0x4
L_386350:
L_32836:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386351:
L_32862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32863
.p2align 0x4
.long 0x525
L_32863:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32816
.p2align 0x4
L_386352:
L_32864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32865
.p2align 0x4
.long 0x562
L_32865:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32812
.p2align 0x4
L_386353:
L_32867:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386354
L_32868:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386354:
L_32869:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	cmpq $0x1,%r13
	je L_386355
L_32870:
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movl %r11d,%ecx
	jmp L_32819
.p2align 0x4
L_386355:
L_32871:
	movq %r14,%r15
	movl %r11d,%ecx
	jmp L_32822
.p2align 0x4
L_386356:
L_32874:
	movq 0x0(%rbp),%r15
	movq 0x8(%rbp),%r14
L_32767:
	testl %ecx,%ecx
	jnz L_386358
L_32768:
	movb $0x4,%dl
L_32769:
	movq $0x2965,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movzbl %dl,%r11d
	movl %r11d,0x8(%r13)
	movl $0x0,0xC(%r13)
	movq $0x1,0x10(%r13)
	cmpq $0x1,%r15
	jne L_386357
L_32772:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_32773
.p2align 0x4
L_386357:
L_32770:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq $0x1,%r15
	jmp L_32771
.p2align 0x4
L_386358:
L_32795:
	xorb %dl,%dl
	jmp L_32769
.p2align 0x4
L_386359:
L_32804:
	movl %ebx,0x10(%rbp)
	jmp L_32805
.p2align 0x4
L_386361:
L_32765:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32766
L_32796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32797
.p2align 0x4
.long 0x4E9
L_32797:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32766:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r15
	movq 0x10(%rbp),%r14
	jmp L_32767
.p2align 0x4
L_386364:
L_32878:
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32803
.p2align 0x4
L_386365:
L_32880:
	movq 0x10(%rbp),%r15
	andq $0x3,%r15
	jz L_386366
L_32881:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386366:
L_32882:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movl %r14d,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_32883:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386376
.p2align 0x4,,0x7
L_32884:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386367
L_32885:
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_32883
.p2align 0x4
L_386367:
L_32886:
	movq 0x28(%rbp),%r15
	movl 0x20(%rbp),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32887:
	testl %ecx,%ecx
	jnz L_386372
L_32897:
	incl %ebx
	jo L_32744
L_32898:
	cmpq $0x1,%r15
	je L_386368
L_32899:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32887
.p2align 0x4
L_386368:
L_32900:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32901
L_32904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32905
.p2align 0x4
.long 0x523
L_32905:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32901:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_386369
L_32902:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32764
.p2align 0x4
L_386369:
L_32903:
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32803
.p2align 0x4
L_386372:
L_32888:
	movq %r15,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_32889:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386375
.p2align 0x4,,0x7
L_32890:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386373
L_32891:
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_32889
.p2align 0x4
L_386373:
L_32892:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_386374
L_32893:
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32764
.p2align 0x4
L_386374:
L_32894:
	movq %r15,0x8(%rbp)
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	xorl %ebx,%ebx
	jmp L_32803
.p2align 0x4
L_386375:
L_32895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_32896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32896
.p2align 0x4
.long 0x4F2
L_32896:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_32890
.p2align 0x4
L_386376:
L_32906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_32907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32907
.p2align 0x4
.long 0x4F2
L_32907:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_32884
.p2align 0x4
L_386378:
L_32923:
	movq $0x1,%r15
L_32911:
	cmpq $0x1,%r14
	je L_386379
L_32912:
	movl %ecx,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq $0x1,0x10(%rbp)
	xorl %r15d,%r15d
	movl %ebx,%ecx
	movl %r15d,%ebx
	jmp L_32764
.p2align 0x4
L_386379:
L_32913:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32803
.p2align 0x4
L_386382:
L_32755:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32756
L_32914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32915
.p2align 0x4
.long 0x4E8
L_32915:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32756:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_386383
L_32757:
	movq 0x8(%r15),%r14
	movl 0x0(%rbp),%r13d
	movl %r13d,0x4(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	jmp L_32758
.p2align 0x4
L_386383:
L_32910:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x18(%rbp),%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386385:
L_32937:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386386:
L_33103:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386425
L_33199:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33201:
	cmpl %r13d,%ecx
	jnl L_386422
L_33205:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33207:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33113:
	cmpb $0x2B,%dl
	je L_386406
	cmpb $0x2D,%dl
	je neg_1
	cmpb $0x7E,%dl
	je neg_3
L_33114:
	cmpb $0x39,%dl
	ja L_386390
L_33115:
	cmpb $0x30,%dl
	jb L_386388
L_33116:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33117:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386388:
L_33124:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386389
L_33125:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386389:
L_33126:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386390:
L_33127:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386391
L_33128:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386391:
L_33129:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
neg_3:
neg_1:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386401
L_33190:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33192:
	cmpl %r13d,%ecx
	jnl L_386398
L_33196:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33198:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33174:
	cmpb $0x39,%dl
	ja L_386395
L_33175:
	cmpb $0x30,%dl
	jb L_386393
L_33176:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33177:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386393:
L_33184:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386394
L_33185:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386394:
L_33186:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386395:
L_33187:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386396
L_33188:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386396:
L_33189:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386398:
L_33193:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386399
L_33194:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386399:
L_33195:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386401:
L_33165:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33167:
	cmpl %r13d,%ecx
	jnl L_386403
L_33171:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33173:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33174
.p2align 0x4
L_386403:
L_33168:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386404
L_33169:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386404:
L_33170:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386406:
L_33130:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386416
L_33156:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33158:
	cmpl %r13d,%ecx
	jnl L_386413
L_33162:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33164:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33140:
	cmpb $0x39,%dl
	ja L_386410
L_33141:
	cmpb $0x30,%dl
	jb L_386408
L_33142:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33143:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386408:
L_33150:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386409
L_33151:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386409:
L_33152:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386410:
L_33153:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386411
L_33154:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386411:
L_33155:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386413:
L_33159:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386414
L_33160:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386414:
L_33161:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386416:
L_33131:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33133:
	cmpl %r13d,%ecx
	jnl L_386418
L_33137:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33139:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33140
.p2align 0x4
L_386418:
L_33134:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386419
L_33135:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386419:
L_33136:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386422:
L_33202:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386423
L_33203:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386423:
L_33204:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386425:
L_33104:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33106:
	cmpl %r13d,%ecx
	jnl L_386427
L_33110:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33112:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33113
.p2align 0x4
L_386427:
L_33107:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386428
L_33108:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386428:
L_33109:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386430:
L_32938:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386440
L_33094:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33096:
	cmpl %r13d,%ecx
	jnl L_386437
L_33100:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33102:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32948:
	cmpb $0x39,%dl
	ja L_386434
L_32949:
	cmpb $0x30,%dl
	jb L_386432
L_32950:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_32951:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_32952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386432:
L_33088:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386433
L_33089:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386433:
L_33090:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386434:
L_33091:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386435
L_33092:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386435:
L_33093:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386437:
L_33097:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386438
L_33098:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386438:
L_33099:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386440:
L_32939:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_32941:
	cmpl %r13d,%ecx
	jnl L_386442
L_32945:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_32947:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32948
.p2align 0x4
L_386442:
L_32942:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386443
L_32943:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386443:
L_32944:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386448:
L_33213:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386449
L_33214:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32754
.p2align 0x4
L_386449:
L_33215:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq $0x1,%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32921
.p2align 0x4
L_386451:
L_32748:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_32751:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386453
L_32927:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_32930:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32931
.p2align 0x4
L_386453:
L_32752:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386454
L_32753:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32754
.p2align 0x4
L_386454:
L_32926:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq $0x1,%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32921
.p2align 0x4
.long 0x522
L_33236:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33237
L_33370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_33371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33371
.p2align 0x4
.long 0x523
L_33371:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_33237:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386508
L_33361:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33363:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386505
L_33367:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33369:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33247:
	cmpb $0x5A,%dl
	ja L_33250
L_33248:
	cmpb $0x41,%dl
	jb L_33250
L_33249:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33250:
	cmpb $0x65,%dl
	jne L_386500
L_33254:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386495
L_33350:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33352:
	cmpl %r13d,%ecx
	jnl L_386492
L_33356:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33358:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33264:
	cmpb $0x2B,%dl
	je L_386476
	cmpb $0x2D,%dl
	je neg_2
	cmpb $0x7E,%dl
	je neg_5
L_33265:
	cmpb $0x39,%dl
	ja L_386460
L_33266:
	cmpb $0x30,%dl
	jb L_386458
L_33267:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33268:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386458:
L_33275:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386459
L_33276:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386459:
L_33277:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386460:
L_33278:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386461
L_33279:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386461:
L_33280:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
neg_5:
neg_2:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386471
L_33341:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33343:
	cmpl %r13d,%ecx
	jnl L_386468
L_33347:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33349:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33325:
	cmpb $0x39,%dl
	ja L_386465
L_33326:
	cmpb $0x30,%dl
	jb L_386463
L_33327:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33328:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386463:
L_33335:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386464
L_33336:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386464:
L_33337:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386465:
L_33338:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386466
L_33339:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386466:
L_33340:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386468:
L_33344:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386469
L_33345:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386469:
L_33346:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386471:
L_33316:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33318:
	cmpl %r13d,%ecx
	jnl L_386473
L_33322:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33324:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33325
.p2align 0x4
L_386473:
L_33319:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386474
L_33320:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386474:
L_33321:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386476:
L_33281:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386486
L_33307:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33309:
	cmpl %r13d,%ecx
	jnl L_386483
L_33313:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33315:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33291:
	cmpb $0x39,%dl
	ja L_386480
L_33292:
	cmpb $0x30,%dl
	jb L_386478
L_33293:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33294:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386478:
L_33301:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386479
L_33302:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386479:
L_33303:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386480:
L_33304:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386481
L_33305:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386481:
L_33306:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386483:
L_33310:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386484
L_33311:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386484:
L_33312:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386486:
L_33282:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33284:
	cmpl %r13d,%ecx
	jnl L_386488
L_33288:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33290:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33291
.p2align 0x4
L_386488:
L_33285:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386489
L_33286:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386489:
L_33287:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386492:
L_33353:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386493
L_33354:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386493:
L_33355:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386495:
L_33255:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33257:
	cmpl %r13d,%ecx
	jnl L_386497
L_33261:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33263:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33264
.p2align 0x4
L_386497:
L_33258:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386498
L_33259:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386498:
L_33260:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386500:
L_33251:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386501
L_33252:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386501:
L_33253:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
L_386505:
L_33364:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386506
L_33365:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386506:
L_33366:
	xorl %r13d,%r13d
	movq $0x1,%r14
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgl %r13d,%ecx
	jmp L_32911
.p2align 0x4
L_386508:
L_33238:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33240:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386510
L_33244:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33246:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33247
.p2align 0x4
L_386510:
L_33241:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386511
L_33242:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386511:
L_33243:
	xorl %r13d,%r13d
	movq $0x1,%r14
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgl %r13d,%ecx
	jmp L_32911
.p2align 0x4
.long 0x490
L_33118:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33119
L_33122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33123
.p2align 0x4
.long 0x610
L_33123:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33119:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386514
L_33120:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386514:
L_33121:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
.long 0x490
L_33178:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33179
L_33182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33183
.p2align 0x4
.long 0x610
L_33183:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33179:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386516
L_33180:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x1,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386516:
L_33181:
	movl $0x1,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
.long 0x490
L_33144:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33145
L_33148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33149
.p2align 0x4
.long 0x610
L_33149:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33145:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386518
L_33146:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386518:
L_33147:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
.long 0x4E1
L_32952:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32953
L_33086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_33087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33087
.p2align 0x4
.long 0x730
L_33087:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_32953:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386571
L_33077:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33079:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386568
L_33083:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33085:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32963:
	cmpb $0x5A,%dl
	ja L_32966
L_32964:
	cmpb $0x41,%dl
	jb L_32966
L_32965:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_32966:
	cmpb $0x65,%dl
	jne L_386563
L_32970:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386558
L_33066:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33068:
	cmpl %r13d,%ecx
	jnl L_386555
L_33072:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33074:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32980:
	cmpb $0x2B,%dl
	je L_386539
	cmpb $0x2D,%dl
	je neg_0
	cmpb $0x7E,%dl
	je neg_7
L_32981:
	cmpb $0x39,%dl
	ja L_386523
L_32982:
	cmpb $0x30,%dl
	jb L_386521
L_32983:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_32984:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_32985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386521:
L_32991:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386522
L_32992:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386522:
L_32993:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386523:
L_32994:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386524
L_32995:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386524:
L_32996:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
neg_7:
neg_0:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386534
L_33057:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33059:
	cmpl %r13d,%ecx
	jnl L_386531
L_33063:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33065:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33041:
	cmpb $0x39,%dl
	ja L_386528
L_33042:
	cmpb $0x30,%dl
	jb L_386526
L_33043:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33044:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_33045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386526:
L_33051:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386527
L_33052:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386527:
L_33053:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386528:
L_33054:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386529
L_33055:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386529:
L_33056:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386531:
L_33060:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386532
L_33061:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386532:
L_33062:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386534:
L_33032:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_33034:
	cmpl %r13d,%ecx
	jnl L_386536
L_33038:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33040:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33041
.p2align 0x4
L_386536:
L_33035:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386537
L_33036:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386537:
L_33037:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386539:
L_32997:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386549
L_33023:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33025:
	cmpl %r13d,%ecx
	jnl L_386546
L_33029:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33031:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33007:
	cmpb $0x39,%dl
	ja L_386543
L_33008:
	cmpb $0x30,%dl
	jb L_386541
L_33009:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32744
L_33010:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_33011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386541:
L_33017:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386542
L_33018:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386542:
L_33019:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386543:
L_33020:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386544
L_33021:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386544:
L_33022:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386546:
L_33026:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386547
L_33027:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386547:
L_33028:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386549:
L_32998:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_33000:
	cmpl %r13d,%ecx
	jnl L_386551
L_33004:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_33006:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33007
.p2align 0x4
L_386551:
L_33001:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386552
L_33002:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386552:
L_33003:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386555:
L_33069:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386556
L_33070:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386556:
L_33071:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386558:
L_32971:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32750
L_32973:
	cmpl %r13d,%ecx
	jnl L_386560
L_32977:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_32979:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32980
.p2align 0x4
L_386560:
L_32974:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386561
L_32975:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386561:
L_32976:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386563:
L_32967:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386564
L_32968:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386564:
L_32969:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
L_386568:
L_33080:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386569
L_33081:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32754
.p2align 0x4
L_386569:
L_33082:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq 0x20(%rbp),%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32921
.p2align 0x4
L_386571:
L_32954:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32750
L_32956:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386573
L_32960:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32929
L_32962:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32963
.p2align 0x4
L_386573:
L_32957:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386574
L_32958:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32754
.p2align 0x4
L_386574:
L_32959:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq 0x20(%rbp),%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32921
.p2align 0x4
.long 0x490
L_33269:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33270
L_33273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33274
.p2align 0x4
.long 0x610
L_33274:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33270:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386577
L_33271:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386577:
L_33272:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
.long 0x490
L_33329:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33330
L_33333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33334
.p2align 0x4
.long 0x610
L_33334:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33330:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386579
L_33331:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x1,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386579:
L_33332:
	movl $0x1,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
.long 0x490
L_33295:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33296
L_33299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33300
.p2align 0x4
.long 0x610
L_33300:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33296:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386581
L_33297:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32758
.p2align 0x4
L_386581:
L_33298:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32911
.p2align 0x4
.long 0x51A
L_32985:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32986
L_32989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32990
.p2align 0x4
.long 0x911
L_32990:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32986:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386583
L_32987:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386583:
L_32988:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
.long 0x51A
L_33045:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33046
L_33049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33050
.p2align 0x4
.long 0x911
L_33050:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33046:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386585
L_33047:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x1,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386585:
L_33048:
	movl $0x1,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.p2align 0x4
.long 0x51A
L_33011:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33012
L_33015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33016
.p2align 0x4
.long 0x911
L_33016:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33012:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386587
L_33013:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32754
.p2align 0x4
L_386587:
L_33014:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32921
.text
.p2align 0x4
.globl digitStar_0
.hidden digitStar_0
digitStar_0:
L_33515:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33516
L_33558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_33559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33559
.p2align 0x4
.long 0x4E9
L_33559:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_33516:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386602
L_33557:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_33543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386601
.p2align 0x4,,0x7
L_33544:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_33521
L_33546:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386599
L_33548:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_33534
L_33550:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	movq 0x28(%rbp),%r15
L_33536:
	cmpb $0x39,%dl
	ja done_2
L_33537:
	cmpb $0x30,%dl
	jb done_24
L_33538:
	movzbl %dl,%ecx
	subl $0x30,%ecx
	jo L_386597
L_33540:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F1D,%r13
	je L_386589
L_33542:
	movl %ebx,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_33543
.p2align 0x4
L_386589:
L_33541:
	movl %ebx,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_33518:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386596
.p2align 0x4,,0x7
L_33519:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_386595
L_33522:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386591
L_33532:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386590
L_33535:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	movq 0x28(%rbp),%r15
	jmp L_33536
.p2align 0x4
L_386590:
L_33534:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386591:
L_33523:
	movl %ecx,0x0(%rbp)
	movq 0x28(%rbp),%r15
done_1:
	cmpq $0x1,%r15
	je L_386594
L_33524:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x4(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_33525:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386593
.p2align 0x4,,0x7
L_33526:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386592
L_33527:
	movq %r15,0x10(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x4(%rbp)
	jmp L_33525
.p2align 0x4
L_386592:
L_33528:
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386593:
L_33529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_33530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33530
.p2align 0x4
.long 0x4E9
L_33530:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_33526
.p2align 0x4
L_386594:
L_33531:
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386595:
L_33521:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386596:
L_33555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33556
.p2align 0x4
.long 0x4F3
L_33556:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_33519
.p2align 0x4
L_386597:
L_33539:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
done_24:
done_2:
	movl %ecx,0x0(%rbp)
	jmp done_1
.p2align 0x4
L_386599:
L_33547:
	movl %ecx,0x0(%rbp)
	movq 0x28(%rbp),%r15
	jmp done_1
.p2align 0x4
L_386601:
L_33551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33552
.p2align 0x4
.long 0x4F3
L_33552:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_33544
.p2align 0x4
L_386602:
L_33517:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_33518
.text
.p2align 0x4
.globl x_1258
.hidden x_1258
x_1258:
L_33560:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33561
L_33662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_33663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33663
.p2align 0x4
.long 0x63C
L_33663:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_33561:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x912
L_33562:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_386609
L_33564:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_33565:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_33566
L_33567:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_33566
L_33568:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386606
L_33570:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386605
L_33573:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_33574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386605:
L_33572:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386606:
L_33566:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386609:
L_33563:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x913
L_33574:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386610
L_33575:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_33576:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_33577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386610:
L_33661:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_33576
.p2align 0x4
.long 0x914
L_33577:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33578
L_33659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33660
.p2align 0x4
.long 0x91F
L_33660:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33578:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386611
L_33579:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_33576
.p2align 0x4
L_386611:
L_33580:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_33581:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386613
.p2align 0x4,,0x7
L_33582:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386612
L_33583:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_33581
.p2align 0x4
L_386612:
L_33584:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_33585:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386613:
L_33657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33658
.p2align 0x4
.long 0x803
L_33658:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_33582
.p2align 0x4
.long 0x915
L_33586:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_33572
L_33588:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386617
L_33589:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386616
L_33590:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386615
L_33591:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_33585
.p2align 0x4
L_386615:
L_33592:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386616:
L_33593:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386617:
L_33656:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x916
L_33594:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33595
L_33654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33655
.p2align 0x4
.long 0x91E
L_33655:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33595:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386635
	cmpl $0x10,%r15d
	je L_386634
	cmpl $0x20,%r15d
	je L_386619
L_33596:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386619:
L_33653:
	movb $0x0,0x48(%rbp)
L_33598:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	je L_386620
L_33599:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386620:
L_33600:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386633
L_33601:
	cmpq $0x7FFFFFFF,%r15
	ja L_386632
L_33602:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33603
L_33648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33649
.p2align 0x4
.long 0x917
L_33649:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33603:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33604
.p2align 0x4
.long 0x917
L_33604:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_33605:
	movq $0x0,0x70(%rbp)
loop_471:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386621
L_33606:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386621:
L_33607:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_33572
L_33609:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386628
L_33610:
	cmpq $0x1,%r10
	jl L_33617
L_33612:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386626
	cmpb $0x2,%r8b
	je L_386625
L_33613:
	movq %r10,%r13
L_33614:
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386623
L_33615:
	cmpq %r13,%r11
	jl L_386622
L_33617:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386622:
L_33626:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386623:
L_33637:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33638:
	cmpl $0x0,%eax
	jl L_33626
	jmp L_33617
.p2align 0x4
L_386625:
L_33642:
	movq %r9,%r13
	jmp L_33614
.p2align 0x4
L_386626:
L_33641:
	movq %r11,%r13
	jmp L_33614
.p2align 0x4
L_386628:
L_33644:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33645:
	cmpl $0x0,%eax
	jg L_33617
	jmp L_33612
.p2align 0x4
L_386632:
L_33650:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386633:
L_33651:
	movq (globalObjptr+0x6EB0)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_33605
.p2align 0x4
L_386634:
L_33652:
	movb $0x1,0x48(%rbp)
	jmp L_33598
.p2align 0x4
L_386635:
L_33597:
	movb $0x2,0x48(%rbp)
	jmp L_33598
.p2align 0x4
.long 0x918
L_33618:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33619
L_33634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_33635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33635
.p2align 0x4
.long 0x91D
L_33635:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_33619:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x918
L_33627:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_33628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x918
L_33620:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x91A
L_33628:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_33629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x918
L_33621:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386638
L_33623:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_33624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386638:
L_33622:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x91B
L_33629:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33630
L_33631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_33632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33632
.p2align 0x4
.long 0x91C
L_33632:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_33630:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_471
.p2align 0x4
.long 0x919
L_33624:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33626
L_33633:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1257
.hidden x_1257
x_1257:
L_33664:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33665
L_33736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33737
.p2align 0x4
.long 0x658
L_33737:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33665:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8BB
L_33666:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_386642
L_33667:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x50(%rbp)
L_33668:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386642:
L_33735:
	movl $0x8,%ecx
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_33668
.p2align 0x4
.long 0x8BC
L_33669:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33670
L_33733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33734
.p2align 0x4
.long 0x8C2
L_33734:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33670:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386643
L_33671:
	movq %r15,0x50(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_33668
.p2align 0x4
L_386643:
L_33672:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_33673:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386645
.p2align 0x4,,0x7
L_33674:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386644
L_33675:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_33673
.p2align 0x4
L_386644:
L_33676:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_33677:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386645:
L_33731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33732
.p2align 0x4
.long 0x8C1
L_33732:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_33674
.p2align 0x4
.long 0x8BD
L_33678:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386650
L_33680:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386649
L_33681:
	movq 0x48(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386648
L_33682:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_386647
L_33683:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33677
.p2align 0x4
L_386647:
L_33684:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386648:
L_33685:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386649:
L_33730:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386650:
L_33679:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_33686:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	je L_386661
	cmpl $0x10,%r15d
	je L_386660
	cmpl $0x20,%r15d
	je L_386651
L_33687:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386651:
L_33729:
	xorb %dl,%dl
L_33689:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	andq $0x1,%r10
	jz L_386658
L_33690:
	cmpq $0x1,%r11
	jl L_33697
L_33692:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpb $0x1,%dl
	je L_386656
	cmpb $0x2,%dl
	je L_386655
L_33693:
	movq %r10,%r13
L_33694:
	movq %r13,%r11
	movq 0x28(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_386653
L_33695:
	cmpq %r13,%r10
	jl L_386652
L_33697:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386652:
L_33706:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386653:
L_33717:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33718:
	cmpl $0x0,%eax
	jl L_33706
	jmp L_33697
.p2align 0x4
L_386655:
L_33722:
	movq %r9,%r13
	jmp L_33694
.p2align 0x4
L_386656:
L_33721:
	movq %r11,%r13
	jmp L_33694
.p2align 0x4
L_386658:
L_33724:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	movb %dl,%bl
	call IntInf_compare
L_33725:
	cmpl $0x0,%eax
	jg L_33697
	movb %bl,%dl
	jmp L_33692
.p2align 0x4
L_386660:
L_33728:
	movb $0x1,%dl
	jmp L_33689
.p2align 0x4
L_386661:
L_33688:
	movb $0x2,%dl
	jmp L_33689
.p2align 0x4
.long 0x8BE
L_33698:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33699
L_33714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33715
.p2align 0x4
.long 0x77B
L_33715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33699:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8BF
L_33707:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8BE
L_33700:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8C0
L_33708:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BE
L_33701:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_386663
L_33703:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386663:
L_33702:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_33709:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33710
L_33711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33712
.p2align 0x4
.long 0x61D
L_33712:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33710:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C6
L_33704:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33706
L_33713:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1256
.hidden x_1256
x_1256:
L_33738:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33739
L_33790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_33791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33791
.p2align 0x4
.long 0x80B
L_33791:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_33739:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A7
L_33740:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386668
L_33741:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386667
L_33742:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_33743:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386667:
L_33751:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386668:
L_33787:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_33751
L_33788:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33743
.p2align 0x4
.long 0x8EF
L_33744:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386673
L_33746:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386672
L_33747:
	movq 0x58(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386671
L_33748:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_33751
L_33749:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33743
.p2align 0x4
L_386671:
L_33752:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_33753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386672:
L_33785:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386673:
L_33745:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F0
L_33753:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386674
L_33754:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386674:
L_33782:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F1
L_33755:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_33783:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F2
L_33756:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8C0
L_33784:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F3
L_33757:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33758
L_33780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33781
.p2align 0x4
.long 0x7AD
L_33781:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33758:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33759:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_33760
L_33761:
	cmpq $0x1,%r14
	je L_386675
L_33762:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33759
.p2align 0x4
L_386675:
L_33763:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33764
L_33778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33779
.p2align 0x4
.long 0x8F7
L_33779:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33764:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386677
L_33765:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_33766:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386676
L_33767:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386676:
L_33760:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386677:
L_33777:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33766
.p2align 0x4
.long 0x61C
L_33772:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33773
L_33774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33775
.p2align 0x4
.long 0x61D
L_33775:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33773:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_33768:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386682
L_33769:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_33770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386682:
L_33776:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F5
L_33770:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_33771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F6
L_33771:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1255
.hidden x_1255
x_1255:
L_33792:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33793
L_33848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33849
.p2align 0x4
.long 0x61E
L_33849:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33793:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EF
L_33794:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33795
L_33846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33847
.p2align 0x4
.long 0x901
L_33847:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33795:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386686
L_33796:
L_33797:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_386685
L_33798:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386684
L_33799:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_33800:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386684:
L_33808:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386685:
L_33844:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386686:
L_33845:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_33797
.p2align 0x4
.long 0x8EF
L_33801:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386691
L_33803:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386690
L_33804:
	movq 0x10(%r13),%r15
	cmpq %r15,0x58(%rbp)
	je L_386689
L_33805:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_33808
L_33806:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_33800
.p2align 0x4
L_386689:
L_33809:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_33810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386690:
L_33842:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386691:
L_33802:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FC
L_33810:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386692
L_33811:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386692:
L_33839:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_33840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FD
L_33812:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_33840:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_33841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FE
L_33813:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x900
L_33841:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_33829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A9
L_33814:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33815
L_33837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33838
.p2align 0x4
.long 0x7AD
L_33838:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33815:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33816:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_33817
L_33818:
	cmpq $0x1,%r14
	je L_386693
L_33819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33816
.p2align 0x4
L_386693:
L_33820:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33821
L_33835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33836
.p2align 0x4
.long 0x8FF
L_33836:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33821:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386695
L_33822:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_33823:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386694
L_33824:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386694:
L_33817:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386695:
L_33834:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33823
.p2align 0x4
.long 0x51B
L_33829:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33830
L_33831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33832
.p2align 0x4
.long 0x489
L_33832:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33830:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C7
L_33825:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386700
L_33826:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386700:
L_33833:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B5
L_33827:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_33828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79C
L_33828:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_33829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1254
.hidden x_1254
x_1254:
L_33850:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33851
L_33952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_33953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33953
.p2align 0x4
.long 0x63C
L_33953:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_33851:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x912
L_33852:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_386706
L_33854:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_33855:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_33856
L_33857:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_33856
L_33858:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386703
L_33860:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386702
L_33863:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_33864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386702:
L_33862:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386703:
L_33856:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386706:
L_33853:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x913
L_33864:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386707
L_33865:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_33866:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_33867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386707:
L_33951:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_33866
.p2align 0x4
.long 0x914
L_33867:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33868
L_33949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33950
.p2align 0x4
.long 0x91F
L_33950:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33868:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386708
L_33869:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_33866
.p2align 0x4
L_386708:
L_33870:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_33871:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386710
.p2align 0x4,,0x7
L_33872:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386709
L_33873:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_33871
.p2align 0x4
L_386709:
L_33874:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_33875:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386710:
L_33947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33948
.p2align 0x4
.long 0x803
L_33948:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_33872
.p2align 0x4
.long 0x915
L_33876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_33862
L_33878:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386714
L_33879:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386713
L_33880:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386712
L_33881:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_33875
.p2align 0x4
L_386712:
L_33882:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386713:
L_33883:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386714:
L_33946:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x916
L_33884:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33885
L_33944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33945
.p2align 0x4
.long 0x91E
L_33945:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33885:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386732
	cmpl $0x10,%r15d
	je L_386731
	cmpl $0x20,%r15d
	je L_386716
L_33886:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386716:
L_33943:
	movb $0x0,0x48(%rbp)
L_33888:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	je L_386717
L_33889:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386717:
L_33890:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386730
L_33891:
	cmpq $0x7FFFFFFF,%r15
	ja L_386729
L_33892:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33893
L_33938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33939
.p2align 0x4
.long 0x917
L_33939:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33893:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33894
.p2align 0x4
.long 0x917
L_33894:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_33895:
	movq $0x0,0x70(%rbp)
loop_472:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386718
L_33896:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386718:
L_33897:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_33862
L_33899:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386725
L_33900:
	cmpq $0x1,%r10
	jl L_33907
L_33902:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386723
	cmpb $0x2,%r8b
	je L_386722
L_33903:
	movq %r10,%r13
L_33904:
	movq %r13,%r11
	movq 0x78(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_386720
L_33905:
	cmpq %r13,%r10
	jl L_386719
L_33907:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386719:
L_33916:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386720:
L_33927:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33928:
	cmpl $0x0,%eax
	jl L_33916
	jmp L_33907
.p2align 0x4
L_386722:
L_33932:
	movq %r9,%r13
	jmp L_33904
.p2align 0x4
L_386723:
L_33931:
	movq %r11,%r13
	jmp L_33904
.p2align 0x4
L_386725:
L_33934:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33935:
	cmpl $0x0,%eax
	jg L_33907
	jmp L_33902
.p2align 0x4
L_386729:
L_33940:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386730:
L_33941:
	movq (globalObjptr+0x4FA8)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_33895
.p2align 0x4
L_386731:
L_33942:
	movb $0x1,0x48(%rbp)
	jmp L_33888
.p2align 0x4
L_386732:
L_33887:
	movb $0x2,0x48(%rbp)
	jmp L_33888
.p2align 0x4
.long 0x918
L_33908:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33909
L_33924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_33925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33925
.p2align 0x4
.long 0x91D
L_33925:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_33909:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x918
L_33917:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_33918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x918
L_33910:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x91A
L_33918:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_33919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x918
L_33911:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386735
L_33913:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_33914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386735:
L_33912:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x91B
L_33919:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33920
L_33921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_33922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33922
.p2align 0x4
.long 0x91C
L_33922:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_33920:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_472
.p2align 0x4
.long 0x919
L_33914:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33916
L_33923:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1253
.hidden x_1253
x_1253:
L_33954:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33955
L_34000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34001
.p2align 0x4
.long 0x647
L_34001:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33955:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4EE
L_33956:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386742
L_33957:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_33958:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386741
L_33998:
L_33960:
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_386740
L_33961:
	cmpq $0x1,%r14
	je L_386739
L_33962:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_33958
.p2align 0x4
L_386739:
L_33963:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386740:
L_33964:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_33965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386741:
	movq %r10,%r13
	jmp L_33960
.p2align 0x4
L_386742:
L_33999:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_33958
.p2align 0x4
.long 0x902
L_33965:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33966
L_33996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33997
.p2align 0x4
.long 0x906
L_33997:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33966:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386743
L_33967:
	movq 0x0(%r14),%r15
L_33968:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386743:
L_33969:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x903
L_33970:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x904
L_33971:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_33972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x865
L_33972:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33973
L_33994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_33995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33995
.p2align 0x4
.long 0x86C
L_33995:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_33973:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33974:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_33975
L_33976:
	cmpq $0x1,%r14
	je L_386745
L_33977:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33974
.p2align 0x4
L_386745:
L_33978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33979
L_33992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33993
.p2align 0x4
.long 0x7C8
L_33993:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33979:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386747
L_33980:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_33981:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386746
L_33982:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_33983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386746:
L_33975:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386747:
L_33991:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33981
.p2align 0x4
.long 0x905
L_33983:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33984
L_33989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33990
.p2align 0x4
.long 0x479
L_33990:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33984:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386752
L_33985:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386751
L_33986:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_33968
.p2align 0x4
L_386751:
L_33987:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp L_33968
.p2align 0x4
L_386752:
L_33988:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1252
.hidden x_1252
x_1252:
L_34002:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34003
L_34058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34059
.p2align 0x4
.long 0x61E
L_34059:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34003:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EF
L_34004:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34005
L_34056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34057
.p2align 0x4
.long 0x901
L_34057:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34005:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386757
L_34006:
L_34007:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq 0x10(%r15),%r14
	je L_386756
L_34008:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386755
L_34009:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_34010:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386755:
L_34018:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386756:
L_34054:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386757:
L_34055:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_34007
.p2align 0x4
.long 0x8EF
L_34011:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386762
L_34013:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386761
L_34014:
	movq 0x10(%r13),%r15
	cmpq %r15,0x58(%rbp)
	je L_386760
L_34015:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_34018
L_34016:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_34010
.p2align 0x4
L_386760:
L_34019:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_34020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386761:
L_34052:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386762:
L_34012:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FC
L_34020:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386763
L_34021:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386763:
L_34049:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_34050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FD
L_34022:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_34050:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_34051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FE
L_34023:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x900
L_34051:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_34039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A9
L_34024:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34025
L_34047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34048
.p2align 0x4
.long 0x7AD
L_34048:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34025:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34026:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_34027
L_34028:
	cmpq $0x1,%r14
	je L_386764
L_34029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34026
.p2align 0x4
L_386764:
L_34030:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34031
L_34045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34046
.p2align 0x4
.long 0x8FF
L_34046:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34031:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386766
L_34032:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_34033:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386765
L_34034:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386765:
L_34027:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386766:
L_34044:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34033
.p2align 0x4
.long 0x51B
L_34039:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34040
L_34041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34042
.p2align 0x4
.long 0x489
L_34042:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34040:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C7
L_34035:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386771
L_34036:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386771:
L_34043:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B5
L_34037:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_34038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79C
L_34038:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_34039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1251
.hidden x_1251
x_1251:
L_34060:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34061
L_34112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_34113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34113
.p2align 0x4
.long 0x80B
L_34113:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_34061:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A7
L_34062:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386774
L_34063:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386773
L_34064:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_34065:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386773:
L_34073:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386774:
L_34109:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_34073
L_34110:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34065
.p2align 0x4
.long 0x8EF
L_34066:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386779
L_34068:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386778
L_34069:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386777
L_34070:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_34073
L_34071:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34065
.p2align 0x4
L_386777:
L_34074:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_34075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386778:
L_34107:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386779:
L_34067:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F0
L_34075:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386780
L_34076:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386780:
L_34104:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F1
L_34077:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_34105:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F2
L_34078:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8C0
L_34106:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F3
L_34079:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34080
L_34102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34103
.p2align 0x4
.long 0x7AD
L_34103:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34080:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34081:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_34082
L_34083:
	cmpq $0x1,%r14
	je L_386781
L_34084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34081
.p2align 0x4
L_386781:
L_34085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34086
L_34100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34101
.p2align 0x4
.long 0x8F7
L_34101:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34086:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386783
L_34087:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_34088:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386782
L_34089:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386782:
L_34082:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386783:
L_34099:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34088
.p2align 0x4
.long 0x61C
L_34094:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34095
L_34096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34097
.p2align 0x4
.long 0x61D
L_34097:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34095:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_34090:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386788
L_34091:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_34092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386788:
L_34098:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F5
L_34092:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_34093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F6
L_34093:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1250
.hidden x_1250
x_1250:
L_34114:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34115
L_34186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34187
.p2align 0x4
.long 0x658
L_34187:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34115:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_34116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8BB
L_34116:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_386790
L_34117:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x50(%rbp)
L_34118:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386790:
L_34185:
	movl $0x8,%ecx
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_34118
.p2align 0x4
.long 0x8BC
L_34119:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34120
L_34183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34184
.p2align 0x4
.long 0x8C2
L_34184:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34120:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386791
L_34121:
	movq %r15,0x50(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_34118
.p2align 0x4
L_386791:
L_34122:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_34123:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386793
.p2align 0x4,,0x7
L_34124:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386792
L_34125:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_34123
.p2align 0x4
L_386792:
L_34126:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_34127:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386793:
L_34181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34182
.p2align 0x4
.long 0x8C1
L_34182:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_34124
.p2align 0x4
.long 0x8BD
L_34128:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386798
L_34130:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386797
L_34131:
	movq 0x48(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386796
L_34132:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_386795
L_34133:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34127
.p2align 0x4
L_386795:
L_34134:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386796:
L_34135:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386797:
L_34180:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386798:
L_34129:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_34136:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	je L_386809
	cmpl $0x10,%r15d
	je L_386808
	cmpl $0x20,%r15d
	je L_386799
L_34137:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386799:
L_34179:
	xorb %dl,%dl
L_34139:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	andq $0x1,%r10
	jz L_386806
L_34140:
	cmpq $0x1,%r11
	jl L_34147
L_34142:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpb $0x1,%dl
	je L_386804
	cmpb $0x2,%dl
	je L_386803
L_34143:
	movq %r10,%r13
L_34144:
	movq %r13,%r11
	movq 0x28(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_386801
L_34145:
	cmpq %r13,%r10
	jl L_386800
L_34147:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386800:
L_34156:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386801:
L_34167:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34168:
	cmpl $0x0,%eax
	jl L_34156
	jmp L_34147
.p2align 0x4
L_386803:
L_34172:
	movq %r9,%r13
	jmp L_34144
.p2align 0x4
L_386804:
L_34171:
	movq %r11,%r13
	jmp L_34144
.p2align 0x4
L_386806:
L_34174:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	movb %dl,%bl
	call IntInf_compare
L_34175:
	cmpl $0x0,%eax
	jg L_34147
	movb %bl,%dl
	jmp L_34142
.p2align 0x4
L_386808:
L_34178:
	movb $0x1,%dl
	jmp L_34139
.p2align 0x4
L_386809:
L_34138:
	movb $0x2,%dl
	jmp L_34139
.p2align 0x4
.long 0x8BE
L_34148:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34149
L_34164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34165
.p2align 0x4
.long 0x77B
L_34165:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34149:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8BF
L_34157:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8BE
L_34150:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8C0
L_34158:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BE
L_34151:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_386811
L_34153:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386811:
L_34152:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_34159:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34160
L_34161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34162
.p2align 0x4
.long 0x61D
L_34162:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34160:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C6
L_34154:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_34156
L_34163:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1249
.hidden x_1249
x_1249:
L_34188:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34189
L_34290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_34291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34291
.p2align 0x4
.long 0x63C
L_34291:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_34189:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_34190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x912
L_34190:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_386819
L_34192:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_34193:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_34194
L_34195:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_34194
L_34196:
	movq 0x8(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386816
L_34198:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386815
L_34201:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_34202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386815:
L_34200:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386816:
L_34194:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386819:
L_34191:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x913
L_34202:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386820
L_34203:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_34204:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_34205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386820:
L_34289:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_34204
.p2align 0x4
.long 0x914
L_34205:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34206
L_34287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34288
.p2align 0x4
.long 0x91F
L_34288:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34206:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386821
L_34207:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_34204
.p2align 0x4
L_386821:
L_34208:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_34209:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386823
.p2align 0x4,,0x7
L_34210:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386822
L_34211:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_34209
.p2align 0x4
L_386822:
L_34212:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_34213:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386823:
L_34285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34286
.p2align 0x4
.long 0x803
L_34286:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_34210
.p2align 0x4
.long 0x915
L_34214:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_34200
L_34216:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386827
L_34217:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386826
L_34218:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386825
L_34219:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_34213
.p2align 0x4
L_386825:
L_34220:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386826:
L_34221:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386827:
L_34284:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x916
L_34222:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34223
L_34282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34283
.p2align 0x4
.long 0x91E
L_34283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34223:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386845
	cmpl $0x10,%r15d
	je L_386844
	cmpl $0x20,%r15d
	je L_386829
L_34224:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386829:
L_34281:
	movb $0x0,0x48(%rbp)
L_34226:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	je L_386830
L_34227:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386830:
L_34228:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386843
L_34229:
	cmpq $0x7FFFFFFF,%r15
	ja L_386842
L_34230:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34231
L_34276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34277
.p2align 0x4
.long 0x917
L_34277:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34231:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34232
.p2align 0x4
.long 0x917
L_34232:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_34233:
	movq $0x0,0x70(%rbp)
loop_473:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386831
L_34234:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386831:
L_34235:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_34200
L_34237:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386838
L_34238:
	cmpq $0x1,%r10
	jl L_34245
L_34240:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386836
	cmpb $0x2,%r8b
	je L_386835
L_34241:
	movq %r10,%r13
L_34242:
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386833
L_34243:
	cmpq %r13,%r11
	jl L_386832
L_34245:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386832:
L_34254:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386833:
L_34265:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34266:
	cmpl $0x0,%eax
	jl L_34254
	jmp L_34245
.p2align 0x4
L_386835:
L_34270:
	movq %r9,%r13
	jmp L_34242
.p2align 0x4
L_386836:
L_34269:
	movq %r11,%r13
	jmp L_34242
.p2align 0x4
L_386838:
L_34272:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34273:
	cmpl $0x0,%eax
	jg L_34245
	jmp L_34240
.p2align 0x4
L_386842:
L_34278:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386843:
L_34279:
	movq (globalObjptr+0x6EC8)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_34233
.p2align 0x4
L_386844:
L_34280:
	movb $0x1,0x48(%rbp)
	jmp L_34226
.p2align 0x4
L_386845:
L_34225:
	movb $0x2,0x48(%rbp)
	jmp L_34226
.p2align 0x4
.long 0x918
L_34246:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34247
L_34262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_34263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34263
.p2align 0x4
.long 0x91D
L_34263:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_34247:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x918
L_34255:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_34256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x918
L_34248:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x91A
L_34256:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_34257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x918
L_34249:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386848
L_34251:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_34252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386848:
L_34250:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x91B
L_34257:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34258
L_34259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_34260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34260
.p2align 0x4
.long 0x91C
L_34260:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_34258:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_473
.p2align 0x4
.long 0x919
L_34252:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_34254
L_34261:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1248
.hidden x_1248
x_1248:
L_34292:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34293
L_34338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34339
.p2align 0x4
.long 0x647
L_34339:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34293:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4EE
L_34294:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386855
L_34295:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_34296:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386854
L_34336:
L_34298:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_386853
L_34299:
	cmpq $0x1,%r14
	je L_386852
L_34300:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_34296
.p2align 0x4
L_386852:
L_34301:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386853:
L_34302:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_34303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386854:
	movq %r10,%r13
	jmp L_34298
.p2align 0x4
L_386855:
L_34337:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_34296
.p2align 0x4
.long 0x902
L_34303:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34304
L_34334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34335
.p2align 0x4
.long 0x906
L_34335:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34304:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386856
L_34305:
	movq 0x0(%r14),%r15
L_34306:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386856:
L_34307:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x903
L_34308:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x904
L_34309:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_34310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x865
L_34310:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34311
L_34332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_34333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34333
.p2align 0x4
.long 0x86C
L_34333:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_34311:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34312:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_34313
L_34314:
	cmpq $0x1,%r14
	je L_386858
L_34315:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34312
.p2align 0x4
L_386858:
L_34316:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34317
L_34330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34331
.p2align 0x4
.long 0x7C8
L_34331:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34317:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386860
L_34318:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_34319:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386859
L_34320:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_34321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386859:
L_34313:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386860:
L_34329:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34319
.p2align 0x4
.long 0x905
L_34321:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34322
L_34327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34328
.p2align 0x4
.long 0x479
L_34328:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34322:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386865
L_34323:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386864
L_34324:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_34306
.p2align 0x4
L_386864:
L_34325:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp L_34306
.p2align 0x4
L_386865:
L_34326:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookupConstant_0
.hidden lookupConstant_0
lookupConstant_0:
L_34340:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35322
L_34341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386919
L_34342:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_386918
L_34343:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14A2,%r13
	je L_386916
L_34494:
	movq 0x70(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x50(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x48(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0x58(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x60(%rbp)
	movq 0x38(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x88(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x90(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x98(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jnz L_386867
L_34495:
	movq 0x0(%r11),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6CD8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA8(%rbp)
	leaq L_34533(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA8,%rbp
	leaq (L_34496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386867:
L_35320:
	movq $0x40BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_34566:
	movq $0x2945,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x205D,%r14
	je L_386869
L_34568:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	xchgq %r14,%r15
L_34491:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r13)
	jne L_386868
L_34493:
	movq $0x1225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq $0x2375,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386868:
L_34492:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386869:
L_34567:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_34346:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x70(%rbp)
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_34348
L_34349:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_474:
	cmpl %ecx,%ebx
	jnl L_386871
L_34487:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x70(%rbp),%r14
	jnb L_386870
L_34489:
	movq 0x60(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x8(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r11d,%r14d
	movl %r14d,0x8(%rbp)
	movl %r15d,%ebx
	jmp loop_474
.p2align 0x4
L_386870:
L_34356:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386871:
L_34350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34351
L_34485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_34486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34486
.p2align 0x4
.long 0x92E
L_34486:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_34351:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_386913
L_34353:
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	andl 0x8(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_34369
L_34354:
	movslq %r13d,%r14
	movq %r14,0x78(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_34356
L_34357:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,%r13
	je L_34367
L_34358:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x88(%rbp)
.p2align 0x4,,0x7
L_34359:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_386909
L_34361:
	movq %r14,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x10(%r11),%r14
	cmpq 0x60(%rbp),%r14
	je L_386907
L_34362:
	movq 0x70(%rbp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r14)
	jne L_386904
L_34461:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_120:
	cmpq 0x70(%rbp),%r13
	je L_386899
L_34462:
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r14,%r13,1)
	jne L_386872
L_34469:
	incq %r13
	jmp vectorEqualLoop_120
.p2align 0x4
L_386872:
L_34463:
	cmpq $0x1,%r15
	je L_386873
L_34464:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x88(%rbp)
	jmp L_34359
.p2align 0x4
L_386873:
L_34465:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34367
L_34467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_34468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34468
.p2align 0x4
.long 0x92C
L_34468:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_34367:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_386897
L_34368:
	movq $0xF9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x48(%rbp),%rdx
	movl 0x0(%rdx),%r15d
	incl %r15d
	jo L_34369
L_34370:
	movl %r15d,0x0(%rdx)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2905,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x78(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_34356
L_34372:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13,%r14,8)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_34348
L_34374:
	movl 0x0(%rdx),%r15d
	imull $0x4,%r15d
	jo L_34369
L_34375:
	cmpl %r15d,%r11d
	jnl L_386889
L_34421:
	addl %r11d,%r11d
	jo L_34369
L_34422:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386887
L_34423:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_34424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34424
.p2align 0x4
.long 0x929
L_34424:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_475:
	cmpq 0x48(%rbp),%r15
	jnl L_386874
L_34452:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_475
.p2align 0x4
L_386874:
L_34425:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_386886
L_34427:
	cmpl $0x0,%r13d
	jl L_386885
L_34428:
	movl $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_476:
	movl 0x80(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_386880
L_34437:
	movslq %r15d,%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_34446
L_34438:
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x90(%rbp)
L_34439:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386878
.p2align 0x4,,0x7
L_34440:
	movq 0x90(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x8(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_386877
L_34441:
	movslq %r14d,%r13
	cmpq 0x48(%rbp),%r13
	jnb L_34356
L_34443:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2905,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_386875
L_34444:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_34439
.p2align 0x4
L_386875:
L_34446:
	incl 0x80(%rbp)
	jmp loop_476
.p2align 0x4
L_386877:
L_34369:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386878:
L_34448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_34449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34449
.p2align 0x4
.long 0x92B
L_34449:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_34440
.p2align 0x4
L_386880:
L_34429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34430
L_34435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_34436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34436
.p2align 0x4
.long 0x92A
L_34436:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_34430:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_386883
	cmpq $0x2,%r14
	je L_386882
	cmpq $0x3,%r14
	je L_386881
L_34431:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
L_34378:
	movq 0x28(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0xA07,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xA09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xA,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0xA0B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	movq %r11,0x18(%r10)
	addq $0x28,%r12
	movq $0xA,0x0(%r10)
	movl $0x12,0x8(%r10)
	movl $0x0,0xC(%r10)
	movq $0xA0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq %r10,0x10(%r15)
	movq $0x3E57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_34379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_0
.p2align 0x4
L_386881:
L_34434:
	shrq $0x2,%r15
	movb %r15b,%dl
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
L_34414:
	movb %dl,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_34415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386882:
L_34433:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_34412:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386883:
L_34432:
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
L_34395:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_34396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1205
.p2align 0x4
L_386885:
L_34451:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386886:
L_34348:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386887:
L_34453:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386889:
L_34376:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_386892
	cmpq $0x2,%r14
	je L_386891
	cmpq $0x3,%r14
	je L_386890
L_34377:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_34378
.p2align 0x4
L_386890:
L_34413:
	shrq $0x2,%r15
	movb %r15b,%dl
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_34414
.p2align 0x4
L_386891:
L_34411:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
	jmp L_34412
.p2align 0x4
L_386892:
L_34394:
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_34395
.p2align 0x4
L_386897:
L_34454:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_34455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386899:
L_34470:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34472
L_34477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_34478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34478
.p2align 0x4
.long 0x92D
L_34478:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_34472:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_386902
	cmpq $0x2,%r13
	je L_386901
	cmpq $0x3,%r13
	je L_386900
L_34473:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	jmp L_34378
.p2align 0x4
L_386900:
L_34476:
	movq %r14,0x28(%rbp)
	shrq $0x2,%r15
	movb %r15b,%dl
	jmp L_34414
.p2align 0x4
L_386901:
	xchgq %r14,%r15
	jmp L_34412
.p2align 0x4
L_386902:
L_34474:
	movq %r14,0x28(%rbp)
	jmp L_34395
.p2align 0x4
L_386904:
L_34363:
	cmpq $0x1,%r15
	je L_386905
L_34364:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x88(%rbp)
	jmp L_34359
.p2align 0x4
L_386905:
L_34365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34367
L_34459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_34460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34460
.p2align 0x4
.long 0x92C
L_34460:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_34367
.p2align 0x4
L_386907:
L_34479:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34472
L_34481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_34482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34482
.p2align 0x4
.long 0x92D
L_34482:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_34472
.p2align 0x4
L_386909:
L_34360:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386913:
L_34352:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386916:
L_34344:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x205D,%r14
	je L_386917
L_34490:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xchgq %r13,%r15
	jmp L_34491
.p2align 0x4
L_386917:
L_34345:
	movq 0x38(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	jmp L_34346
.p2align 0x4
L_386918:
L_35321:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386919:
L_35322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35323
.p2align 0x4
.long 0x6FF
L_35323:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_34342
.p2align 0x4
.long 0x92F
L_34496:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_34497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
.long 0x48B
L_34533:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34534
L_34535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_34536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34536
.p2align 0x4
.long 0x938
L_34536:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_34534:
	movq 0xA0(%rbp),%r15
L_34530:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x80,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_34379:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34380
L_34392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34393
.p2align 0x4
.long 0x923
L_34393:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34380:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386922
L_34381:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386922:
L_34388:
	movq (globalObjptr+0xDBC0)(%rip),%r14
	movq 0x40(%rbp),%r13
	xchgq %r13,%r15
error_0:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x7C8)(%rip),%r15
	movq %r15,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4B8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4C0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x927
L_34415:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34416
L_34419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34420
.p2align 0x4
.long 0x928
L_34420:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34416:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_386924
L_34417:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386924:
L_34418:
	movq (globalObjptr+0xBAE8)(%rip),%r14
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp error_0
.p2align 0x4
.long 0x924
L_34396:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34397
L_34409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34410
.p2align 0x4
.long 0x926
L_34410:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34397:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_386926
L_34398:
	movq (globalObjptr+0xCD70)(%rip),%r14
	movq 0x28(%rbp),%r15
	jmp error_0
.p2align 0x4
L_386926:
L_34399:
	movq 0x30(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jnz L_386927
L_34400:
	movq $0x1,0x28(%rbp)
L_34401:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_34402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386927:
L_34408:
	movq $0x3,0x28(%rbp)
	jmp L_34401
.p2align 0x4
.long 0x922
L_34455:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34456
L_34457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_34458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34458
.p2align 0x4
.long 0x505
L_34458:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_34456:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x92F
L_34497:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x64(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0xD0(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_387136
L_34498:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_34499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34499
.p2align 0x4
.long 0x930
L_34499:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0xD8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_477:
	cmpq 0xD0(%rbp),%r15
	jnl L_386930
L_35318:
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_477
.p2align 0x4
L_386930:
L_34500:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34501
L_35316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_35317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35317
.p2align 0x4
.long 0x95E
L_35317:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_34501:
	movq $0x8C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE8(%rbp)
	addq $0x10,%r12
	movl 0x64(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_387134
L_34502:
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r15
L_34503:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0xF0(%rbp)
	cmpq $0x1,%r14
	je L_387133
L_34504:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x23FB,%rax
	cmpq $0x5C,%rax
	ja L_386931
	jmp *jumpTable_50(,%rax,8)
.data
.p2align 0x4
jumpTable_50:
.quad L_387129,L_387124,L_387122,L_387118,L_387114,L_387112,L_387110,L_387108,L_387106,L_387103,L_387101,L_387099,L_387097,L_387095,L_387093,L_387092,L_387090,L_387089,L_387088,L_387087,L_387086,L_387085,L_387083,L_387081,L_387079,L_387077,L_387075,L_387074,L_387072,L_387070,L_387067,L_387065,L_387063,L_387061,L_387059,L_387057,L_387055,L_387053,L_387051,L_387049,L_387048,L_387047,L_387046,L_387044,L_387042,L_387039,L_387037,L_387035,L_387033,L_387030,L_387028,L_387027,L_387026,L_387024,L_387022,L_387019,L_387017,L_387015,L_387011,L_387009,L_387007,L_387003,L_387002,L_387000,L_386999,L_386997,L_386995,L_386993,L_386991,L_386989,L_386987,L_386986,L_386984,L_386982,L_386980,L_386978,L_386977,L_386976,L_386974,L_386969,L_386967,L_386959,L_386957,L_386955,L_386953,L_386951,L_386949,L_386945,L_386943,L_386941,L_386940,L_386936,L_386933
.text
.p2align 0x4
L_386931:
L_34505:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_386932
L_34506:
	movl $0x8,%ecx
L_34507:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386932:
L_34576:
	movl $0x4,%ecx
	jmp L_34507
.p2align 0x4
L_386933:
L_35309:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_386935
	cmpb $0x2,%r13b
	je L_386934
L_35310:
	movl $0x2,%ecx
L_35311:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386934:
L_35313:
	xorl %ecx,%ecx
	jmp L_35311
.p2align 0x4
L_386935:
L_35312:
	movl $0x1,%ecx
	jmp L_35311
.p2align 0x4
L_386936:
L_35304:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_386939
	cmpb $0x2,%r15b
	je L_386938
	cmpb $0x3,%r15b
	je L_386937
L_34983:
	movq (globalObjptr+0xD720)(%rip),%r15
L_34510:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xF8(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_34511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
L_386937:
L_34989:
	movq (globalObjptr+0xD730)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386938:
L_34987:
	movq (globalObjptr+0xD718)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386939:
L_34985:
	movq (globalObjptr+0xD728)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386940:
L_35303:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x838)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386941:
L_35300:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_386942
L_34589:
	movq (globalObjptr+0xCDB0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386942:
L_34587:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386943:
L_35297:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386945:
L_35288:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%dl
	movq (globalObjptr+0x920)(%rip),%r15
	movq (globalObjptr+0x860)(%rip),%r14
	movq %r14,0xF8(%rbp)
.p2align 0x4,,0x7
L_35289:
	movq 0xF8(%rbp),%r14
	cmpb 0x0(%r14),%dl
	je L_386947
L_35290:
	cmpq $0x1,%r15
	je L_386946
L_35291:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0xF8(%rbp)
	jmp L_35289
.p2align 0x4
L_386946:
L_34606:
	movq $0x9,0xC0(%rbp)
L_34527:
	leaq L_34533(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD0,%rbp
	leaq (L_34528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
L_386947:
L_35293:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35294
L_35295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_35296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35296
.p2align 0x4
.long 0x93F
L_35296:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_35294:
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_34510
.p2align 0x4
L_386949:
L_35285:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386951:
L_35282:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_386952
L_35283:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386952:
L_34617:
	movq (globalObjptr+0xDF58)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386953:
L_35279:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386955:
L_35234:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386956
L_35235:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35236:
	movl 0x0(%r15),%r14d
	movl %r14d,0x110(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x120(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x120,%rbp
	leaq (L_35237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386956:
L_35278:
	movq $0x1,%r15
L_35258:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386957:
L_35197:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386958
L_35198:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35199:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386958:
L_35233:
	movq $0x1,%r15
L_35216:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_29+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386959:
L_35188:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_386966
	cmpb $0x2,%r13b
	je L_386965
	cmpb $0x3,%r13b
	je L_386964
	cmpb $0x4,%r13b
	je L_386963
	cmpb $0x5,%r13b
	je L_386962
	cmpb $0x6,%r13b
	je L_386961
	cmpb $0x7,%r13b
	je L_34617
L_35189:
	movq (globalObjptr+0xE598)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386961:
L_35195:
	movq (globalObjptr+0xE5C8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386962:
L_35194:
	movq (globalObjptr+0xE5C0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386963:
L_35193:
	movq (globalObjptr+0xE5B8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386964:
L_35192:
	movq (globalObjptr+0xE5B0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386965:
L_35191:
	movq (globalObjptr+0xE5A8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386966:
L_35190:
	movq (globalObjptr+0xE5A0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_386967:
L_35185:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386969:
L_35152:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386973
L_35153:
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r14,%r15
L_35154:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23EB,%r15
	je L_386972
	cmpq $0x23EC,%r15
	je L_386971
	cmpq $0x23ED,%r15
	je L_386970
L_35155:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_35156:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCDA8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_35157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386970:
L_35183:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35156
.p2align 0x4
L_386971:
L_35182:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35156
.p2align 0x4
L_386972:
L_35181:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35156
.p2align 0x4
L_386973:
L_35184:
	movq $0x1,%r15
L_35167:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386974:
L_35149:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386976:
L_35148:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x830)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386977:
L_35147:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movl $0x3E8,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386978:
L_35144:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386980:
L_35141:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386982:
L_35113:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386983
L_35114:
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r14,%r15
L_35115:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r13
	movq %r13,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xE588)(%rip),%r15
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE590)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_35116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386983:
L_35140:
	movq $0x1,%r15
L_35126:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386984:
L_35110:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386986:
L_35109:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_386987:
L_35106:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386989:
L_35103:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386991:
L_35100:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386993:
L_35063:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386994
L_35064:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35065:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386994:
L_35099:
	movq $0x1,%r15
L_35082:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386995:
L_35060:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386997:
L_35057:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_386999:
L_35037:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq (globalObjptr+0x828)(%rip),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x108(%rbp)
	movl 0x4(%r15),%r13d
	movl %r13d,0x64(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_35038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387000:
L_34991:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movl 0x8(%r13),%r11d
	movl %r11d,0x64(%rbp)
	movl 0xC(%r13),%r11d
	testl %r11d,%r11d
	jnz L_387001
L_34992:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34993:
	movq %r15,0x110(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_34994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387001:
L_35036:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34993
.p2align 0x4
L_387002:
L_34990:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x820)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387003:
L_34981:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_34985
	cmpb $0x2,%r15b
	je L_34987
	cmpb $0x3,%r15b
	je L_34989
	jmp L_34983
.p2align 0x4
L_387007:
L_34978:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_34617
L_34979:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387009:
L_34975:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387011:
L_34970:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387014
	cmpb $0x2,%r13b
	je L_387013
	cmpb $0x3,%r13b
	je L_387012
L_34971:
	movq (globalObjptr+0xCAE8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387012:
L_34974:
	movq (globalObjptr+0xCAE0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387013:
L_34973:
	movq (globalObjptr+0xCAF8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387014:
L_34972:
	movq (globalObjptr+0xCAF0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387015:
L_34967:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_387016
L_34969:
	movq (globalObjptr+0xCAD0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387016:
L_34962:
	movq (globalObjptr+0xCAD8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387017:
L_34964:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387019:
L_34959:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_34962
	cmpb $0x2,%r13b
	je L_387020
L_34960:
	movq (globalObjptr+0xE578)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387020:
L_34963:
	movq (globalObjptr+0xE580)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387022:
L_34956:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387024:
L_34919:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387025
L_34920:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34921:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387025:
L_34955:
	movq $0x1,%r15
L_34938:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387026:
L_34918:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387027:
L_34917:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387028:
L_34914:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387030:
L_34910:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387032
	cmpb $0x2,%r13b
	je L_387031
L_34911:
	movq (globalObjptr+0xD520)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387031:
L_34913:
	movq (globalObjptr+0xD540)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387032:
L_34912:
	movq (globalObjptr+0xD538)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387033:
L_34907:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387035:
L_34894:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_387036
L_34896:
	movl %r14d,0x108(%rbp)
	movq $0x3BED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x10,%r12
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387036:
L_34895:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_34527
.p2align 0x4
L_387037:
L_34891:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_387038
L_34892:
	movq (globalObjptr+0xD660)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387038:
L_34893:
	movq (globalObjptr+0xD668)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387039:
L_34883:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_387041
	cmpq $0x2,%r15
	je L_387040
L_34884:
	movq (globalObjptr+0xE560)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387040:
L_34886:
	movq %r13,0x108(%rbp)
	shrq $0x2,%r10
	movl %r10d,%r15d
	movl %r15d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387041:
L_34885:
	movq (globalObjptr+0xE568)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387042:
L_34880:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387044:
L_34877:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387046:
L_34876:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387047:
L_34875:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387048:
L_34874:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387049:
L_34837:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387050
L_34838:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34839:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387050:
L_34873:
	movq $0x1,%r15
L_34856:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387051:
L_34834:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387053:
L_34831:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387055:
L_34828:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387057:
L_34825:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387059:
L_34822:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387061:
L_34819:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387063:
L_34816:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387065:
L_34813:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387067:
L_34800:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_387069
	cmpb $0x2,%r15b
	je L_387068
L_34801:
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE548)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387068:
L_34812:
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE558)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387069:
L_34811:
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE550)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387070:
L_34797:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387072:
L_34751:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movl 0x8(%r13),%r11d
	movl %r11d,0x64(%rbp)
	movl 0xC(%r13),%r11d
	testl %r11d,%r11d
	jnz L_387073
L_34752:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34753:
	movq %r15,0x110(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_34754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387073:
L_34796:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34753
.p2align 0x4
L_387074:
L_34750:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387075:
L_34747:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387077:
L_34744:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387079:
L_34741:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387081:
L_34738:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387083:
L_34735:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387085:
L_34734:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34510
.p2align 0x4
L_387086:
L_34733:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x818)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387087:
L_34732:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x810)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387088:
L_34731:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387089:
L_34730:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x800)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387090:
L_34727:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387092:
L_34726:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x7F8)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387093:
L_34723:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387095:
L_34716:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r14
	andq $0x1,%r14
	jz L_34617
L_34718:
	movq %r15,0x108(%rbp)
	shrq $0x1,%r11
	movl %r11d,%r15d
	movl %r15d,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387097:
L_34668:
	movq 0x0(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_387098
L_34669:
	movl 0xC(%r13),%r15d
	movl %r15d,0x64(%rbp)
	movl 0x8(%r13),%r15d
	movl %r15d,0x100(%rbp)
	movl 0x4(%r13),%r15d
	movl %r15d,0x104(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x108(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387098:
L_34715:
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387099:
L_34631:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387100
L_34632:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34633:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387100:
L_34667:
	movq $0x1,%r15
L_34650:
	movq %r15,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387101:
L_34628:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387103:
L_34624:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387105
	cmpb $0x2,%r13b
	je L_387104
L_34625:
	movq (globalObjptr+0xE500)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387104:
L_34627:
	movq (globalObjptr+0xE510)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387105:
L_34626:
	movq (globalObjptr+0xE508)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387106:
L_34621:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387108:
L_34618:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387110:
L_34614:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_34617
L_34615:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387112:
L_34611:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387113
L_34612:
	jmp L_34510
.p2align 0x4
L_387113:
L_34613:
	movq (globalObjptr+0xC9B8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387114:
L_34601:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%dl
	movq (globalObjptr+0x9C8)(%rip),%r15
	movq (globalObjptr+0x928)(%rip),%r14
	movq %r14,0xF8(%rbp)
.p2align 0x4,,0x7
L_34602:
	movq 0xF8(%rbp),%r14
	cmpb %dl,0x0(%r14)
	je L_387116
L_34603:
	cmpq $0x1,%r15
	je L_34606
L_34604:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0xF8(%rbp)
	jmp L_34602
.p2align 0x4
L_387116:
L_34607:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34608
L_34609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34610
.p2align 0x4
.long 0x93F
L_34610:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34608:
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_34510
.p2align 0x4
L_387118:
L_34596:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387121
	cmpb $0x2,%r13b
	je L_387120
	cmpb $0x3,%r13b
	je L_387119
L_34597:
	movq (globalObjptr+0xE4E8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387119:
L_34600:
	movq (globalObjptr+0xE4F8)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387120:
L_34599:
	movq (globalObjptr+0xDE28)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387121:
L_34598:
	movq (globalObjptr+0xE4F0)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387122:
L_34593:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34587
	jmp L_34589
.p2align 0x4
L_387124:
L_34586:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_34589
	cmpb $0x3,%r15b
	je L_34589
	cmpb $0x5,%r15b
	je L_34589
	cmpb $0x7,%r15b
	je L_34589
	jmp L_34587
.p2align 0x4
L_387129:
L_34577:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_387132
L_34578:
	movq 0x8(%r15),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_34579:
	incl %ecx
	jo L_387131
L_34581:
	cmpq $0x1,%r15
	je L_387130
L_34582:
	movq 0x8(%r15),%r15
	jmp L_34579
.p2align 0x4
L_387130:
L_34583:
	movq %r14,%r15
L_34584:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387131:
L_34580:
	movq $0x3,0xC0(%rbp)
	jmp L_34527
.p2align 0x4
L_387132:
L_34585:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_34584
.p2align 0x4
L_387133:
L_35314:
	movq (globalObjptr+0xA058)(%rip),%r15
	jmp L_34510
.p2align 0x4
L_387134:
L_34515:
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je loop_3809
L_34516:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
L_34517:
	movq %r15,0xF8(%rbp)
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_34518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
loop_3809:
loop_478:
	leaq L_34539(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xF8,%rbp
	leaq (L_34521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1210
.p2align 0x4
L_387136:
L_35319:
	movq $0x5,0xC0(%rbp)
	jmp L_34527
.p2align 0x4
.long 0x76F
L_34382:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x922
bug_35:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34389
L_34390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_34391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34391
.p2align 0x4
.long 0x505
L_34391:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_34389:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x925
L_34402:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_34403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x931
L_34508:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34509
L_34574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34575
.p2align 0x4
.long 0x93F
L_34575:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34509:
	movq 0xF8(%rbp),%r15
	jmp L_34510
.p2align 0x4
.long 0x48B
L_34539:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_34527
.p2align 0x4
.long 0x932
L_34511:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34512
L_34572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34573
.p2align 0x4
.long 0x93C
L_34573:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34512:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34515
L_34513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	jmp L_34503
.p2align 0x4
.long 0x936
L_34528:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34529
L_34531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_34532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34532
.p2align 0x4
.long 0x937
L_34532:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_34529:
	movq 0xC0(%rbp),%r15
	jmp L_34530
.p2align 0x4
.long 0x95B
L_35237:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r14
	movq %r14,0x118(%rbp)
	movl 0x110(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387142
L_35238:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_35239:
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387142:
L_35277:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_35239
.p2align 0x4
.long 0x931
toString_31:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x940
toString_28:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_29:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_29+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x95A
L_35157:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_35158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x931
toString_27:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x95A
L_35116:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_35117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x931
toString_26:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x940
toString_24:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_25:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x957
L_35038:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_35039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x950
L_34994:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34995
L_35034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35035
.p2align 0x4
.long 0x956
L_35035:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_34995:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE538)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387143
L_34996:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34997:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387143:
L_35033:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34997
.p2align 0x4
.long 0x940
toString_20:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_21:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
L_34897:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x931
L_34887:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34888
L_34889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34890
.p2align 0x4
.long 0x93F
L_34890:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34888:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE570)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x940
toString_17:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_18:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_16:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x950
L_34754:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34755
L_34794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34795
.p2align 0x4
.long 0x956
L_34795:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_34755:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE538)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387146
L_34756:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34757:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387146:
L_34793:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34757
.p2align 0x4
.long 0x931
L_34719:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34720
L_34721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34722
.p2align 0x4
.long 0x93F
L_34722:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34720:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x944
L_34670:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r14
	movq %r14,0x110(%rbp)
	movl 0x108(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387149
L_34671:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34672:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387149:
L_34714:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34672
.p2align 0x4
.long 0x931
toString_14:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
toString_13:
	movq %r15,0x108(%rbp)
	movq $0x1,0x100(%rbp)
	addq $0x100,%rbp
	leaq (rev_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x940
toString_11:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
toString_12:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x933
L_34518:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je loop_478
L_34519:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	jmp L_34517
.p2align 0x4
.long 0x934
L_34521:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq $0x1,%r15
	je L_387150
L_34522:
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_34523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
L_387150:
L_34563:
	leaq L_34533(%rip),%r14
	movq %r14,0x18(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x118(%rbp)
	addq $0xF8,%rbp
	leaq (L_34564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x921
L_34383:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_34384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x6F5
L_34403:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_34404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x95C
L_35240:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35241
L_35275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35276
.p2align 0x4
.long 0x95D
L_35276:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x118,%rbp
	leaq (toString_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x931
rev_31:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387154
L_35259:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387153
.p2align 0x4,,0x7
L_35261:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387152
L_35262:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35260
.p2align 0x4
L_387152:
L_35264:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387153:
L_35265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35266
.p2align 0x4
.long 0x941
L_35266:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35261
.p2align 0x4
L_387154:
L_35267:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35264
.p2align 0x4
.long 0x940
rev_28:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387157
L_35200:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35201:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387156
.p2align 0x4,,0x7
L_35202:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387155
L_35203:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35201
.p2align 0x4
L_387155:
L_35205:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387156:
L_35230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35231
.p2align 0x4
.long 0x943
L_35231:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35202
.p2align 0x4
L_387157:
L_35232:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35205
.p2align 0x4
.long 0x931
rev_29:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387160
L_35217:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35218:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387159
.p2align 0x4,,0x7
L_35219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387158
L_35220:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35218
.p2align 0x4
L_387158:
L_35222:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387159:
L_35223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35224
.p2align 0x4
.long 0x941
L_35224:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35219
.p2align 0x4
L_387160:
L_35225:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35222
.p2align 0x4
.long 0x95A
L_35158:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35159
L_35179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35180
.p2align 0x4
.long 0x941
L_35180:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35159:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_35160:
	movq 0xF8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387161
L_35161:
	movl %r14d,0x64(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xF8(%rbp)
	jmp L_35154
.p2align 0x4
L_387161:
L_35162:
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35163:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387163
.p2align 0x4,,0x7
L_35164:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35167
L_35165:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35163
.p2align 0x4
L_387163:
L_35177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35178
.p2align 0x4
.long 0x941
L_35178:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35164
.p2align 0x4
.long 0x931
rev_27:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387168
L_35168:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35169:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387167
.p2align 0x4,,0x7
L_35170:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387166
L_35171:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35169
.p2align 0x4
L_387166:
L_35173:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387167:
L_35174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35175
.p2align 0x4
.long 0x941
L_35175:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35170
.p2align 0x4
L_387168:
L_35176:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35173
.p2align 0x4
.long 0x95A
L_35117:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35118
L_35138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35139
.p2align 0x4
.long 0x941
L_35139:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35118:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_35119:
	movq 0xF8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387169
L_35120:
	movl %r14d,0x64(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xF8(%rbp)
	jmp L_35115
.p2align 0x4
L_387169:
L_35121:
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387171
.p2align 0x4,,0x7
L_35123:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35126
L_35124:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35122
.p2align 0x4
L_387171:
L_35136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35137
.p2align 0x4
.long 0x941
L_35137:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35123
.p2align 0x4
.long 0x931
rev_26:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387176
L_35127:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35128:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387175
.p2align 0x4,,0x7
L_35129:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387174
L_35130:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35128
.p2align 0x4
L_387174:
L_35132:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387175:
L_35133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35134
.p2align 0x4
.long 0x941
L_35134:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35129
.p2align 0x4
L_387176:
L_35135:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35132
.p2align 0x4
.long 0x940
rev_24:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387179
L_35066:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35067:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387178
.p2align 0x4,,0x7
L_35068:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387177
L_35069:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35067
.p2align 0x4
L_387177:
L_35071:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387178:
L_35096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35097
.p2align 0x4
.long 0x943
L_35097:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35068
.p2align 0x4
L_387179:
L_35098:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35071
.p2align 0x4
.long 0x931
rev_25:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387182
L_35083:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35084:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387181
.p2align 0x4,,0x7
L_35085:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387180
L_35086:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35084
.p2align 0x4
L_387180:
L_35088:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387181:
L_35089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35090
.p2align 0x4
.long 0x941
L_35090:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35085
.p2align 0x4
L_387182:
L_35091:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35088
.p2align 0x4
.long 0x957
L_35039:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35040
L_35055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_35056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35056
.p2align 0x4
.long 0x959
L_35056:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_35040:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_35041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x945
L_34998:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34999
L_35031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35032
.p2align 0x4
.long 0x94F
L_35032:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34999:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r15
	andq $0x1,%r15
	jnz L_387184
L_35000:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387184:
L_35015:
	movq 0x100(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x64(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x940
rev_20:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387188
L_34922:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387187
.p2align 0x4,,0x7
L_34924:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387186
L_34925:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34923
.p2align 0x4
L_387186:
L_34927:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387187:
L_34952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34953
.p2align 0x4
.long 0x943
L_34953:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34924
.p2align 0x4
L_387188:
L_34954:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34927
.p2align 0x4
.long 0x931
rev_21:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387191
L_34939:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34940:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387190
.p2align 0x4,,0x7
L_34941:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387189
L_34942:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34940
.p2align 0x4
L_387189:
L_34944:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387190:
L_34945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34946
.p2align 0x4
.long 0x941
L_34946:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34941
.p2align 0x4
L_387191:
L_34947:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34944
.p2align 0x4
.long 0x931
toString_19:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x940
rev_17:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387194
L_34840:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34841:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387193
.p2align 0x4,,0x7
L_34842:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387192
L_34843:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34841
.p2align 0x4
L_387192:
L_34845:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387193:
L_34870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34871
.p2align 0x4
.long 0x943
L_34871:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34842
.p2align 0x4
L_387194:
L_34872:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34845
.p2align 0x4
.long 0x931
rev_18:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387197
L_34857:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34858:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387196
.p2align 0x4,,0x7
L_34859:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387195
L_34860:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34858
.p2align 0x4
L_387195:
L_34862:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387196:
L_34863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34864
.p2align 0x4
.long 0x941
L_34864:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34859
.p2align 0x4
L_387197:
L_34865:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34862
.p2align 0x4
.long 0x931
rev_16:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387200
L_34802:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34803:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387199
.p2align 0x4,,0x7
L_34804:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387198
L_34805:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34803
.p2align 0x4
L_387198:
L_34807:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387199:
L_34808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34809
.p2align 0x4
.long 0x941
L_34809:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34804
.p2align 0x4
L_387200:
L_34810:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34807
.p2align 0x4
.long 0x945
L_34758:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34759
L_34791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34792
.p2align 0x4
.long 0x94F
L_34792:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34759:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r15
	andq $0x1,%r15
	jnz L_387201
L_34760:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387201:
L_34775:
	movq 0x100(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x64(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x945
L_34673:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34674
L_34712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34713
.p2align 0x4
.long 0x94F
L_34713:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34674:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE518)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x100(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_34675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x931
rev_14:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387206
L_34692:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34693:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387205
.p2align 0x4,,0x7
L_34694:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387204
L_34695:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34693
.p2align 0x4
L_387204:
L_34697:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387205:
L_34698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34699
.p2align 0x4
.long 0x941
L_34699:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34694
.p2align 0x4
L_387206:
L_34700:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34697
.p2align 0x4
.long 0x940
rev_12:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387209
L_34634:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387208
.p2align 0x4,,0x7
L_34636:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387207
L_34637:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34635
.p2align 0x4
L_387207:
L_34639:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387208:
L_34664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34665
.p2align 0x4
.long 0x943
L_34665:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34636
.p2align 0x4
L_387209:
L_34666:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34639
.p2align 0x4
.long 0x931
rev_13:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387212
L_34651:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34652:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387211
.p2align 0x4,,0x7
L_34653:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387210
L_34654:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34652
.p2align 0x4
L_387210:
L_34656:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387211:
L_34657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34658
.p2align 0x4
.long 0x941
L_34658:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34653
.p2align 0x4
L_387212:
L_34659:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34656
.p2align 0x4
.long 0x933
L_34523:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34525
L_34561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34562
.p2align 0x4
.long 0x93C
L_34562:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34525:
	movq 0xD8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz x_66
L_34540:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0xF0(%rbp)
L_34541:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_66
L_34542:
	movq 0x8(%r15),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r15),%r11
	cmpq %r11,(globalObjptr+0xCD40)(%rip)
	je L_34555
L_34543:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	cmpq $0x1,%r14
	jne x_66
L_34545:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_121:
	cmpq %r13,%r14
	je L_387214
L_34546:
	movq (globalObjptr+0xCD40)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_387213
L_34551:
	incq %r13
	jmp vectorEqualLoop_121
.p2align 0x4
L_387213:
L_34547:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_66
L_34549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_34550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34550
.p2align 0x4
.long 0x93A
L_34550:
	addq $0xFFFFFFFFFFFFFF28,%rbp
x_66:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (bug_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387214:
L_34552:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34555
L_34558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_34559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34559
.p2align 0x4
.long 0x93B
L_34559:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_34555:
	movq 0xD8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_66
L_34556:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_66
L_34557:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (loop_479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
.long 0x93D
L_34564:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34565
L_34569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34570
.p2align 0x4
.long 0x93E
L_34570:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34565:
	movq $0x40BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x38(%r15)
	jmp L_34566
.p2align 0x4
.long 0x69C
L_34384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34385
L_34386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34387
.p2align 0x4
.long 0x489
L_34387:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34385:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x848
L_34404:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34405
L_34406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_34407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34407
.p2align 0x4
.long 0x6F8
L_34407:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_34405:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x940
toString_30:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x940
L_35206:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x940
L_35072:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x958
L_35041:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x951
L_35001:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35002
L_35013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35014
.p2align 0x4
.long 0x952
L_35014:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35002:
	movq 0xF8(%rbp),%r15
L_35003:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE018)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x946
L_35016:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_35017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x940
L_34928:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x931
rev_19:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387224
L_34898:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387223
.p2align 0x4,,0x7
L_34900:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387222
L_34901:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34899
.p2align 0x4
L_387222:
L_34903:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387223:
L_34904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34905
.p2align 0x4
.long 0x941
L_34905:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34900
.p2align 0x4
L_387224:
L_34906:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34903
.p2align 0x4
.long 0x940
L_34846:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x951
L_34761:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34762
L_34773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34774
.p2align 0x4
.long 0x952
L_34774:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34762:
	movq 0xF8(%rbp),%r15
L_34763:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE018)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x946
L_34776:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_34777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x946
L_34675:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x940
L_34640:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x935
bug_36:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34526
L_34537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_34538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34538
.p2align 0x4
.long 0x939
L_34538:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_34526:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	jmp L_34527
.p2align 0x4
.long 0x934
loop_479:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp loop_478
.p2align 0x4
.long 0x940
rev_30:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387229
L_35242:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35243:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387228
.p2align 0x4,,0x7
L_35244:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387227
L_35245:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35243
.p2align 0x4
L_387227:
L_35247:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387228:
L_35272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35273
.p2align 0x4
.long 0x943
L_35273:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35244
.p2align 0x4
L_387229:
L_35274:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35247
.p2align 0x4
.long 0x940
L_35207:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35208
L_35228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35229
.p2align 0x4
.long 0x942
L_35229:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35208:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_35209:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387230
L_35210:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35199
.p2align 0x4
L_387230:
L_35211:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35212:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387232
.p2align 0x4,,0x7
L_35213:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35216
L_35214:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35212
.p2align 0x4
L_387232:
L_35226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35227
.p2align 0x4
.long 0x941
L_35227:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35213
.p2align 0x4
.long 0x940
L_35073:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35074
L_35094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35095
.p2align 0x4
.long 0x942
L_35095:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35074:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_35075:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387235
L_35076:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35065
.p2align 0x4
L_387235:
L_35077:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35078:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387237
.p2align 0x4,,0x7
L_35079:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35082
L_35080:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35078
.p2align 0x4
L_387237:
L_35092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35093
.p2align 0x4
.long 0x941
L_35093:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35079
.p2align 0x4
.long 0x958
L_35042:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35043
L_35053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35054
.p2align 0x4
.long 0x956
L_35054:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35043:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE530)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x931
toString_22:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x953
L_35017:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x940
L_34929:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34930
L_34950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34951
.p2align 0x4
.long 0x942
L_34951:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34930:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_34931:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387241
L_34932:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34921
.p2align 0x4
L_387241:
L_34933:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34934:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387243
.p2align 0x4,,0x7
L_34935:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34938
L_34936:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34934
.p2align 0x4
L_387243:
L_34948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34949
.p2align 0x4
.long 0x941
L_34949:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34935
.p2align 0x4
.long 0x940
L_34847:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34848
L_34868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34869
.p2align 0x4
.long 0x942
L_34869:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34848:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_34849:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387246
L_34850:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34839
.p2align 0x4
L_387246:
L_34851:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387248
.p2align 0x4,,0x7
L_34853:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34856
L_34854:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34852
.p2align 0x4
L_387248:
L_34866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34867
.p2align 0x4
.long 0x941
L_34867:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34853
.p2align 0x4
.long 0x931
toString_15:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x953
L_34777:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x946
L_34676:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34677
L_34710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34711
.p2align 0x4
.long 0x94E
L_34711:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34677:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE520)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_34678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x940
L_34641:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34642
L_34662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34663
.p2align 0x4
.long 0x942
L_34663:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34642:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_34643:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387252
L_34644:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34633
.p2align 0x4
L_387252:
L_34645:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34646:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387254
.p2align 0x4,,0x7
L_34647:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34650
L_34648:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34646
.p2align 0x4
L_387254:
L_34660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34661
.p2align 0x4
.long 0x941
L_34661:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34647
.p2align 0x4
.long 0x940
L_35248:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x931
toString_23:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
rev_22:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387259
L_35004:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35005:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387258
.p2align 0x4,,0x7
L_35006:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387257
L_35007:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35005
.p2align 0x4
L_387257:
L_35009:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387258:
L_35010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35011
.p2align 0x4
.long 0x941
L_35011:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35006
.p2align 0x4
L_387259:
L_35012:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35009
.p2align 0x4
.long 0x953
L_35018:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35019
L_35029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35030
.p2align 0x4
.long 0x955
L_35030:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35019:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35020:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34580
L_35021:
	cmpq $0x1,%r14
	je L_387260
L_35022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35020
.p2align 0x4
L_387260:
L_35023:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35024
L_35027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35028
.p2align 0x4
.long 0x954
L_35028:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35024:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387261
L_35025:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_35003
.p2align 0x4
L_387261:
L_35026:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_35003
.p2align 0x4
.long 0x931
rev_15:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387267
L_34764:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34765:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387266
.p2align 0x4,,0x7
L_34766:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387265
L_34767:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34765
.p2align 0x4
L_387265:
L_34769:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387266:
L_34770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34771
.p2align 0x4
.long 0x941
L_34771:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34766
.p2align 0x4
L_387267:
L_34772:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34769
.p2align 0x4
.long 0x953
L_34778:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34779
L_34789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34790
.p2align 0x4
.long 0x955
L_34790:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34779:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34780:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34580
L_34781:
	cmpq $0x1,%r14
	je L_387268
L_34782:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34780
.p2align 0x4
L_387268:
L_34783:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34784
L_34787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34788
.p2align 0x4
.long 0x954
L_34788:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34784:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387269
L_34785:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_34763
.p2align 0x4
L_387269:
L_34786:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_34763
.p2align 0x4
.long 0x947
L_34678:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_34679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x940
L_35249:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35250
L_35270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35271
.p2align 0x4
.long 0x942
L_35271:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35250:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34580
L_35251:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387273
L_35252:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35236
.p2align 0x4
L_387273:
L_35253:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35254:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387275
.p2align 0x4,,0x7
L_35255:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35258
L_35256:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35254
.p2align 0x4
L_387275:
L_35268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35269
.p2align 0x4
.long 0x941
L_35269:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35255
.p2align 0x4
.long 0x931
rev_23:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387280
L_35044:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35045:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387279
.p2align 0x4,,0x7
L_35046:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387278
L_35047:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35045
.p2align 0x4
L_387278:
L_35049:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387279:
L_35050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35051
.p2align 0x4
.long 0x941
L_35051:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35046
.p2align 0x4
L_387280:
L_35052:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35049
.p2align 0x4
.long 0x947
L_34679:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34680
L_34708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34709
.p2align 0x4
.long 0x94D
L_34709:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_34680:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x104(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_34681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x948
L_34681:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_34682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x948
L_34682:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34683
L_34706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_34707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34707
.p2align 0x4
.long 0x94C
L_34707:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_34683:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE530)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x949
L_34684:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34685
L_34704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34705
.p2align 0x4
.long 0x94B
L_34705:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34685:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34686:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34580
L_34687:
	cmpq $0x1,%r14
	je L_387283
L_34688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34686
.p2align 0x4
L_387283:
L_34689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34690
L_34702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_34703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34703
.p2align 0x4
.long 0x94A
L_34703:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_34690:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387284
L_34691:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp toString_13
.p2align 0x4
L_387284:
L_34701:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp toString_13
