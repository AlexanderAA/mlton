/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:21 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl foreachi_1
.hidden foreachi_1
foreachi_1:
L_63960:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_63961
L_64274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64275
.p2align 0x4
.long 0x460
L_64275:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_63961:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_399818
L_63962:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399818:
L_63963:
	cmpl $0x0,0x10(%rbp)
	jl L_399946
L_63964:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_751:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399945
.p2align 0x4,,0x7
L_63965:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_399944
L_63967:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_399943
	cmpq $0x2,%r15
	je L_399942
L_63968:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19E1,%rax
	cmpq $0x17,%rax
	ja L_399819
	jmp *jumpTable_146(,%rax,8)
.data
.p2align 0x4
jumpTable_146:
.quad L_399941,L_399928,L_399915,L_399914,L_399913,L_399912,L_399899,L_399898,L_399897,L_399896,L_399895,L_399893,L_399891,L_399890,L_399877,L_399864,L_399863,L_399862,L_399861,L_399860,L_399859,L_399846,L_399845,L_399832
.text
.p2align 0x4
L_399819:
L_63969:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_399831
L_63971:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399830
L_63972:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_63974:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399829
L_63990:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_399828
L_63991:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_399825
L_63975:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_399824
L_63977:
	cmpq $0x1,%r15
	je L_399820
L_63978:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_63974
.p2align 0x4
L_399820:
L_63979:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399823
.p2align 0x4,,0x7
L_63980:
	movl 0x30(%rbp),%ecx
L_63981:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_399822
L_63983:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63985
L_63987:
	movl %ecx,0x0(%r15)
L_63985:
	movq $0x1949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_63986:
	incl 0x14(%rbp)
	jmp loop_751
.p2align 0x4
L_399822:
L_63982:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399823:
L_63988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_63989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_63989
.p2align 0x4
.long 0xC57
L_63989:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_63980
.p2align 0x4
L_399824:
L_63976:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399825:
L_63993:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_63994:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_63997:
	movl %ecx,0x0(%r15)
L_63996:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399828:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_63975
.p2align 0x4
L_399829:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_63975
.p2align 0x4
L_399830:
L_63998:
	xorl %ecx,%ecx
	jmp L_63981
.p2align 0x4
L_399831:
L_63970:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399832:
L_64244:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64245:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399843
L_64246:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64248:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399842
L_64261:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_399841
L_64262:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_399838
L_64249:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_63976
L_64250:
	cmpq $0x1,%r15
	je L_399833
L_64251:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_64248
.p2align 0x4
L_399833:
L_64252:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399836
.p2align 0x4,,0x7
L_64253:
	movl 0x30(%rbp),%ecx
L_64254:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64255:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64257
L_64258:
	movl %ecx,0x0(%r15)
L_64257:
	movq $0x1949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_63986
.p2align 0x4
L_399836:
L_64259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64260
.p2align 0x4
.long 0xC57
L_64260:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_64253
.p2align 0x4
L_399838:
L_64264:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64265:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_64267:
	movl %ecx,0x0(%r15)
	jmp L_63996
.p2align 0x4
L_399841:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64249
.p2align 0x4
L_399842:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64249
.p2align 0x4
L_399843:
L_64268:
	xorl %ecx,%ecx
	jmp L_64254
.p2align 0x4
L_399845:
L_64242:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_399846:
L_64207:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x18(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x135F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq %r11,0x8(%r9)
	movq 0x10(%r10),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64208:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399857
L_64209:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64211:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399856
L_64234:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD51,%r11
	jne L_399855
L_64235:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_399852
L_64212:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_63976
L_64213:
	cmpq $0x1,%r15
	je L_399847
L_64214:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_64211
.p2align 0x4
L_399847:
L_64215:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64216
L_64232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_64233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64233
.p2align 0x4
.long 0xC56
L_64233:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_64216:
	movl 0x50(%rbp),%ecx
L_64217:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64218:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64220
L_64231:
	movl %ecx,0x0(%r15)
L_64220:
	movq $0x1AA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_64221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_399852:
L_64237:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64238:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_64240:
	movl %ecx,0x0(%r15)
	jmp L_63996
.p2align 0x4
L_399855:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64212
.p2align 0x4
L_399856:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64212
.p2align 0x4
L_399857:
L_64241:
	xorl %ecx,%ecx
	jmp L_64217
.p2align 0x4
L_399859:
L_64206:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1345
.p2align 0x4
L_399860:
L_64198:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_64199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_399861:
L_64179:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_399862:
L_64177:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r11
	movq 0x20(%r15),%r10
	movq 0x18(%r15),%r9
	movq 0x10(%r15),%r8
	movq 0x8(%r15),%rsp
	movq 0x0(%r15),%rsi
	movq $0x8FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	movq %rsp,0x28(%r15)
	movq %rsi,0x30(%r15)
	movq %r15,0x28(%rbp)
	addq $0x40,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_399863:
L_64176:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x8FB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r13,0x20(%r9)
	movq %r9,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x30,%r12
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1353
.p2align 0x4
L_399864:
L_64150:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64151:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399875
L_64152:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64154:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399874
L_64167:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_399873
L_64168:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_399870
L_64155:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_63976
L_64156:
	cmpq $0x1,%r15
	je L_399865
L_64157:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64154
.p2align 0x4
L_399865:
L_64158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399868
.p2align 0x4,,0x7
L_64159:
	movl 0x28(%rbp),%ecx
L_64160:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64161:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64163
L_64164:
	movl %ecx,0x0(%r15)
L_64163:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399868:
L_64165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64166
.p2align 0x4
.long 0x5E1
L_64166:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_64159
.p2align 0x4
L_399870:
L_64170:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64171:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_399871
L_64174:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_64173:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399871:
L_64172:
	movq %r11,%r15
	jmp L_64173
.p2align 0x4
L_399873:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64155
.p2align 0x4
L_399874:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64155
.p2align 0x4
L_399875:
L_64175:
	xorl %ecx,%ecx
	jmp L_64160
.p2align 0x4
L_399877:
L_64124:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64125:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399888
L_64126:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64128:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399887
L_64141:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_399886
L_64142:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_399883
L_64129:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_63976
L_64130:
	cmpq $0x1,%r15
	je L_399878
L_64131:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_64128
.p2align 0x4
L_399878:
L_64132:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399881
.p2align 0x4,,0x7
L_64133:
	movl 0x28(%rbp),%ecx
L_64134:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64135:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64137
L_64138:
	movl %ecx,0x0(%r15)
L_64137:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399881:
L_64139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64140
.p2align 0x4
.long 0x5E1
L_64140:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_64133
.p2align 0x4
L_399883:
L_64144:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64145:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_399884
L_64148:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_64147:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399884:
L_64146:
	movq %r11,%r15
	jmp L_64147
.p2align 0x4
L_399886:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_64129
.p2align 0x4
L_399887:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_64129
.p2align 0x4
L_399888:
L_64149:
	xorl %ecx,%ecx
	jmp L_64134
.p2align 0x4
L_399890:
L_64123:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_399891:
L_64121:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_63976
L_64122:
	movl %r15d,0x0(%r14)
	jmp L_63986
.p2align 0x4
L_399893:
L_64119:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_63976
L_64120:
	movl %r15d,0x0(%r14)
	jmp L_63986
.p2align 0x4
L_399895:
L_64118:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq $0xB75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%r12
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_399896:
L_64117:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
L_399897:
L_64116:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0xD85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%r12
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
L_399898:
L_64115:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x8FB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r13,0x20(%r9)
	movq %r9,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x30,%r12
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1353
.p2align 0x4
L_399899:
L_64090:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movl 0x14(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64091:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399910
L_64092:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64094:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399909
L_64107:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD41,%r11
	jne L_399908
L_64108:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_399905
L_64095:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_63976
L_64096:
	cmpq $0x1,%r15
	je L_399900
L_64097:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64094
.p2align 0x4
L_399900:
L_64098:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399903
.p2align 0x4,,0x7
L_64099:
	movl 0x38(%rbp),%ecx
L_64100:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64101:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64103
L_64104:
	movl %ecx,0x0(%r15)
L_64103:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1A83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_63986
.p2align 0x4
L_399903:
L_64105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_64106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64106
.p2align 0x4
.long 0xC5C
L_64106:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_64099
.p2align 0x4
L_399905:
L_64110:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64111:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_64113:
	movl %ecx,0x0(%r15)
	jmp L_63996
.p2align 0x4
L_399908:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64095
.p2align 0x4
L_399909:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64095
.p2align 0x4
L_399910:
L_64114:
	xorl %ecx,%ecx
	jmp L_64100
.p2align 0x4
L_399912:
L_64071:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_399913:
L_64063:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_64064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_399914:
L_64062:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1345
.p2align 0x4
L_399915:
L_64026:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x135F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq %r11,0x8(%r9)
	movq 0x10(%r10),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64027:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399926
L_64028:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64030:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399925
L_64054:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD51,%r11
	jne L_399924
L_64055:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_399921
L_64031:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_63976
L_64032:
	cmpq $0x1,%r15
	je L_399916
L_64033:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64030
.p2align 0x4
L_399916:
L_64034:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64035
L_64052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_64053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64053
.p2align 0x4
.long 0xC56
L_64053:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_64035:
	movl 0x50(%rbp),%ecx
L_64036:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64037:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64039
L_64051:
	movl %ecx,0x0(%r15)
L_64039:
	movq $0x1AA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_64040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_399921:
L_64057:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64058:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_64060:
	movl %ecx,0x0(%r15)
	jmp L_63996
.p2align 0x4
L_399924:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64031
.p2align 0x4
L_399925:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64031
.p2align 0x4
L_399926:
L_64061:
	xorl %ecx,%ecx
	jmp L_64036
.p2align 0x4
L_399928:
L_64001:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq $0x6F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x8(%r15),%r9
	movq $0x10B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x271B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x20(%rbp)
	movq %r13,0x0(%r8)
	movq %r9,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r15,0x18(%r8)
	addq $0x28,%r12
	movq 0x10(%r10),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_63970
L_64002:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_399939
L_64003:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64005:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_399938
L_64018:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD54,%r11
	jne L_399937
L_64019:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_399934
L_64006:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_63976
L_64007:
	cmpq $0x1,%r15
	je L_399929
L_64008:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_64005
.p2align 0x4
L_399929:
L_64009:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399932
.p2align 0x4,,0x7
L_64010:
	movl 0x30(%rbp),%ecx
L_64011:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64012:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64014
L_64015:
	movl %ecx,0x0(%r15)
L_64014:
	movq $0x1AA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_63986
.p2align 0x4
L_399932:
L_64016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64017
.p2align 0x4
.long 0xC57
L_64017:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_64010
.p2align 0x4
L_399934:
L_64021:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_63982
L_64022:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_63996
L_64024:
	movl %ecx,0x0(%r15)
	jmp L_63996
.p2align 0x4
L_399937:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64006
.p2align 0x4
L_399938:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_64006
.p2align 0x4
L_399939:
L_64025:
	xorl %ecx,%ecx
	jmp L_64011
.p2align 0x4
L_399941:
L_63999:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_399942:
L_64270:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_63986
.p2align 0x4
L_399943:
L_64269:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_63986
.p2align 0x4
L_399944:
L_63966:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399945:
L_64271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64272
.p2align 0x4
.long 0x45E
L_64272:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_63965
.p2align 0x4
L_399946:
L_64273:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x524
L_64243:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_63986
.p2align 0x4
.long 0x561
L_64221:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64222
L_64229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64230
.p2align 0x4
.long 0x563
L_64230:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64222:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_399949
L_64223:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_399948
L_64224:
L_64225:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_64226:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399948:
L_64227:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_64226
.p2align 0x4
L_399949:
L_64228:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_1
.p2align 0x4
.long 0x524
L_64048:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_63986
.p2align 0x4
.long 0x557
L_64199:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x0(%r15)
	je L_63986
L_64200:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (deObject_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x527
L_64180:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x524
L_64178:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
.long 0x527
L_64072:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
L_64064:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x0(%r15)
	je L_63986
L_64065:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (deObject_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x561
L_64040:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64041
L_64049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64050
.p2align 0x4
.long 0x563
L_64050:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64041:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_399954
L_64042:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_399953
L_64043:
L_64044:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_64045:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_63986
.p2align 0x4
L_399953:
L_64046:
	movq $0x41BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_64045
.p2align 0x4
L_399954:
L_64047:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_1
.p2align 0x4
.long 0x524
L_64000:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_63986
.p2align 0x4
.long 0x56D
deObject_4:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_64201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x527
L_64181:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_64182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x527
L_64073:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_64074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56D
deObject_3:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_64066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x56D
L_64201:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_63986
L_64202:
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x2,%r13
	je L_399956
L_64203:
	jmp L_63986
.p2align 0x4
L_399956:
L_64204:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_63986
.p2align 0x4
.long 0x541
L_64182:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_64183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0x541
L_64074:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_64075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
.long 0x56D
L_64066:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_63986
L_64067:
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x2,%r13
	je L_399958
L_64068:
	jmp L_63986
.p2align 0x4
L_399958:
L_64069:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_63986
.p2align 0x4
.long 0x542
L_64183:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_64184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0x542
L_64075:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_64076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0xC5A
L_64184:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64185
L_64196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_64197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64197
.p2align 0x4
.long 0xC5B
L_64197:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_64185:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64186:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_63976
L_64187:
	cmpq $0x1,%r14
	je L_399960
L_64188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64186
.p2align 0x4
L_399960:
L_64189:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64190
L_64194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64195
.p2align 0x4
.long 0x57A
L_64195:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_64190:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_399961
L_64191:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_155:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_64192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_399961:
L_64193:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_155
.p2align 0x4
.long 0xC5A
L_64076:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64077
L_64088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_64089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64089
.p2align 0x4
.long 0xC5B
L_64089:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_64077:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64078:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_63976
L_64079:
	cmpq $0x1,%r14
	je L_399965
L_64080:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64078
.p2align 0x4
L_399965:
L_64081:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64082
L_64086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64087
.p2align 0x4
.long 0x57A
L_64087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_64082:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_399966
L_64083:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_154:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_64084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_399966:
L_64085:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_154
.p2align 0x4
.long 0x56D
L_64192:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x56D
L_64084:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl visitType_1
.hidden visitType_1
visitType_1:
loopS_6:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64276
L_64332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64333
.p2align 0x4
.long 0x460
L_64333:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64276:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_752:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399992
.p2align 0x4,,0x7
L_64277:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_399991
L_64279:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_399990
L_64280:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_64282:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_64283
L_64322:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD50,%r13
	jne L_64283
L_64323:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_399985
L_64283:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_399984
L_64285:
	cmpq $0x1,%r15
	je L_399970
L_64286:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_64282
.p2align 0x4
L_399970:
L_64287:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_399983
.p2align 0x4,,0x7
L_64288:
	movl 0x40(%rbp),%ecx
L_64289:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_399982
L_64291:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64293
L_64319:
	movl %ecx,0x0(%r15)
L_64293:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1361,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x8(%r13)
	movq $0x1AA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r13,%r15
L_64294:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_399980
L_64295:
	movl $0x1,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
L_64296:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_64297
L_64298:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	je L_399978
	cmpq $0xF25,%r15
	je L_399972
	cmpq $0xF26,%r15
	je L_399971
L_64297:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399971:
L_64314:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_64315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_399972:
L_64300:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_399973
L_64301:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399973:
L_64302:
	cmpl $0x0,0x28(%rbp)
	jl L_399977
L_64303:
	movl $0x0,0x2C(%rbp)
loop_753:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_399976
L_64304:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_399975
	cmpq $0x2,%r15
	je L_399974
L_64305:
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_64306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_399974:
L_64310:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399975:
L_64309:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399976:
L_64311:
	movslq 0x2C(%rbp),%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_64312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_1
.p2align 0x4
L_399977:
L_64313:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399978:
L_64299:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_752
.p2align 0x4
L_399980:
L_64318:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399982:
L_64290:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399983:
L_64320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_64321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64321
.p2align 0x4
.long 0x67E
L_64321:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_64288
.p2align 0x4
L_399984:
L_64284:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399985:
L_64325:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64290
L_64326:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_399986
L_64328:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_64294
.p2align 0x4
L_399986:
L_64327:
	movq %r13,%r15
	jmp L_64294
.p2align 0x4
L_399990:
L_64329:
	xorl %ecx,%ecx
	jmp L_64289
.p2align 0x4
L_399991:
L_64278:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399992:
L_64330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64331
.p2align 0x4
.long 0x4E9
L_64331:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64277
.p2align 0x4
.long 0x1
L_64315:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_399994
L_64316:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_399994:
L_64317:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_64306:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_399995
L_64307:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x2,0x8(%rbp)
	jmp loop_3816
.p2align 0x4
L_399995:
L_64308:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE15
L_64312:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_753
.text
.p2align 0x4
.globl get_37
.hidden get_37
get_37:
L_64334:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64335
L_64392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64393
.p2align 0x4
.long 0x460
L_64393:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64335:
	movq 0x8(%rbp),%r10
	movq 0x10(%r10),%r11
	movq 0x8(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_400006
L_64337:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_400005
L_64338:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64340:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_400004
L_64384:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD4F,%r10
	jne L_400003
L_64385:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_400000
L_64341:
	incl %ecx
	jo L_399999
L_64343:
	cmpq $0x1,%r14
	je L_399996
L_64344:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_64340
.p2align 0x4
L_399996:
L_64345:
L_64346:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_399998
L_64348:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_156
L_64383:
	movl %ecx,0x0(%r15)
x_156:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_399997
L_64381:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_64382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_399997:
L_64350:
	movq %r14,%r15
L_64351:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_399998:
L_64347:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_399999:
L_64342:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400000:
L_64387:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64347
L_64388:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_400001
L_64390:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400001:
L_64389:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400003:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_64341
.p2align 0x4
L_400004:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_64341
.p2align 0x4
L_400005:
L_64391:
	xorl %ecx,%ecx
	jmp L_64346
.p2align 0x4
L_400006:
L_64336:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_64382:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_64351
.p2align 0x4
.long 0x1
L_64352:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_64353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_64353:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF68)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_64354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_64354:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_64355:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64356
L_64379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_64380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64380
.p2align 0x4
.long 0x4AF
L_64380:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_64356:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_64357:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_64342
L_64358:
	cmpq $0x1,%r14
	je L_400008
L_64359:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64357
.p2align 0x4
L_400008:
L_64360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64361
L_64377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64378
.p2align 0x4
.long 0x4E7
L_64378:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_64361:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400009
L_64362:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_76:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_400009:
L_64376:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_76
.p2align 0x4
.long 0x1
rev_76:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400015
L_64363:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_64364:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400014
.p2align 0x4,,0x7
L_64365:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400013
L_64366:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_64364
.p2align 0x4
L_400013:
L_64368:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400014:
L_64373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64374
.p2align 0x4
.long 0x45C
L_64374:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64365
.p2align 0x4
L_400015:
L_64375:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_64368
.p2align 0x4
.long 0x1
L_64369:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64370
L_64371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64372
.p2align 0x4
.long 0x452
L_64372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64370:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1345
.hidden x_1345
x_1345:
L_64394:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64395
L_64562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64563
.p2align 0x4
.long 0x647
L_64563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64395:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_64396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4A9
L_64396:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_64397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_64397:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_64398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BB
L_64398:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_64399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x913
L_64399:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_64400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
.long 0x768
L_64400:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64401
L_64560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_64561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64561
.p2align 0x4
.long 0x7AD
L_64561:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_64401:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (x_157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0xE16
x_157:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r14
	je L_400019
L_64402:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xEF78)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_64403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400019:
L_64555:
	movq (globalObjptr+0xEFB8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_64556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE17
L_64403:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64404
L_64553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_64554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64554
.p2align 0x4
.long 0xE3B
L_64554:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_64404:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_400020
L_64407:
	movl %r13d,0x98(%rbp)
	movq $0x3C6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_64408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_400020:
L_64406:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE3C
L_64556:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64557
L_64558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_64559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64559
.p2align 0x4
.long 0xE3D
L_64559:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_64557:
	movq 0x38(%rbp),%r15
L_64484:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFA8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_64485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE18
L_64408:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_64409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x9F7
L_64485:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64486
L_64497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_64498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64498
.p2align 0x4
.long 0x515
L_64498:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_64486:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64487:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_400026
L_64488:
	cmpq $0x1,%r14
	je L_400023
L_64489:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64487
.p2align 0x4
L_400023:
L_64490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64491
L_64495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_64496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64496
.p2align 0x4
.long 0x99F
L_64496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_64491:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400024
L_64492:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_158:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_400024:
L_64494:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_158
.p2align 0x4
L_400026:
L_64426:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE18
L_64409:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64410
L_64551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_64552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64552
.p2align 0x4
.long 0xE3B
L_64552:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_64410:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_64411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x69C
L_64493:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xE19
L_64411:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_64412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE19
L_64412:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64413
L_64549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_64550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64550
.p2align 0x4
.long 0xE3A
L_64550:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_64413:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400029
L_64414:
	movl 0x0(%r14),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xEF88)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_64415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400029:
L_64544:
	movq (globalObjptr+0xEFB0)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_64545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE1A
L_64415:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq (globalObjptr+0xE668)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_64416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE38
L_64545:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64546
L_64547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_64548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64548
.p2align 0x4
.long 0xE39
L_64548:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_64546:
	movq 0x38(%rbp),%r15
L_64475:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFA0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_64476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE1B
L_64416:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64417
L_64542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_64543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64543
.p2align 0x4
.long 0xE37
L_64543:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_64417:
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_64406
L_64419:
	movl %r13d,0xE0(%rbp)
	movq $0x3823,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_64420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0xE27
L_64476:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64477
L_64502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_64503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64503
.p2align 0x4
.long 0xE28
L_64503:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_64477:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64478:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_64426
L_64479:
	cmpq $0x1,%r14
	je L_400034
L_64480:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64478
.p2align 0x4
L_400034:
L_64481:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64482
L_64500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_64501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64501
.p2align 0x4
.long 0x773
L_64501:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_64482:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_400035
L_64483:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_64484
.p2align 0x4
L_400035:
L_64499:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_64484
.p2align 0x4
.long 0xE1C
L_64420:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_64421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0xE1D
L_64421:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_64422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE1E
L_64422:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_64423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE1F
L_64423:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64424
L_64540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_64541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64541
.p2align 0x4
.long 0xE36
L_64541:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_64424:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64425:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_64426
L_64427:
	cmpq $0x1,%r14
	je L_400039
L_64428:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64425
.p2align 0x4
L_400039:
L_64429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64430
L_64538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_64539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64539
.p2align 0x4
.long 0xE35
L_64539:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_64430:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400043
L_64431:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
L_64432:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_400042
	cmpq $0x2,%r15
	je L_400041
L_64433:
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_400040
L_64533:
	movq %r11,0xD0(%rbp)
	movq %r13,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_64534+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_400040:
L_64434:
L_64435:
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_64436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400041:
L_64536:
	movq (globalObjptr+0xE688)(%rip),%r14
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_64436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400042:
L_64535:
	movq (globalObjptr+0xCE20)(%rip),%r14
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_64436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400043:
L_64537:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_64432
.p2align 0x4
.long 0xE34
L_64534:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_64435
.p2align 0x4
.long 0xE20
L_64436:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64437
L_64531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_64532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64532
.p2align 0x4
.long 0xE33
L_64532:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_64437:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400048
	cmpq $0x2,%r14
	je L_400047
L_64438:
	movl 0x0(%r14),%r15d
	movl %r15d,0x3C(%rbp)
	movq (globalObjptr+0xE690)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_64439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400047:
L_64530:
	movq (globalObjptr+0xE670)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_64526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400048:
L_64525:
	movq (globalObjptr+0xE698)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_64526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE21
L_64439:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl 0x3C(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_64440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xE31
L_64526:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64527
L_64528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_64529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64529
.p2align 0x4
.long 0xE32
L_64529:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_64527:
	movq 0xA0(%rbp),%r15
L_64451:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE678)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_64452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE22
L_64440:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_64441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE23
L_64452:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64453
L_64516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_64517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64517
.p2align 0x4
.long 0xE2E
L_64517:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_64453:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64454:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_64426
L_64455:
	cmpq $0x1,%r14
	je L_400051
L_64456:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64454
.p2align 0x4
L_400051:
L_64457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64458
L_64514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_64515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64515
.p2align 0x4
.long 0xE2D
L_64515:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_64458:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400052
L_64459:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
L_64460:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEF90)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_64461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_400052:
L_64513:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_64460
.p2align 0x4
.long 0xE22
L_64441:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64442
L_64523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_64524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64524
.p2align 0x4
.long 0xE30
L_64524:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_64442:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEE0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_64443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE24
L_64461:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_64462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE22
L_64443:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64444
L_64521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_64522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64522
.p2align 0x4
.long 0xE30
L_64522:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_64444:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64445:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_64426
L_64446:
	cmpq $0x1,%r14
	je L_400057
L_64447:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64445
.p2align 0x4
L_400057:
L_64448:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64449
L_64519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_64520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64520
.p2align 0x4
.long 0xE2F
L_64520:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_64449:
	movl 0x3C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_400058
L_64450:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_64451
.p2align 0x4
L_400058:
L_64518:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_64451
.p2align 0x4
.long 0xE24
L_64462:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64463
L_64511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_64512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64512
.p2align 0x4
.long 0xE2C
L_64512:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_64463:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF98)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x38(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_64464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xE25
L_64464:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_64465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE25
L_64465:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64466
L_64509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_64510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64510
.p2align 0x4
.long 0xE2B
L_64510:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_64466:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEE0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_64467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE26
L_64467:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64468
L_64507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_64508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64508
.p2align 0x4
.long 0xE2A
L_64508:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_64468:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_64469:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_64426
L_64470:
	cmpq $0x1,%r14
	je L_400064
L_64471:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64469
.p2align 0x4
L_400064:
L_64472:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64473
L_64505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_64506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64506
.p2align 0x4
.long 0xE29
L_64506:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_64473:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_400065
L_64474:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_64475
.p2align 0x4
L_400065:
L_64504:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_64475
.text
.p2align 0x4
.globl x_1349
.hidden x_1349
x_1349:
L_64564:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64565
L_64618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64619
.p2align 0x4
.long 0x460
L_64619:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64565:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_400078
L_64567:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_400077
L_64568:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64570:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_400076
L_64610:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD44,%r10
	jne L_400075
L_64611:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_400072
L_64571:
	incl %ecx
	jo L_400071
L_64573:
	cmpq $0x1,%r15
	je L_400069
L_64574:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_64570
.p2align 0x4
L_400069:
L_64575:
L_64576:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400070
L_64578:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_159
L_64609:
	movl %ecx,0x0(%r15)
x_159:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_400070:
L_64577:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400071:
L_64572:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400072:
L_64613:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64577
L_64614:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_400073
L_64616:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400073:
L_64615:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400075:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_64571
.p2align 0x4
L_400076:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_64571
.p2align 0x4
L_400077:
L_64617:
	xorl %ecx,%ecx
	jmp L_64576
.p2align 0x4
L_400078:
L_64566:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_64580:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_64581:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_64582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_64582:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xECE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_64583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_64583:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_64584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_64584:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64585
L_64607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_64608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64608
.p2align 0x4
.long 0x4AF
L_64608:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_64585:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_64586:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_64572
L_64587:
	cmpq $0x1,%r14
	je L_400080
L_64588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_64586
.p2align 0x4
L_400080:
L_64589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64590
L_64605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64606
.p2align 0x4
.long 0x4E7
L_64606:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_64590:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400081
L_64591:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_77:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_77+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_400081:
L_64604:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_77
.p2align 0x4
.long 0x1
rev_77:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400087
L_64592:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_64593:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400086
.p2align 0x4,,0x7
L_64594:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400085
L_64595:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_64593
.p2align 0x4
L_400085:
L_64597:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400086:
L_64601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64602
.p2align 0x4
.long 0x45C
L_64602:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64594
.p2align 0x4
L_400087:
L_64603:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_64597
.p2align 0x4
.long 0x1
bug_131:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64598
L_64599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64600
.p2align 0x4
.long 0x452
L_64600:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64598:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1353
.hidden x_1353
x_1353:
L_64620:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_64651
L_64621:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400101
L_64622:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400100
L_64624:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400099
L_64625:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_64627:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400098
L_64642:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD40,%r11
	jne L_400097
L_64643:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400094
L_64628:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_400093
L_64630:
	cmpq $0x1,%r15
	je L_400089
L_64631:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64627
.p2align 0x4
L_400089:
L_64632:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64633
L_64640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_64641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64641
.p2align 0x4
.long 0xB2B
L_64641:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_64633:
	movl 0x8(%rbp),%ecx
L_64634:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400091
L_64636:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64638
L_64639:
	movl %ecx,0x0(%r15)
L_64638:
	movq $0x1373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400091:
L_64635:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400093:
L_64629:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400094:
L_64645:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64635
L_64646:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400095
L_64649:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_64648:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400095:
L_64647:
	movq %r11,%r15
	jmp L_64648
.p2align 0x4
L_400097:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64628
.p2align 0x4
L_400098:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64628
.p2align 0x4
L_400099:
L_64650:
	xorl %ecx,%ecx
	jmp L_64634
.p2align 0x4
L_400100:
L_64623:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400101:
L_64651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64652
.p2align 0x4
.long 0x45C
L_64652:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64622
.text
.p2align 0x4
.globl bindVar_1
.hidden bindVar_1
bindVar_1:
L_64653:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64654
L_64735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64736
.p2align 0x4
.long 0x460
L_64736:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64654:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
.long 0x4A8
L_64655:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64656
L_64733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64734
.p2align 0x4
.long 0x721
L_64734:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64656:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_64657
L_64658:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400128
L_64659:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_64661:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400127
L_64722:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_400126
L_64723:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_400122
L_64662:
	movl 0x20(%rbp),%r11d
	incl %r11d
	movl %r11d,0x24(%rbp)
	jo L_64663
L_64664:
	cmpq $0x1,%r15
	je L_400104
L_64665:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x20(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_64661
.p2align 0x4
L_400104:
L_64666:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64667
L_64720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_64721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64721
.p2align 0x4
.long 0x70B
L_64721:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_64667:
	movl 0x24(%rbp),%ecx
L_64668:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64669
L_64670:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64672
L_64719:
	movl %ecx,0x0(%r15)
L_64672:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_64673:
	movq 0x0(%r15),%r14
	cmpq $0x2,%r14
	je L_400105
L_64674:
L_64675:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_64676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_400105:
L_64693:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400117
L_64694:
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_400116
L_64695:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_64697:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400115
L_64710:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_400114
L_64711:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_400111
L_64698:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_400110
L_64699:
	cmpq $0x1,%r15
	je L_400106
L_64700:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_64697
.p2align 0x4
L_400106:
L_64701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64702
L_64708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_64709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64709
.p2align 0x4
.long 0x847
L_64709:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_64702:
	movl 0x20(%rbp),%ecx
L_64703:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400108
L_64704:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64706
L_64707:
	movl %ecx,0x0(%r15)
L_64706:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400108:
L_64669:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400110:
L_64663:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400111:
L_64713:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64669
L_64714:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400112
L_64717:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_64716:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400112:
L_64715:
	movq %r11,%r15
	jmp L_64716
.p2align 0x4
L_400114:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_64698
.p2align 0x4
L_400115:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_64698
.p2align 0x4
L_400116:
L_64718:
	xorl %ecx,%ecx
	jmp L_64703
.p2align 0x4
L_400117:
L_64657:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400122:
L_64725:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64726
L_64730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_64731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64731
.p2align 0x4
.long 0xE3E
L_64731:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_64726:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_64669
L_64727:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_400123
L_64728:
	movq 0x48(%rbp),%r15
	jmp L_64673
.p2align 0x4
L_400123:
L_64729:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_64673
.p2align 0x4
L_400126:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_64662
.p2align 0x4
L_400127:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_64662
.p2align 0x4
L_400128:
L_64732:
	xorl %ecx,%ecx
	jmp L_64668
.p2align 0x4
.long 0x1
L_64676:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_78+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_78:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_78+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_78:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400133
L_64677:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_64678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400132
.p2align 0x4,,0x7
L_64679:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400131
L_64680:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_64678
.p2align 0x4
L_400131:
L_64682:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400132:
L_64690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64691
.p2align 0x4
.long 0x45C
L_64691:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64679
.p2align 0x4
L_400133:
L_64692:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_64682
.p2align 0x4
.long 0x1
L_64683:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64684
L_64688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64689
.p2align 0x4
.long 0x452
L_64689:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64684:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_132:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64685
L_64686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64687
.p2align 0x4
.long 0x452
L_64687:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64685:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_44
.hidden get_44
get_44:
L_64737:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64738
L_64875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64876
.p2align 0x4
.long 0x460
L_64876:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64738:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_64739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x656
L_64739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movb 0x40(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64740
L_64873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_64874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64874
.p2align 0x4
.long 0x635
L_64874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_64740:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_400137
L_64741:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400137:
L_64742:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_64745
	cmpq $0x2,%r15
	je L_64745
	cmpq $0x3,%r15
	je L_64745
	cmpq $0x5,%r15
	je L_64745
L_64743:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	je L_400175
	cmpq $0xF25,%r15
	je L_400154
	cmpq $0xF26,%r15
	je L_400138
L_64745:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400138:
L_64818:
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x48(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400153
L_64819:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400152
L_64820:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x58(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_64822:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400151
L_64858:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD39,%r11
	jne L_400150
L_64859:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400146
L_64823:
	movl 0x58(%rbp),%r11d
	incl %r11d
	movl %r11d,0x5C(%rbp)
	jo L_400145
L_64824:
	cmpq $0x1,%r15
	je L_400139
L_64825:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x58(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64822
.p2align 0x4
L_400139:
L_64826:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64827
L_64856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_64857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64857
.p2align 0x4
.long 0x779
L_64857:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_64827:
	movl 0x5C(%rbp),%ecx
L_64828:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400143
L_64829:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64831
L_64855:
	movl %ecx,0x0(%r15)
L_64831:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_64832:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_64745
L_64833:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_400140
L_64852:
	movq %r11,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_64853+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_400140:
L_64834:
L_64835:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400143:
L_64765:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400145:
L_64759:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400146:
L_64861:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64862
L_64866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_64867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64867
.p2align 0x4
.long 0x923
L_64867:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_64862:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_64765
L_64863:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_400147
L_64864:
	movq 0x60(%rbp),%r15
	jmp L_64832
.p2align 0x4
L_400147:
L_64865:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp L_64832
.p2align 0x4
L_400150:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64823
.p2align 0x4
L_400151:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64823
.p2align 0x4
L_400152:
L_64868:
	xorl %ecx,%ecx
	jmp L_64828
.p2align 0x4
L_400153:
L_64753:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400154:
L_64751:
	movq 0x8(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	cmpq $0x1,%r11
	je L_64791
	cmpq $0x2,%r11
	je L_64791
L_64752:
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_64753
L_64754:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400171
L_64755:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x18(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_64757:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400170
L_64805:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA0,%r11
	jne L_400169
L_64806:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400165
L_64758:
	movl 0x18(%rbp),%r11d
	incl %r11d
	movl %r11d,0x1C(%rbp)
	jo L_64759
L_64760:
	cmpq $0x1,%r15
	je L_400155
L_64761:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_64757
.p2align 0x4
L_400155:
L_64762:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64763
L_64803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_64804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64804
.p2align 0x4
.long 0xE40
L_64804:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_64763:
	movl 0x1C(%rbp),%ecx
L_64764:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_64765
L_64766:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_64768
L_64802:
	movl %ecx,0x0(%r15)
L_64768:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_160:
	cmpb $0x1,0x0(%r15)
	je L_400157
L_64769:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_400156
L_64788:
	movq %r11,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_64789+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_400156:
L_64770:
L_64771:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_79+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_400157:
L_64791:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_400158
L_64792:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400158:
L_64793:
	cmpl $0x0,0x10(%rbp)
	jl L_400160
L_64794:
	movl $0x0,0x14(%rbp)
loop_754:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_64745
L_64796:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_64797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
L_400160:
L_64801:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400165:
L_64808:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64809
L_64813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_64814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64814
.p2align 0x4
.long 0xE41
L_64814:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_64809:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_64765
L_64810:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_400166
L_64811:
	movq 0x50(%rbp),%r15
	jmp x_160
.p2align 0x4
L_400166:
L_64812:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp x_160
.p2align 0x4
L_400169:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64758
.p2align 0x4
L_400170:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_64758
.p2align 0x4
L_400171:
L_64815:
	xorl %ecx,%ecx
	jmp L_64764
.p2align 0x4
L_400175:
L_64746:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_64747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
.long 0x90E
L_64853:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_64835
.p2align 0x4
.long 0x1
toString_80:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x490
L_64789:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_64771
.p2align 0x4
.long 0x1
toString_79:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_79+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x7BF
L_64797:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64798
L_64799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64800
.p2align 0x4
.long 0xE3F
L_64800:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64798:
	incl 0x14(%rbp)
	jmp loop_754
.p2align 0x4
.long 0x5F2
L_64747:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64745
L_64749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64750
.p2align 0x4
.long 0x489
L_64750:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_64745
.p2align 0x4
.long 0x1
rev_80:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400185
L_64836:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_64837:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400184
.p2align 0x4,,0x7
L_64838:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400183
L_64839:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_64837
.p2align 0x4
L_400183:
L_64841:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400184:
L_64849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64850
.p2align 0x4
.long 0x45C
L_64850:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64838
.p2align 0x4
L_400185:
L_64851:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_64841
.p2align 0x4
.long 0x1
rev_79:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400188
L_64772:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_64773:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400187
.p2align 0x4,,0x7
L_64774:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400186
L_64775:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_64773
.p2align 0x4
L_400186:
L_64777:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_64778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400187:
L_64785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_64786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64786
.p2align 0x4
.long 0x45C
L_64786:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_64774
.p2align 0x4
L_400188:
L_64787:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_64777
.p2align 0x4
.long 0x1
L_64842:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64843
L_64847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64848
.p2align 0x4
.long 0x452
L_64848:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64843:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_64778:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64779
L_64783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64784
.p2align 0x4
.long 0x452
L_64784:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64779:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_134:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64844
L_64845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64846
.p2align 0x4
.long 0x452
L_64846:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64844:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_133:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64780
L_64781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64782
.p2align 0x4
.long 0x452
L_64782:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64780:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_45
.hidden get_45
get_45:
L_64877:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64878
L_64911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64912
.p2align 0x4
.long 0x460
L_64912:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64878:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_64879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x73A
L_64879:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64880
L_64909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64910
.p2align 0x4
.long 0x5F7
L_64910:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64880:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_400194
L_64881:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400194:
L_64882:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_64885
	cmpq $0x2,%r15
	je L_64885
	cmpq $0x3,%r15
	je L_64885
	cmpq $0x5,%r15
	je L_64885
L_64883:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	je L_400200
	cmpq $0xF25,%r15
	je L_400196
L_64885:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_400195
L_64887:
	movl %r14d,0x0(%r15)
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400195:
L_64886:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400196:
L_64893:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_400197
L_64894:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400197:
L_64895:
	cmpl $0x0,0x30(%rbp)
	jl L_400199
L_64896:
	movl $0x0,0x34(%rbp)
loop_755:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_64885
L_64898:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_64899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_400199:
L_64903:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400200:
L_64888:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_64889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
.long 0xD42
L_64899:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64900
L_64901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64902
.p2align 0x4
.long 0xBC1
L_64902:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_64900:
	incl 0x34(%rbp)
	jmp loop_755
.p2align 0x4
.long 0x71E
L_64889:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64885
L_64891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_64892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64892
.p2align 0x4
.long 0x51D
L_64892:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_64885
.text
.p2align 0x4
.globl dontFlatten_2
.hidden dontFlatten_2
dontFlatten_2:
L_64913:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64914
L_64920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64921
.p2align 0x4
.long 0x452
L_64921:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64914:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400208
L_64915:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400208:
L_64916:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_64917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x4B0
L_64917:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movb 0x0(%r15),%r14b
	testb %r14b,%r14b
	jnz L_400210
L_64918:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400210:
L_64919:
	movq 0x8(%rbp),%r15
	movb $0x0,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp loop_3823
.text
.p2align 0x4
.globl value_1
.hidden value_1
value_1:
L_64922:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_64923
L_64959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_64960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64960
.p2align 0x4
.long 0x452
L_64960:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_64923:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_64924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x4B0
L_64924:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_400220
L_64926:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400212
L_64958:
	movq 0x38(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400212:
L_64927:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r15,%r11
	je L_400213
L_64928:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400213:
L_64929:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_400219
L_64930:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400218
L_64931:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_64932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64932
.p2align 0x4
.long 0x4E0
L_64932:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_64933:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_756:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400217
.p2align 0x4,,0x7
L_64934:
	movq 0x30(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_400216
L_64947:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_400214
L_64953:
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_64951:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	movl 0x38(%rbp),%r10d
	movl %r10d,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq %r15,0x8(%r11,%r13,1)
	incq %r14
	movq %r14,0x30(%rbp)
	jmp loop_756
.p2align 0x4
L_400214:
L_64948:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_400215
L_64952:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_64951
.p2align 0x4
L_400215:
L_64949:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_64950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
L_400216:
L_64935:
	movq 0x28(%rbp),%r15
	movq $0xB65,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_64936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFields_0
.p2align 0x4
L_400217:
L_64954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_64955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64955
.p2align 0x4
.long 0xD40
L_64955:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_64934
.p2align 0x4
L_400218:
L_64956:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400219:
L_64957:
	movq (globalObjptr+0x1668)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_64933
.p2align 0x4
L_400220:
L_64925:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE42
L_64950:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_64951
.p2align 0x4
.long 0x5B0
L_64936:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64937
L_64945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_64946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64946
.p2align 0x4
.long 0x80B
L_64946:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_64937:
	movq $0x286F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_64938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x8A7
L_64938:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64939
L_64943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_64944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64944
.p2align 0x4
.long 0x9E4
L_64944:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_64939:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_400222
L_64941:
	movl 0x0(%r14),%r13d
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_64942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3824
.p2align 0x4
L_400222:
L_64940:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98E
L_64942:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl objectFields_0
.hidden objectFields_0
objectFields_0:
L_64961:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65006
L_64962:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400240
L_64963:
	cmpq $0x1,0x0(%rbp)
	je L_64972
L_64965:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_64967
L_64968:
	cmpl $0x0,%r13d
	jl L_400237
L_64969:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_757:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_400225
L_64998:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movl 0x0(%r13,%r15,1),%r14d
	testl %r14d,%r14d
	jz L_400224
.p2align 0x4,,0x7
L_65001:
	incl 0x14(%rbp)
	jmp loop_757
.p2align 0x4
L_400224:
L_64999:
	movq %r11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_65000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
L_400225:
L_64970:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64972
L_64996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64997
.p2align 0x4
.long 0x460
L_64997:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64972:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_400235
L_64974:
	testl %ecx,%ecx
	jz L_64984
L_64975:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_758:
	cmpl %ebx,%ecx
	je L_400230
L_64976:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_400229
L_64978:
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_400227
L_64979:
	incl %ebx
	jo L_400226
L_64981:
	jmp loop_758
.p2align 0x4
L_400226:
L_64980:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400227:
L_64982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64984
L_64986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64987
.p2align 0x4
.long 0x460
L_64987:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64984:
	xorb %dl,%dl
L_64985:
	movq $0xDCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq $0xD2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq $0x100D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x18(%rbp)
	movq $0xD31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0xD2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xDC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400229:
L_64977:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400230:
L_64988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_64989
L_64993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_64994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_64994
.p2align 0x4
.long 0x460
L_64994:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_64989:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_64984
	cmpq $0x2,%r15
	je L_400231
L_64990:
	xorb %dl,%dl
	jmp L_64985
.p2align 0x4
L_400231:
L_64992:
	movb $0x1,%dl
	jmp L_64985
.p2align 0x4
L_400235:
L_64967:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400237:
L_65003:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400240:
L_65006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65007
.p2align 0x4
.long 0x460
L_65007:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_64963
.p2align 0x4
.long 0x524
L_65000:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_65001
.text
.p2align 0x4
.globl loop_3824
.hidden loop_3824
loop_3824:
loopS_7:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65043
L_65008:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400249
L_65009:
	movq 0x0(%rbp),%r10
	cmpq $0x1,%r10
	je L_400248
L_65010:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1439,%r15
	je L_400245
	cmpq $0x143A,%r15
	je L_400244
L_65011:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
L_65012:
	movq $0x100B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1902,%r14
	je L_400243
	cmpq $0x1903,%r14
	je L_400242
L_65013:
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1399
.p2align 0x4
L_400242:
L_65015:
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1399
.p2align 0x4
L_400243:
L_65014:
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1399
.p2align 0x4
L_400244:
L_65041:
	movq 0x8(%r10),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r10),%r15
L_65025:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_65026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3824
.p2align 0x4
L_400245:
L_65016:
	movq 0x8(%r10),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r10),%r15
L_65017:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1902,%r13
	je L_400247
	cmpq $0x1903,%r13
	je L_400246
L_65018:
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_65019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_400246:
L_65040:
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_65019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_400247:
L_65039:
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_65019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_400248:
L_65033:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400249:
L_65043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65044
.p2align 0x4
.long 0x460
L_65044:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65009
.p2align 0x4
.long 0x4E6
L_65026:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65027
L_65034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65035
.p2align 0x4
.long 0x4E9
L_65035:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_65027:
	movq 0x10(%rbp),%r10
	cmpq $0x1,%r10
	je L_65033
L_65028:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1439,%r15
	je L_400252
	cmpq $0x143A,%r15
	je L_400251
L_65029:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
	jmp L_65012
.p2align 0x4
L_400251:
L_65031:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x10(%rbp)
	jmp L_65025
.p2align 0x4
L_400252:
L_65030:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x10(%rbp)
	jmp L_65017
.p2align 0x4
.long 0x4E6
L_65019:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65020
L_65037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65038
.p2align 0x4
.long 0x4E9
L_65038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_65020:
	movq 0x10(%rbp),%r10
	cmpq $0x1,%r10
	je L_65033
L_65021:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1439,%r15
	je L_400256
	cmpq $0x143A,%r15
	je L_400255
L_65022:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
	jmp L_65012
.p2align 0x4
L_400255:
L_65024:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x10(%rbp)
	jmp L_65025
.p2align 0x4
L_400256:
L_65023:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r10,0x10(%rbp)
	jmp L_65017
.text
.p2align 0x4
.globl x_1399
.hidden x_1399
x_1399:
L_65045:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65046
L_65071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_65072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65072
.p2align 0x4
.long 0x4AF
L_65072:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_65046:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_65047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xE43
L_65047:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_400268
L_65049:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_759:
	cmpl %ebx,%ecx
	je L_400263
L_65050:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_400262
L_65052:
	salq $0x4,%r14
	movq 0x68(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_400261
L_65053:
	incl %ebx
	jo L_400260
L_65055:
	jmp loop_759
.p2align 0x4
L_400260:
L_65054:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400261:
L_65057:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unify_5
.p2align 0x4
L_400262:
L_65051:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400263:
L_65058:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65059
L_65069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_65070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65070
.p2align 0x4
.long 0xE44
L_65070:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_65059:
	cmpq $0x1,0x58(%rbp)
	je L_65057
L_65060:
L_65061:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_400264
L_65062:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unify_5
.p2align 0x4
L_400264:
L_65063:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_400265
L_65064:
L_65065:
	movq $0x1E87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
L_65066:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp coerceProd_0
.p2align 0x4
L_400265:
L_65067:
	movq $0x1E85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_65066
.p2align 0x4
L_400268:
L_65048:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unify_5
.hidden unify_5
unify_5:
L_65073:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65074
L_65188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65189
.p2align 0x4
.long 0x460
L_65189:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65074:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF40,%r15
	je L_400275
	cmpq $0xF41,%r15
	je L_400274
L_65075:
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
L_65076:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3F,%r13
	jne L_65077
L_65078:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF40,%r15
	je L_400271
	cmpq $0xF41,%r15
	je L_400269
L_65079:
	movq 0x0(%r14),%r14
	movq %r13,%r15
	jmp L_65076
.p2align 0x4
L_400269:
L_65183:
	movq %r13,%r15
L_65184:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF41,%r14
	jne L_400270
L_65185:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400270:
L_65077:
	movq (globalObjptr+0x2298)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400271:
L_65080:
	movq %r14,0x0(%rbp)
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
L_65081:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	jne L_65077
L_65082:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_65083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400274:
L_65187:
	movq 0x0(%rbp),%r15
	jmp L_65184
.p2align 0x4
L_400275:
L_65186:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_65081
.p2align 0x4
.long 0x51F
L_65083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x65C
L_65084:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	je L_400277
L_65085:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_65086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400277:
L_65182:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_65086:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_400278
L_65088:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400278:
L_65087:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65C
L_65089:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_65087
L_65090:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_65091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x4DE
L_65091:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_65092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x655
L_65092:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65093
L_65180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65181
.p2align 0x4
.long 0x4DF
L_65181:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_65093:
	movq 0x28(%rbp),%r15
	movq 0x8(%rbp),%r14
	cmpq %r14,%r15
	je L_65100
L_65094:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1452,%r11
	jne L_65095
L_65096:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_65095
L_65097:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_400300
L_65098:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r11d,%r10d
	jne L_400298
L_65169:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_400297
L_65170:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_400296
L_65172:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_400295
L_65173:
	movq 0x8(%r14),%r13
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400291
L_65175:
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x30(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_65124:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400290
L_65131:
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x98(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_65133
L_65134:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_400288
L_65136:
	cmpl %r11d,%ecx
	jne L_65138
L_65139:
	cmpl $0x0,%r11d
	jl L_400286
L_65140:
	xorl %ecx,%ecx
loop_760:
	cmpl 0x98(%rbp),%ecx
	jnl L_400280
L_65163:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xB0(%rbp)
	salq $0x4,%r15
	movq 0x90(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_65164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_400280:
L_65141:
	movq 0x58(%rbp),%rsp
	movb 0x0(%rsp),%dil
	movq 0x8(%rbp),%rsi
	movb 0x0(%rsi),%spl
	testb %spl,%spl
	jnz L_400282
L_65142:
	testb %dil,%dil
	jnz L_400281
L_65143:
	movq 0x18(%rbp),%r8
	movq 0x28(%rbp),%r9
	movq 0x30(%rbp),%r10
	movq 0x38(%rbp),%r11
	movq 0x40(%rbp),%r13
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r15
	movl $0x0,0x8(%rbp)
L_65144:
	movq $0x286F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x18(%rbp)
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	addq $0x48,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400281:
L_65152:
	movl $0x1,0x8(%rbp)
	movq 0x58(%rbp),%rsp
	movq 0x60(%rbp),%r8
	movq 0x68(%rbp),%r9
	movq 0x70(%rbp),%r10
	movq 0x78(%rbp),%r11
	movq 0x80(%rbp),%r13
	movq 0x88(%rbp),%r14
	movq 0x90(%rbp),%r15
	xchgq %rsp,%rsi
	jmp L_65144
.p2align 0x4
L_400282:
L_65153:
	testb %dil,%dil
	jnz L_400283
L_65154:
	movq 0x18(%rbp),%r8
	movq 0x28(%rbp),%r9
	movq 0x30(%rbp),%r10
	movq 0x38(%rbp),%r11
	movq 0x40(%rbp),%r13
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r15
	movl $0x1,0x8(%rbp)
	jmp L_65144
.p2align 0x4
L_400283:
L_65155:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_400285
L_65156:
L_65157:
	cmpq $0x1,%r13
	je L_400284
L_65158:
L_65159:
	movq $0x1E89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
L_65160:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%rsi
	movq 0x18(%rbp),%r8
	movq 0x28(%rbp),%r9
	movq 0x30(%rbp),%r10
	movq 0x38(%rbp),%r11
	movq 0x40(%rbp),%r13
	movq 0x50(%rbp),%r15
	movl $0x0,0x8(%rbp)
	jmp L_65144
.p2align 0x4
L_400284:
	movq %r14,%r15
	jmp L_65160
.p2align 0x4
L_400285:
L_65162:
	movq %r13,%r15
	jmp L_65160
.p2align 0x4
L_400286:
L_65138:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400288:
L_65133:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400290:
L_65125:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x286F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_65126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400291:
L_65174:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_65102:
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	jne L_400294
L_65103:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r14
	je L_400293
L_65104:
L_65105:
	cmpq $0x1,%r10
	je L_65108
L_65106:
L_65107:
	movq $0x2875,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_65108:
	movq $0x100F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x286D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_65109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400293:
L_65116:
	movq %r10,%r14
	jmp L_65108
.p2align 0x4
L_400294:
L_65117:
	movq 0x38(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq %rsp,0x18(%rbp)
	movq 0x0(%r13),%rsi
	movq %rsi,0x28(%rbp)
	movq $0x286F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r8,0x10(%r13)
	movq %r9,0x18(%r13)
	movq %r10,0x20(%r13)
	movq %r11,0x28(%r13)
	movq %r14,0x30(%r13)
	addq $0x48,%r12
	movq %rsi,0x0(%r13)
	movq %rsp,0x8(%r13)
	movq %r15,0x38(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_65118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400295:
L_65111:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400296:
L_65171:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400297:
L_65095:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400298:
L_65100:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400299
L_65123:
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x30(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_65124
.p2align 0x4
L_400299:
L_65101:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_65102
.p2align 0x4
L_400300:
L_65176:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400301
L_65178:
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x30(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_65124
.p2align 0x4
L_400301:
L_65177:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_65102
.p2align 0x4
.long 0xE47
L_65164:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65165
L_65166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_65167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65167
.p2align 0x4
.long 0xE48
L_65167:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_65165:
	movl 0x20(%rbp),%ecx
	jmp loop_760
.p2align 0x4
.long 0x491
L_65145:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65146
L_65150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_65151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65151
.p2align 0x4
.long 0x4B2
L_65151:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_65146:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_65111
L_65147:
	movl 0x0(%r14),%r13d
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_400307
L_65148:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400307:
L_65149:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp dontFlatten_2
.p2align 0x4
.long 0xE45
L_65126:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65127
L_65129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_65130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65130
.p2align 0x4
.long 0xE46
L_65130:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_65127:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_65111
L_65128:
	movl 0x0(%r14),%r13d
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq $0x3207,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	jmp loop_3824
.p2align 0x4
.long 0x522
L_65109:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65110
L_65113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65114
.p2align 0x4
.long 0x4E9
L_65114:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_65110:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_65111
L_65112:
	movl 0x0(%r14),%r13d
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F6
L_65118:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65119
L_65121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_65122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65122
.p2align 0x4
.long 0x4F1
L_65122:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_65119:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_65111
L_65120:
	movl 0x0(%r14),%r13d
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq $0x3203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	jmp loop_3824
.text
.p2align 0x4
.globl coerceProd_0
.hidden coerceProd_0
coerceProd_0:
L_65190:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65191
L_65205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65206
.p2align 0x4
.long 0x45C
L_65206:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_65191:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_65193
L_65194:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_400319
L_65196:
	cmpl %r13d,%ecx
	jne L_65198
L_65199:
	cmpl $0x0,%r13d
	jl L_400317
L_65200:
	xorl %ecx,%ecx
loop_761:
	cmpl 0x18(%rbp),%ecx
	jnl L_400316
L_65202:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x1C(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_65203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_1
.p2align 0x4
L_400316:
L_65201:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400317:
L_65198:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400319:
L_65193:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9F
L_65203:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x1C(%rbp),%ecx
	jmp loop_761
.text
.p2align 0x4
.globl coerce_1
.hidden coerce_1
coerce_1:
L_65207:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65208
L_65235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65236
.p2align 0x4
.long 0x45C
L_65236:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_65208:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400325
	cmpq $0xF41,%r14
	je L_400323
L_65209:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3F,%r14
	jne L_400322
L_65211:
	jmp unify_5
.p2align 0x4
L_400322:
L_65210:
	movq (globalObjptr+0x22A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400323:
L_65233:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF41,%r14
	jne L_65210
L_65234:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400325:
L_65212:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	jne L_65210
L_65213:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_65214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x51F
L_65214:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x65C
L_65215:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65216
L_65231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_65232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65232
.p2align 0x4
.long 0x63D
L_65232:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_65216:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	je L_400328
L_65217:
	movq $0x100B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x28,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
L_400328:
L_65230:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65C
L_65218:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65219
L_65228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_65229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65229
.p2align 0x4
.long 0x63D
L_65229:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_65219:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_400332
L_65221:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_400330
L_65227:
	movq 0x38(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp x_1399
.p2align 0x4
L_400330:
L_65222:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_400331
L_65223:
L_65224:
	movq $0x2873,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
L_65225:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400331:
L_65226:
	movq $0x2871,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_65225
.p2align 0x4
L_400332:
L_65220:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1355
.hidden x_1355
x_1355:
L_65237:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65245
L_65238:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400335
L_65239:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_400334
L_65244:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
weak_1:
	movq $0x1E7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400334:
L_65240:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (weak_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
L_400335:
L_65245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_65246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65246
.p2align 0x4
.long 0x452
L_65246:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_65239
.p2align 0x4
.long 0x1
weak_0:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65241
L_65242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_65243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65243
.p2align 0x4
.long 0x452
L_65243:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_65241:
	movq 0x0(%rbp),%r15
	jmp weak_1
.text
.p2align 0x4
.globl loop_3823
.hidden loop_3823
loop_3823:
loopS_8:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65247
L_65269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65270
.p2align 0x4
.long 0x460
L_65270:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65247:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400340
L_65248:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF43,%r15
	je L_400339
	cmpq $0xF44,%r15
	je L_400338
L_65249:
	movq 0x0(%r14),%r15
L_65250:
	movq %r15,0x0(%rbp)
	jmp unify_5
.p2align 0x4
L_400338:
L_65267:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_65258:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_65259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3823
.p2align 0x4
L_400339:
L_65251:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_65252:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_65253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_400340:
L_65265:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_65259:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_65265
L_65260:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF43,%r15
	je L_400343
	cmpq $0xF44,%r15
	je L_400342
L_65261:
	movq 0x0(%r14),%r15
	jmp L_65250
.p2align 0x4
L_400342:
L_65263:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_65258
.p2align 0x4
L_400343:
L_65262:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_65252
.p2align 0x4
.long 0x4E6
L_65253:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_65265
L_65254:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF43,%r15
	je L_400346
	cmpq $0xF44,%r15
	je L_400345
L_65255:
	movq 0x0(%r14),%r15
	jmp L_65250
.p2align 0x4
L_400345:
L_65257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_65258
.p2align 0x4
L_400346:
L_65256:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_65252
.text
.p2align 0x4
.globl extract_1
.hidden extract_1
extract_1:
L_65271:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65326
L_65272:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400348
L_65273:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x33CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_65274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_400348:
L_65326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65327
.p2align 0x4
.long 0x460
L_65327:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65273
.p2align 0x4
.long 0x4DD
L_65274:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x8(%rbp)
	cmpq %r14,%r11
	je L_400350
L_65275:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400350:
L_65276:
	movq 0x8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_400367
L_65277:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400366
L_65278:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1555,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_65279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65279
.p2align 0x4
.long 0x799
L_65279:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
L_65280:
	movq $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400365
.p2align 0x4,,0x7
L_65281:
	movq 0x28(%rbp),%r13
	cmpq 0x8(%rbp),%r13
	jnl L_400363
L_65293:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400362
L_65295:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_400361
L_65296:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_65298:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_65299
L_65314:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD41,%r13
	jne L_65299
L_65315:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_400356
L_65299:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_400355
L_65301:
	cmpq $0x1,%r15
	je L_400351
L_65302:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_65298
.p2align 0x4
L_400351:
L_65303:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400354
.p2align 0x4,,0x7
L_65304:
	movl 0x40(%rbp),%ecx
L_65305:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400353
L_65307:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65309
L_65311:
	movl %ecx,0x0(%r15)
L_65309:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1A83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r14,%r15
L_65310:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x28(%rbp)
	jmp loop_762
.p2align 0x4
L_400353:
L_65306:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400354:
L_65312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65313
.p2align 0x4
.long 0xE49
L_65313:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_65304
.p2align 0x4
L_400355:
L_65300:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400356:
L_65317:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_65306
L_65318:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400357
L_65320:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_65310
.p2align 0x4
L_400357:
L_65319:
	movq %r13,%r15
	jmp L_65310
.p2align 0x4
L_400361:
L_65321:
	xorl %ecx,%ecx
	jmp L_65305
.p2align 0x4
L_400362:
L_65294:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400363:
L_65282:
	movq 0x20(%rbp),%r15
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400364
L_65283:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_65284:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_65285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_400364:
L_65289:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400365:
L_65322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65323
.p2align 0x4
.long 0x5DF
L_65323:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_65281
.p2align 0x4
L_400366:
L_65324:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400367:
L_65325:
	movq (globalObjptr+0x2220)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_65280
.p2align 0x4
.long 0x4A8
L_65285:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65286
L_65290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65291
.p2align 0x4
.long 0x4B1
L_65291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_65286:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_65289
L_65287:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_65284
.text
.p2align 0x4
.globl x_1348
.hidden x_1348
x_1348:
L_65328:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65359
L_65329:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400382
L_65330:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400381
L_65332:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400380
L_65333:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_65335:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400379
L_65351:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD40,%r11
	jne L_400378
L_65352:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_400375
L_65336:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_400374
L_65338:
	cmpq $0x1,%r15
	je L_400370
L_65339:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_65335
.p2align 0x4
L_400370:
L_65340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65341
L_65349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_65350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65350
.p2align 0x4
.long 0x799
L_65350:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_65341:
	movl 0x8(%rbp),%ecx
L_65342:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400372
L_65344:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65346
L_65348:
	movl %ecx,0x0(%r15)
L_65346:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x8FB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq $0x1,0x10(%r11)
	movq $0x1373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1A81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_65347:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400372:
L_65343:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400374:
L_65337:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400375:
L_65354:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_65343
L_65355:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400376
L_65357:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_65347
.p2align 0x4
L_400376:
L_65356:
	movq %r11,%r15
	jmp L_65347
.p2align 0x4
L_400378:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_65336
.p2align 0x4
L_400379:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_65336
.p2align 0x4
L_400380:
L_65358:
	xorl %ecx,%ecx
	jmp L_65342
.p2align 0x4
L_400381:
L_65331:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400382:
L_65359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65360
.p2align 0x4
.long 0x460
L_65360:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65330
.text
.p2align 0x4
.globl visit_1
.hidden visit_1
visit_1:
L_65361:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65362
L_65477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65478
.p2align 0x4
.long 0x658
L_65478:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_65362:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_65363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x4EE
L_65363:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65364
L_65475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65476
.p2align 0x4
.long 0x67E
L_65476:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65364:
	movslq 0x40(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_65366
L_65367:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_400387
L_65368:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_400386
L_65370:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r13),%r11
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r9d
	movslq %r9d,%r8
	cmpq %r15,%r8
	jne L_400385
L_65373:
	movl %r9d,0x68(%rbp)
	movq $0x38EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r15,0x60(%rbp)
	addq $0x28,%r12
	addq $0x60,%rbp
	leaq (L_65374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_400385:
L_65372:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400386:
L_65366:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400387:
L_65474:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A7
L_65374:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_65375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_0
.p2align 0x4
.long 0x84B
L_65375:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65376
L_65472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_65473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65473
.p2align 0x4
.long 0x9E4
L_65473:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_65376:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_400402
L_65377:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_400400
	cmpq $0xF32,%r14
	je L_400398
	cmpq $0xF33,%r14
	je L_400396
	cmpq $0xF34,%r14
	je L_400395
	cmpq $0xF35,%r14
	je L_400393
	cmpq $0xF36,%r14
	je L_400391
L_65378:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_65372
L_65380:
	movl %r13d,0x80(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_65381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400391:
L_65464:
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_65372
L_65466:
	movl %r13d,0x90(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_65467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400393:
L_65449:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_65372
L_65451:
	movl %r13d,0x80(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_65452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400395:
L_65407:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_65408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400396:
L_65400:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_65372
L_65402:
	movl %r13d,0x78(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_65403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400398:
L_65393:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_65372
L_65395:
	movl %r13d,0x70(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_65396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400400:
L_65386:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_65372
L_65388:
	movl %r13d,0x70(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_65389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400402:
L_65471:
	movq $0x1,%r14
	xchgq %r14,%r15
L_65383:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x3689,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x28(%r14)
	movq %r15,0x30(%r14)
	movq %r14,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x3,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xC0B
L_65381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65382
L_65384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65385
.p2align 0x4
.long 0xC18
L_65385:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65382:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_65383
.p2align 0x4
.long 0x7FB
L_65467:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65468
L_65469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_65470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65470
.p2align 0x4
.long 0x804
L_65470:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_65468:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	jmp L_65383
.p2align 0x4
.long 0xC0B
L_65452:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65453
L_65462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65463
.p2align 0x4
.long 0xC18
L_65463:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65453:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_400409
	cmpq $0x2,%r13
	je L_400408
L_65454:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je L_400407
	cmpq $0x2,%r15
	je L_400406
L_65456:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_65457:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_65383
.p2align 0x4
L_400406:
L_65459:
	movq $0x2,%r15
	jmp L_65456
.p2align 0x4
L_400407:
L_65458:
	movq $0x1,%r15
	jmp L_65456
.p2align 0x4
L_400408:
L_65461:
	movq $0x2,%r15
	jmp L_65457
.p2align 0x4
L_400409:
L_65460:
	movq $0x1,%r15
	jmp L_65457
.p2align 0x4
.long 0x7FB
L_65408:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65409
L_65447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_65448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65448
.p2align 0x4
.long 0x804
L_65448:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_65409:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_135
L_65410:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	movq %r15,0x80(%rbp)
	je bug_695
L_65411:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_400417
L_65422:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x60(%rbp)
	jne L_65372
L_65424:
	testq %rdx,%rdx
	jz L_400415
L_65425:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400414
L_65426:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_65427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65427
.p2align 0x4
.long 0xE4B
L_65427:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x70(%rbp)
L_65428:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_763:
	cmpq 0x78(%rbp),%r15
	jnl L_400411
L_65435:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_763
.p2align 0x4
L_400411:
L_65429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65430
L_65433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_65434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65434
.p2align 0x4
.long 0xE4C
L_65434:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_65430:
	movq 0x70(%rbp),%r13
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2413,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_400412
L_65431:
L_65418:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r13)
	movq %r13,%r15
	jmp L_65383
.p2align 0x4
L_400412:
L_65432:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_65418
.p2align 0x4
L_400414:
L_65436:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400415:
L_65437:
	movq (globalObjptr+0x2310)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_65428
.p2align 0x4
L_400417:
L_65412:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_65372
L_65414:
	movl %r13d,0x98(%rbp)
	movq $0x39F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	addq $0x90,%rbp
	leaq (L_65415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
bug_695:
bug_135:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_65439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9D7
L_65403:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65404
L_65405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_65406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65406
.p2align 0x4
.long 0x9E1
L_65406:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_65404:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65383
.p2align 0x4
.long 0x8EF
L_65396:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65397
L_65398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_65399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65399
.p2align 0x4
.long 0x901
L_65399:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_65397:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_65383
.p2align 0x4
.long 0x8EF
L_65389:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65390
L_65391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_65392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65392
.p2align 0x4
.long 0x901
L_65392:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_65390:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_65383
.p2align 0x4
.long 0xE4A
L_65415:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65416
L_65420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_65421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65421
.p2align 0x4
.long 0xC19
L_65421:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_65416:
	movq $0x2411,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_400423
L_65417:
	jmp L_65418
.p2align 0x4
L_400423:
L_65419:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_65418
.p2align 0x4
.long 0x1
L_65439:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65440
L_65444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_65445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65445
.p2align 0x4
.long 0x452
L_65445:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_65440:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_136:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65441
L_65442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_65443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65443
.p2align 0x4
.long 0x452
L_65443:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_65441:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_20
.hidden tabulate_20
tabulate_20:
L_65479:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65480
L_65590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65591
.p2align 0x4
.long 0x458
L_65591:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65480:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_400456
L_65481:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400455
L_65482:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x146D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65483
.p2align 0x4
.long 0x453
L_65483:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_65484:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_764:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_400454
L_65486:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_400453
L_65487:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C74,%rax
	cmpq $0x8,%rax
	ja L_400427
	jmp *jumpTable_147(,%rax,8)
.data
.p2align 0x4
jumpTable_147:
.quad L_400449,L_400445,L_400441,L_400440,L_400439,L_400438,L_400434,L_400430,L_400429
.text
.p2align 0x4
L_400427:
L_65488:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_65489:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400428
.p2align 0x4,,0x7
L_65490:
	movq $0x16ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_764
.p2align 0x4
L_400428:
L_65491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65492
.p2align 0x4
.long 0x57A
L_65492:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_65490
.p2align 0x4
L_400429:
L_65585:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_65586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400430:
L_65580:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_769:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400432
L_65583:
	incl %ecx
	jo L_400431
L_65584:
	jmp loop_769
.p2align 0x4
L_400431:
L_65495:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400432:
L_65581:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_65495
L_65582:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_65489
.p2align 0x4
L_400434:
L_65575:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_768:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400436
L_65578:
	incl %ecx
	jo L_65495
L_65579:
	jmp loop_768
.p2align 0x4
L_400436:
L_65576:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_65495
L_65577:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_65489
.p2align 0x4
L_400438:
L_65572:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_65573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_400439:
L_65571:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	jmp L_65489
.p2align 0x4
L_400440:
L_65509:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	movq 0x18(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r10,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_65510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400441:
L_65504:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_767:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400443
L_65507:
	incl %ecx
	jo L_65495
L_65508:
	jmp loop_767
.p2align 0x4
L_400443:
L_65505:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_65495
L_65506:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_65489
.p2align 0x4
L_400445:
L_65499:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_766:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400447
L_65502:
	incl %ecx
	jo L_65495
L_65503:
	jmp loop_766
.p2align 0x4
L_400447:
L_65500:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_65495
L_65501:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_65489
.p2align 0x4
L_400449:
L_65493:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_765:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400451
L_65497:
	incl %ecx
	jo L_65495
L_65498:
	jmp loop_765
.p2align 0x4
L_400451:
L_65494:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_65495
L_65496:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_65489
.p2align 0x4
L_400453:
L_65587:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400454:
L_65485:
	movq 0x8(%rbp),%r14
	movq $0x1F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400455:
L_65588:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400456:
L_65589:
	movq (globalObjptr+0xC08)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_65484
.p2align 0x4
.long 0x457
L_65586:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_65489
.p2align 0x4
.long 0x558
L_65573:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_65574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x529
L_65510:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400458
L_65511:
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_65512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400458:
L_65552:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_65553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x56D
L_65574:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_65489
.p2align 0x4
.long 0x571
L_65512:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65513
L_65550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65551
.p2align 0x4
.long 0xE4E
L_65551:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65513:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_65514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0x598
L_65553:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65554
L_65569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_65570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65570
.p2align 0x4
.long 0xE53
L_65570:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_65554:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_400462
L_65556:
	movq 0x50(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_400460
L_65557:
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_65558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400460:
L_65568:
	movq $0x1,0x48(%rbp)
L_65560:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_400461
L_65562:
	movl %r13d,0x80(%rbp)
	movq $0x3ADD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (x_162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400461:
L_65561:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400462:
	movq %r14,%r15
L_65516:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_400475
L_65517:
	movq 0x0(%r13),%r15
	movq $0x1E77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
L_65518:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r10),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400474
L_65520:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400473
L_65521:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_65523:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400472
L_65539:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400471
L_65540:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400468
L_65524:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_65495
L_65525:
	cmpq $0x1,%r15
	je L_400463
L_65526:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_65523
.p2align 0x4
L_400463:
L_65527:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65528
L_65537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_65538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65538
.p2align 0x4
.long 0xE4D
L_65538:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_65528:
	movl 0x40(%rbp),%ecx
L_65529:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400465
L_65531:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65533
L_65536:
	movl %ecx,0x0(%r15)
L_65533:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_65534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400465:
L_65530:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400468:
L_65542:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_65530
L_65543:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_400469
L_65545:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400469:
L_65544:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400471:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_65524
.p2align 0x4
L_400472:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_65524
.p2align 0x4
L_400473:
L_65546:
	xorl %ecx,%ecx
	jmp L_65529
.p2align 0x4
L_400474:
L_65519:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400475:
L_65547:
	movq %r15,0x38(%rbp)
	jmp L_65518
.p2align 0x4
.long 0x5CA
L_65514:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65515
L_65548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_65549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65549
.p2align 0x4
.long 0x5A3
L_65549:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_65515:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65516
.p2align 0x4
.long 0xE4F
L_65558:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65559
L_65566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_65567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65567
.p2align 0x4
.long 0xE52
L_65567:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_65559:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_65560
.p2align 0x4
.long 0xE50
x_162:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65563
L_65564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_65565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65565
.p2align 0x4
.long 0xE51
L_65565:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_65563:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_65516
.p2align 0x4
.long 0x56F
L_65534:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_65535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
.long 0x569
L_65535:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_65489
.text
.p2align 0x4
.globl finalType_0
.hidden finalType_0
finalType_0:
L_65592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65593
L_65607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65608
.p2align 0x4
.long 0x460
L_65608:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65593:
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF40,%r13
	je L_400481
	cmpq $0xF41,%r13
	je L_400480
L_65594:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_65595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400480:
L_65606:
	movq 0x0(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400481:
L_65599:
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_65600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x2B
L_65595:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65596
L_65597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_65598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65598
.p2align 0x4
.long 0x2C
L_65598:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_65596:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x5B0
L_65600:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400484
L_65601:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400484:
L_65602:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_65603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalTypes_0
.p2align 0x4
.long 0x45A
L_65603:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	ja L_400485
L_65604:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400485:
L_65605:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl finalTypes_0
.hidden finalTypes_0
finalTypes_0:
L_65609:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65610
L_65673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65674
.p2align 0x4
.long 0x460
L_65674:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65610:
	movq 0x8(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF40,%r13
	je L_400486
L_65611:
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_65612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400486:
L_65616:
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_65617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x1
L_65612:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65613
L_65614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_65615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65615
.p2align 0x4
.long 0x452
L_65615:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_65613:
	movq $0x38BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0x4E6
L_65617:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65618
L_65671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_65672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65672
.p2align 0x4
.long 0xE57
L_65672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_65618:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400489
L_65619:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400489:
L_65620:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_400496
L_65623:
	decl %ecx
	jo L_65624
L_65625:
	movq $0x1,0x28(%rbp)
loop_770:
	cmpl $0x0,%ecx
	jl L_400490
L_65626:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x30(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x34(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_65627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalTypes_0
.p2align 0x4
L_400490:
L_65639:
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_400494
L_65640:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_65641:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_400493
L_65642:
	cmpq $0x1,%r15
	je L_400491
L_65643:
	movq 0x8(%r15),%r15
	jmp L_65641
.p2align 0x4
L_400491:
L_65644:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65645
L_65668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65669
.p2align 0x4
.long 0x810
L_65669:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65645:
	movl 0x28(%rbp),%ecx
L_65646:
	movl %ecx,0x58(%rbp)
	movq $0x38BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (x_163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400493:
L_65624:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400494:
L_65670:
	xorl %ecx,%ecx
	jmp L_65646
.p2align 0x4
L_400496:
L_65622:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE54
L_65627:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_65622
L_65629:
	decl %r13d
	jo L_65624
L_65630:
	movl %r13d,0x48(%rbp)
.p2align 0x4,,0x7
loop_771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400500
.p2align 0x4,,0x7
L_65631:
	movl 0x48(%rbp),%ebx
	cmpl $0x0,%ebx
	jl L_400499
L_65632:
	movl %ebx,%r14d
	decl %r14d
	movslq %ebx,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x38(%rbp),%r11
	movl 0x0(%r11,%r13,1),%ecx
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r13
	movl 0x34(%rbp),%r11d
	testl %r11d,%r11d
	jz L_400498
L_65635:
	movl $0x1,%ecx
	movq %r13,%r15
	movl %r14d,%ebx
L_65634:
	movl %ebx,0x48(%rbp)
	movq $0x10AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x273F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_771
.p2align 0x4
L_400498:
	movq %r13,%r15
	movl %r14d,%ebx
	jmp L_65634
.p2align 0x4
L_400499:
L_65636:
	movl 0x30(%rbp),%ecx
	jmp loop_770
.p2align 0x4
L_400500:
L_65637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_65638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65638
.p2align 0x4
.long 0xE55
L_65638:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_65631
.p2align 0x4
.long 0xE56
x_163:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_400509
L_65647:
	movq 0x10(%rbp),%r15
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_400508
	cmpq $0x2,%r15
	je L_400507
L_65648:
	movl 0x0(%r15),%r14d
	movl %r14d,%ecx
L_65649:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r14
	jne L_65622
L_65651:
	cmpl $0x0,%ebx
	jl L_400505
L_65652:
	movl %ecx,0x30(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_772:
	cmpl %ebx,%ecx
	jnl L_400503
L_65663:
	movslq %ecx,%r15
	salq $0x4,%r15
	movl 0x30(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x30(%rbp)
	incl %ecx
	jmp loop_772
.p2align 0x4
L_400503:
L_65653:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65654
L_65661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65662
.p2align 0x4
.long 0xA2A
L_65662:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65654:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x38(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_65655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400505:
L_65664:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400507:
L_65666:
	movl %r13d,%ecx
	jmp L_65649
.p2align 0x4
L_400508:
	movl %r14d,%ecx
	jmp L_65649
.p2align 0x4
L_400509:
L_65667:
	movq 0x28(%rbp),%r15
L_65658:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_65655:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65656
L_65659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65660
.p2align 0x4
.long 0x509
L_65660:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_65656:
	movq $0x38BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_65657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0x45A
L_65657:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_65658
.text
.p2align 0x4
.globl tabulate_7
.hidden tabulate_7
tabulate_7:
L_65675:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65676
L_65770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65771
.p2align 0x4
.long 0x458
L_65771:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65676:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_400549
L_65677:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400548
L_65678:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1473,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_65679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65679
.p2align 0x4
.long 0x453
L_65679:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_65680:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_773:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400547
.p2align 0x4,,0x7
L_65681:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_400546
L_65683:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_400545
L_65684:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C5A,%rax
	cmpq $0x7,%rax
	ja L_400511
	jmp *jumpTable_148(,%rax,8)
.data
.p2align 0x4
jumpTable_148:
.quad L_400528,L_400527,L_400526,L_400525,L_400523,L_400518,L_400513,L_400512
.text
.p2align 0x4
L_400511:
L_65685:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400512:
L_65760:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_65761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400513:
L_65752:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_775:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_400515
L_65758:
	incl %r14d
	jo L_400514
L_65759:
	movl %r14d,0x20(%rbp)
	jmp loop_775
.p2align 0x4
L_400514:
L_65698:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400515:
L_65753:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400517
.p2align 0x4,,0x7
L_65754:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r15
	movq $0x10AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x20(%rbp),%r13d
	incl %r13d
	jo L_65698
L_65755:
	movq 0x28(%rbp),%r11
	movl %r13d,0x0(%r11)
	movq %r14,%r15
.p2align 0x4,,0x7
L_65688:
	movq 0x8(%r15),%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x8(%rbp),%r10
	movl 0x0(%r15),%r9d
	movl %r9d,0x0(%r10,%r11,1)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r10,%r15,1)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_773
.p2align 0x4
L_400517:
L_65756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_65757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65757
.p2align 0x4
.long 0x579
L_65757:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_65754
.p2align 0x4
L_400518:
L_65744:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_774:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_400520
L_65750:
	incl %r14d
	jo L_65698
L_65751:
	movl %r14d,0x20(%rbp)
	jmp loop_774
.p2align 0x4
L_400520:
L_65745:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400522
.p2align 0x4,,0x7
L_65746:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r15
	movq $0x10AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x20(%rbp),%r13d
	incl %r13d
	jo L_65698
L_65747:
	movq 0x28(%rbp),%r11
	movl %r13d,0x0(%r11)
	movq %r14,%r15
	jmp L_65688
.p2align 0x4
L_400522:
L_65748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_65749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65749
.p2align 0x4
.long 0x579
L_65749:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_65746
.p2align 0x4
L_400523:
L_65741:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400524
L_65742:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_65688
.p2align 0x4
L_400524:
L_65743:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400525:
L_65740:
	movq 0x0(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r15
	movq $0x10AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_65688
.p2align 0x4
L_400526:
L_65735:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_65736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1350
.p2align 0x4
L_400527:
L_65730:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movl 0x0(%r11,%r14,1),%r10d
	movl %r10d,0x20(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_65731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_400528:
L_65691:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400544
L_65693:
	movq %r15,0x0(%r11)
	movq 0x0(%r8),%r11
	cmpq $0x1,%r11
	je L_400543
L_65694:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x30(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_65696:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400542
L_65712:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD54,%r11
	jne L_400541
L_65713:
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_400534
L_65697:
	movl 0x30(%rbp),%r11d
	incl %r11d
	movl %r11d,0x34(%rbp)
	jo L_65698
L_65699:
	cmpq $0x1,%r15
	je L_400529
L_65700:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x30(%rbp)
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_65696
.p2align 0x4
L_400529:
L_65701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65702
L_65710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_65711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65711
.p2align 0x4
.long 0x761
L_65711:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_65702:
	movl 0x34(%rbp),%ecx
L_65703:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400531
L_65705:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65707
L_65709:
	movl %ecx,0x0(%r15)
L_65707:
	movq $0x1AA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_65708:
	movq (globalObjptr+0xC28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400531:
L_65704:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400534:
L_65715:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400540
.p2align 0x4,,0x7
L_65716:
	movl 0x30(%rbp),%r13d
	movslq %r13d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_65704
L_65717:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r13d,0x0(%r11)
	jl L_400537
L_65718:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_65708
L_65719:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
L_65720:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_400535
L_65721:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_65688
.p2align 0x4
L_400535:
L_65722:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400537:
L_65724:
	movq (globalObjptr+0x1078)(%rip),%r13
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_65708
L_65725:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	jmp L_65720
.p2align 0x4
L_400540:
L_65727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65728
.p2align 0x4
.long 0xE58
L_65728:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_65716
.p2align 0x4
L_400541:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_65697
.p2align 0x4
L_400542:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_65697
.p2align 0x4
L_400543:
L_65729:
	xorl %ecx,%ecx
	jmp L_65703
.p2align 0x4
L_400544:
L_65692:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400545:
L_65765:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400546:
L_65682:
	movq 0x8(%rbp),%r14
	movq $0x4E3,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400547:
L_65766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_65767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65767
.p2align 0x4
.long 0x45D
L_65767:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_65681
.p2align 0x4
L_400548:
L_65768:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400549:
L_65769:
	movq (globalObjptr+0xC20)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_65680
.p2align 0x4
.long 0x5F9
L_65686:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65687
L_65689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_65690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65690
.p2align 0x4
.long 0x52D
L_65690:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_65687:
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65688
.p2align 0x4
.long 0x5F9
L_65761:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65762
L_65763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_65764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65764
.p2align 0x4
.long 0x52D
L_65764:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_65762:
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65688
.p2align 0x4
.long 0xE59
L_65736:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65737
L_65738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65739
.p2align 0x4
.long 0x465
L_65739:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_65737:
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65688
.p2align 0x4
.long 0xE59
L_65731:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65732
L_65733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65734
.p2align 0x4
.long 0x465
L_65734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_65732:
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_65688
.text
.p2align 0x4
.globl get_63
.hidden get_63
get_63:
L_65772:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65862
L_65773:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400579
L_65774:
	movq 0x8(%rbp),%r11
	movq 0x60(%r11),%r14
	movq 0x58(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x50(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x48(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x40(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x38(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400578
L_65776:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400577
L_65777:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_65779:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400576
L_65854:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_400575
L_65855:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_400572
L_65780:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_400571
L_65782:
	cmpq $0x1,%r15
	je L_400555
L_65783:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_65779
.p2align 0x4
L_400555:
L_65784:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65785
L_65852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_65853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65853
.p2align 0x4
.long 0xE64
L_65853:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_65785:
	movl 0x78(%rbp),%ecx
L_65786:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400569
L_65788:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65790
L_65851:
	movl %ecx,0x0(%r15)
L_65790:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_400567
	cmpq $0x2,%r15
	je L_400566
	cmpq $0x3,%r15
	je L_400565
	cmpq $0x5,%r15
	je L_400563
L_65791:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_400562
	cmpq $0xEB1,%r15
	je L_400561
	cmpq $0xEB2,%r15
	je L_400559
	cmpq $0xEB3,%r15
	je L_400558
	cmpq $0xEB4,%r15
	je L_400557
	cmpq $0xEB5,%r15
	je L_400556
L_65792:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_65793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_400556:
L_65842:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400557:
L_65841:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400558:
L_65827:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400559:
L_65813:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_400560
L_65816:
	movl %r13d,0x88(%rbp)
	movq $0x38C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400560:
L_65815:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400561:
L_65811:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400562:
L_65806:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_400563:
L_65847:
	shrq $0x3,%r14
	movb %r14b,%dl
	movq 0x20(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_400564
L_65848:
L_65849:
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400564:
L_65850:
	movq %r10,%r15
	jmp L_65849
.p2align 0x4
L_400565:
L_65846:
	movq 0x28(%rbp),%r15
L_65800:
	movq $0x1949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400566:
L_65845:
	movq 0x58(%rbp),%r15
	jmp L_65800
.p2align 0x4
L_400567:
L_65844:
	movq 0x60(%rbp),%r15
	jmp L_65800
.p2align 0x4
L_400569:
L_65787:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400571:
L_65781:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400572:
L_65857:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_65787
L_65858:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_400573
L_65860:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400573:
L_65859:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400575:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_65780
.p2align 0x4
L_400576:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_65780
.p2align 0x4
L_400577:
L_65861:
	xorl %ecx,%ecx
	jmp L_65786
.p2align 0x4
L_400578:
L_65775:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400579:
L_65862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65863
.p2align 0x4
.long 0x460
L_65863:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65774
.p2align 0x4
.long 0xE5A
L_65793:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65794
L_65804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65805
.p2align 0x4
.long 0xE5C
L_65805:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65794:
	movslq 0x58(%rbp),%r15
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_400582
L_65796:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_400581
L_65797:
	movl 0x0(%r13),%r15d
	movl %r15d,0x88(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400581:
L_65803:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400582:
L_65795:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8DE
L_65843:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0xCA9
L_65798:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65799
L_65801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_65802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65802
.p2align 0x4
.long 0xE5B
L_65802:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_65799:
	movq 0x78(%rbp),%r15
	jmp L_65800
.p2align 0x4
.long 0xE62
L_65828:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65829
L_65839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65840
.p2align 0x4
.long 0xE61
L_65840:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65829:
	movq $0x38BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (x_165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0xE60
x_164:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_65815
L_65818:
	cmpl $0x0,%ecx
	jl L_400588
L_65819:
	movl %ebx,0x60(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_776:
	cmpl %ecx,%ebx
	jnl L_400586
L_65824:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x60(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x50(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x60(%rbp)
	incl %ebx
	jmp loop_776
.p2align 0x4
L_400586:
L_65820:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65821
L_65822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65823
.p2align 0x4
.long 0xE61
L_65823:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65821:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400588:
L_65826:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE5F
L_65812:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1356
.p2align 0x4
.long 0xE5D
L_65807:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65808
L_65809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_65810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65810
.p2align 0x4
.long 0xE5E
L_65810:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_65808:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x48(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0xE62
x_165:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_65815
L_65831:
	cmpl $0x0,%ecx
	jl L_65826
L_65832:
	movl %ebx,0x78(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_777:
	cmpl %ecx,%ebx
	jnl L_400591
L_65837:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x78(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x58(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x78(%rbp)
	incl %ebx
	jmp loop_777
.p2align 0x4
L_400591:
L_65833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65834
L_65835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_65836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65836
.p2align 0x4
.long 0xE63
L_65836:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_65834:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_65798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.text
.p2align 0x4
.globl x_1356
.hidden x_1356
x_1356:
L_65864:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65876
L_65865:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400595
L_65866:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movq $0x38BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (x_166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400595:
L_65876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65877
.p2align 0x4
.long 0x460
L_65877:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65866
.p2align 0x4
.long 0x2B
x_166:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movl 0x4(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_400600
L_65868:
	cmpl $0x0,%ecx
	jl L_400599
L_65869:
	movl %ebx,0x28(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_778:
	cmpl %ecx,%ebx
	jnl L_400597
L_65874:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x28(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x18(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x28(%rbp)
	incl %ebx
	jmp loop_778
.p2align 0x4
L_400597:
L_65870:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65871
L_65872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_65873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65873
.p2align 0x4
.long 0xBA6
L_65873:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_65871:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp lookup_2
.p2align 0x4
L_400599:
L_65875:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400600:
L_65867:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplifyType_0
.hidden simplifyType_0
simplifyType_0:
L_65878:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_65986
L_65879:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400620
L_65880:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_400619
L_65882:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_400618
L_65883:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x40(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_65885:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_65886
L_65975:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD50,%r13
	jne L_65886
L_65976:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_400612
L_65886:
	movl 0x40(%rbp),%r13d
	incl %r13d
	movl %r13d,0x44(%rbp)
	jo L_400611
L_65888:
	cmpq $0x1,%r15
	je L_400601
L_65889:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x40(%rbp)
	jmp L_65885
.p2align 0x4
L_400601:
L_65890:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65891
L_65973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65974
.p2align 0x4
.long 0x796
L_65974:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65891:
	movl 0x44(%rbp),%ecx
L_65892:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400609
L_65894:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_65896
L_65972:
	movl %ecx,0x0(%r15)
L_65896:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1361,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1,0x8(%r11)
	movq $0x1AA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_65897:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_400602
L_65898:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400602:
L_65899:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_65900:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_65901
L_65903:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	je L_400606
	cmpq $0xF25,%r15
	je L_400603
L_65901:
	movq 0x0(%rbp),%r15
L_65902:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400603:
L_65910:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r13
L_65911:
	andq $0x3,%r15
	jz L_400605
L_65912:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_400604
L_65915:
	movl %r14d,0x40(%rbp)
	movq $0x38B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400604:
L_65914:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400605:
L_65930:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_65931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_400606:
L_65904:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_65905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_400609:
L_65893:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400611:
L_65887:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400612:
L_65978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65979
L_65983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_65984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65984
.p2align 0x4
.long 0xE69
L_65984:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_65979:
	movl 0x40(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_65893
L_65980:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_400613
L_65981:
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_65897
.p2align 0x4
L_400613:
L_65982:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_65897
.p2align 0x4
L_400618:
L_65985:
	xorl %ecx,%ecx
	jmp L_65892
.p2align 0x4
L_400619:
L_65881:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400620:
L_65986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_65987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65987
.p2align 0x4
.long 0x460
L_65987:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_65880
.p2align 0x4
.long 0x797
x_167:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_400627
	cmpq $0x2,%r15
	je L_400622
L_65916:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_400622:
L_65929:
	movl %r13d,%ecx
L_65918:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jne L_65914
L_65920:
	cmpl $0x0,%ebx
	jl L_400625
L_65921:
	movl %ecx,0x38(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_779:
	cmpl %ebx,%ecx
	jnl L_400623
L_65926:
	movslq %ecx,%r15
	salq $0x4,%r15
	movl 0x38(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x18(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x38(%rbp)
	incl %ecx
	jmp loop_779
.p2align 0x4
L_400623:
L_65922:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65923
L_65924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65925
.p2align 0x4
.long 0x4AC
L_65925:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_65923:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x38(%rbp),%r14d
	movl %r14d,0x40(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_65907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400625:
L_65928:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400627:
	movl %r14d,%ecx
	jmp L_65918
.p2align 0x4
.long 0x63A
L_65931:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	cmpq $0x1,0x8(%r14)
	je L_400637
L_65932:
	xorl %ecx,%ecx
L_65933:
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x4(%r11),%r14b
	testb %r14b,%r14b
	jz L_400629
L_65934:
	testl %ecx,%ecx
	jz L_400628
L_65937:
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_65902
.p2align 0x4
L_400628:
L_65936:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_65902
.p2align 0x4
L_400629:
L_65938:
	testl %ecx,%ecx
	jz L_65936
L_65940:
	movq 0x20(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x30(%rbp)
	jne L_65914
L_65942:
	testq %rdx,%rdx
	jz L_400634
L_65943:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400633
L_65944:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1569,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65945
.p2align 0x4
.long 0xE65
L_65945:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x18(%rbp)
L_65946:
	movl $0x0,0x40(%rbp)
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_780:
	movq 0x48(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnl L_400631
L_65960:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x44(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	je L_400630
L_65961:
	movl 0x40(%rbp),%ecx
	movq $0x1,%r15
.p2align 0x4,,0x7
L_65962:
	movl %ecx,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_780
.p2align 0x4
L_400630:
L_65963:
	movq %r11,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_65964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_400631:
L_65947:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65948
L_65958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_65959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65959
.p2align 0x4
.long 0xE66
L_65959:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_65948:
	movq 0x18(%rbp),%r15
	movq $0xC25,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC27,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x38BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (x_168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400633:
L_65969:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400634:
L_65970:
	movq (globalObjptr+0x23C0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_65946
.p2align 0x4
L_400637:
L_65971:
	movl $0x1,%ecx
	jmp L_65933
.p2align 0x4
.long 0x5EE
L_65905:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65906
L_65908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_65909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65909
.p2align 0x4
.long 0x4FD
L_65909:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_65906:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x30(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_65907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x51B
L_65907:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_65902
.p2align 0x4
.long 0xE67
L_65964:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65965
L_65967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_65968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65968
.p2align 0x4
.long 0xE68
L_65968:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_65965:
	movq $0x2775,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x40(%rbp),%ecx
	incl %ecx
	jo L_65887
	jmp L_65962
.p2align 0x4
.long 0x797
x_168:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_65914
L_65950:
	cmpl $0x0,%ecx
	jl L_65928
L_65951:
	movl %ebx,0x38(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_781:
	cmpl %ecx,%ebx
	jnl L_400641
L_65956:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x38(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x18(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x38(%rbp)
	incl %ebx
	jmp loop_781
.p2align 0x4
L_400641:
L_65952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_65953
L_65954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_65955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_65955
.p2align 0x4
.long 0x4AC
L_65955:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_65953:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x38(%rbp),%r14d
	movl %r14d,0x40(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_65907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.text
.p2align 0x4
.globl x_1350
.hidden x_1350
x_1350:
L_65988:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_65989
L_66042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66043
.p2align 0x4
.long 0x460
L_66043:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_65989:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_400654
L_65991:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_400653
L_65992:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_65994:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_400652
L_66034:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCA4,%r10
	jne L_400651
L_66035:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_400648
L_65995:
	incl %ecx
	jo L_400647
L_65997:
	cmpq $0x1,%r15
	je L_400645
L_65998:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_65994
.p2align 0x4
L_400645:
L_65999:
L_66000:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400646
L_66002:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_169
L_66033:
	movl %ecx,0x0(%r15)
x_169:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_400646:
L_66001:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400647:
L_65996:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400648:
L_66037:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66001
L_66038:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_400649
L_66040:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400649:
L_66039:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400651:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_65995
.p2align 0x4
L_400652:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_65995
.p2align 0x4
L_400653:
L_66041:
	xorl %ecx,%ecx
	jmp L_66000
.p2align 0x4
L_400654:
L_65990:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66004:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_66005:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_66006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_66006:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xECE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_66007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_66007:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_66008:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66009
L_66031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66032
.p2align 0x4
.long 0x4AF
L_66032:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66009:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_66010:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_65996
L_66011:
	cmpq $0x1,%r14
	je L_400656
L_66012:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_66010
.p2align 0x4
L_400656:
L_66013:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66014
L_66029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66030
.p2align 0x4
.long 0x4E7
L_66030:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66014:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_400657
L_66015:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_81:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_400657:
L_66028:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_81
.p2align 0x4
.long 0x1
rev_81:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_400663
L_66016:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_66017:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400662
.p2align 0x4,,0x7
L_66018:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400661
L_66019:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_66017
.p2align 0x4
L_400661:
L_66021:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_400662:
L_66025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66026
.p2align 0x4
.long 0x45C
L_66026:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66018
.p2align 0x4
L_400663:
L_66027:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_66021
.p2align 0x4
.long 0x1
bug_137:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66022
L_66023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66024
.p2align 0x4
.long 0x452
L_66024:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66022:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_22
.hidden tabulate_22
tabulate_22:
L_66044:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66045
L_66198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66199
.p2align 0x4
.long 0x458
L_66199:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66045:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_400702
L_66046:
	cmpq $0x7FFFFFFF,%rdx
	ja L_400701
L_66047:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x144D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66048
.p2align 0x4
.long 0x453
L_66048:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_66049:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_782:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400700
.p2align 0x4,,0x7
L_66050:
	movq 0x18(%rbp),%r14
	cmpq 0x10(%rbp),%r14
	jnl L_400699
L_66052:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_400698
L_66053:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1D6B,%r15
	je L_400692
	cmpq $0x1D6C,%r15
	je L_400689
	cmpq $0x1D6D,%r15
	je L_400667
	cmpq $0x1D6E,%r15
	je L_400665
L_66054:
	movq 0x0(%r14),%r11
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_66055:
	movq 0x8(%r15),%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x8(%rbp),%r10
	movl 0x0(%r15),%r9d
	movl %r9d,0x0(%r10,%r11,1)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r10,%r15,1)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_782
.p2align 0x4
L_400665:
L_66163:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movslq %r13d,%r11
	movq %r11,%r13
	salq $0x4,%r13
	movq 0x8(%r14),%r10
	movl 0x0(%r10,%r13,1),%r9d
	movl %r9d,0x28(%rbp)
	salq $0x4,%r11
	movq 0x8(%r10,%r11,1),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400666
L_66164:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_66165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400666:
L_66174:
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_66175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
L_400667:
L_66088:
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movslq %r13d,%r11
	movq %r11,%r13
	movq %r11,%r10
	salq $0x4,%r13
	salq $0x4,%r10
	movq 0x20(%r14),%r9
	movq 0x8(%r9,%r10,1),%r8
	salq $0x4,%r11
	movq 0x18(%r14),%r10
	movq 0x8(%r10,%r11,1),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x48(%rbp)
	movl 0x0(%r9,%r13,1),%r15d
	testl %r15d,%r15d
	jnz L_400688
L_66089:
	movq 0x0(%r8),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r8),%r15
	cmpq $0x1,%r15
	je L_400683
L_66090:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r14
	je L_400681
L_66091:
	movq %r14,0x60(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_66092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400680
.p2align 0x4,,0x7
L_66093:
	movq 0x38(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_400676
L_66094:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq 0x28(%rbp),%r15
.p2align 0x4,,0x7
L_66095:
	movl 0x48(%rbp),%r11d
	incl %r11d
	jo L_400675
L_66096:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movl %r11d,0x48(%rbp)
.p2align 0x4,,0x7
L_66097:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400674
.p2align 0x4,,0x7
L_66098:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x178D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpq $0x1,0x40(%rbp)
	je L_400673
L_66099:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_400672
L_66100:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_66101:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400671
.p2align 0x4,,0x7
L_66102:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_400668
L_66103:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_66101
.p2align 0x4
L_400668:
L_66104:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
L_66105:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400670
.p2align 0x4,,0x7
L_66106:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_400669
L_66107:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_66105
.p2align 0x4
L_400669:
L_66109:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x8(%r14)
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_66055
.p2align 0x4
L_400670:
L_66110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66111
.p2align 0x4
.long 0xE6B
L_66111:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_66106
.p2align 0x4
L_400671:
L_66112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66113
.p2align 0x4
.long 0x5A1
L_66113:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_66102
.p2align 0x4
L_400672:
L_66114:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66109
.p2align 0x4
L_400673:
L_66115:
	movq 0x28(%rbp),%r15
	jmp L_66109
.p2align 0x4
L_400674:
L_66116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66117
.p2align 0x4
.long 0xE6C
L_66117:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_66098
.p2align 0x4
L_400675:
L_66060:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400676:
L_66118:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0xB67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq 0x50(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_66073
L_66120:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r8d
	movslq %r8d,%rsp
	cmpq %r10,%rsp
	jne L_400678
L_66122:
	cmpl %r9d,%r8d
	jne L_400677
L_66125:
	movl %r9d,0x70(%rbp)
	movq $0x3ADB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	movq %r13,0x18(%r10)
	addq $0x30,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r10)
	movq %r14,0x10(%r10)
	movq %r11,0x20(%r10)
	movq %r10,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400677:
L_66124:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400678:
L_66073:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400680:
L_66143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_66144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66144
.p2align 0x4
.long 0xE6F
L_66144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_66093
.p2align 0x4
L_400681:
L_66145:
	cmpq $0x1,0x28(%rbp)
	je L_400682
L_66146:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400682:
L_66151:
	movq (globalObjptr+0x2288)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400683:
L_66152:
	movq 0x38(%rbp),%r15
	cmpq $0x1,0x8(%r15)
	je L_400684
L_66153:
	movq (globalObjptr+0x2290)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400684:
L_66154:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0xB67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_66073
L_66156:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_66073
L_66158:
	cmpl %r9d,%r10d
	jne L_66124
L_66160:
	movl %r10d,0x70(%rbp)
	movq $0x3ADB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r13,0x20(%r11)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400688:
L_66162:
	movq (globalObjptr+0xB38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400689:
L_66079:
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r11,%r13,1),%r10d
	movl %r10d,0x20(%rbp)
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	cmpq $0x1,%r9
	je L_400691
L_66080:
	movq 0x0(%r9),%r15
	movq $0x1E77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq %r10,%r15
L_66081:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66073
L_66083:
	movl %r13d,0x40(%rbp)
	movq $0x3AD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (x_170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400691:
L_66087:
	movq $0x1,0x28(%rbp)
	movq %r10,%r15
	jmp L_66081
.p2align 0x4
L_400692:
L_66056:
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r10
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r9
	movl 0x0(%r9,%r13,1),%r8d
	movl %r8d,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r9,%r15,1),%r13
	movq 0x8(%r11),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r11),%r9d
	movl %r9d,0x2C(%rbp)
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r13),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_400696
L_66057:
	movq 0x0(%r15),%r9
	movq %r9,0x48(%rbp)
	cmpq $0x1,0x8(%r15)
	je L_400695
L_66058:
	movq %r13,%r15
.p2align 0x4,,0x7
L_66059:
	movl 0x2C(%rbp),%r13d
	incl %r13d
	jo L_66060
L_66061:
	movq %r14,0x30(%rbp)
	movl %r13d,0x2C(%rbp)
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_66062:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400693
.p2align 0x4,,0x7
L_66063:
	movq $0x178D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	jmp L_66055
.p2align 0x4
L_400693:
L_66064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66065
.p2align 0x4
.long 0x597
L_66065:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_66063
.p2align 0x4
L_400695:
L_66066:
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400696:
L_66071:
	movq $0xB67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r9
	cmpq %r9,%r13
	jne L_66073
L_66074:
	movl %r11d,0x50(%rbp)
	movq $0x3AD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	addq $0x20,%r12
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400698:
L_66193:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400699:
L_66051:
	movq 0x8(%rbp),%r15
	movq $0x41,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400700:
L_66194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66195
.p2align 0x4
.long 0x45D
L_66195:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_66050
.p2align 0x4
L_400701:
L_66196:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400702:
L_66197:
	movq (globalObjptr+0xB30)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_66049
.p2align 0x4
.long 0xE72
L_66165:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66166
L_66172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66173
.p2align 0x4
.long 0xE73
L_66173:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66166:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_66167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0x561
L_66175:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66176
L_66191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_66192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66192
.p2align 0x4
.long 0xE78
L_66192:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_66176:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_400707
L_66178:
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_400705
L_66179:
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_66180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400705:
L_66190:
	movq $0x1,0x30(%rbp)
L_66182:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66073
L_66184:
	movl %r13d,0x68(%rbp)
	movq $0x3ADD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (x_171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400707:
	movq %r14,%r15
L_66169:
	movq $0x178D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_66055
.p2align 0x4
.long 0xE6D
L_66126:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_400714
L_66127:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_400713
L_66128:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_66129:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400712
.p2align 0x4,,0x7
L_66130:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_400709
L_66131:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_66129
.p2align 0x4
L_400709:
L_66132:
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_66133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400711
.p2align 0x4,,0x7
L_66134:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_400710
L_66135:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_66133
.p2align 0x4
L_400710:
L_66136:
	movq 0x30(%rbp),%r13
	movq $0x1,%r11
	xchgq %r11,%r14
	jmp L_66095
.p2align 0x4
L_400711:
L_66137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66138
.p2align 0x4
.long 0x5A1
L_66138:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_66134
.p2align 0x4
L_400712:
L_66139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66140
.p2align 0x4
.long 0xE6E
L_66140:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_66130
.p2align 0x4
L_400713:
L_66141:
	movq 0x38(%rbp),%r11
	movq 0x30(%rbp),%r13
	movq $0x1,%r14
	xchgq %r11,%r15
	jmp L_66095
.p2align 0x4
L_400714:
L_66142:
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r13
	movq $0x1,%r14
	jmp L_66095
.p2align 0x4
.long 0xE70
L_66147:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66148
L_66149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66150
.p2align 0x4
.long 0xE6E
L_66150:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66148:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x10(%r14)
	movq %r13,0x60(%rbp)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_66092
.p2align 0x4
.long 0xE71
L_66161:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x58(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x48(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_66097
.p2align 0x4
.long 0x56D
x_170:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66084
L_66085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_66086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66086
.p2align 0x4
.long 0x579
L_66086:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_66084:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x178D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_66055
.p2align 0x4
.long 0x52A
L_66067:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66068
L_66069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66070
.p2align 0x4
.long 0xE6A
L_66070:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66068:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r10
	movq %r10,0x0(%r14)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x2C(%rbp),%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x10(%r10)
	addq $0x20,%r12
	movq %r11,0x8(%r10)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	xchgq %r14,%r15
	jmp L_66059
.p2align 0x4
.long 0x532
L_66075:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66076
L_66077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66078
.p2align 0x4
.long 0x597
L_66078:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66076:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x2C(%rbp)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x30(%rbp)
	movq $0x1,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp L_66062
.p2align 0x4
.long 0x569
L_66167:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66168
L_66170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_66171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66171
.p2align 0x4
.long 0x592
L_66171:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_66168:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_66169
.p2align 0x4
.long 0xE74
L_66180:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66181
L_66188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_66189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66189
.p2align 0x4
.long 0xE77
L_66189:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_66181:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_66182
.p2align 0x4
.long 0xE75
x_171:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66185
L_66186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66187
.p2align 0x4
.long 0xE76
L_66187:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66185:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_66169
.text
.p2align 0x4
.globl valueType_0
.hidden valueType_0
valueType_0:
L_66200:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66201
L_66216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66217
.p2align 0x4
.long 0x460
L_66217:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66201:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x4E6
L_66202:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66203
L_66214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66215
.p2align 0x4
.long 0x4E8
L_66215:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66203:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_400725
	cmpq $0xF49,%r14
	je L_400724
L_66204:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_400723
L_66205:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400723:
L_66206:
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_66207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_400724:
L_66213:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400725:
L_66212:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	movq %r15,0x0(%rbp)
	addq $0x40,%r12
	jmp objectType_0
.p2align 0x4
.long 0x2
L_66207:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66208
L_66210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66211
.p2align 0x4
.long 0x4B2
L_66211:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66208:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x18(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x45A
L_66209:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl objectType_0
.hidden objectType_0
objectType_0:
L_66218:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66219
L_66240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66241
.p2align 0x4
.long 0x460
L_66241:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66219:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_400728
L_66220:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400728:
L_66221:
	movq 0x0(%r14),%r15
L_66222:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_400729
L_66239:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectType_0
.p2align 0x4
L_400729:
L_66223:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_66224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFinalComponents_0
.p2align 0x4
.long 0x490
L_66232:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AA
L_66224:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_400736
	cmpq $0x2,%r15
	je L_400735
L_66225:
	movl 0x0(%r15),%r14d
	movl %r14d,%ecx
L_66226:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r14
	jne L_400734
L_66228:
	cmpl $0x0,%ebx
	jl L_400733
L_66229:
	movl %ecx,0x38(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_783:
	cmpl %ebx,%ecx
	jnl L_400731
L_66235:
	movslq %ecx,%r15
	salq $0x4,%r15
	movl 0x38(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x38(%rbp)
	incl %ecx
	jmp loop_783
.p2align 0x4
L_400731:
L_66230:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66231
L_66233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66234
.p2align 0x4
.long 0x4AC
L_66234:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66231:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%r14d
	movl %r14d,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_66232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_400733:
L_66236:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400734:
L_66227:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400735:
L_66238:
	movl %r13d,%ecx
	jmp L_66226
.p2align 0x4
L_400736:
	movl %r14d,%ecx
	jmp L_66226
.text
.p2align 0x4
.globl objectFinalComponents_0
.hidden objectFinalComponents_0
objectFinalComponents_0:
L_66242:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_66290
L_66243:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400745
L_66244:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_400737
L_66245:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400737:
L_66246:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_400744
L_66249:
	decl %ecx
	jo L_66250
L_66251:
	movq $0x1,0x20(%rbp)
loop_784:
	cmpl $0x0,%ecx
	jl L_400738
L_66252:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x2C(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_66253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_400738:
L_66279:
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_400742
L_66280:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_66281:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_400741
L_66282:
	cmpq $0x1,%r15
	je L_400739
L_66283:
	movq 0x8(%r15),%r15
	jmp L_66281
.p2align 0x4
L_400739:
L_66284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66285
L_66287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66288
.p2align 0x4
.long 0x45F
L_66288:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66285:
	movl 0x20(%rbp),%ecx
L_66286:
	movl %ecx,0x28(%rbp)
	movq $0x38BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_400741:
L_66250:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400742:
L_66289:
	xorl %ecx,%ecx
	jmp L_66286
.p2align 0x4
L_400744:
L_66248:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400745:
L_66290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66291
.p2align 0x4
.long 0x460
L_66291:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_66244
.p2align 0x4
.long 0xE79
L_66253:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66254
L_66277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66278
.p2align 0x4
.long 0xE7D
L_66278:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66254:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_66255
L_66260:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_66261:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_66255
L_66262:
	movq 0x0(%rbp),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne L_400747
L_66264:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_66265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFinalComponents_0
.p2align 0x4
L_400747:
L_66255:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_66256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x2B
x_172:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE7A
L_66265:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66248
L_66267:
	decl %r13d
	jo L_66250
L_66268:
	movl %r13d,0x38(%rbp)
.p2align 0x4,,0x7
loop_785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400753
.p2align 0x4,,0x7
L_66269:
	movl 0x38(%rbp),%ebx
	cmpl $0x0,%ebx
	jl L_400752
L_66270:
	movl %ebx,%r14d
	decl %r14d
	movslq %ebx,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x30(%rbp),%r11
	movl 0x0(%r11,%r13,1),%ecx
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r13
	movl 0x2C(%rbp),%r11d
	testl %r11d,%r11d
	jz L_400751
L_66273:
	movl $0x1,%ecx
	movq %r13,%r15
	movl %r14d,%ebx
L_66272:
	movl %ebx,0x38(%rbp)
	movq $0x10AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x273F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_785
.p2align 0x4
L_400751:
	movq %r13,%r15
	movl %r14d,%ebx
	jmp L_66272
.p2align 0x4
L_400752:
L_66274:
	movl 0x28(%rbp),%ecx
	jmp loop_784
.p2align 0x4
L_400753:
L_66275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66276
.p2align 0x4
.long 0xE7C
L_66276:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_66269
.p2align 0x4
.long 0xE7A
L_66256:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66257
L_66258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_66259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66259
.p2align 0x4
.long 0xE7B
L_66259:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_66257:
	movq $0x10AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x273F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movl 0x28(%rbp),%ecx
	jmp loop_784
.text
.p2align 0x4
.globl transformStatements_0
.hidden transformStatements_0
transformStatements_0:
L_66292:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66293
L_67224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67225
.p2align 0x4
.long 0x460
L_67225:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66293:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_66295
L_66296:
	testq %rdx,%rdx
	jz L_400792
L_66297:
	cmpq $0x7FFFFFFF,%rdx
	ja L_66339
L_66298:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x155F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66299
.p2align 0x4
.long 0xE7E
L_66299:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x8(%rbp)
L_66300:
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400790
.p2align 0x4,,0x7
L_66301:
	movq 0x20(%rbp),%r14
	cmpq 0x18(%rbp),%r14
	jnl L_400789
L_66303:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x78(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_400787
	cmpq $0xF2F,%r15
	je L_400758
L_66304:
	movq 0x10(%r13),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_400757
L_66660:
	movq 0x0(%r14),%r15
L_66306:
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (deObject_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400757:
L_66305:
	movq 0x8(%r14),%r15
	jmp L_66306
.p2align 0x4
L_400758:
L_66662:
	movq 0x10(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_400784
	cmpq $0xF29,%r13
	je L_400782
	cmpq $0xF2A,%r13
	je L_400780
	cmpq $0xF2B,%r13
	je L_400778
	cmpq $0xF2C,%r13
	je L_400764
L_66663:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	jne L_400763
L_66697:
	movq $0x1,0x28(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_66329:
	movslq %ecx,%r14
	movq %r14,0x30(%rbp)
	testq %r14,%r14
	jnz L_400761
L_66340:
	movq (globalObjptr+0xD48)(%rip),%r15
.p2align 0x4,,0x7
L_66333:
	movq 0x28(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_787:
	cmpq 0x30(%rbp),%r14
	jnl L_400760
L_66335:
	cmpq $0x1,%r13
	je L_400759
L_66336:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_787
.p2align 0x4
L_400759:
L_66337:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400760:
L_66334:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_786
.p2align 0x4
L_400761:
L_66330:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_400762
L_66331:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_66332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66332
.p2align 0x4
.long 0xE83
L_66332:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
	jmp L_66333
.p2align 0x4
L_400762:
L_66339:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400763:
L_66664:
	movq %r13,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_66665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400764:
L_67217:
	cmpq $0x1,%r15
	jne L_400777
L_67034:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_400775
	cmpq $0xF29,%r14
	je L_400773
	cmpq $0xF2A,%r14
	je L_400771
	cmpq $0xF2B,%r14
	je L_400770
	cmpq $0xF2C,%r14
	je L_400765
L_67035:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
L_66727:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_66728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400765:
.p2align 0x4,,0x7
L_66841:
	cmpq $0x1,0x80(%rbp)
	jne L_400769
L_66843:
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_66736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400768
.p2align 0x4,,0x7
L_66737:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_66324:
	incl %ecx
	jo L_400767
L_66326:
	cmpq $0x1,%r15
	je L_400766
L_66327:
	movq 0x8(%r15),%r15
	jmp L_66324
.p2align 0x4
L_400766:
L_66328:
	movq %r14,0x28(%rbp)
	jmp L_66329
.p2align 0x4
L_400767:
L_66325:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400768:
L_66738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_66739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66739
.p2align 0x4
.long 0xEB7
L_66739:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_66737
.p2align 0x4
L_400769:
L_66842:
	movq 0x80(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%rbp)
L_66733:
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_66734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400770:
L_67039:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
L_66822:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_66823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400771:
L_67038:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_66812:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_400772
L_66814:
	movl %r13d,0xA0(%rbp)
	movq $0x4023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_66815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400772:
L_66295:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400773:
L_67037:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_66802:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66295
L_66804:
	movl %r13d,0xA0(%rbp)
	movq $0x4023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_66805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400775:
L_67036:
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
L_66753:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_400776
L_66785:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_66786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400776:
L_66754:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_66755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400777:
L_67218:
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
L_66703:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_66704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400778:
L_67214:
	cmpq $0x1,%r15
	je L_67034
L_67215:
	movq %r15,0x28(%rbp)
	jmp L_66703
.p2align 0x4
L_400780:
L_67041:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r15
	je L_66697
L_67042:
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_67043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400782:
L_67031:
	cmpq $0x1,%r15
	je L_67034
L_67032:
	movq %r15,0x28(%rbp)
	jmp L_66703
.p2align 0x4
L_400784:
L_66698:
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r15
	je L_66697
L_66699:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_400785
L_67029:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_66701:
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (deObject_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1349
.p2align 0x4
L_400785:
L_66700:
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	jmp L_66701
.p2align 0x4
L_400787:
.p2align 0x4,,0x7
L_66322:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400788
.p2align 0x4,,0x7
L_66323:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_66324
.p2align 0x4
L_400788:
L_66341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66342
.p2align 0x4
.long 0xE84
L_66342:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_66323
.p2align 0x4
L_400789:
L_66302:
	movq 0x8(%rbp),%r15
	movq $0x1791,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp concatV_0
.p2align 0x4
L_400790:
L_67220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_67221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67221
.p2align 0x4
.long 0x6FF
L_67221:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_66301
.p2align 0x4
L_400792:
L_67223:
	movq (globalObjptr+0x2308)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_66300
.p2align 0x4
.long 0xE7F
deObject_5:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66307
L_66658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_66659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66659
.p2align 0x4
.long 0xEAD
L_66659:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_66307:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400807
simple_14:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF2E,%r14
	je L_66322
	cmpq $0xF2F,%r14
	je L_400796
L_66308:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_400795
L_66374:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400795:
L_66309:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400796:
L_66391:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF28,%r15
	je L_400804
	cmpq $0xF29,%r15
	je L_400802
	cmpq $0xF2A,%r15
	je L_400800
	cmpq $0xF2B,%r15
	je L_400799
	cmpq $0xF2C,%r15
	je L_400797
L_66392:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400797:
L_66496:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_400798
L_66497:
L_66399:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x28(%rbp)
	jmp L_66322
.p2align 0x4
L_400798:
L_66498:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_66399
.p2align 0x4
L_400799:
L_66478:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_66479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400800:
L_66469:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66471:
	movl %r13d,0x58(%rbp)
	movq $0x3FA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_66472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400802:
L_66460:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66462:
	movl %r13d,0x58(%rbp)
	movq $0x3FA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_66463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400804:
L_66412:
	movl 0x0(%r14),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_400805
L_66444:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_66445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400805:
L_66413:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_66414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400807:
L_66499:
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_66500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xEAE
L_66665:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66666
L_66694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_66695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66695
.p2align 0x4
.long 0xEB0
L_66695:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_66666:
	movq 0x68(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r10),%r14
	movq 0x80(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_400820
L_66668:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400819
L_66669:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66671:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400818
L_66685:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400817
L_66686:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400814
L_66672:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_66325
L_66673:
	cmpq $0x1,%r15
	je L_400809
L_66674:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_66671
.p2align 0x4
L_400809:
L_66675:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66676
L_66683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_66684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66684
.p2align 0x4
.long 0xEAF
L_66684:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_66676:
	movl 0x40(%rbp),%ecx
L_66677:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400811
L_66679:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66681
L_66682:
	movl %ecx,0x0(%r15)
L_66681:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
L_400811:
L_66678:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400814:
L_66688:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_66689:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66691
L_66692:
	movl %ecx,0x0(%r15)
L_66691:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400817:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66672
.p2align 0x4
L_400818:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66672
.p2align 0x4
L_400819:
L_66693:
	xorl %ecx,%ecx
	jmp L_66677
.p2align 0x4
L_400820:
L_66667:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xEB4
L_66728:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66729
L_66750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66751
.p2align 0x4
.long 0xEB8
L_66751:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66729:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_164
L_66730:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_697
L_66731:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_400822
L_66732:
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_66733
.p2align 0x4
L_400822:
L_66740:
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66736
.p2align 0x4
bug_697:
bug_164:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEB5
L_66734:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_66735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
.long 0xEC0
L_66823:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66824
L_66838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66839
.p2align 0x4
.long 0xEC1
L_66839:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66824:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_172
L_66825:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_699
L_66826:
	movq $0x1E57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_400824
L_66827:
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_66733
.p2align 0x4
L_400824:
L_66828:
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66736
.p2align 0x4
bug_699:
bug_172:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEBE
L_66815:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66816
L_66819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66820
.p2align 0x4
.long 0xEBF
L_66820:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66816:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_400826
L_66817:
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_66733
.p2align 0x4
L_400826:
L_66818:
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66736
.p2align 0x4
.long 0xEBE
L_66805:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66806
L_66809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66810
.p2align 0x4
.long 0xEBF
L_66810:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66806:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_400828
L_66807:
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp L_66733
.p2align 0x4
L_400828:
L_66808:
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66736
.p2align 0x4
.long 0xEBC
L_66786:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66787
L_66799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66800
.p2align 0x4
.long 0xEBD
L_66800:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66787:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_170
L_66788:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_701
L_66789:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_66762:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_400830
L_66763:
	movq %r14,0x28(%rbp)
	jmp L_66733
.p2align 0x4
L_400830:
L_66764:
	movq %r14,0x30(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_66736
.p2align 0x4
bug_701:
bug_170:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEB9
L_66755:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r14
	je bug_168
L_66756:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je bug_703
L_66757:
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_66758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_703:
bug_168:
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEB2
L_66704:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400832
L_66705:
	movq %r15,0xA0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_66706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400832:
L_66860:
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_66861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xEDE
L_67043:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400833
L_67044:
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66703
.p2align 0x4
L_400833:
L_67045:
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_67046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xEB1
deObject_6:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400834
L_66702:
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_66703
.p2align 0x4
L_400834:
L_66879:
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_66880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xE87
L_66375:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66376
L_66388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66389
.p2align 0x4
.long 0xE88
L_66389:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66376:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_144
L_66377:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_705
L_66378:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_66317:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_705:
bug_144:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE80
L_66310:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r14
	je bug_142
L_66311:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r15
	je bug_707
L_66312:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_66313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_707:
bug_142:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE89
L_66393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66394
L_66410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66411
.p2align 0x4
.long 0xE8A
L_66411:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66394:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_146
L_66395:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_709
L_66396:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_400836
L_66397:
	movq %r15,%r14
	movq %r13,%r15
	jmp L_66399
.p2align 0x4
L_400836:
L_66400:
	movq $0x1,%r11
	movq %r15,%r14
	movq %r11,%r15
	jmp L_66399
.p2align 0x4
bug_709:
bug_146:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE92
L_66479:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66480
L_66494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66495
.p2align 0x4
.long 0xE93
L_66495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66480:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_154
L_66481:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_711
L_66482:
	movq $0x1E57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_400838
L_66483:
	movq %r15,%r14
	movq %r13,%r15
	jmp L_66399
.p2align 0x4
L_400838:
L_66484:
	movq $0x1,%r11
	movq %r15,%r14
	movq %r11,%r15
	jmp L_66399
.p2align 0x4
bug_711:
bug_154:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE90
L_66472:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66473
L_66476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_66477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66477
.p2align 0x4
.long 0xE91
L_66477:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_66473:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_400840
L_66474:
	jmp L_66399
.p2align 0x4
L_400840:
L_66475:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_66399
.p2align 0x4
.long 0xE90
L_66463:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66464
L_66467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_66468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66468
.p2align 0x4
.long 0xE91
L_66468:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_66464:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_400842
L_66465:
	jmp L_66399
.p2align 0x4
L_400842:
L_66466:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_66399
.p2align 0x4
.long 0xE8E
L_66445:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66446
L_66458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66459
.p2align 0x4
.long 0xE8F
L_66459:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66446:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_152
L_66447:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_713
L_66448:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_66421:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_400844
L_66422:
	jmp L_66399
.p2align 0x4
L_400844:
L_66423:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_66399
.p2align 0x4
bug_713:
bug_152:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE8B
L_66414:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r14
	je bug_150
L_66415:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je bug_715
L_66416:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_715:
bug_150:
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE94
L_66500:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movslq 0x48(%rbp),%r13
	movq %r13,0xB0(%rbp)
	cmpq %r14,%r13
	jnb L_400847
L_66503:
	salq $0x4,%r13
	movq 0x8(%r15,%r13,1),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF40,%r15
	je L_400846
L_66504:
	movq %r14,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_66505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400846:
L_66639:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_66640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
L_400847:
L_66502:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66742:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66743
L_66747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66748
.p2align 0x4
.long 0x452
L_66748:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66743:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xEB6
L_66735:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_66736
.p2align 0x4
.long 0x1
L_66830:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66831
L_66835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66836
.p2align 0x4
.long 0x452
L_66836:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66831:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66791:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66792
L_66796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66797
.p2align 0x4
.long 0x452
L_66797:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66792:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xEBA
L_66758:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66759
L_66774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_66775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66775
.p2align 0x4
.long 0xEBB
L_66775:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_66759:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_166
L_66760:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_717
L_66761:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_66762
.p2align 0x4
bug_717:
bug_166:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66777:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66778
L_66782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66783
.p2align 0x4
.long 0x452
L_66783:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66778:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xEB3
L_66706:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66707
L_66858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66859
.p2align 0x4
.long 0xEC4
L_66859:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66707:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_66708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0xEC5
L_66861:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66862
L_66877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66878
.p2align 0x4
.long 0xECA
L_66878:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66862:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_400856
L_66864:
	movq 0x60(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_400854
L_66865:
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_66866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400854:
L_66876:
	movq $0x1,0x38(%rbp)
L_66868:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66870:
	movl %r13d,0xA8(%rbp)
	movq $0x3ADD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (x_174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400856:
	movq %r14,%r15
L_66710:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_400874
L_66711:
	movq 0x0(%r13),%r15
	movq $0x1E77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
L_66712:
	movq 0x58(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66667
L_66713:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400872
L_66714:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66716:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400871
L_66847:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400870
L_66848:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400867
L_66717:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_66325
L_66718:
	cmpq $0x1,%r15
	je L_400857
L_66719:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_66716
.p2align 0x4
L_400857:
L_66720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66721
L_66845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66846
.p2align 0x4
.long 0xEC2
L_66846:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66721:
	movl 0x28(%rbp),%ecx
L_66722:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_66723:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66725
L_66844:
	movl %ecx,0x0(%r15)
L_66725:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_400862
	cmpq $0xF29,%r14
	je L_400861
	cmpq $0xF2A,%r14
	je L_400860
	cmpq $0xF2B,%r14
	je L_400859
	cmpq $0xF2C,%r14
	je L_66841
L_66726:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	jmp L_66727
.p2align 0x4
L_400859:
L_66821:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	jmp L_66822
.p2align 0x4
L_400860:
L_66811:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_66812
.p2align 0x4
L_400861:
L_66801:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_66802
.p2align 0x4
L_400862:
L_66752:
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	jmp L_66753
.p2align 0x4
L_400867:
L_66850:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_66851:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66691
L_66853:
	movl %ecx,0x0(%r15)
	jmp L_66691
.p2align 0x4
L_400870:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66717
.p2align 0x4
L_400871:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66717
.p2align 0x4
L_400872:
L_66854:
	xorl %ecx,%ecx
	jmp L_66722
.p2align 0x4
L_400874:
L_66855:
	movq %r15,0x38(%rbp)
	jmp L_66712
.p2align 0x4
.long 0xEDF
L_67046:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67047
L_67211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67212
.p2align 0x4
.long 0xEE0
L_67212:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67047:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r14,%r11
	jne L_66295
L_67049:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_66295
L_67051:
	cmpl %r11d,%r13d
	je L_400876
L_67052:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400876:
L_67053:
	movq 0x38(%rbp),%r15
	testq %r15,%r15
	jz L_400881
L_67054:
	cmpq $0x7FFFFFFF,%r15
	ja L_66339
L_67055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67056
L_67207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67208
.p2align 0x4
.long 0xEE0
L_67208:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67056:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x155D,%rcx
	movq 0x38(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67057
.p2align 0x4
.long 0xEE0
L_67057:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x40(%rbp)
L_67058:
	movq $0x0,0x88(%rbp)
loop_790:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_400878
L_67059:
	movq 0x40(%rbp),%r15
	movq $0xB6B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66295
L_67061:
	movq $0x3AD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	movl %r13d,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_67062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400878:
L_67172:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq 0x70(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0xB8(%rbp)
	salq $0x4,%r14
	movq 0xA8(%rbp),%r15
	movl 0x0(%r15,%r14,1),%r11d
	movl %r11d,0x90(%rbp)
	salq $0x4,%r13
	movq 0x8(%r15,%r13,1),%r14
	movq %r14,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_67173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400881:
L_67210:
	movq (globalObjptr+0x2300)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_67058
.p2align 0x4
.long 0xECB
L_66880:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_66881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
.long 0xE82
L_66318:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66319
L_66352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66353
.p2align 0x4
.long 0xE85
L_66353:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66319:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_138
L_66320:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_719
L_66321:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_66322
.p2align 0x4
bug_719:
bug_138:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66380:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66381
L_66385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66386
.p2align 0x4
.long 0x452
L_66386:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66381:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xE81
L_66313:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66314
L_66363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_66364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66364
.p2align 0x4
.long 0xE86
L_66364:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_66314:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_140
L_66315:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_721
L_66316:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	jmp L_66317
.p2align 0x4
bug_721:
bug_140:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66366:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66367
L_66371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66372
.p2align 0x4
.long 0x452
L_66372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66367:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66402:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66403
L_66407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66408
.p2align 0x4
.long 0x452
L_66408:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66403:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66486:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66487
L_66491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66492
.p2align 0x4
.long 0x452
L_66492:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66487:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66450:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66451
L_66455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66456
.p2align 0x4
.long 0x452
L_66456:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66451:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xE8C
L_66417:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66418
L_66433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66434
.p2align 0x4
.long 0xE8D
L_66434:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66418:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_148
L_66419:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_723
L_66420:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_66421
.p2align 0x4
bug_723:
bug_148:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66436:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66437
L_66441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66442
.p2align 0x4
.long 0x452
L_66442:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66437:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xE95
L_66505:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66506
L_66637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66638
.p2align 0x4
.long 0xEA6
L_66638:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66506:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_66507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0xEA7
L_66640:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66641
L_66656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_66657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66657
.p2align 0x4
.long 0xEAC
L_66657:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_66641:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400905
L_66642:
	movq %r14,0x28(%rbp)
L_66509:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_400902
L_66603:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_66295
L_66605:
	cmpl $0x0,%r13d
	jl L_400900
L_66606:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x44(%rbp)
	movl $0x0,0x58(%rbp)
loop_788:
	movl 0x40(%rbp),%r14d
	cmpl %r14d,0x58(%rbp)
	jl L_400899
L_66607:
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_400898
L_66608:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_66609:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_66325
L_66610:
	cmpq $0x1,%r15
	je L_400895
L_66611:
	movq 0x8(%r15),%r15
	jmp L_66609
.p2align 0x4
L_400895:
L_66612:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66613
L_66623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66624
.p2align 0x4
.long 0xEA2
L_66624:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66613:
	movl 0x48(%rbp),%ecx
L_66614:
	movl %ecx,0xC8(%rbp)
	movq $0x3769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_66615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_400898:
L_66625:
	xorl %ecx,%ecx
	jmp L_66614
.p2align 0x4
L_400899:
L_66626:
	movslq 0x58(%rbp),%r15
	salq $0x4,%r15
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (length_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalTypes_0
.p2align 0x4
L_400900:
L_66634:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400902:
	movq %r14,%r15
L_66511:
	movq 0xB0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_66502
L_66513:
	movl 0x0(%r15,%r14,4),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_400903
L_66587:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_66588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400903:
L_66514:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x88(%rbp)
	movq %r13,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_66515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400905:
L_66643:
	movq 0x40(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_400906
L_66644:
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_66645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400906:
L_66655:
	movq $0x1,0x28(%rbp)
L_66647:
	movq 0xC0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66649:
	movl %r13d,0xC8(%rbp)
	movq $0x3ADD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (x_173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0x1
bug_165:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66744
L_66745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66746
.p2align 0x4
.long 0x452
L_66746:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66744:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_173:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66832
L_66833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66834
.p2align 0x4
.long 0x452
L_66834:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66832:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_171:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66793
L_66794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66795
.p2align 0x4
.long 0x452
L_66795:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66793:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66766:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66767
L_66771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66772
.p2align 0x4
.long 0x452
L_66772:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66767:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_169:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66779
L_66780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66781
.p2align 0x4
.long 0x452
L_66781:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66779:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xEB2
L_66708:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66709
L_66856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66857
.p2align 0x4
.long 0xEC3
L_66857:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66709:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_66710
.p2align 0x4
.long 0xEC6
L_66866:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66867
L_66874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66875
.p2align 0x4
.long 0xEC9
L_66875:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66867:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp L_66868
.p2align 0x4
.long 0xEC7
x_174:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66871
L_66872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66873
.p2align 0x4
.long 0xEC8
L_66873:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66871:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_66710
.p2align 0x4
.long 0xEE1
L_67062:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67063
L_67170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67171
.p2align 0x4
.long 0xEEC
L_67171:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67063:
	movq 0x30(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_400917
L_67064:
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_67065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400917:
L_67145:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq 0x68(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r10),%r14
	movq 0x80(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66667
L_67146:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400928
L_67147:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_67149:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400927
L_67162:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400926
L_67163:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400923
L_67150:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_66325
L_67151:
	cmpq $0x1,%r15
	je L_400918
L_67152:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_67149
.p2align 0x4
L_400918:
L_67153:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67154
L_67160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67161
.p2align 0x4
.long 0xEAF
L_67161:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67154:
	movl 0x40(%rbp),%ecx
L_67155:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_67156:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_67158
L_67159:
	movl %ecx,0x0(%r15)
L_67158:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
L_400923:
L_67165:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_67166:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66691
L_67168:
	movl %ecx,0x0(%r15)
	jmp L_66691
.p2align 0x4
L_400926:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_67150
.p2align 0x4
L_400927:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_67150
.p2align 0x4
L_400928:
L_67169:
	xorl %ecx,%ecx
	jmp L_67155
.p2align 0x4
.long 0xEED
L_67173:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_400931
L_67174:
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_67175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400931:
L_67188:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_67189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0xECC
L_66881:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66882
L_67027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67028
.p2align 0x4
.long 0xEDD
L_67028:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_66882:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movslq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_66502
L_66884:
	movq %r15,%r11
	salq $0x4,%r11
	movl 0x0(%r14,%r11,1),%r10d
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r11
	cmpq $0x1,%r13
	je L_400936
L_66885:
	testl %r10d,%r10d
	jnz L_400933
L_66886:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF3C,%r14
	je L_400932
L_66998:
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
L_66999:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_67000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400932:
L_66887:
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
L_66888:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_66889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400933:
L_67015:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	cmpq $0x1,%r14
	je L_400935
L_67016:
	movq 0x0(%r14),%r13
	movq $0x1E77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
L_67017:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66295
L_67019:
	movl %r13d,0xC0(%rbp)
	movq $0x3AD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	addq $0xB8,%rbp
	leaq (x_175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400935:
L_67025:
	movq $0x1,0x28(%rbp)
	jmp L_67017
.p2align 0x4
L_400936:
L_67026:
	movq %r11,0x30(%rbp)
	movq $0x1,0x28(%rbp)
L_66905:
	movq 0x68(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r10),%r14
	movq 0x80(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66667
L_66906:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400948
L_66907:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66909:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400947
L_66924:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400946
L_66925:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_400943
L_66910:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_66325
L_66911:
	cmpq $0x1,%r15
	je L_400937
L_66912:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_66909
.p2align 0x4
L_400937:
L_66913:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66914
L_66922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66923
.p2align 0x4
.long 0xECF
L_66923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66914:
	movl 0x48(%rbp),%ecx
L_66915:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_66916:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66918
L_66921:
	movl %ecx,0x0(%r15)
L_66918:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_400938
L_66919:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_66324
.p2align 0x4
L_400938:
L_66920:
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
L_400943:
L_66927:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_66928:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66691
L_66930:
	movl %ecx,0x0(%r15)
	jmp L_66691
.p2align 0x4
L_400946:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66910
.p2align 0x4
L_400947:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66910
.p2align 0x4
L_400948:
L_66931:
	xorl %ecx,%ecx
	jmp L_66915
.p2align 0x4
.long 0x1
L_66344:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66345
L_66349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66350
.p2align 0x4
.long 0x452
L_66350:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66345:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_145:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66382
L_66383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66384
.p2align 0x4
.long 0x452
L_66384:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66382:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66355:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66356
L_66360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66361
.p2align 0x4
.long 0x452
L_66361:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66356:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_143:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66368
L_66369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66370
.p2align 0x4
.long 0x452
L_66370:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66368:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_147:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66404
L_66405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66406
.p2align 0x4
.long 0x452
L_66406:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66404:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_155:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66488
L_66489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66490
.p2align 0x4
.long 0x452
L_66490:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66488:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_153:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66452
L_66453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66454
.p2align 0x4
.long 0x452
L_66454:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66452:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66425:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66426
L_66430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66431
.p2align 0x4
.long 0x452
L_66431:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66426:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_151:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66438
L_66439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66440
.p2align 0x4
.long 0x452
L_66440:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66438:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE96
L_66507:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66508
L_66635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66636
.p2align 0x4
.long 0xEA5
L_66636:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66508:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_66509
.p2align 0x4
.long 0xEA1
L_66615:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66616
L_66621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66622
.p2align 0x4
.long 0xEA2
L_66622:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66616:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66618:
	movl %r13d,%r14d
	decl %r14d
	jo L_66325
L_66619:
	movl %r13d,0xC8(%rbp)
	movq $0x376B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_66620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
.long 0xEA3
length_12:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66627
L_66631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66632
.p2align 0x4
.long 0xEA4
L_66632:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66627:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66295
L_66629:
	movl 0x44(%rbp),%r15d
	addl %r15d,%r13d
	jo L_66325
L_66630:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl %r13d,0x44(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	incl 0x58(%rbp)
	jmp loop_788
.p2align 0x4
.long 0xE9F
L_66588:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66589
L_66601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_66602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66602
.p2align 0x4
.long 0xEA0
L_66602:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_66589:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_162
L_66590:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_725
L_66591:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
L_66522:
	movq 0x28(%rbp),%r15
	cmpq $0x1,0x8(%r15)
	je L_400968
L_66523:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400968:
L_66539:
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_66540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_725:
bug_162:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE97
L_66515:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r14
	je bug_160
L_66516:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je bug_727
L_66517:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_66518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_727:
bug_160:
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEA8
L_66645:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66646
L_66653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_66654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66654
.p2align 0x4
.long 0xEAB
L_66654:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_66646:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_66647
.p2align 0x4
.long 0xEA9
x_173:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66650
L_66651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_66652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66652
.p2align 0x4
.long 0xEAA
L_66652:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_66650:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x28(%rbp)
	jmp L_66509
.p2align 0x4
.long 0x1
bug_167:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66768
L_66769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66770
.p2align 0x4
.long 0x452
L_66770:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66768:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xEE2
L_67065:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67066
L_67143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67144
.p2align 0x4
.long 0xEEB
L_67144:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67066:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x48(%rbp)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x50(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x68(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x58(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66667
L_67067:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_400990
L_67068:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_67070:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400989
L_67135:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_400988
L_67136:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_400985
L_67071:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_66325
L_67072:
	cmpq $0x1,%r15
	je L_400973
L_67073:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_67070
.p2align 0x4
L_400973:
L_67074:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67075
L_67133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67134
.p2align 0x4
.long 0xEE4
L_67134:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67075:
	movl 0x3C(%rbp),%ecx
L_67076:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_67077:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_67079
L_67132:
	movl %ecx,0x0(%r15)
L_67079:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_66295
L_67081:
	decl %ecx
	jo L_66325
L_67082:
	movq $0x1,0x48(%rbp)
loop_791:
	cmpl $0x0,%ecx
	jl L_400974
L_67083:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x98(%rbp)
	movq $0x1,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_67084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3825
.p2align 0x4
L_400974:
L_67096:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_400978
L_67097:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_67098:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_66325
L_67099:
	cmpq $0x1,%r15
	je L_400975
L_67100:
	movq 0x8(%r15),%r15
	jmp L_67098
.p2align 0x4
L_400975:
L_67101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67102
L_67129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67130
.p2align 0x4
.long 0xEEA
L_67130:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67102:
	movl 0x3C(%rbp),%ecx
L_67103:
	movl %ecx,0x98(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_67104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_400978:
L_67131:
	xorl %ecx,%ecx
	jmp L_67103
.p2align 0x4
L_400985:
L_67138:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66678
L_67139:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66691
L_67141:
	movl %ecx,0x0(%r15)
	jmp L_66691
.p2align 0x4
L_400988:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_67071
.p2align 0x4
L_400989:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_67071
.p2align 0x4
L_400990:
L_67142:
	xorl %ecx,%ecx
	jmp L_67076
.p2align 0x4
.long 0xEEE
L_67175:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67176
L_67186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67187
.p2align 0x4
.long 0xEF1
L_67187:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67176:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_67177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
.long 0xEF3
L_67189:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67190
L_67205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_67206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67206
.p2align 0x4
.long 0xEF8
L_67206:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_67190:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_400996
L_67192:
	movq 0xB0(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_400994
L_67193:
	movq 0x98(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_67194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_400994:
L_67204:
	movq $0x1,0x98(%rbp)
L_67196:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_67198:
	movl %r13d,0xE0(%rbp)
	movq $0x3ADD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (x_176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_400996:
	movq %r14,%r15
L_67179:
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_67180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1401
.p2align 0x4
.long 0xED9
L_67000:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67001
L_67013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67014
.p2align 0x4
.long 0xEDA
L_67014:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67001:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_178
L_67002:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_729
L_67003:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
L_66896:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_401005
L_66944:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_66295
L_66946:
	cmpl $0x0,%r11d
	jl L_66634
L_66947:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x3C(%rbp)
	movl $0x0,0x50(%rbp)
loop_789:
	movl 0x38(%rbp),%r14d
	cmpl %r14d,0x50(%rbp)
	jl L_401002
L_66948:
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_401001
L_66949:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_66950:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_66325
L_66951:
	cmpq $0x1,%r15
	je L_400998
L_66952:
	movq 0x8(%r15),%r15
	jmp L_66950
.p2align 0x4
L_400998:
L_66953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66954
L_66967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66968
.p2align 0x4
.long 0xED5
L_66968:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66954:
	movl 0x48(%rbp),%ecx
L_66955:
	movl %ecx,0xA8(%rbp)
	movq $0x3769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_66956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_401001:
L_66969:
	xorl %ecx,%ecx
	jmp L_66955
.p2align 0x4
L_401002:
L_66970:
	movslq 0x50(%rbp),%r15
	salq $0x4,%r15
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (length_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalTypes_0
.p2align 0x4
L_401005:
	movq %r14,%r15
L_66898:
	movq 0x40(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_66502
L_66900:
	movl 0x0(%r15,%r13,4),%r11d
	movl %r11d,0x38(%rbp)
	movq $0xB69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_401008
L_66901:
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,0x8(%r15)
	je L_401007
L_66902:
	movq $0x1,%r15
L_66903:
	movl 0x38(%rbp),%r13d
	incl %r13d
	jo L_66325
L_66904:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_66905
.p2align 0x4
L_401007:
L_66932:
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_66933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401008:
L_66937:
	movq $0xB67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x38(%rbp),%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq 0x48(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_66295
L_66939:
	movl %r9d,0x98(%rbp)
	movq $0x3AD7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x20,%r12
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	movq %r10,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_66940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
bug_729:
bug_178:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_67005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xECD
L_66889:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r14
	je bug_176
L_66890:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je bug_731
L_66891:
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_66892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
bug_731:
bug_176:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xEDB
x_175:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67020
L_67023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67024
.p2align 0x4
.long 0xEDC
L_67024:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67020:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_401012
L_67022:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_66999
.p2align 0x4
L_401012:
L_67021:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	jmp L_66888
.p2align 0x4
.long 0x1
bug_139:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66346
L_66347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66348
.p2align 0x4
.long 0x452
L_66348:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66346:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_141:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66357
L_66358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66359
.p2align 0x4
.long 0x452
L_66359:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66357:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_149:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66427
L_66428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66429
.p2align 0x4
.long 0x452
L_66429:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66427:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xEA1
L_66620:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_66511
.p2align 0x4
.long 0xE82
L_66524:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66525
L_66537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66538
.p2align 0x4
.long 0xE85
L_66538:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66525:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_156
L_66526:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_733
L_66527:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_66324
.p2align 0x4
bug_733:
bug_156:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xE99
L_66540:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_66541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1401
.p2align 0x4
.long 0x1
L_66593:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66594
L_66598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66599
.p2align 0x4
.long 0x452
L_66599:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66594:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xE98
L_66518:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66519
L_66576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_66577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66577
.p2align 0x4
.long 0xE9E
L_66577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_66519:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_158
L_66520:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_735
L_66521:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	jmp L_66522
.p2align 0x4
bug_735:
bug_158:
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66579:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66580
L_66584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66585
.p2align 0x4
.long 0x452
L_66585:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66580:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xEE3
L_67084:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67085
L_67094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67095
.p2align 0x4
.long 0xEE5
L_67095:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67085:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_401023
L_67086:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x48(%rbp)
.p2align 0x4,,0x7
L_67087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401022
.p2align 0x4,,0x7
L_67088:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_401021
L_67089:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_67087
.p2align 0x4
L_401021:
L_67090:
	movq %r15,0x48(%rbp)
	movl 0x3C(%rbp),%ecx
	jmp loop_791
.p2align 0x4
L_401022:
L_67091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67092
.p2align 0x4
.long 0xEE4
L_67092:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_67088
.p2align 0x4
L_401023:
L_67093:
	movl 0x3C(%rbp),%ecx
	jmp loop_791
.p2align 0x4
.long 0xEE6
L_67104:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67105
L_67127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_67128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67128
.p2align 0x4
.long 0xEE9
L_67128:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_67105:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movl 0x38(%rbp),%ecx
	decl %ecx
	jo L_66325
L_67106:
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
loop_792:
	cmpl $0x0,%ecx
	jl L_401031
L_67107:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x30(%rbp)
	movslq %ecx,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	cmpq $0x1,0x28(%rbp)
	je L_401030
L_67108:
	cmpq $0x1,%r13
	je L_401029
L_67109:
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_67110:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401028
.p2align 0x4,,0x7
L_67111:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_401025
L_67112:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_67110
.p2align 0x4
L_401025:
L_67113:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
L_67114:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401027
.p2align 0x4,,0x7
L_67115:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_401026
L_67116:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_67114
.p2align 0x4
L_401026:
L_67117:
	movq %r15,0x28(%rbp)
	movl 0x30(%rbp),%ecx
	jmp loop_792
.p2align 0x4
L_401027:
L_67118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67119
.p2align 0x4
.long 0xEE7
L_67119:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_67115
.p2align 0x4
L_401028:
L_67120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67121
.p2align 0x4
.long 0xEE8
L_67121:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_67111
.p2align 0x4
L_401029:
L_67122:
	movl 0x30(%rbp),%ecx
	jmp loop_792
.p2align 0x4
L_401030:
L_67123:
	movq %r13,0x28(%rbp)
	movl 0x30(%rbp),%ecx
	jmp loop_792
.p2align 0x4
L_401031:
L_67124:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_401032
L_67125:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_66324
.p2align 0x4
L_401032:
L_67126:
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
.long 0xEEF
L_67177:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67178
L_67184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_67185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67185
.p2align 0x4
.long 0xEF2
L_67185:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_67178:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_67179
.p2align 0x4
.long 0xEF4
L_67194:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67195
L_67202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_67203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67203
.p2align 0x4
.long 0xEF7
L_67203:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_67195:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x98(%rbp)
	jmp L_67196
.p2align 0x4
.long 0xEF5
x_176:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67199
L_67200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_67201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67201
.p2align 0x4
.long 0xEF6
L_67201:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_67199:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_67179
.p2align 0x4
.long 0xEF0
L_67180:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67181
L_67182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_67183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67183
.p2align 0x4
.long 0xEF1
L_67183:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_67181:
	movq $0x178D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x98(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_790
.p2align 0x4
.long 0xED4
L_66956:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66957
L_66965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66966
.p2align 0x4
.long 0xED5
L_66966:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66957:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_66295
L_66959:
	movl %r13d,%r14d
	decl %r14d
	jo L_66325
L_66960:
	movl %r13d,0xA8(%rbp)
	movq $0x376B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_66961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
.long 0xED6
length_13:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66971
L_66975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_66976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66976
.p2align 0x4
.long 0xED7
L_66976:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_66971:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_66295
L_66973:
	movl 0x3C(%rbp),%r15d
	addl %r15d,%r13d
	jo L_66325
L_66974:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl %r13d,0x3C(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	incl 0x50(%rbp)
	jmp loop_789
.p2align 0x4
.long 0xED0
L_66933:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66934
L_66935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_66936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66936
.p2align 0x4
.long 0xED1
L_66936:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_66934:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r11)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x10(%r10)
	addq $0x20,%r12
	movq %r14,0x8(%r10)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r11,%r14
	jmp L_66903
.p2align 0x4
.long 0xED2
L_66940:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66941
L_66942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_66943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66943
.p2align 0x4
.long 0xED3
L_66943:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_66941:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_66905
.p2align 0x4
.long 0x1
L_67005:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67006
L_67010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_67011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67011
.p2align 0x4
.long 0x452
L_67011:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_67006:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xECE
L_66892:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66893
L_66987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_66988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66988
.p2align 0x4
.long 0xED8
L_66988:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_66893:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_174
L_66894:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_737
L_66895:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_66896
.p2align 0x4
bug_737:
bug_174:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_66990:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66991
L_66995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66996
.p2align 0x4
.long 0x452
L_66996:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66991:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66529:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66530
L_66534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66535
.p2align 0x4
.long 0x452
L_66535:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66530:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xE9A
L_66541:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66542
L_66565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66566
.p2align 0x4
.long 0xE9D
L_66566:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66542:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x60(%rbp)
	movq $0x178F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3826
.p2align 0x4
.long 0x1
bug_163:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66595
L_66596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66597
.p2align 0x4
.long 0x452
L_66597:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66595:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66568:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66569
L_66573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66574
.p2align 0x4
.long 0x452
L_66574:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66569:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_161:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66581
L_66582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66583
.p2align 0x4
.long 0x452
L_66583:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66581:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xED4
L_66961:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66962
L_66963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_66964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66964
.p2align 0x4
.long 0xED5
L_66964:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_66962:
	movq 0x90(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_66898
.p2align 0x4
.long 0x1
bug_179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67007
L_67008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_67009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67009
.p2align 0x4
.long 0x452
L_67009:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_67007:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66979:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66980
L_66984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66985
.p2align 0x4
.long 0x452
L_66985:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66980:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_177:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66992
L_66993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66994
.p2align 0x4
.long 0x452
L_66994:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66992:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_157:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66531
L_66532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66533
.p2align 0x4
.long 0x452
L_66533:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66531:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE9B
L_66543:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_401066
L_66544:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_401065
L_66545:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_66546:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401064
.p2align 0x4,,0x7
L_66547:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_401060
L_66548:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_66546
.p2align 0x4
L_401060:
L_66549:
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_66550:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401063
.p2align 0x4,,0x7
L_66551:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_401061
L_66552:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_66550
.p2align 0x4
L_401061:
L_66554:
	cmpq $0x1,%r15
	je L_401062
L_66555:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_66324
.p2align 0x4
L_401062:
L_66556:
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
L_401063:
L_66557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66558
.p2align 0x4
.long 0xE9C
L_66558:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_66551
.p2align 0x4
L_401064:
L_66559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_66560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66560
.p2align 0x4
.long 0xE91
L_66560:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_66547
.p2align 0x4
L_401065:
L_66561:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66554
.p2align 0x4
L_401066:
L_66562:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_401067
L_66563:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_66324
.p2align 0x4
L_401067:
L_66564:
	xorl %ecx,%ecx
	jmp L_66329
.p2align 0x4
.long 0x1
bug_159:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66570
L_66571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66572
.p2align 0x4
.long 0x452
L_66572:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66570:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_175:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66981
L_66982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66983
.p2align 0x4
.long 0x452
L_66983:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66981:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
