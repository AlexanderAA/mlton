/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:18:50 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl checkSyntaxSigexp_0
.hidden checkSyntaxSigexp_0
checkSyntaxSigexp_0:
L_278272:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278273
L_278285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278286
.p2align 0x4
.long 0x460
L_278286:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278273:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE24,%r15
	je L_493265
	cmpq $0xE25,%r15
	je L_493264
L_278274:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp checkSyntaxSpec_0
.p2align 0x4
L_493264:
L_278284:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493265:
L_278275:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
.long 0x491
L_278276:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_493267
L_278277:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493267:
L_278278:
	cmpl $0x0,0x20(%rbp)
	jl L_493269
L_278279:
	movl $0x0,0x24(%rbp)
loop_3271:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_493268
L_278280:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493268:
L_278281:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_278282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493269:
L_278283:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_278282:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x24(%rbp)
	jmp loop_3271
.text
.p2align 0x4
.globl checkSyntaxSpec_0
.hidden checkSyntaxSpec_0
checkSyntaxSpec_0:
loopS_30:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278287
L_278624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278625
.p2align 0x4
.long 0x460
L_278625:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278287:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3272:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_493331
L_278288:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xE19,%rax
	cmpq $0x9,%rax
	ja L_493270
	jmp *jumpTable_760(,%rax,8)
.data
.p2align 0x4
jumpTable_760:
.quad L_493321,L_493313,L_493304,L_493303,L_493302,L_493301,L_493299,L_493289,L_493281,L_493279
.text
.p2align 0x4
L_493270:
L_278289:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_493278
L_278292:
	cmpl $0x0,%r14d
	jl L_493277
L_278293:
	movl $0x0,0x38(%rbp)
loop_3273:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_493276
L_278294:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3274:
	movl 0x30(%rbp),%r14d
	cmpl 0x48(%rbp),%r14d
	jnl L_493275
L_278296:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3275:
	cmpl 0x30(%rbp),%ecx
	je L_493274
L_278297:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_493273
L_278300:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493272
L_278301:
	incl %ecx
	jo L_493271
L_278303:
	jmp loop_3275
.p2align 0x4
L_493271:
L_278302:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493272:
L_278304:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1830)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493273:
L_278299:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493274:
.p2align 0x4,,0x7
L_278329:
	incl 0x30(%rbp)
	jmp loop_3274
.p2align 0x4
L_493275:
L_278295:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493276:
L_278343:
	movslq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_278344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493277:
L_278346:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493278:
L_278291:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493279:
L_278620:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x129D,%r15
	je L_493280
L_278622:
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_493280:
L_278621:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493281:
L_278570:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_278291
L_278572:
	cmpl $0x0,%r14d
	jl L_278346
L_278573:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3287:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_493286
L_278575:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3288:
	cmpl 0x38(%rbp),%ecx
	je L_493285
L_278576:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_278299
L_278578:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493283
L_278579:
	incl %ecx
	jo L_278302
L_278580:
	jmp loop_3288
.p2align 0x4
L_493283:
L_278581:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1800)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493285:
.p2align 0x4,,0x7
L_278606:
	incl 0x38(%rbp)
	jmp loop_3287
.p2align 0x4
L_493286:
L_278574:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493289:
L_278514:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_278291
L_278516:
	cmpl $0x0,%r14d
	jl L_278346
L_278517:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3284:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493291
L_278564:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_493290
.p2align 0x4,,0x7
L_278567:
	incl 0x38(%rbp)
	jmp loop_3284
.p2align 0x4
L_493290:
L_278565:
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_278566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493291:
L_278518:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3285:
	movl 0x30(%rbp),%r14d
	cmpl 0x48(%rbp),%r14d
	jnl L_493296
L_278520:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3286:
	cmpl 0x30(%rbp),%ecx
	je L_493295
L_278521:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_278299
L_278523:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493293
L_278524:
	incl %ecx
	jo L_278302
L_278525:
	jmp loop_3286
.p2align 0x4
L_493293:
L_278526:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1810)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493295:
.p2align 0x4,,0x7
L_278551:
	incl 0x30(%rbp)
	jmp loop_3285
.p2align 0x4
L_493296:
L_278519:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493299:
L_278510:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278511
L_278512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_278513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278513
.p2align 0x4
.long 0x2574
L_278513:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_278511:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x10D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493301:
L_278509:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493302:
L_278507:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSpec_0
.p2align 0x4
L_493303:
L_278506:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_3272
.p2align 0x4
L_493304:
L_278453:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_278291
L_278455:
	cmpl $0x0,%r14d
	jl L_278346
L_278456:
	movl $0x0,0x38(%rbp)
loop_3281:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_493310
L_278457:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3282:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_493309
L_278459:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3283:
	cmpl %ecx,0x38(%rbp)
	je L_493308
L_278460:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_278299
L_278462:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493306
L_278463:
	incl %ecx
	jo L_278302
L_278464:
	jmp loop_3283
.p2align 0x4
L_493306:
L_278465:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1840)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493308:
.p2align 0x4,,0x7
L_278490:
	incl 0x38(%rbp)
	jmp loop_3282
.p2align 0x4
L_493309:
L_278458:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493310:
L_278503:
	movslq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_278504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493313:
L_278403:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_278291
L_278405:
	cmpl $0x0,%r14d
	jl L_278346
L_278406:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3279:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_493318
L_278408:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3280:
	cmpl 0x38(%rbp),%ecx
	je L_493317
L_278409:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_278299
L_278411:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493315
L_278412:
	incl %ecx
	jo L_278302
L_278413:
	jmp loop_3280
.p2align 0x4
L_493315:
L_278414:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1820)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493317:
.p2align 0x4,,0x7
L_278439:
	incl 0x38(%rbp)
	jmp loop_3279
.p2align 0x4
L_493318:
L_278407:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493321:
L_278347:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278348
L_278401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_278402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278402
.p2align 0x4
.long 0x5F4
L_278402:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_278348:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x60(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x68(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_278291
L_278350:
	cmpl $0x0,%r14d
	jl L_278346
L_278351:
	movl $0x0,0x38(%rbp)
loop_3276:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_493327
L_278352:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3277:
	movl 0x38(%rbp),%r14d
	cmpl 0x68(%rbp),%r14d
	jnl L_493326
L_278354:
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3278:
	cmpl %ecx,0x38(%rbp)
	je L_493325
L_278355:
	movslq %ecx,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_278299
L_278357:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493323
L_278358:
	incl %ecx
	jo L_278302
L_278359:
	jmp loop_3278
.p2align 0x4
L_493323:
L_278360:
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_278361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493325:
.p2align 0x4,,0x7
L_278385:
	incl 0x38(%rbp)
	jmp loop_3277
.p2align 0x4
L_493326:
L_278353:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493327:
L_278398:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_278399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493331:
L_278623:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4561
L_278305:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4568
L_278344:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	incl 0x38(%rbp)
	jmp loop_3273
.p2align 0x4
.long 0x8F1
L_278582:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4568
L_278566:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_278567
.p2align 0x4
.long 0x4561
L_278527:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E6
L_278508:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3272
.p2align 0x4
.long 0x8F1
L_278466:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4577
L_278504:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x38(%rbp)
	jmp loop_3281
.p2align 0x4
.long 0x8F1
L_278415:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4569
L_278361:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_278362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4571
L_278399:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	incl 0x38(%rbp)
	jmp loop_3276
.p2align 0x4
.long 0x4561
L_278306:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F1
L_278583:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4561
L_278528:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F1
L_278467:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F1
L_278416:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4569
L_278362:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_278363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4562
L_278307:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278308
L_278340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278341
.p2align 0x4
.long 0x4567
L_278341:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278308:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278309:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_278302
L_278310:
	cmpq $0x1,%r14
	je L_493333
L_278311:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278309
.p2align 0x4
L_493333:
L_278312:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278313
L_278338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278339
.p2align 0x4
.long 0x4566
L_278339:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278313:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493334
L_278314:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278315:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493334:
L_278337:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278315
.p2align 0x4
.long 0x4562
L_278584:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278585
L_278616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278617
.p2align 0x4
.long 0x4576
L_278617:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278585:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278586:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278587:
	cmpq $0x1,%r14
	je L_493338
L_278588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278586
.p2align 0x4
L_493338:
L_278589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278590
L_278614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278615
.p2align 0x4
.long 0x4566
L_278615:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278590:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493339
L_278591:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278592:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493339:
L_278613:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278592
.p2align 0x4
.long 0x4562
L_278529:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278530
L_278561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278562
.p2align 0x4
.long 0x4567
L_278562:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278530:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278531:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_278302
L_278532:
	cmpq $0x1,%r14
	je L_493343
L_278533:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278531
.p2align 0x4
L_493343:
L_278534:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278535
L_278559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278560
.p2align 0x4
.long 0x4566
L_278560:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278535:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493344
L_278536:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278537:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493344:
L_278558:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278537
.p2align 0x4
.long 0x4562
L_278468:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278469
L_278500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278501
.p2align 0x4
.long 0x4576
L_278501:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278469:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278470:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278471:
	cmpq $0x1,%r14
	je L_493348
L_278472:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278470
.p2align 0x4
L_493348:
L_278473:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278474
L_278498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278499
.p2align 0x4
.long 0x4566
L_278499:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278474:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493349
L_278475:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278476:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493349:
L_278497:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278476
.p2align 0x4
.long 0x4562
L_278417:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278418
L_278449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278450
.p2align 0x4
.long 0x4576
L_278450:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278418:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278419:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278420:
	cmpq $0x1,%r14
	je L_493353
L_278421:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278419
.p2align 0x4
L_493353:
L_278422:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278423
L_278447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278448
.p2align 0x4
.long 0x4566
L_278448:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278423:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493354
L_278424:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278425:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493354:
L_278446:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278425
.p2align 0x4
.long 0x456A
L_278363:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278364
L_278395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_278396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278396
.p2align 0x4
.long 0x4570
L_278396:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_278364:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278365:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278366:
	cmpq $0x1,%r14
	je L_493358
L_278367:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278365
.p2align 0x4
L_493358:
L_278368:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278369
L_278393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_278394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278394
.p2align 0x4
.long 0x456F
L_278394:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_278369:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493359
L_278370:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_278371:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_278372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493359:
L_278392:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278371
.p2align 0x4
.long 0x4561
L_278316:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F1
L_278593:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x4561
L_278538:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F1
L_278477:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F1
L_278426:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x4569
L_278372:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_278373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x4563
L_278317:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278318
L_278335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278336
.p2align 0x4
.long 0x4565
L_278336:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278318:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278319:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_278302
L_278320:
	cmpq $0x1,%r14
	je L_493363
L_278321:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278319
.p2align 0x4
L_493363:
L_278322:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278323
L_278333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278334
.p2align 0x4
.long 0x4564
L_278334:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278323:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493365
L_278324:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278325:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278326:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493365:
L_278332:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278325
.p2align 0x4
.long 0x4572
L_278594:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278595
L_278611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278612
.p2align 0x4
.long 0x4575
L_278612:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278595:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278596:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278597:
	cmpq $0x1,%r14
	je L_493369
L_278598:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278596
.p2align 0x4
L_493369:
L_278599:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278600
L_278609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278610
.p2align 0x4
.long 0x4574
L_278610:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278600:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493371
L_278601:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278602:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278603:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_278604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493371:
L_278608:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278602
.p2align 0x4
.long 0x4563
L_278539:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278540
L_278556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278557
.p2align 0x4
.long 0x4565
L_278557:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278540:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278541:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_278302
L_278542:
	cmpq $0x1,%r14
	je L_493375
L_278543:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278541
.p2align 0x4
L_493375:
L_278544:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278545
L_278554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278555
.p2align 0x4
.long 0x4564
L_278555:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278545:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493377
L_278546:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278547:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278548:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493377:
L_278553:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278547
.p2align 0x4
.long 0x4572
L_278478:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278479
L_278495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278496
.p2align 0x4
.long 0x4575
L_278496:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278479:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278480:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278481:
	cmpq $0x1,%r14
	je L_493381
L_278482:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278480
.p2align 0x4
L_493381:
L_278483:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278484
L_278493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278494
.p2align 0x4
.long 0x4574
L_278494:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278484:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493383
L_278485:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278486:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278487:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_278488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493383:
L_278492:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278486
.p2align 0x4
.long 0x4572
L_278427:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278428
L_278444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278445
.p2align 0x4
.long 0x4575
L_278445:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278428:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278429:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278430:
	cmpq $0x1,%r14
	je L_493387
L_278431:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278429
.p2align 0x4
L_493387:
L_278432:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278433
L_278442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278443
.p2align 0x4
.long 0x4574
L_278443:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278433:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493389
L_278434:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278435:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278436:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_278437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493389:
L_278441:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278435
.p2align 0x4
.long 0x456B
L_278373:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278374
L_278390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_278391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278391
.p2align 0x4
.long 0x456E
L_278391:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_278374:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278375:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_278302
L_278376:
	cmpq $0x1,%r14
	je L_493393
L_278377:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278375
.p2align 0x4
L_493393:
L_278378:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278379
L_278388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_278389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278389
.p2align 0x4
.long 0x456D
L_278389:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_278379:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493395
L_278380:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_278381:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278302
L_278382:
	movl %r13d,0x0(%r15)
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_278383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493395:
L_278387:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278381
.p2align 0x4
.long 0x1158
L_278327:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278329
L_278331:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4573
L_278604:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278331
	jmp L_278606
.p2align 0x4
.long 0x1158
L_278549:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278331
	jmp L_278551
.p2align 0x4
.long 0x4573
L_278488:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278331
	jmp L_278490
.p2align 0x4
.long 0x4573
L_278437:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278331
	jmp L_278439
.p2align 0x4
.long 0x456C
L_278383:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278331
	jmp L_278385
.text
.p2align 0x4
.globl checkSyntax_0
.hidden checkSyntax_0
checkSyntax_0:
L_278626:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278627
L_278733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278734
.p2align 0x4
.long 0x460
L_278734:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278627:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDEB,%r15
	je L_493409
	cmpq $0xDEC,%r15
	je L_493405
L_278628:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493405:
L_278725:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_493408
L_278727:
	cmpl $0x0,%r13d
	jl L_493407
L_278728:
	movl $0x0,0x1C(%rbp)
loop_3294:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493406
L_278729:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493406:
L_278730:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493407:
L_278645:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493408:
L_278633:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493409:
L_278629:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDED,%r14
	je L_493432
L_278714:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x30(%rbp)
	jne L_278633
L_278716:
	testq %rdx,%rdx
	jz L_493430
L_278717:
	cmpq $0x7FFFFFFF,%rdx
	ja L_493429
L_278718:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_278719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278719
.p2align 0x4
.long 0x635
L_278719:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,%r15
L_278720:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3293:
	cmpq 0x38(%rbp),%r14
	jnl L_493410
L_278722:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x30(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3293
.p2align 0x4
L_493410:
L_278721:
	movq $0xB1F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
L_278631:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_278633
L_278634:
	cmpl $0x0,%r15d
	jl L_278645
L_278635:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3289:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493419
L_278654:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3292:
	cmpl %ecx,0x4C(%rbp)
	je L_493418
L_278655:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493417
L_278657:
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493414
L_278658:
L_278659:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_278660
L_278663:
	movq 0x8(%r15),%r14
	cmpq %r14,0x8(%r13)
	je L_493412
L_278660:
	incl %ecx
	jo L_493411
L_278662:
	jmp loop_3292
.p2align 0x4
L_493411:
L_278661:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493412:
L_278666:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493414:
L_278708:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_278660
L_278709:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	je L_278666
	jmp L_278660
.p2align 0x4
L_493417:
L_278656:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493418:
.p2align 0x4,,0x7
L_278693:
	incl 0x4C(%rbp)
	jmp loop_3289
.p2align 0x4
L_493419:
L_278636:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDED,%r13
	je L_493423
L_278646:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x18(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_278633
L_278648:
	cmpl $0x0,%r11d
	jl L_278645
L_278649:
	movl $0x0,0x1C(%rbp)
loop_3291:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493420
L_278650:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493420:
L_278651:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493423:
L_278637:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x18(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_278633
L_278639:
	cmpl $0x0,%r11d
	jl L_278645
L_278640:
	movl $0x0,0x1C(%rbp)
loop_3290:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493424
L_278641:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493424:
L_278642:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493429:
L_278723:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493430:
L_278724:
	movq (globalObjptr+0x16E0)(%rip),%r15
	jmp L_278720
.p2align 0x4
L_493432:
L_278630:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	jmp L_278631
.p2align 0x4
.long 0x4F5
L_278731:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3294
.p2align 0x4
.long 0x2FD5
L_278667:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F5
L_278652:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3291
.p2align 0x4
.long 0x4F5
L_278643:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3290
.p2align 0x4
.long 0x2FD5
L_278668:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493434
L_278669:
	movq 0x10(%r14),%r15
L_278670:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493434:
L_278705:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_278661
L_278706:
	movl %r15d,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x21F1
L_278671:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278672
L_278703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278704
.p2align 0x4
.long 0x142C
L_278704:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278672:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278673:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_278661
L_278674:
	cmpq $0x1,%r14
	je L_493436
L_278675:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278673
.p2align 0x4
L_493436:
L_278676:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278677
L_278701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278702
.p2align 0x4
.long 0x2911
L_278702:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278677:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493437
L_278678:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278679:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493437:
L_278700:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278679
.p2align 0x4
.long 0x21F1
L_278707:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_278670
.p2align 0x4
.long 0x2FD5
L_278680:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x1422
L_278681:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278682
L_278698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278699
.p2align 0x4
.long 0x1428
L_278699:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278682:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278683:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_278661
L_278684:
	cmpq $0x1,%r14
	je L_493441
L_278685:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278683
.p2align 0x4
L_493441:
L_278686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278687
L_278696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278697
.p2align 0x4
.long 0x4579
L_278697:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278687:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493443
L_278688:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278689:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278661
L_278690:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493443:
L_278695:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278689
.p2align 0x4
.long 0x4578
L_278691:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278693
L_278694:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkSyntax_1
.hidden checkSyntax_1
checkSyntax_1:
L_278735:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278736
L_278958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278959
.p2align 0x4
.long 0x460
L_278959:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278736:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r15
	jne L_278738
L_278739:
	cmpl $0x0,%r14d
	jl L_278847
L_278740:
	movl $0x0,0x8(%rbp)
.p2align 0x4,,0x7
loop_3295:
	movl 0x8(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493451
L_278945:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0xC(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_493450
L_278947:
	cmpl $0x0,%r14d
	jl L_493449
L_278948:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_3309:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_493448
L_278949:
	incl 0x8(%rbp)
	jmp loop_3295
.p2align 0x4
L_493448:
L_278950:
	movslq 0x44(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2021
.p2align 0x4
L_493449:
L_278847:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493450:
L_278738:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493451:
L_278741:
	movq 0x48(%rbp),%rdx
	cmpq $0x0,%rdx
	sete %r15b
	movzbl %r15b,%r15d
	movl %r15d,0x8(%rbp)
	je L_493506
L_278742:
	cmpq $0x7FFFFFFF,%rdx
	ja L_278854
L_278743:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_278744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278744
.p2align 0x4
.long 0x457A
L_278744:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x10(%rbp)
L_278745:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3296:
	cmpq 0x48(%rbp),%r15
	jnl L_493452
L_278942:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x10(%r11),%r10
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3296
.p2align 0x4
L_493452:
L_278746:
	movq 0x10(%rbp),%r15
	movq $0x1867,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_278738
L_278748:
	testl %r15d,%r15d
	jz L_493503
L_278749:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_278847
L_278750:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3297:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_493455
L_278936:
	movslq %ebx,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_278738
L_278938:
	addl %ecx,%r10d
	jo L_493453
L_278939:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_3297
.p2align 0x4
L_493453:
L_278805:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493455:
L_278751:
	cmpq $0x0,0x18(%rbp)
	jna L_278753
L_278754:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_493500
L_278755:
	cmpq $0x7FFFFFFF,%rdx
	ja L_278854
L_278756:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278757
.p2align 0x4
.long 0x457B
L_278757:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_278758:
	xorl %ecx,%ecx
	movq 0x40(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3298:
	cmpq 0x50(%rbp),%r14
	jnl L_493461
.p2align 0x4,,0x7
loop_3308:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_278738
L_278926:
	cmpl %r10d,%ecx
	jl L_493458
L_278927:
	incl %ebx
	jo L_278805
L_278928:
	movslq %ebx,%r11
	cmpq 0x18(%rbp),%r11
	jnb L_493456
L_278930:
	movq 0x10(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_3308
.p2align 0x4
L_493456:
L_278753:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493458:
L_278931:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_278753
L_278933:
	movq %r14,%r11
	movq %r14,%r9
	incl %ecx
	movq 0x0(%r13,%r10,8),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %rsi,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_3298
.p2align 0x4
L_493461:
L_278759:
	movq $0x1869,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_278760:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movl %r15d,0xC(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_278738
L_278762:
	cmpl $0x0,%r15d
	jl L_278847
L_278763:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_3299:
	movl 0x40(%rbp),%r14d
	cmpl 0xC(%rbp),%r14d
	jnl L_493466
L_278879:
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3307:
	cmpl %ecx,0x40(%rbp)
	je L_493465
L_278880:
	movslq %ecx,%r14
	cmpq 0x18(%rbp),%r14
	jnb L_278753
L_278882:
	salq $0x4,%r14
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r13),%r8
	cmpq %r8,0x8(%r9)
	je L_493463
L_278883:
	incl %ecx
	jo L_278805
L_278884:
	jmp loop_3307
.p2align 0x4
L_493463:
L_278885:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x1788)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493465:
.p2align 0x4,,0x7
L_278910:
	incl 0x40(%rbp)
	jmp loop_3299
.p2align 0x4
L_493466:
L_278764:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_493496
L_278765:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_278854
L_278766:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_278767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278767
.p2align 0x4
.long 0x457A
L_278767:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x8(%rbp)
L_278768:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3300:
	cmpq 0x48(%rbp),%r15
	jnl L_493467
L_278876:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%r9),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x8(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3300
.p2align 0x4
L_493467:
L_278769:
	movq 0x8(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x10(%rbp)
	jne L_278738
L_278771:
	testq %rdx,%rdx
	jz L_493493
L_278772:
	cmpq $0x7FFFFFFF,%rdx
	ja L_278854
L_278773:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278774
.p2align 0x4
.long 0x100C
L_278774:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_278775:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3301:
	cmpq 0x18(%rbp),%r15
	jnl L_493468
L_278873:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%r9),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x30(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3301
.p2align 0x4
L_493468:
L_278776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278777
L_278871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_278872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278872
.p2align 0x4
.long 0x576
L_278872:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_278777:
	movq 0x30(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2853,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_278778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493490
.p2align 0x4,,0x7
L_278779:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF49,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2991,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493469
L_278780:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_278778
.p2align 0x4
L_493469:
L_278781:
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_278782:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493489
.p2align 0x4,,0x7
L_278783:
	movq $0x2991,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493470
L_278784:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_278782
.p2align 0x4
L_493470:
L_278785:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_493484
L_278786:
	movq 0x10(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_278787:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_493471
L_278788:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_278787
.p2align 0x4
L_493471:
L_278789:
	testq %r15,%r15
	jz L_493483
L_278790:
	cmpq $0x7FFFFFFF,%r15
	ja L_493482
L_278791:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278792
.p2align 0x4
.long 0xBF0
L_278792:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_278793:
	movq 0x18(%rbp),%r10
	movq 0x10(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3302:
	cmpq 0x8(%rbp),%r14
	jnl L_493474
.p2align 0x4,,0x7
loop_3305:
	cmpq 0x0(%r11),%r13
	jl L_493473
L_278849:
	cmpq $0x1,%r10
	je L_493472
L_278850:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3305
.p2align 0x4
L_493472:
L_278851:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493473:
L_278852:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_3302
.p2align 0x4
L_493474:
L_278794:
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
L_278795:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_278738
L_278797:
	cmpl $0x0,%r15d
	jl L_278847
L_278798:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3303:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_493479
L_278800:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x38(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3304:
	cmpl %ecx,0x1C(%rbp)
	je L_493478
L_278801:
	movslq %ecx,%r15
	cmpq 0x10(%rbp),%r15
	jnb L_278753
L_278803:
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	je L_493476
L_278804:
	incl %ecx
	jo L_278805
L_278806:
	jmp loop_3304
.p2align 0x4
L_493476:
L_278807:
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_278808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493478:
.p2align 0x4,,0x7
L_278832:
	incl 0x1C(%rbp)
	jmp loop_3303
.p2align 0x4
L_493479:
L_278799:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493482:
L_278854:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493483:
L_278855:
	movq (globalObjptr+0x1770)(%rip),%r14
	xchgq %r14,%r15
	jmp L_278793
.p2align 0x4
L_493484:
L_278856:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x8(%rbp)
	je L_278795
L_278857:
	testq %r13,%r13
	jz L_493487
L_278858:
	cmpq $0x7FFFFFFF,%r13
	ja L_278854
L_278859:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278860
.p2align 0x4
.long 0x57A
L_278860:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_278861:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3306:
	cmpq 0x18(%rbp),%r14
	jnl L_493485
L_278863:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x8(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_3306
.p2align 0x4
L_493485:
L_278862:
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	jmp L_278795
.p2align 0x4
L_493487:
L_278865:
	movq (globalObjptr+0x1778)(%rip),%r15
	jmp L_278861
.p2align 0x4
L_493489:
L_278867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278868
.p2align 0x4
.long 0x4DF
L_278868:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_278783
.p2align 0x4
L_493490:
L_278869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278870
.p2align 0x4
.long 0x4DF
L_278870:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_278779
.p2align 0x4
L_493493:
L_278875:
	movq (globalObjptr+0x1768)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_278775
.p2align 0x4
L_493496:
L_278878:
	movq (globalObjptr+0x1760)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_278768
.p2align 0x4
L_493500:
L_278935:
	movq (globalObjptr+0x1750)(%rip),%r15
	jmp L_278758
.p2align 0x4
L_493503:
L_278941:
	movq (globalObjptr+0x1758)(%rip),%r15
	movq $0x1869,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_278760
.p2align 0x4
L_493506:
L_278944:
	movq (globalObjptr+0x1748)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_278745
.p2align 0x4
.long 0x4585
L_278951:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_493510
L_278952:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_278953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493510:
L_278954:
	incl 0x44(%rbp)
	jmp loop_3309
.p2align 0x4
.long 0x457D
L_278886:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x560
L_278808:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_278809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4586
L_278953:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_278954
.p2align 0x4
.long 0x457D
L_278887:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_278888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x560
L_278809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x457E
L_278888:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278889
L_278920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278921
.p2align 0x4
.long 0x4584
L_278921:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278889:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278890:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_278805
L_278891:
	cmpq $0x1,%r14
	je L_493511
L_278892:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278890
.p2align 0x4
L_493511:
L_278893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278894
L_278918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278919
.p2align 0x4
.long 0x4583
L_278919:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278894:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493512
L_278895:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278896:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493512:
L_278917:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278896
.p2align 0x4
.long 0x571
L_278810:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278811
L_278843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278844
.p2align 0x4
.long 0xE4E
L_278844:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_278811:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278812:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_278805
L_278813:
	cmpq $0x1,%r14
	je L_493516
L_278814:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278812
.p2align 0x4
L_493516:
L_278815:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278816
L_278841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_278842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278842
.p2align 0x4
.long 0xFB1
L_278842:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_278816:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493517
L_278817:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_278818:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_278819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493517:
L_278840:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278818
.p2align 0x4
.long 0x457D
L_278897:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE320)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_278898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_29
.p2align 0x4
.long 0x560
L_278819:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE320)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_278820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_29
.p2align 0x4
.long 0x457F
L_278898:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278899
L_278915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278916
.p2align 0x4
.long 0x4582
L_278916:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278899:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278900:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_278805
L_278901:
	cmpq $0x1,%r14
	je L_493521
L_278902:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278900
.p2align 0x4
L_493521:
L_278903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278904
L_278913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_278914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278914
.p2align 0x4
.long 0x4581
L_278914:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_278904:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493523
L_278905:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_278906:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278805
L_278907:
	movl %r13d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493523:
L_278912:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278906
.p2align 0x4
.long 0x529
L_278820:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278821
L_278838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278839
.p2align 0x4
.long 0x5FD
L_278839:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278821:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278822:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_278805
L_278823:
	cmpq $0x1,%r14
	je L_493527
L_278824:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278822
.p2align 0x4
L_493527:
L_278825:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278826
L_278836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278837
.p2align 0x4
.long 0x457C
L_278837:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278826:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493529
L_278827:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_278828:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278805
L_278829:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x38,%rbp
	leaq (L_278830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493529:
L_278835:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278828
.p2align 0x4
.long 0x4580
L_278908:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278910
L_278834:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x558
L_278830:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_278834
	jmp L_278832
.text
.p2align 0x4
.globl checkSyntaxStrexp_0
.hidden checkSyntaxStrexp_0
checkSyntaxStrexp_0:
loopS_31:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278960
L_278975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278976
.p2align 0x4
.long 0x460
L_278976:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278960:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_3310:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE27,%r15
	je L_493538
	cmpq $0xE28,%r15
	je L_493537
	cmpq $0xE29,%r15
	je L_493536
	cmpq $0xE2A,%r15
	je L_493535
L_278961:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493535:
L_278974:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_3310
.p2align 0x4
L_493536:
L_278968:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_278969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxStrexp_0
.p2align 0x4
L_493537:
L_278966:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxStrdec_0
.p2align 0x4
L_493538:
L_278962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278963
L_278964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_278965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278965
.p2align 0x4
.long 0x523
L_278965:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_278963:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x11B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp checkSyntaxStrdec_0
.p2align 0x4
.long 0x2
L_278969:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_493542
L_278970:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE2B,%r14
	je L_493541
L_278972:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493541:
L_278971:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493542:
L_278973:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_278967:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	jmp loop_3310
.text
.p2align 0x4
.globl checkSyntaxDec_0
.hidden checkSyntaxDec_0
checkSyntaxDec_0:
loopS_32:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278977
L_279161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279162
.p2align 0x4
.long 0x460
L_279162:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278977:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
loop_3311:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x38(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_493543
	jmp *jumpTable_761(,%rax,8)
.data
.p2align 0x4
jumpTable_761:
.quad L_493582,L_493578,L_493577,L_493576,L_493575,L_493568,L_493567,L_493556,L_493554,L_493553
.text
.p2align 0x4
L_493543:
L_278978:
	movq 0x10(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278980
L_278981:
	cmpl $0x0,%r13d
	jl L_278992
L_278982:
	movl $0x0,0x2C(%rbp)
loop_3312:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_493547
L_278983:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493546
L_278985:
	cmpl $0x0,%r13d
	jl L_493545
L_278986:
	movl $0x0,0x1C(%rbp)
loop_3313:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493544
L_278987:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493544:
L_278988:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_278989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493545:
L_278992:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493546:
L_278980:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493547:
L_278993:
	movslq 0x2C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_278980
L_278995:
	cmpl $0x0,%r14d
	jl L_278992
L_278996:
	movl $0x0,0x44(%rbp)
loop_3314:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_493548
L_278997:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_278998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493548:
L_278999:
	movslq 0x44(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x48(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_279000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493553:
L_279159:
	movq %r14,0x28(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_279160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_493554:
L_279156:
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_493555
L_279158:
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_493555:
L_279157:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493556:
L_279098:
	movq 0x0(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_278980
L_279100:
	cmpl $0x0,%r15d
	jl L_278992
L_279101:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_3322:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493559
L_279148:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	jne L_279152
L_279149:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	jne L_493557
.p2align 0x4,,0x7
L_279152:
	incl 0x44(%rbp)
	jmp loop_3322
.p2align 0x4
L_493557:
L_279150:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_279151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493559:
L_279102:
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_3323:
	movl 0x28(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_493564
L_279104:
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3324:
	cmpl 0x28(%rbp),%ecx
	je L_493563
L_279105:
	movslq %ecx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_493562
L_279107:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493561
L_279108:
	incl %ecx
	jo L_493560
L_279109:
	jmp loop_3324
.p2align 0x4
L_493560:
L_279016:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493561:
L_279110:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x17D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493562:
L_279013:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493563:
.p2align 0x4,,0x7
L_279135:
	incl 0x28(%rbp)
	jmp loop_3323
.p2align 0x4
L_493564:
L_279103:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493567:
L_279097:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493568:
L_279072:
	movq 0x8(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278980
L_279074:
	cmpl $0x0,%r13d
	jl L_278992
L_279075:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3319:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_493572
L_279077:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_278980
L_279079:
	cmpl $0x0,%r14d
	jl L_278992
L_279080:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_3320:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_493569
L_279081:
	incl 0x1C(%rbp)
	jmp loop_3319
.p2align 0x4
L_493569:
L_279082:
	movslq 0x3C(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x40(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x48(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_279083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493572:
L_279076:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493575:
L_279070:
	movq 0x8(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493576:
L_279069:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493577:
L_279068:
	movq 0x18(%r10),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493578:
L_279060:
	movq 0x0(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278980
L_279062:
	cmpl $0x0,%r13d
	jl L_278992
L_279063:
	movl $0x0,0x1C(%rbp)
loop_3318:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493579
L_279064:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493579:
L_279065:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493582:
L_279004:
	movq 0x0(%r10),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x28(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_278980
L_279006:
	cmpl $0x0,%r14d
	jl L_278992
L_279007:
	movl $0x0,0x34(%rbp)
loop_3315:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_493588
L_279008:
	movl $0x0,0x8(%rbp)
.p2align 0x4,,0x7
loop_3316:
	movl 0x8(%rbp),%r14d
	cmpl 0x30(%rbp),%r14d
	jnl L_493587
L_279010:
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3317:
	cmpl %ecx,0x8(%rbp)
	je L_493586
L_279011:
	movslq %ecx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_279013
L_279014:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_493584
L_279015:
	incl %ecx
	jo L_279016
L_279017:
	jmp loop_3317
.p2align 0x4
L_493584:
L_279018:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493586:
.p2align 0x4,,0x7
L_279043:
	incl 0x8(%rbp)
	jmp loop_3316
.p2align 0x4
L_493587:
L_279009:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493588:
L_279057:
	movslq 0x34(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_279058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x63A
L_278989:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_278990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0xE15
L_278998:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_3312
.p2align 0x4
.long 0x2521
L_279000:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_279001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E6
L_279160:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3311
.p2align 0x4
.long 0x3EC8
L_279151:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_279152
.p2align 0x4
.long 0x4543
L_279111:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4590
L_279083:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_278980
L_279085:
	cmpl $0x0,%r13d
	jl L_278992
L_279086:
	movl $0x0,0x54(%rbp)
loop_3321:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_493593
L_279087:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_493592
L_279088:
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_279089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493592:
L_279090:
	incl 0x3C(%rbp)
	jmp loop_3320
.p2align 0x4
L_493593:
L_279092:
	movslq 0x54(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x4E6
L_279071:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3311
.p2align 0x4
.long 0x4F5
L_279066:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3318
.p2align 0x4
.long 0x4587
L_279019:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x458F
L_279058:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x34(%rbp)
	jmp loop_3315
.p2align 0x4
.long 0x518
L_278990:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x1C(%rbp)
	jmp loop_3313
.p2align 0x4
.long 0x28FD
L_279001:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3314
.p2align 0x4
.long 0x4543
L_279112:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4591
L_279089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_279090
.p2align 0x4
.long 0x4592
L_279093:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x54(%rbp)
	jmp loop_3321
.p2align 0x4
.long 0x4587
L_279020:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4544
L_279113:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279114
L_279145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279146
.p2align 0x4
.long 0x454A
L_279146:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279114:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279115:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_279016
L_279116:
	cmpq $0x1,%r14
	je L_493596
L_279117:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279115
.p2align 0x4
L_493596:
L_279118:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279119
L_279143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279144
.p2align 0x4
.long 0x4549
L_279144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279119:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493597
L_279120:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_279121:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493597:
L_279142:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279121
.p2align 0x4
.long 0x4588
L_279021:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279022
L_279054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_279055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279055
.p2align 0x4
.long 0x458E
L_279055:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_279022:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279023:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_279016
L_279024:
	cmpq $0x1,%r14
	je L_493601
L_279025:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279023
.p2align 0x4
L_493601:
L_279026:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279027
L_279052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279053
.p2align 0x4
.long 0x458D
L_279053:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279027:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493602
L_279028:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_279029:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493602:
L_279051:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279029
.p2align 0x4
.long 0x4543
L_279122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x4587
L_279030:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_279031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x4545
L_279123:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279124
L_279140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279141
.p2align 0x4
.long 0x4548
L_279141:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279124:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279125:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_279016
L_279126:
	cmpq $0x1,%r14
	je L_493606
L_279127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279125
.p2align 0x4
L_493606:
L_279128:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279129
L_279138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279139
.p2align 0x4
.long 0x4547
L_279139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_279129:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493608
L_279130:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_279131:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_279016
L_279132:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_279133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493608:
L_279137:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279131
.p2align 0x4
.long 0x4589
L_279031:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279032
L_279049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279050
.p2align 0x4
.long 0x458C
L_279050:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279032:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279033:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_279016
L_279034:
	cmpq $0x1,%r14
	je L_493612
L_279035:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279033
.p2align 0x4
L_493612:
L_279036:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279037
L_279047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279048
.p2align 0x4
.long 0x458B
L_279048:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279037:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493614
L_279038:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_279039:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_279016
L_279040:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_279041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493614:
L_279046:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279039
.p2align 0x4
.long 0x4546
L_279133:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_279135
L_279045:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x458A
L_279041:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_279045
	jmp L_279043
.text
.p2align 0x4
.globl checkSyntaxExp_0
.hidden checkSyntaxExp_0
checkSyntaxExp_0:
loopS_33:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279163
L_279334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279335
.p2align 0x4
.long 0x460
L_279335:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279163:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3325:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDFB,%rax
	cmpq $0x11,%rax
	ja L_493620
	jmp *jumpTable_762(,%rax,8)
.data
.p2align 0x4
jumpTable_762:
.quad L_493673,L_493672,L_493671,L_493670,L_493669,L_493668,L_493667,L_493666,L_493662,L_493638,L_493637,L_493633,L_493632,L_493631,L_493630,L_493626,L_493622,L_493621
.text
.p2align 0x4
L_493620:
L_279164:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493621:
L_279333:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493622:
L_279324:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493625
L_279326:
	cmpl $0x0,%r13d
	jl L_493624
L_279327:
	movl $0x0,0x24(%rbp)
loop_3336:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_493623
L_279328:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493623:
L_279329:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_279330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493624:
L_279186:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493625:
L_279178:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493626:
L_279316:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279178
L_279318:
	cmpl $0x0,%r13d
	jl L_279186
L_279319:
	movl $0x0,0x1C(%rbp)
loop_3335:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493627
L_279320:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493627:
L_279321:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493630:
L_279314:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493631:
L_279304:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493632:
L_279302:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493633:
L_279294:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_279178
L_279296:
	cmpl $0x0,%r13d
	jl L_279186
L_279297:
	movl $0x0,0x1C(%rbp)
loop_3333:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493634
L_279298:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493634:
L_279299:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493637:
L_279293:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493638:
L_279198:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_493658
L_279285:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_279178
L_279287:
	cmpl $0x0,%r13d
	jl L_279186
L_279288:
	movl $0x0,0x44(%rbp)
loop_3332:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493639
L_279290:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_279291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493639:
L_279204:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_493655
L_279271:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x38(%rbp)
	jne L_279178
L_279273:
	testq %rdx,%rdx
	jz L_493653
L_279274:
	cmpq $0x7FFFFFFF,%rdx
	ja L_493652
L_279275:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_279276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279276
.p2align 0x4
.long 0xF22
L_279276:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,%r15
L_279277:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3331:
	cmpq 0x40(%rbp),%r14
	jnl L_493640
L_279279:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x38(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3331
.p2align 0x4
L_493640:
L_279278:
	movq $0xB25,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
L_279206:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_279178
L_279208:
	cmpl $0x0,%r15d
	jl L_279186
L_279209:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3329:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493649
L_279211:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3330:
	cmpl 0x4C(%rbp),%ecx
	je L_493648
L_279212:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493647
L_279214:
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493644
L_279215:
L_279216:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_279217
L_279220:
	movq 0x8(%r15),%r14
	cmpq %r14,0x8(%r13)
	je L_493642
L_279217:
	incl %ecx
	jo L_493641
L_279219:
	jmp loop_3330
.p2align 0x4
L_493641:
L_279218:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493642:
L_279223:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493644:
L_279265:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_279217
L_279266:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	je L_279223
	jmp L_279217
.p2align 0x4
L_493647:
L_279213:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493648:
.p2align 0x4,,0x7
L_279250:
	incl 0x4C(%rbp)
	jmp loop_3329
.p2align 0x4
L_493649:
L_279210:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493652:
L_279280:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493653:
L_279281:
	movq (globalObjptr+0x16D0)(%rip),%r15
	jmp L_279277
.p2align 0x4
L_493655:
L_279205:
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	jmp L_279206
.p2align 0x4
L_493658:
L_279199:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_279178
L_279201:
	cmpl $0x0,%r13d
	jl L_279186
L_279202:
	movl $0x0,0x44(%rbp)
loop_3328:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_279204
L_279282:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_279283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493662:
L_279190:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_279178
L_279192:
	cmpl $0x0,%r13d
	jl L_279186
L_279193:
	movl $0x0,0x1C(%rbp)
loop_3327:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493663
L_279194:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493663:
L_279195:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493666:
L_279189:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493667:
L_279187:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493668:
L_279175:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493669:
L_279174:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_3325
.p2align 0x4
L_493670:
L_279171:
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493671:
L_279169:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493672:
L_279167:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493673:
L_279165:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x97F
L_279330:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_279331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4F5
L_279322:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3335
.p2align 0x4
.long 0x4E6
L_279315:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x4E6
L_279305:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_279178
L_279307:
	cmpl $0x0,%r13d
	jl L_279186
L_279308:
	movl $0x0,0x10(%rbp)
loop_3334:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_493675
L_279309:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493675:
L_279310:
	movslq 0x10(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_279311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x4E6
L_279303:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x4F5
L_279300:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3333
.p2align 0x4
.long 0x1DA9
L_279291:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3332
.p2align 0x4
.long 0x8FE
L_279224:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DA9
L_279283:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3328
.p2align 0x4
.long 0x4F5
L_279196:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3327
.p2align 0x4
.long 0x491
L_279188:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x4E6
L_279176:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_279178
L_279179:
	cmpl $0x0,%r13d
	jl L_279186
L_279180:
	movl $0x0,0x10(%rbp)
loop_3326:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_493678
L_279181:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493678:
L_279182:
	movslq 0x10(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_279183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x5F0
L_279172:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_279173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E6
L_279170:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x4E6
L_279168:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x4E6
L_279166:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x5ED
L_279331:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x24(%rbp)
	jmp loop_3336
.p2align 0x4
.long 0x609
L_279311:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_279312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x8FE
L_279225:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493681
L_279226:
	movq 0x10(%r14),%r15
L_279227:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493681:
L_279262:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_279218
L_279263:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x609
L_279183:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_279184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E6
L_279173:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3325
.p2align 0x4
.long 0x3CDA
L_279312:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x10(%rbp)
	jmp loop_3334
.p2align 0x4
.long 0x4593
L_279228:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279229
L_279260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279261
.p2align 0x4
.long 0x4599
L_279261:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279229:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279230:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_279218
L_279231:
	cmpq $0x1,%r14
	je L_493683
L_279232:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279230
.p2align 0x4
L_493683:
L_279233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279234
L_279258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279259
.p2align 0x4
.long 0x4598
L_279259:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279234:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493684
L_279235:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_279236:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493684:
L_279257:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279236
.p2align 0x4
.long 0x4593
L_279264:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_279227
.p2align 0x4
.long 0x3CDA
L_279184:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x10(%rbp)
	jmp loop_3326
.p2align 0x4
.long 0x8FE
L_279237:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_279238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4594
L_279238:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279239
L_279255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279256
.p2align 0x4
.long 0x4597
L_279256:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279239:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279240:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_279218
L_279241:
	cmpq $0x1,%r14
	je L_493688
L_279242:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279240
.p2align 0x4
L_493688:
L_279243:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279244
L_279253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279254
.p2align 0x4
.long 0x4596
L_279254:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_279244:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493690
L_279245:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_279246:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_279218
L_279247:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_279248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493690:
L_279252:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279246
.p2align 0x4
.long 0x4595
L_279248:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_279250
L_279251:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkSyntax_2
.hidden checkSyntax_2
checkSyntax_2:
loopS_34:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279336
L_279451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279452
.p2align 0x4
.long 0x460
L_279452:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279336:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3337:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_493728
L_279337:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDF2,%rax
	cmpq $0x7,%rax
	ja L_493695
	jmp *jumpTable_763(,%rax,8)
.data
.p2align 0x4
jumpTable_763:
.quad L_493724,L_493708,L_493704,L_493703,L_493699,L_493698,L_493697,L_493696
.text
.p2align 0x4
L_493695:
L_279338:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493696:
L_279449:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_3337
.p2align 0x4
L_493697:
L_279448:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493698:
L_279446:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493699:
L_279438:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_493702
L_279440:
	cmpl $0x0,%r13d
	jl L_493701
L_279441:
	movl $0x0,0x1C(%rbp)
loop_3343:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493700
L_279442:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493700:
L_279443:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493701:
L_279348:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493702:
L_279341:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493703:
L_279434:
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493704:
L_279426:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279341
L_279428:
	cmpl $0x0,%r13d
	jl L_279348
L_279429:
	movl $0x0,0x1C(%rbp)
loop_3342:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493705
L_279430:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493705:
L_279431:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493708:
L_279349:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_279341
L_279351:
	cmpl $0x0,%r15d
	jl L_279348
L_279352:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3339:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493712
L_279414:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x107D,%r15
	jne L_493711
L_279415:
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	jne L_493710
.p2align 0x4,,0x7
L_279418:
	cmpq $0x1,0x50(%rbp)
	jne L_493709
.p2align 0x4,,0x7
L_279421:
	incl 0x4C(%rbp)
	jmp loop_3339
.p2align 0x4
L_493709:
L_279419:
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_279420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493710:
L_279416:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493711:
L_279424:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_279420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493712:
L_279353:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3340:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493721
L_279355:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3341:
	cmpl 0x4C(%rbp),%ecx
	je L_493720
L_279356:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493719
L_279358:
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493716
L_279359:
L_279360:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_279361
L_279364:
	movq 0x8(%r13),%r14
	cmpq %r14,0x8(%r15)
	je L_493714
L_279361:
	incl %ecx
	jo L_493713
L_279363:
	jmp loop_3341
.p2align 0x4
L_493713:
L_279362:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493714:
L_279367:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493716:
L_279409:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_279361
L_279410:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	je L_279367
	jmp L_279361
.p2align 0x4
L_493719:
L_279357:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493720:
.p2align 0x4,,0x7
L_279394:
	incl 0x4C(%rbp)
	jmp loop_3340
.p2align 0x4
L_493721:
L_279354:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493724:
L_279339:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_279341
L_279342:
	cmpl $0x0,%r13d
	jl L_279348
L_279343:
	movl $0x0,0x1C(%rbp)
loop_3338:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493725
L_279344:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493725:
L_279345:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493728:
L_279450:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_279447:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x4F5
L_279444:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3343
.p2align 0x4
.long 0x491
L_279435:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_493730
L_279436:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493730:
L_279437:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_279432:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3342
.p2align 0x4
.long 0x1DE6
L_279420:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_279421
.p2align 0x4
.long 0x459A
L_279417:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_279418
.p2align 0x4
.long 0x8FE
L_279368:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F5
L_279346:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3338
.p2align 0x4
.long 0x8FE
L_279369:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493731
L_279370:
	movq 0x10(%r14),%r15
L_279371:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493731:
L_279406:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_279362
L_279407:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4593
L_279372:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279373
L_279404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279405
.p2align 0x4
.long 0x4599
L_279405:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279373:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279374:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_279362
L_279375:
	cmpq $0x1,%r14
	je L_493733
L_279376:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279374
.p2align 0x4
L_493733:
L_279377:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279378
L_279402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279403
.p2align 0x4
.long 0x4598
L_279403:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279378:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493734
L_279379:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_279380:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493734:
L_279401:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279380
.p2align 0x4
.long 0x4593
L_279408:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_279371
.p2align 0x4
.long 0x8FE
L_279381:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x4594
L_279382:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279383
L_279399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279400
.p2align 0x4
.long 0x4597
L_279400:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279383:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279384:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_279362
L_279385:
	cmpq $0x1,%r14
	je L_493738
L_279386:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279384
.p2align 0x4
L_493738:
L_279387:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279388
L_279397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279398
.p2align 0x4
.long 0x4596
L_279398:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_279388:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493740
L_279389:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_279390:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_279362
L_279391:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_279392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493740:
L_279396:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279390
.p2align 0x4
.long 0x4595
L_279392:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_279394
L_279395:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_56
.hidden layout_56
layout_56:
L_279453:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_279619
L_279454:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493757
L_279455:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE32,%r15
	je L_493751
	cmpq $0xE33,%r15
	je L_493745
L_279456:
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x11B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp layoutStrdec_0
.p2align 0x4
L_493745:
L_279578:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493750
L_279580:
	decl %r13d
	jo L_493749
L_279581:
	movl %r13d,0x40(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_3345:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493748
.p2align 0x4,,0x7
L_279582:
	movl 0x40(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_493746
L_279583:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_3345
.p2align 0x4
L_493746:
L_279584:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_493747
L_279585:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x17A0)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493747:
L_279616:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493748:
L_279617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_279618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279618
.p2align 0x4
.long 0x517
L_279618:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_279582
.p2align 0x4
L_493749:
L_279461:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493750:
L_279459:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493751:
L_279457:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279459
L_279460:
	decl %r13d
	jo L_279461
L_279462:
	movl %r13d,0x40(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_3344:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493754
.p2align 0x4,,0x7
L_279463:
	movl 0x40(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_493752
L_279464:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_3344
.p2align 0x4
L_493752:
L_279465:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_493753
L_279466:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x1790)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493753:
L_279575:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493754:
L_279576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_279577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279577
.p2align 0x4
.long 0x1499
L_279577:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_279463
.p2align 0x4
L_493757:
L_279619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279620
.p2align 0x4
.long 0x460
L_279620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_279455
.p2align 0x4
.long 0x70E
L_279586:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7AB
L_279467:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x70E
L_279587:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_279588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2151
.p2align 0x4
.long 0x7AB
L_279468:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE25,%r11
	je L_493759
L_279469:
	movb $0x0,0x40(%rbp)
L_279470:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493759:
L_279574:
	movb $0x1,0x40(%rbp)
	jmp L_279470
.p2align 0x4
.long 0x4A8
L_279588:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279589
L_279614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_279615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279615
.p2align 0x4
.long 0x517
L_279615:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_279589:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493760
L_279590:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_279591:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493760:
L_279613:
	movq $0x1,%r14
	xchgq %r14,%r15
L_279601:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_279602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x694
L_279471:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x98E
L_279592:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x58,%rbp
	leaq (L_279593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2151
.p2align 0x4
.long 0x1
L_279602:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279603
L_279607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279608
.p2align 0x4
.long 0x495
L_279608:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279603:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493763
L_279604:
	decl %r15d
	jo L_279461
L_279605:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493763:
L_279606:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_279472:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x705
L_279593:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279594
L_279611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279612
.p2align 0x4
.long 0x3D24
L_279612:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279594:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_493765
L_279595:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_279591
.p2align 0x4
L_493765:
L_279596:
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_279597:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493767
.p2align 0x4,,0x7
L_279598:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_279601
L_279599:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_279597
.p2align 0x4
L_493767:
L_279609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279610
.p2align 0x4
.long 0x780
L_279610:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_279598
.p2align 0x4
.long 0x9F9
L_279473:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2EFD
L_279474:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279475
L_279572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279573
.p2align 0x4
.long 0x45A1
L_279573:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279475:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_279476:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_279461
L_279477:
	cmpq $0x1,%r14
	je L_493769
L_279478:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279476
.p2align 0x4
L_493769:
L_279479:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279480
L_279570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279571
.p2align 0x4
.long 0x45A0
L_279571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_279480:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493771
L_279481:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_279482:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_493770
L_279483:
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_279484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493770:
L_279555:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493771:
L_279569:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279482
.p2align 0x4
.long 0x5F2
L_279484:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279485
L_279553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_279554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279554
.p2align 0x4
.long 0x6E0
L_279554:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_279485:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493777
L_279486:
	decl %ecx
	jo L_279461
L_279487:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_279488:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493775
L_279489:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_279490:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493775:
L_279551:
	movq $0x1,%r14
	xchgq %r14,%r15
L_279518:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_279519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493777:
L_279552:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279488
.p2align 0x4
.long 0x113B
L_279556:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279557
L_279567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_279568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279568
.p2align 0x4
.long 0x113C
L_279568:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_279557:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279558:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_279461
L_279559:
	cmpq $0x1,%r14
	je L_493779
L_279560:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279558
.p2align 0x4
L_493779:
L_279561:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279562
L_279565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279566
.p2align 0x4
.long 0xD1B
L_279566:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279562:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493780
L_279563:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_279488
.p2align 0x4
L_493780:
L_279564:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279488
.p2align 0x4
.long 0xBB1
L_279491:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE25,%r11
	je L_493784
L_279492:
	movb $0x0,0x40(%rbp)
L_279493:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493784:
L_279550:
	movb $0x1,0x40(%rbp)
	jmp L_279493
.p2align 0x4
.long 0x1
L_279519:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279520
L_279524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279525
.p2align 0x4
.long 0x495
L_279525:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279520:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493786
L_279521:
	decl %r15d
	jo L_279461
L_279522:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493786:
L_279523:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EFD
L_279494:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_279495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x459B
L_279495:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_279496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459C
L_279496:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_279497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459D
L_279497:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279498
L_279548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279549
.p2align 0x4
.long 0x2A4D
L_279549:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279498:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_279499:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_279461
L_279500:
	cmpq $0x1,%r14
	je L_493788
L_279501:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279499
.p2align 0x4
L_493788:
L_279502:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279503
L_279546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279547
.p2align 0x4
.long 0x459F
L_279547:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_279503:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493790
L_279504:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_279505:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_493789
L_279506:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493789:
L_279531:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493790:
L_279545:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279505
.p2align 0x4
.long 0x694
L_279507:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279508
L_279529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279530
.p2align 0x4
.long 0x699
L_279530:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279508:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493798
L_279509:
	decl %ecx
	jo L_279461
L_279510:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_279511:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_493794
L_279512:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_279490
.p2align 0x4
L_493794:
L_279513:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_279514:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493796
.p2align 0x4,,0x7
L_279515:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_279518
L_279516:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_279514
.p2align 0x4
L_493796:
L_279526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279527
.p2align 0x4
.long 0x9B5
L_279527:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_279515
.p2align 0x4
L_493798:
L_279528:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279511
.p2align 0x4
.long 0xD17
L_279532:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279533
L_279543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279544
.p2align 0x4
.long 0xB9D
L_279544:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279533:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279534:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_279461
L_279535:
	cmpq $0x1,%r14
	je L_493800
L_279536:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279534
.p2align 0x4
L_493800:
L_279537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279538
L_279541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279542
.p2align 0x4
.long 0x459E
L_279542:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279538:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493801
L_279539:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_279511
.p2align 0x4
L_493801:
L_279540:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279511
.text
.p2align 0x4
.globl x_2151
.hidden x_2151
x_2151:
L_279621:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279622
L_279730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_279731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279731
.p2align 0x4
.long 0x4DF
L_279731:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_279622:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_279623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x67B
L_279623:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_279624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB68
L_279624:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x127D,%r15
	je L_493806
L_279714:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493806:
L_279625:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (paren_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0xC1D
L_279715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A2
paren_27:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279626
L_279712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279713
.p2align 0x4
.long 0x45A8
L_279713:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279626:
	movq 0x10(%rbp),%r15
	movl 0x18(%rbp),%ecx
paren_28:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A7
L_279716:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x19B2
L_279627:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44E6
L_279717:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279718
L_279728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279729
.p2align 0x4
.long 0x45AA
L_279729:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279718:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279719:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_493811
L_279720:
	cmpq $0x1,%r14
	je L_493808
L_279721:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279719
.p2align 0x4
L_493808:
L_279722:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279723
L_279726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279727
.p2align 0x4
.long 0x45A9
L_279727:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279723:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493809
L_279724:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp paren_28
.p2align 0x4
L_493809:
L_279725:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_28
.p2align 0x4
L_493811:
L_279631:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC1D
L_279628:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279629
L_279710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279711
.p2align 0x4
.long 0x85D
L_279711:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279629:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279630:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_279631
L_279632:
	cmpq $0x1,%r14
	je L_493813
L_279633:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279630
.p2align 0x4
L_493813:
L_279634:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279635
L_279708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_279709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279709
.p2align 0x4
.long 0x45A7
L_279709:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279635:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493820
L_279636:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_279637:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493815
L_279638:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE2B,%r14
	je L_493814
L_279691:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493814:
L_279639:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0x10AE0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493815:
L_279706:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_279649:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279650:
	addl 0x0(%r14),%ecx
	movl %ecx,0x10(%rbp)
	jo L_279631
L_279651:
	cmpq $0x1,%r15
	je L_493816
L_279652:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_279650
.p2align 0x4
L_493816:
L_279653:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279654
L_279684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_279685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279685
.p2align 0x4
.long 0x45A4
L_279685:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_279654:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493817
L_279655:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_279656:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_279657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutStrexp_0
.p2align 0x4
L_493817:
L_279683:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279656
.p2align 0x4
L_493820:
L_279707:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279637
.p2align 0x4
.long 0xC23
L_279692:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0xC23
L_279640:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x4E6
L_279657:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279658
L_279681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_279682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279682
.p2align 0x4
.long 0x4E2
L_279682:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_279658:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_279659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A3
L_279693:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279694
L_279704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279705
.p2align 0x4
.long 0x45A6
L_279705:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279694:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279695:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_279631
L_279696:
	cmpq $0x1,%r14
	je L_493825
L_279697:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279695
.p2align 0x4
L_493825:
L_279698:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279699
L_279702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279703
.p2align 0x4
.long 0x45A5
L_279703:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279699:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493826
L_279700:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_279649
.p2align 0x4
L_493826:
L_279701:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279649
.p2align 0x4
.long 0x45A3
L_279641:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279642
L_279689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279690
.p2align 0x4
.long 0x45A6
L_279690:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279642:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279643:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_279631
L_279644:
	cmpq $0x1,%r14
	je L_493830
L_279645:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279643
.p2align 0x4
L_493830:
L_279646:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279647
L_279687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279688
.p2align 0x4
.long 0x45A5
L_279688:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279647:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493831
L_279648:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_279649
.p2align 0x4
L_493831:
L_279686:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279649
.p2align 0x4
.long 0x786
L_279659:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_279660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x97F
L_279660:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279661
L_279679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_279680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279680
.p2align 0x4
.long 0x73C
L_279680:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_279661:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_279662:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_279631
L_279663:
	cmpq $0x1,%r14
	je L_493835
L_279664:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279662
.p2align 0x4
L_493835:
L_279665:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279666
L_279677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_279678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279678
.p2align 0x4
.long 0x5F4
L_279678:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_279666:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493836
L_279667:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_279668:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_279669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493836:
L_279676:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279668
.p2align 0x4
.long 0x1
L_279669:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279670
L_279674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279675
.p2align 0x4
.long 0x495
L_279675:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279670:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493841
L_279671:
	decl %r15d
	jo L_279631
L_279672:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493841:
L_279673:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2001
.hidden x_2001
x_2001:
L_279732:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279733
L_280518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_280519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280519
.p2align 0x4
.long 0x979
L_280519:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_279733:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_11
.p2align 0x4
.long 0x8F1
L_279734:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_494081
L_279735:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_279736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494080
.p2align 0x4,,0x7
L_279737:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493844
L_279738:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_279736
.p2align 0x4
L_493844:
L_279739:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
L_279740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494079
.p2align 0x4,,0x7
L_279741:
	movl 0x44(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_494078
L_279743:
	movq $0x102F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_493845
L_279744:
	movq %r15,0x70(%rbp)
	movl %r14d,0x44(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_279740
.p2align 0x4
L_493845:
L_279745:
	movq %r15,0x60(%rbp)
L_279746:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494077
L_279747:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_279748:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494076
.p2align 0x4,,0x7
L_279749:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493846
L_279750:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_279748
.p2align 0x4
L_493846:
L_279751:
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_279752:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_494075
L_279753:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
L_279754:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494074
.p2align 0x4,,0x7
L_279755:
	movq $0x1EE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493847
L_279756:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_279754
.p2align 0x4
L_493847:
L_279757:
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x90(%rbp)
L_279758:
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_494073
L_279759:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_279760:
	cmpl $0x16,%ecx
	je L_493849
L_279761:
	cmpq $0x1,%r14
	je L_493848
L_279762:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_279760
.p2align 0x4
L_493848:
L_279764:
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_279765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp do_delete_1
.p2align 0x4
L_493849:
.p2align 0x4,,0x7
L_280504:
	cmpq $0x1,0x90(%rbp)
	jne L_494071
L_280505:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_280488:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493850
L_280489:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_279758
.p2align 0x4
L_493850:
L_279793:
	cmpq $0x1,0x70(%rbp)
	je L_494069
L_279794:
	cmpq $0x1,%r15
	je L_494068
L_279795:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
L_279796:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494067
.p2align 0x4,,0x7
L_279797:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493851
L_279798:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279796
.p2align 0x4
L_493851:
L_279799:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
L_279800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494066
.p2align 0x4,,0x7
L_279801:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493852
L_279802:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279800
.p2align 0x4
L_493852:
L_279804:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493853
L_279805:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_279752
.p2align 0x4
L_493853:
L_279806:
	movq %r15,0x18(%rbp)
L_279807:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494065
L_279808:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_279809:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494064
.p2align 0x4,,0x7
L_279810:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493854
L_279811:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_279809
.p2align 0x4
L_493854:
L_279812:
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_279813:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x88(%rbp)
	cmpq $0x1,0x20(%rbp)
	jne L_494054
L_280469:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279837:
	cmpq $0x1,0x70(%rbp)
	je L_494052
L_279838:
	cmpq $0x1,%r15
	je L_494051
L_279839:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
L_279840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494050
.p2align 0x4,,0x7
L_279841:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493855
L_279842:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279840
.p2align 0x4
L_493855:
L_279843:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
L_279844:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494049
.p2align 0x4,,0x7
L_279845:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493856
L_279846:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279844
.p2align 0x4
L_493856:
L_279848:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493857
L_279849:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_279813
.p2align 0x4
L_493857:
L_279850:
	movq %r15,0x68(%rbp)
L_279851:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494048
L_279852:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_279853:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494047
.p2align 0x4,,0x7
L_279854:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493858
L_279855:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279853
.p2align 0x4
L_493858:
L_279856:
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_279857:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	cmpl $0x16,0x0(%r11)
	je L_494045
L_279858:
	cmpq $0x1,0x20(%rbp)
	jne L_494042
L_280435:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279883:
	cmpq $0x1,0x78(%rbp)
	je L_494040
L_279884:
	cmpq $0x1,%r15
	je L_494039
L_279885:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
L_279886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494038
.p2align 0x4,,0x7
L_279887:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_493859
L_279888:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_279886
.p2align 0x4
L_493859:
L_279889:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
L_279890:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494037
.p2align 0x4,,0x7
L_279891:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493860
L_279892:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279890
.p2align 0x4
L_493860:
L_279894:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493861
L_279895:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_279857
.p2align 0x4
L_493861:
L_279896:
	movq %r15,0x20(%rbp)
L_279897:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494036
L_279898:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_279899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494035
.p2align 0x4,,0x7
L_279900:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493862
L_279901:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279899
.p2align 0x4
L_493862:
L_279902:
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_279903:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x88(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
loop_3346:
	movl 0xA8(%rbp),%r14d
	testl %r14d,%r14d
	jz L_494031
L_279904:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xB8(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_494028
L_279912:
	cmpq $0x1,0x78(%rbp)
	jne L_494026
L_280373:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_280374:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493863
L_280375:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_279903
.p2align 0x4
L_493863:
L_280376:
	movq %r15,0x70(%rbp)
L_279917:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494025
L_279918:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_279919:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494024
.p2align 0x4,,0x7
L_279920:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493864
L_279921:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279919
.p2align 0x4
L_493864:
L_279922:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_279923:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3347:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_494020
L_279924:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_494017
L_279932:
	cmpq $0x1,0x80(%rbp)
	jne L_494015
L_280339:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_280340:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493865
L_280341:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_279923
.p2align 0x4
L_493865:
L_280342:
	movq %r15,0x78(%rbp)
L_279937:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_494014
L_279938:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_279939:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494013
.p2align 0x4,,0x7
L_279940:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493866
L_279941:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279939
.p2align 0x4
L_493866:
L_279942:
	movq 0x88(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_279943:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x3,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3348:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_494009
L_279944:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_494006
L_279952:
	cmpq $0x1,0x80(%rbp)
	jne L_494004
L_280305:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_280306:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493867
L_280307:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_279943
.p2align 0x4
L_493867:
L_280308:
	movq %r15,0x60(%rbp)
L_279957:
	cmpq $0x1,0x60(%rbp)
	je L_494002
L_279958:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_494001
L_279959:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_279960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494000
.p2align 0x4,,0x7
L_279961:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493868
L_279962:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279960
.p2align 0x4
L_493868:
L_279963:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_279964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493999
.p2align 0x4,,0x7
L_279965:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493869
L_279966:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279964
.p2align 0x4
L_493869:
L_279968:
	cmpq $0x1,%r15
	je L_493997
L_279969:
	movq %r15,0x60(%rbp)
L_279970:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_493996
L_279971:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_279972:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493995
.p2align 0x4,,0x7
L_279973:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493870
L_279974:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_279972
.p2align 0x4
L_493870:
L_279975:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_279976:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493994
.p2align 0x4,,0x7
L_279977:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493871
L_279978:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_279976
.p2align 0x4
L_493871:
L_279980:
	cmpq $0x1,%r15
	je L_493992
L_279981:
	movq %r15,0x60(%rbp)
L_279982:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_493991
L_279983:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_279984:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493990
.p2align 0x4,,0x7
L_279985:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493872
L_279986:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_279984
.p2align 0x4
L_493872:
L_279987:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_279988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493989
.p2align 0x4,,0x7
L_279989:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493873
L_279990:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_279988
.p2align 0x4
L_493873:
L_279992:
	cmpq $0x1,%r15
	je L_493987
L_279993:
	movq %r15,0x20(%rbp)
L_279994:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_493986
L_279995:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_279996:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493985
.p2align 0x4,,0x7
L_279997:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493874
L_279998:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_279996
.p2align 0x4
L_493874:
L_279999:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_280000:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493984
.p2align 0x4,,0x7
L_280001:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493875
L_280002:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_280000
.p2align 0x4
L_493875:
L_280004:
	cmpq $0x1,%r15
	je L_493982
L_280005:
	movq %r15,0x20(%rbp)
L_280006:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493981
L_280007:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_280008:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493980
.p2align 0x4,,0x7
L_280009:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493876
L_280010:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_280008
.p2align 0x4
L_493876:
L_280011:
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_280012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493979
.p2align 0x4,,0x7
L_280013:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493877
L_280014:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_280012
.p2align 0x4
L_493877:
L_280016:
	cmpq $0x1,%r15
	je L_493978
L_280017:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_280018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493977
.p2align 0x4,,0x7
L_280019:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493878
L_280020:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_280018
.p2align 0x4
L_493878:
L_280021:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r14
L_280022:
	cmpq $0x1,%r15
	je L_493976
L_280023:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_280024:
	movl 0x4(%r13),%r11d
	cmpl %ecx,%r11d
	jl L_493974
L_280025:
	cmpq $0x1,%r15
	je L_493879
L_280026:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,%ecx
	jmp L_280024
.p2align 0x4
L_493879:
L_280027:
	movl %r11d,0x18(%rbp)
L_280028:
	cmpq $0x1,%r14
	je L_280139
L_280029:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_280030:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493972
.p2align 0x4,,0x7
L_280031:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493880
L_280032:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_280030
.p2align 0x4
L_493880:
L_280033:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_280034:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493971
.p2align 0x4,,0x7
L_280035:
	movq 0x60(%rbp),%r14
	movl 0x18(%rbp),%r13d
	cmpl %r13d,0x4(%r14)
	je L_493965
L_280036:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_493963
L_280037:
L_280038:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493881
L_280039:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_280034
.p2align 0x4
L_493881:
L_280041:
	cmpq $0x1,%r15
	je L_493885
L_280042:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r14
	je L_280047
L_280043:
	movq 0x8(%r14),%r15
.p2align 0x4,,0x7
L_280044:
	cmpq $0x1,%r15
	je L_493882
L_280045:
	movq 0x8(%r15),%r15
	jmp L_280044
.p2align 0x4
L_493882:
L_280047:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r14
	je L_493883
L_280048:
	cmpq $0x1,%r13
	jne x_2152
L_280130:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_280131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2154
.p2align 0x4
x_2152:
x_925:
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_280049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2154
.p2align 0x4
L_493883:
L_280134:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_925
L_280135:
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_280136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2154
.p2align 0x4
L_493885:
L_280139:
	movl 0x40(%rbp),%eax
	cmpq $0x4B,%rax
	ja L_493886
	jmp *jumpTable_764(,%rax,8)
.data
.p2align 0x4
jumpTable_764:
.quad L_493962,L_493961,L_493960,L_493959,L_493958,L_493957,L_493956,L_493955,L_493954,L_493953,L_493952,L_493951,L_493950,L_493949,L_493948,L_493947,L_493946,L_493945,L_493944,L_493943,L_493942,L_493941,L_493940,L_493939,L_493938,L_493937,L_493936,L_493935,L_493934,L_493933,L_493932,L_493931,L_493930,L_493929,L_493928,L_493927,L_493926,L_493925,L_493924,L_493923,L_493922,L_493921,L_493920,L_493919,L_493918,L_493917,L_493916,L_493915,L_493914,L_493913,L_493912,L_493911,L_493910,L_493909,L_493908,L_493907,L_493906,L_493905,L_493904,L_493903,L_493902,L_493901,L_493900,L_493899,L_493898,L_493897,L_493896,L_493895,L_493894,L_493893,L_493892,L_493891,L_493890,L_493889,L_493888,L_493887
.text
.p2align 0x4
L_493886:
L_280140:
	movq (globalObjptr+0x10538)(%rip),%r15
L_280141:
	movq %r15,0x60(%rbp)
	leaq L_280153(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10608)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_280142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_493887:
L_280229:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493888:
L_280228:
	movq (globalObjptr+0x10CD8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493889:
L_280227:
	movq (globalObjptr+0x10CD0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493890:
L_280226:
	movq (globalObjptr+0x10CC8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493891:
L_280225:
	movq (globalObjptr+0x10CC0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493892:
L_280224:
	movq (globalObjptr+0x10CB8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493893:
L_280223:
	movq (globalObjptr+0x10CB0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493894:
L_280222:
	movq (globalObjptr+0x10CA8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493895:
L_280221:
	movq (globalObjptr+0x10CA0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493896:
L_280220:
	movq (globalObjptr+0x10C98)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493897:
L_280219:
	movq (globalObjptr+0x10C90)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493898:
L_280218:
	movq (globalObjptr+0x10C88)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493899:
L_280217:
	movq (globalObjptr+0x10C80)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493900:
L_280216:
	movq (globalObjptr+0x10C78)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493901:
L_280215:
	movq (globalObjptr+0x10C70)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493902:
L_280214:
	movq (globalObjptr+0x10C68)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493903:
L_280213:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493904:
L_280212:
	movq (globalObjptr+0x10C60)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493905:
L_280211:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493906:
L_280210:
	movq (globalObjptr+0x10C58)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493907:
L_280209:
	movq (globalObjptr+0x10C50)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493908:
L_280208:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493909:
L_280207:
	movq (globalObjptr+0x10C48)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493910:
L_280206:
	movq (globalObjptr+0x10C40)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493911:
L_280205:
	movq (globalObjptr+0x10C38)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493912:
L_280204:
	movq (globalObjptr+0x10C30)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493913:
L_280203:
	movq (globalObjptr+0x10C28)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493914:
L_280202:
	movq (globalObjptr+0x10C20)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493915:
L_280201:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493916:
L_280200:
	movq (globalObjptr+0x10C18)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493917:
L_280199:
	movq (globalObjptr+0x10C10)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493918:
L_280198:
	movq (globalObjptr+0x10C08)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493919:
L_280197:
	movq (globalObjptr+0x10C00)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493920:
L_280196:
	movq (globalObjptr+0x10BF8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493921:
L_280195:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493922:
L_280194:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493923:
L_280193:
	movq (globalObjptr+0x10BF0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493924:
L_280192:
	movq (globalObjptr+0x10BE8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493925:
L_280191:
	movq (globalObjptr+0x10BE0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493926:
L_280190:
	movq (globalObjptr+0x10BD8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493927:
L_280189:
	movq (globalObjptr+0x10BD0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493928:
L_280188:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493929:
L_280187:
	movq (globalObjptr+0x10BC8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493930:
L_280186:
	movq (globalObjptr+0x10BC0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493931:
L_280185:
	movq (globalObjptr+0x10BB8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493932:
L_280184:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493933:
L_280183:
	movq (globalObjptr+0x10BB0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493934:
L_280182:
	movq (globalObjptr+0x10BA8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493935:
L_280181:
	movq (globalObjptr+0x10BA0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493936:
L_280180:
	movq (globalObjptr+0x10B98)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493937:
L_280179:
	movq (globalObjptr+0x10B90)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493938:
L_280178:
	movq (globalObjptr+0x10B88)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493939:
L_280177:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493940:
L_280176:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493941:
L_280175:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493942:
L_280174:
	movq (globalObjptr+0x10B80)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493943:
L_280173:
	movq (globalObjptr+0x10B78)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493944:
L_280172:
	movq (globalObjptr+0x10B70)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493945:
L_280171:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493946:
L_280170:
	movq (globalObjptr+0x10B68)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493947:
L_280169:
	movq (globalObjptr+0x10B60)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493948:
L_280168:
	movq (globalObjptr+0x10B58)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493949:
L_280167:
	movq (globalObjptr+0x10B50)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493950:
L_280166:
	movq (globalObjptr+0x10B48)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493951:
L_280165:
	movq (globalObjptr+0x10B40)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493952:
L_280164:
	movq (globalObjptr+0x10B38)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493953:
L_280163:
	movq (globalObjptr+0x10B30)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493954:
L_280162:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493955:
L_280161:
	movq (globalObjptr+0x10B28)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493956:
L_280160:
	movq (globalObjptr+0x10B20)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493957:
L_280159:
	movq (globalObjptr+0x10B18)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493958:
L_280158:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493959:
L_280157:
	movq (globalObjptr+0x10B10)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493960:
L_280156:
	movq (globalObjptr+0x10B08)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493961:
L_280155:
	movq (globalObjptr+0x10B00)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493962:
L_280154:
	movq (globalObjptr+0x10AF8)(%rip),%r15
	jmp L_280141
.p2align 0x4
L_493963:
L_280230:
	movq $0x1,%r14
	xchgq %r14,%r15
L_280231:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_280041
L_280232:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_280034
.p2align 0x4
L_493965:
L_280234:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	cmpq $0x1,0x68(%rbp)
	je L_280231
L_280235:
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq $0x1,0x60(%rbp)
L_280236:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493969
.p2align 0x4,,0x7
L_280237:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493966
L_280238:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_280236
.p2align 0x4
L_493966:
L_280239:
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
L_280240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493968
.p2align 0x4,,0x7
L_280241:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_280038
L_280242:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_280240
.p2align 0x4
L_493968:
L_280244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280245
.p2align 0x4
.long 0x45BA
L_280245:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_280241
.p2align 0x4
L_493969:
L_280246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280247
.p2align 0x4
.long 0x45BB
L_280247:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_280237
.p2align 0x4
L_493971:
L_280249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280250
.p2align 0x4
.long 0x45BC
L_280250:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_280035
.p2align 0x4
L_493972:
L_280251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280252
.p2align 0x4
.long 0x45BC
L_280252:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_280031
.p2align 0x4
L_493974:
L_280254:
	cmpq $0x1,%r15
	je L_493975
L_280255:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_280024
.p2align 0x4
L_493975:
L_280256:
	movl %ecx,0x18(%rbp)
	jmp L_280028
.p2align 0x4
L_493976:
L_280257:
	movl $0x0,0x18(%rbp)
	jmp L_280028
.p2align 0x4
L_493977:
L_280258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280259
.p2align 0x4
.long 0x45BD
L_280259:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_280019
.p2align 0x4
L_493978:
L_280260:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_280022
.p2align 0x4
L_493979:
L_280261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_280262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280262
.p2align 0x4
.long 0x4575
L_280262:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_280013
.p2align 0x4
L_493980:
L_280263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280264
.p2align 0x4
.long 0x45BD
L_280264:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_280009
.p2align 0x4
L_493981:
L_280265:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_280016
.p2align 0x4
L_493982:
L_280267:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493983
L_280268:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_280018
.p2align 0x4
L_493983:
L_280269:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_280022
.p2align 0x4
L_493984:
L_280270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280271
.p2align 0x4
.long 0x45BD
L_280271:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_280001
.p2align 0x4
L_493985:
L_280272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280273
.p2align 0x4
.long 0x45BE
L_280273:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_279997
.p2align 0x4
L_493986:
L_280274:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_280004
.p2align 0x4
L_493987:
L_280276:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_280267
L_280277:
	movq %r15,0x20(%rbp)
	jmp L_280006
.p2align 0x4
L_493989:
L_280279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280280
.p2align 0x4
.long 0x45BE
L_280280:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_279989
.p2align 0x4
L_493990:
L_280281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280282
.p2align 0x4
.long 0x45BF
L_280282:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_279985
.p2align 0x4
L_493991:
L_280283:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279992
.p2align 0x4
L_493992:
L_280285:
	cmpq $0x1,0x20(%rbp)
	je L_280276
	jmp L_279994
.p2align 0x4
L_493994:
L_280288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280289
.p2align 0x4
.long 0x45BF
L_280289:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_279977
.p2align 0x4
L_493995:
L_280290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280291
.p2align 0x4
.long 0x45C0
L_280291:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279973
.p2align 0x4
L_493996:
L_280292:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279980
.p2align 0x4
L_493997:
L_280294:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_280285
L_280295:
	movq %r15,0x60(%rbp)
	jmp L_279982
.p2align 0x4
L_493999:
L_280297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280298
.p2align 0x4
.long 0x45C0
L_280298:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279965
.p2align 0x4
L_494000:
L_280299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280300
.p2align 0x4
.long 0x45C1
L_280300:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279961
.p2align 0x4
L_494001:
L_280301:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279968
.p2align 0x4
L_494002:
L_280302:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_280294
L_280303:
	movq %r15,0x60(%rbp)
	jmp L_279970
.p2align 0x4
L_494004:
.p2align 0x4,,0x7
L_279953:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_279954:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_494005
L_279955:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_279943
.p2align 0x4
L_494005:
L_279956:
	movq %r15,0x60(%rbp)
	jmp L_279957
.p2align 0x4
L_494006:
L_279945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279946
L_279950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279951
.p2align 0x4
.long 0x45B1
L_279951:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279946:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_494007
L_279948:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_279949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494007:
L_279947:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494009:
L_280309:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_494012
L_280310:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_280311:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494011
.p2align 0x4,,0x7
L_280312:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_494010
L_280313:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_280311
.p2align 0x4
L_494010:
L_280315:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_280316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494011:
L_280333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_280334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280334
.p2align 0x4
.long 0x45C5
L_280334:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_280312
.p2align 0x4
L_494012:
L_280335:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_280315
.p2align 0x4
L_494013:
L_280336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280337
.p2align 0x4
.long 0x45C1
L_280337:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279940
.p2align 0x4
L_494014:
L_280338:
	movq $0x1,0x60(%rbp)
	jmp L_279957
.p2align 0x4
L_494015:
.p2align 0x4,,0x7
L_279933:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_279934:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_494016
L_279935:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_279923
.p2align 0x4
L_494016:
L_279936:
	movq %r15,0x78(%rbp)
	jmp L_279937
.p2align 0x4
L_494017:
L_279925:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279926
L_279930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279931
.p2align 0x4
.long 0x45B1
L_279931:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279926:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_494018
L_279928:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_279929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494018:
L_279927:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494020:
L_280343:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_494023
L_280344:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_280345:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494022
.p2align 0x4,,0x7
L_280346:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_494021
L_280347:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_280345
.p2align 0x4
L_494021:
L_280349:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_280350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494022:
L_280367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_280368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280368
.p2align 0x4
.long 0x45C5
L_280368:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_280346
.p2align 0x4
L_494023:
L_280369:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_280349
.p2align 0x4
L_494024:
L_280370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280371
.p2align 0x4
.long 0x45C1
L_280371:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279920
.p2align 0x4
L_494025:
L_280372:
	movq $0x1,0x78(%rbp)
	jmp L_279937
.p2align 0x4
L_494026:
.p2align 0x4,,0x7
L_279913:
	movq 0x78(%rbp),%r15
.p2align 0x4,,0x7
L_279914:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_494027
L_279915:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_279903
.p2align 0x4
L_494027:
L_279916:
	movq %r15,0x70(%rbp)
	jmp L_279917
.p2align 0x4
L_494028:
L_279905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279906
L_279910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_279911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279911
.p2align 0x4
.long 0x45AF
L_279911:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_279906:
	movl 0xA8(%rbp),%r15d
	decl %r15d
	movl %r15d,0x90(%rbp)
	jo L_494029
L_279908:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_279909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494029:
L_279907:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494031:
L_280377:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_494034
L_280378:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_280379:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494033
.p2align 0x4,,0x7
L_280380:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494032
L_280381:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_280379
.p2align 0x4
L_494032:
L_280383:
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_280384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494033:
L_280401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_280402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280402
.p2align 0x4
.long 0x45C7
L_280402:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_280380
.p2align 0x4
L_494034:
L_280403:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_280383
.p2align 0x4
L_494035:
L_280404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280405
.p2align 0x4
.long 0x45C0
L_280405:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279900
.p2align 0x4
L_494036:
L_280406:
	movq $0x1,0x70(%rbp)
	jmp L_279917
.p2align 0x4
L_494037:
L_280407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280408
.p2align 0x4
.long 0x45C1
L_280408:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279891
.p2align 0x4
L_494038:
L_280409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_280410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280410
.p2align 0x4
.long 0x45C3
L_280410:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_279887
.p2align 0x4
L_494039:
L_280411:
	movq 0x78(%rbp),%r15
	jmp L_279894
.p2align 0x4
L_494040:
L_280413:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_494041
L_280414:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_279857
.p2align 0x4
L_494041:
L_280415:
	movq %r15,0x20(%rbp)
	jmp L_279897
.p2align 0x4
L_494042:
L_279859:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_279860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494044
.p2align 0x4,,0x7
L_279861:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_494043
L_279862:
	movq %r15,0xB8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_279860
.p2align 0x4
L_494043:
L_279863:
	movq 0xB8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB8(%rbp)
L_279864:
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_279865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494044:
L_280433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_280434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280434
.p2align 0x4
.long 0x45CB
L_280434:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_279861
.p2align 0x4
L_494045:
L_280436:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_494046
L_280437:
	jmp L_279894
.p2align 0x4
L_494046:
L_280438:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_280413
.p2align 0x4
L_494047:
L_280439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280440
.p2align 0x4
.long 0x45C0
L_280440:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279854
.p2align 0x4
L_494048:
L_280441:
	movq $0x1,0x20(%rbp)
	jmp L_279897
.p2align 0x4
L_494049:
L_280442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280443
.p2align 0x4
.long 0x45C0
L_280443:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279845
.p2align 0x4
L_494050:
L_280444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280445
.p2align 0x4
.long 0x45C1
L_280445:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279841
.p2align 0x4
L_494051:
L_280446:
	movq 0x70(%rbp),%r15
	jmp L_279848
.p2align 0x4
L_494052:
L_280447:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_494053
L_280448:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_279813
.p2align 0x4
L_494053:
L_280449:
	movq %r15,0x68(%rbp)
	jmp L_279851
.p2align 0x4
L_494054:
L_279814:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_279815:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494063
.p2align 0x4,,0x7
L_279816:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x98(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_494055
L_279817:
	movq %r15,0xA0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movl %r15d,0x98(%rbp)
	jmp L_279815
.p2align 0x4
L_494055:
L_279818:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x98(%rbp),%ecx
	movq $0x1,0x98(%rbp)
L_279819:
	cmpl $0x0,%ecx
	je L_494062
	cmpl $0x1,%ecx
	je L_494061
	cmpl $0x2,%ecx
	je L_494060
	cmpl $0x3,%ecx
	je L_494059
	cmpl $0x4,%ecx
	je L_494058
	cmpl $0x5,%ecx
	je L_494057
	cmpl $0x6,%ecx
	je L_494056
L_279820:
	movq $0x1,%r15
L_279821:
	movq $0x1023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1025,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x285F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xC8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movl 0x44(%rbp),%r14d
	movl %r14d,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xA8,%rbp
	leaq (L_279822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494056:
L_280466:
	movq (globalObjptr+0x3E48)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494057:
L_280465:
	movq (globalObjptr+0x3E40)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494058:
L_280464:
	movq (globalObjptr+0x3E50)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494059:
L_280463:
	movq (globalObjptr+0x3E38)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494060:
L_280462:
	movq (globalObjptr+0x3E58)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494061:
L_280461:
	movq (globalObjptr+0x3E30)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494062:
L_280460:
	movq (globalObjptr+0x3E60)(%rip),%r15
	jmp L_279821
.p2align 0x4
L_494063:
L_280467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_280468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280468
.p2align 0x4
.long 0x45CE
L_280468:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_279816
.p2align 0x4
L_494064:
L_280470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280471
.p2align 0x4
.long 0x45BF
L_280471:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_279810
.p2align 0x4
L_494065:
L_280472:
	movq $0x1,0x68(%rbp)
	jmp L_279851
.p2align 0x4
L_494066:
L_280473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280474
.p2align 0x4
.long 0x45C0
L_280474:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_279801
.p2align 0x4
L_494067:
L_280475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280476
.p2align 0x4
.long 0x45C1
L_280476:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279797
.p2align 0x4
L_494068:
L_280477:
	movq 0x70(%rbp),%r15
	jmp L_279804
.p2align 0x4
L_494069:
L_280478:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_494070
L_280479:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_279752
.p2align 0x4
L_494070:
L_280480:
	movq %r15,0x18(%rbp)
	jmp L_279807
.p2align 0x4
L_494071:
.p2align 0x4,,0x7
L_280486:
	movq 0x90(%rbp),%r15
.p2align 0x4,,0x7
L_279790:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_279793
L_279791:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_279758
.p2align 0x4
L_494073:
	movq %r13,%r15
	jmp L_279764
.p2align 0x4
L_494074:
L_280507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_280508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280508
.p2align 0x4
.long 0x45C4
L_280508:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_279755
.p2align 0x4
L_494075:
L_280509:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279793
.p2align 0x4
L_494076:
L_280510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280511
.p2align 0x4
.long 0x45BF
L_280511:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_279749
.p2align 0x4
L_494077:
L_280512:
	movq $0x1,0x18(%rbp)
	jmp L_279807
.p2align 0x4
L_494078:
L_279742:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494079:
L_280513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280514
.p2align 0x4
.long 0x45BE
L_280514:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_279741
.p2align 0x4
L_494080:
L_280515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280516
.p2align 0x4
.long 0x45BE
L_280516:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_279737
.p2align 0x4
L_494081:
L_280517:
	movq $0x1,0x60(%rbp)
	jmp L_279746
.p2align 0x4
.long 0x45AB
L_279765:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq $0x1,%r15
	je L_280504
L_279766:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_494093
L_279767:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movl %r14d,0xA0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_279768:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494092
.p2align 0x4,,0x7
L_279769:
	movl 0xA0(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_494091
	cmpl $0x1,%r14d
	je L_494090
	cmpl $0x2,%r14d
	je L_494089
	cmpl $0x3,%r14d
	je L_494088
	cmpl $0x4,%r14d
	je L_494087
	cmpl $0x5,%r14d
	je L_494086
	cmpl $0x6,%r14d
	je L_494085
L_279770:
	movq $0x1,%r15
L_279771:
	movq $0x1023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x285F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_494082
L_279772:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movl %r14d,0xA0(%rbp)
	jmp L_279768
.p2align 0x4
L_494082:
L_279773:
	movq %r15,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_279774:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494084
.p2align 0x4,,0x7
L_279775:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_494083
L_279776:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_279774
.p2align 0x4
L_494083:
L_279778:
	movq 0x80(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_279779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494084:
L_280491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_280492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280492
.p2align 0x4
.long 0x45C9
L_280492:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_279775
.p2align 0x4
L_494085:
L_280499:
	movq (globalObjptr+0x3E48)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494086:
L_280498:
	movq (globalObjptr+0x3E40)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494087:
L_280497:
	movq (globalObjptr+0x3E50)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494088:
L_280496:
	movq (globalObjptr+0x3E38)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494089:
L_280495:
	movq (globalObjptr+0x3E58)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494090:
L_280494:
	movq (globalObjptr+0x3E30)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494091:
L_280493:
	movq (globalObjptr+0x3E60)(%rip),%r15
	jmp L_279771
.p2align 0x4
L_494092:
L_280500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_280501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280501
.p2align 0x4
.long 0x45CF
L_280501:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_279769
.p2align 0x4
L_494093:
L_280502:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279778
.p2align 0x4
.long 0x45B2
L_280131:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_280128(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x105F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x45B2
L_280049:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_280129(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10540)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x45B2
L_280136:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_280128(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10600)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x149B
L_280142:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280143
L_280151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280152
.p2align 0x4
.long 0x45B9
L_280152:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_280143:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_280150(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_280144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x652
L_280153:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45B0
L_279949:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_3348
.p2align 0x4
.long 0x45C2
L_280316:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_280306
L_280317:
	cmpq $0x1,%r15
	je L_279953
L_280318:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_280319:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494099
.p2align 0x4,,0x7
L_280320:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_494096
L_280321:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_280319
.p2align 0x4
L_494096:
L_280322:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_280323:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494098
.p2align 0x4,,0x7
L_280324:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_279954
L_280325:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_280323
.p2align 0x4
L_494098:
L_280327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_280328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280328
.p2align 0x4
.long 0x45C3
L_280328:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_280324
.p2align 0x4
L_494099:
L_280329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_280330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280330
.p2align 0x4
.long 0x45C4
L_280330:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_280320
.p2align 0x4
.long 0x45B0
L_279929:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_3347
.p2align 0x4
.long 0x45C2
L_280350:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_280340
L_280351:
	cmpq $0x1,%r15
	je L_279933
L_280352:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_280353:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494105
.p2align 0x4,,0x7
L_280354:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_494102
L_280355:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_280353
.p2align 0x4
L_494102:
L_280356:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_280357:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494104
.p2align 0x4,,0x7
L_280358:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_279934
L_280359:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_280357
.p2align 0x4
L_494104:
L_280361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_280362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280362
.p2align 0x4
.long 0x45C3
L_280362:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_280358
.p2align 0x4
L_494105:
L_280363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_280364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280364
.p2align 0x4
.long 0x45C4
L_280364:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_280354
.p2align 0x4
.long 0x45AE
L_279909:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movl 0x90(%rbp),%r14d
	movl %r14d,0xA8(%rbp)
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp loop_3346
.p2align 0x4
.long 0x45C6
L_280384:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0x1,0x78(%rbp)
	je L_280374
L_280385:
	cmpq $0x1,%r15
	je L_279913
L_280386:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_280387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494111
.p2align 0x4,,0x7
L_280388:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_494108
L_280389:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_280387
.p2align 0x4
L_494108:
L_280390:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_280391:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494110
.p2align 0x4,,0x7
L_280392:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_279914
L_280393:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_280391
.p2align 0x4
L_494110:
L_280395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_280396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280396
.p2align 0x4
.long 0x45C1
L_280396:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_280392
.p2align 0x4
L_494111:
L_280397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_280398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280398
.p2align 0x4
.long 0x45C3
L_280398:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_280388
.p2align 0x4
.long 0x45AD
L_279865:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279866
L_280431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280432
.p2align 0x4
.long 0x45CA
L_280432:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279866:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0xB0(%rbp),%r13d
	cmpl $0x0,%r13d
	je L_494120
	cmpl $0x1,%r13d
	je L_494119
	cmpl $0x2,%r13d
	je L_494118
	cmpl $0x3,%r13d
	je L_494117
	cmpl $0x4,%r13d
	je L_494116
	cmpl $0x5,%r13d
	je L_494115
	cmpl $0x6,%r13d
	je L_494114
L_279867:
	movq $0x1,%r14
L_279868:
	movq %r15,0xE0(%rbp)
	movq $0x1023,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1025,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xC8,%rbp
	leaq (L_279869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_494114:
L_280430:
	movq (globalObjptr+0x3E48)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494115:
L_280429:
	movq (globalObjptr+0x3E40)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494116:
L_280428:
	movq (globalObjptr+0x3E50)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494117:
L_280427:
	movq (globalObjptr+0x3E38)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494118:
L_280426:
	movq (globalObjptr+0x3E58)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494119:
L_280425:
	movq (globalObjptr+0x3E30)(%rip),%r14
	jmp L_279868
.p2align 0x4
L_494120:
L_280424:
	movq (globalObjptr+0x3E60)(%rip),%r14
	jmp L_279868
.p2align 0x4
.long 0x45AB
L_279822:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279823
L_280458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_280459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280459
.p2align 0x4
.long 0x45CD
L_280459:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_279823:
	cmpq $0x1,0x98(%rbp)
	je L_494128
L_279824:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_494127
L_279825:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_279826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494126
.p2align 0x4,,0x7
L_279827:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494122
L_279828:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_279826
.p2align 0x4
L_494122:
L_279829:
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_279830:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494125
.p2align 0x4,,0x7
L_279831:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_494123
L_279832:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_279830
.p2align 0x4
L_494123:
L_279834:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_279837
L_279835:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_279819
.p2align 0x4
L_494125:
L_280450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_280451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280451
.p2align 0x4
.long 0x45CC
L_280451:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_279831
.p2align 0x4
L_494126:
L_280452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_280453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280453
.p2align 0x4
.long 0x45C7
L_280453:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_279827
.p2align 0x4
L_494127:
L_280454:
	movq 0x98(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279834
.p2align 0x4
L_494128:
L_280455:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_494129
L_280456:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_279819
.p2align 0x4
L_494129:
L_280457:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279837
.p2align 0x4
.long 0x45AC
L_279779:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq $0x1,0x90(%rbp)
	je L_280488
L_279780:
	cmpq $0x1,%r15
	je L_280486
L_279781:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_279782:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494134
.p2align 0x4,,0x7
L_279783:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_494131
L_279784:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_279782
.p2align 0x4
L_494131:
L_279785:
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
.p2align 0x4,,0x7
L_279786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494133
.p2align 0x4,,0x7
L_279787:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_279790
L_279788:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_279786
.p2align 0x4
L_494133:
L_280481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_280482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280482
.p2align 0x4
.long 0x45CD
L_280482:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_279787
.p2align 0x4
L_494134:
L_280483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_280484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280484
.p2align 0x4
.long 0x45CC
L_280484:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_279783
.p2align 0x4
.long 0x45B2
L_280132:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
L_280054:
	movq %r15,0x68(%rbp)
	leaq L_280128(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x10550)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x652
L_280128:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45B2
L_280050:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x10548)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x652
L_280129:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45B8
L_280144:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_494137
L_280146:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_280147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_494137:
L_280145:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_280150:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45AD
L_279869:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,0xB8(%rbp)
	je L_494144
L_279870:
	cmpq $0x1,%r15
	je L_494143
L_279871:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_279872:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494142
.p2align 0x4,,0x7
L_279873:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494138
L_279874:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xC0(%rbp)
	jmp L_279872
.p2align 0x4
L_494138:
L_279875:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
.p2align 0x4,,0x7
L_279876:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494141
.p2align 0x4,,0x7
L_279877:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494139
L_279878:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_279876
.p2align 0x4
L_494139:
L_279880:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_279883
L_279881:
	movq %r15,0xB8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_279864
.p2align 0x4
L_494141:
L_280416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280417
.p2align 0x4
.long 0x45C8
L_280417:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_279877
.p2align 0x4
L_494142:
L_280418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_280419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280419
.p2align 0x4
.long 0x45C9
L_280419:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_279873
.p2align 0x4
L_494143:
L_280420:
	movq 0xB8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279880
.p2align 0x4
L_494144:
L_280421:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_279883
L_280422:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB8(%rbp)
	movl %r13d,0xB0(%rbp)
	jmp L_279864
.p2align 0x4
.long 0x45B2
L_280055:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280056
L_280126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_280127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280127
.p2align 0x4
.long 0x4541
L_280127:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_280056:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_280125(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_280057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45B2
L_280051:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_280052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2154
.p2align 0x4
.long 0x905
L_280147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_494147
L_280148:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494147:
L_280149:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45B3
L_280057:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_494148
L_280059:
	movl %r13d,0x0(%r14)
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_280060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_494148:
L_280058:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_280125:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44FB
L_280052:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_280053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x45B4
L_280060:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_494168
L_280061:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_494167
L_280062:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_280063:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494166
.p2align 0x4,,0x7
L_280064:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_494149
L_280065:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_280063
.p2align 0x4
L_494149:
L_280066:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
.p2align 0x4,,0x7
L_280067:
	testl %ecx,%ecx
	jz L_494152
L_280068:
	decl %ecx
	jo L_494151
L_280070:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_494150
L_280071:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_280067
.p2align 0x4
L_494150:
L_280072:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494151:
L_280069:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494152:
L_280073:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280074
L_280119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_280120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280120
.p2align 0x4
.long 0x45B7
L_280120:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_280074:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_494164
L_280075:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_280076:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494163
.p2align 0x4,,0x7
L_280077:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_494153
L_280078:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_280076
.p2align 0x4
L_494153:
L_280079:
	movq %r15,0x18(%rbp)
L_280080:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_494154
L_280081:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
L_280082:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_280083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494154:
L_280115:
	movq %r15,0x28(%rbp)
L_280087:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_280097
L_280088:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_280089:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494161
.p2align 0x4,,0x7
L_280090:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_494155
L_280091:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_280089
.p2align 0x4
L_494155:
L_280092:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_280093:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494160
.p2align 0x4,,0x7
L_280094:
	movq $0x26E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1029,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_494156
L_280095:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_280093
.p2align 0x4
L_494156:
L_280096:
	movq %r15,0x28(%rbp)
L_280097:
	movq $0x102D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_494159
L_280098:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_280099:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494158
.p2align 0x4,,0x7
L_280100:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_494157
L_280101:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_280099
.p2align 0x4
L_494157:
L_280103:
	movq $0x2857,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1591,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_280104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_7
.p2align 0x4
L_494158:
L_280105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_280106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280106
.p2align 0x4
.long 0x27C5
L_280106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_280100
.p2align 0x4
L_494159:
L_280107:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_280103
.p2align 0x4
L_494160:
L_280108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280109
.p2align 0x4
.long 0x45B6
L_280109:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_280094
.p2align 0x4
L_494161:
L_280110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_280111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280111
.p2align 0x4
.long 0x27C5
L_280111:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_280090
.p2align 0x4
L_494163:
L_280116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_280117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280117
.p2align 0x4
.long 0x27C5
L_280117:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_280077
.p2align 0x4
L_494164:
L_280118:
	movq $0x1,0x18(%rbp)
	jmp L_280080
.p2align 0x4
L_494166:
L_280121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280122
.p2align 0x4
.long 0x45B6
L_280122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_280064
.p2align 0x4
L_494167:
L_280123:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494168:
L_280124:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45B2
L_280053:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_280054
.p2align 0x4
.long 0x45B5
L_280083:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280084
L_280113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280114
.p2align 0x4
.long 0x45B6
L_280114:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_280084:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_494169
L_280085:
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_280082
.p2align 0x4
L_494169:
L_280086:
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_280087
.p2align 0x4
.long 0x905
L_280104:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_11
.hidden f_11
f_11:
L_280520:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_280538
L_280521:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494175
L_280522:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r14
	je L_494171
L_280523:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_280524:
	movq $0x1591,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_280525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_11
.p2align 0x4
L_494171:
L_280529:
	cmpq $0x1,%r15
	je L_494174
L_280530:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_280531:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494173
.p2align 0x4,,0x7
L_280532:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494172
L_280533:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_280531
.p2align 0x4
L_494172:
L_280534:
	movq 0x10(%rbp),%r13
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%rbp)
	movq $0x1,%r15
	movq %r13,%r14
	jmp L_280524
.p2align 0x4
L_494173:
L_280535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_280536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280536
.p2align 0x4
.long 0x45C
L_280536:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_280532
.p2align 0x4
L_494174:
L_280537:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494175:
L_280538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_280539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280539
.p2align 0x4
.long 0x452
L_280539:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_280522
.p2align 0x4
.long 0x4B0
L_280525:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280526
L_280527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_280528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280528
.p2align 0x4
.long 0x460
L_280528:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_280526:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl do_delete_1
.hidden do_delete_1
do_delete_1:
L_280540:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_280563
L_280541:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494182
L_280542:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_494181
L_280543:
	movq 0x8(%r15),%r14
	movq %r14,%r13
	movq %r13,0x10(%rbp)
	movl 0x0(%r15),%r14d
	cmpq $0x1,%r13
	je L_494179
L_280544:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x18(%rbp)
	cmpl %r14d,0x0(%r11)
	jne L_494178
L_280547:
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_280548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494178:
L_280546:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494179:
L_280555:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r10
	movq %r10,0x8(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x10(%rbp)
	cmpl 0x0(%r11),%r14d
	jne L_280546
L_280557:
	movq %r13,0x28(%rbp)
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	addq $0x28,%rbp
	leaq (L_280558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_494181:
L_280562:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq $0x2863,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x28,%r12
	movq $0x1,0x0(%r13)
	movq %r14,0x18(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494182:
L_280563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_280564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280564
.p2align 0x4
.long 0x460
L_280564:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_280542
.p2align 0x4
.long 0x5F0
L_280548:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_280549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp do_delete_1
.p2align 0x4
.long 0x5F0
L_280558:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280559
L_280560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_280561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280561
.p2align 0x4
.long 0x4EA
L_280561:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_280559:
	movq $0x2863,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E1
L_280549:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280550
L_280553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_280554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280554
.p2align 0x4
.long 0x4E8
L_280554:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280550:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_280546
L_280551:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x2863,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tryChange_1
.hidden tryChange_1
tryChange_1:
L_280565:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_280566
L_280648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_280649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280649
.p2align 0x4
.long 0x564
L_280649:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_280566:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_494199
L_280567:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_280568:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494198
.p2align 0x4,,0x7
L_280569:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_494187
L_280570:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_280568
.p2align 0x4
L_494187:
L_280571:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_280572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494197
.p2align 0x4,,0x7
L_280573:
	movq $0x26E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1029,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_494188
L_280574:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_280572
.p2align 0x4
L_494188:
L_280575:
L_280576:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_494196
L_280577:
	movq 0x8(%r13),%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_280578:
	incl %ecx
	cmpq $0x1,%r14
	je L_494189
L_280579:
	movq 0x8(%r14),%r14
	jmp L_280578
.p2align 0x4
L_494189:
L_280580:
L_280581:
	addl 0x10(%rbp),%ecx
	jo L_494195
L_280583:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_494194
L_280584:
	movq 0x8(%r13),%r14
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_280585:
	incl %ebx
	cmpq $0x1,%r14
	je L_494190
L_280586:
	movq 0x8(%r14),%r14
	jmp L_280585
.p2align 0x4
L_494190:
L_280587:
L_280588:
	subl %ebx,%ecx
	jo L_494193
L_280590:
	addl $0x1E,%ecx
	jo L_494192
L_280592:
	incl %ecx
	jo L_494191
L_280594:
	movl %ecx,0x40(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x3E68)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_280595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_7
.p2align 0x4
L_494191:
L_280593:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494192:
L_280591:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494193:
L_280589:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494194:
L_280641:
	xorl %ebx,%ebx
	jmp L_280588
.p2align 0x4
L_494195:
L_280582:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494196:
L_280642:
	xorl %ecx,%ecx
	jmp L_280581
.p2align 0x4
L_494197:
L_280643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_280644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280644
.p2align 0x4
.long 0x5A0
L_280644:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_280573
.p2align 0x4
L_494198:
L_280645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280646
.p2align 0x4
.long 0x567
L_280646:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_280569
.p2align 0x4
L_494199:
L_280647:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_280576
.p2align 0x4
.long 0x609
L_280595:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280597
L_280639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_280640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280640
.p2align 0x4
.long 0xB66
L_280640:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_280597:
	movq 0x28(%rbp),%r15
	andq $0x3,%r15
	jz L_494255
L_280598:
	movl $0x1E,%ecx
	subl 0x14(%rbp),%ecx
	jo L_494254
L_280600:
	decl %ecx
	jo L_494253
L_280602:
L_280603:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_494252
L_280604:
	movl %ecx,0x14(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_280605:
	movl 0x0(%r15),%eax
	subq $0x7,%rax
	cmpq $0x3C,%rax
	ja L_494201
	jmp *jumpTable_765(,%rax,8)
.data
.p2align 0x4
jumpTable_765:
.quad
.text
.p2align 0x4
L_494201:
L_280606:
	cmpq $0x1,%r14
	je L_494202
L_280607:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_280605
.p2align 0x4
L_494202:
L_280608:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280609
L_280615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_280616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280616
.p2align 0x4
.long 0x995
L_280616:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_280609:
	xorl %ecx,%ecx
	movl 0x14(%rbp),%ebx
L_280610:
	incl %ecx
	jo L_494204
L_280612:
	cmpl %ecx,%ebx
	jl L_494203
L_280613:
	movq $0x102B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ebx,0x4(%r15)
	addq $0x30,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2861,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494203:
L_280614:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494204:
L_280611:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494206:
L_280617:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280618
L_280619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_280620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280620
.p2align 0x4
.long 0x995
L_280620:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_280618:
	movl $0x3,%ecx
	movl 0x14(%rbp),%ebx
	jmp L_280610
.p2align 0x4
L_494252:
L_280621:
	xorl %r15d,%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
	jmp L_280610
.p2align 0x4
L_494253:
L_280601:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494254:
L_280599:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494255:
L_280622:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	andq $0x3,%r14
	jz L_494258
L_280623:
	movl $0x1E,%ecx
	subl 0x14(%rbp),%ecx
	jo L_494257
L_280625:
	decl %ecx
	jo L_494256
L_280627:
	jmp L_280603
.p2align 0x4
L_494256:
L_280626:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494257:
L_280624:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494258:
L_280628:
	movl $0x1E,%r13d
	subl 0x14(%rbp),%r13d
	jo L_494263
L_280630:
	decl %r13d
	jo L_494262
L_280632:
	cmpl $0x0,%r13d
	jnl L_494260
L_280636:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_494259
L_280637:
	movl %r13d,0x14(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	jmp L_280605
.p2align 0x4
L_494259:
L_280638:
	xorl %ecx,%ecx
	movl %r13d,%ebx
	jmp L_280610
.p2align 0x4
L_494260:
L_280633:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_494261
L_280634:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1E,0x14(%rbp)
	jmp L_280605
.p2align 0x4
L_494261:
L_280635:
	xorl %ecx,%ecx
	movl $0x1E,%ebx
	jmp L_280610
.p2align 0x4
L_494262:
L_280631:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494263:
L_280629:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2154
.hidden x_2154
x_2154:
L_280650:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_280651
L_280749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_280750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280750
.p2align 0x4
.long 0x453
L_280750:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_280651:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494342
L_280652:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x20(%rbp)
L_280653:
	movl 0x0(%r15),%eax
	cmpq $0x4B,%rax
	ja L_494265
	jmp *jumpTable_766(,%rax,8)
.data
.p2align 0x4
jumpTable_766:
.quad L_494341,L_494340,L_494339,L_494338,L_494337,L_494336,L_494335,L_494334,L_494333,L_494332,L_494331,L_494330,L_494329,L_494328,L_494327,L_494326,L_494325,L_494324,L_494323,L_494322,L_494321,L_494320,L_494319,L_494318,L_494317,L_494316,L_494315,L_494314,L_494313,L_494312,L_494311,L_494310,L_494309,L_494308,L_494307,L_494306,L_494305,L_494304,L_494303,L_494302,L_494301,L_494300,L_494299,L_494298,L_494297,L_494296,L_494295,L_494294,L_494293,L_494292,L_494291,L_494290,L_494289,L_494288,L_494287,L_494286,L_494285,L_494284,L_494283,L_494282,L_494281,L_494280,L_494279,L_494278,L_494277,L_494276,L_494275,L_494274,L_494273,L_494272,L_494271,L_494270,L_494269,L_494268,L_494267,L_494266
.text
.p2align 0x4
L_494265:
L_280654:
	movq (globalObjptr+0x10538)(%rip),%r15
L_280655:
	movq %r15,0x30(%rbp)
	leaq L_280671(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_280656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_494266:
L_280747:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494267:
L_280746:
	movq (globalObjptr+0x10CD8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494268:
L_280745:
	movq (globalObjptr+0x10CD0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494269:
L_280744:
	movq (globalObjptr+0x10CC8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494270:
L_280743:
	movq (globalObjptr+0x10CC0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494271:
L_280742:
	movq (globalObjptr+0x10CB8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494272:
L_280741:
	movq (globalObjptr+0x10CB0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494273:
L_280740:
	movq (globalObjptr+0x10CA8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494274:
L_280739:
	movq (globalObjptr+0x10CA0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494275:
L_280738:
	movq (globalObjptr+0x10C98)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494276:
L_280737:
	movq (globalObjptr+0x10C90)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494277:
L_280736:
	movq (globalObjptr+0x10C88)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494278:
L_280735:
	movq (globalObjptr+0x10C80)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494279:
L_280734:
	movq (globalObjptr+0x10C78)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494280:
L_280733:
	movq (globalObjptr+0x10C70)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494281:
L_280732:
	movq (globalObjptr+0x10C68)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494282:
L_280731:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494283:
L_280730:
	movq (globalObjptr+0x10C60)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494284:
L_280729:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494285:
L_280728:
	movq (globalObjptr+0x10C58)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494286:
L_280727:
	movq (globalObjptr+0x10C50)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494287:
L_280726:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494288:
L_280725:
	movq (globalObjptr+0x10C48)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494289:
L_280724:
	movq (globalObjptr+0x10C40)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494290:
L_280723:
	movq (globalObjptr+0x10C38)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494291:
L_280722:
	movq (globalObjptr+0x10C30)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494292:
L_280721:
	movq (globalObjptr+0x10C28)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494293:
L_280720:
	movq (globalObjptr+0x10C20)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494294:
L_280719:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494295:
L_280718:
	movq (globalObjptr+0x10C18)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494296:
L_280717:
	movq (globalObjptr+0x10C10)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494297:
L_280716:
	movq (globalObjptr+0x10C08)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494298:
L_280715:
	movq (globalObjptr+0x10C00)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494299:
L_280714:
	movq (globalObjptr+0x10BF8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494300:
L_280713:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494301:
L_280712:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494302:
L_280711:
	movq (globalObjptr+0x10BF0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494303:
L_280710:
	movq (globalObjptr+0x10BE8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494304:
L_280709:
	movq (globalObjptr+0x10BE0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494305:
L_280708:
	movq (globalObjptr+0x10BD8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494306:
L_280707:
	movq (globalObjptr+0x10BD0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494307:
L_280706:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494308:
L_280705:
	movq (globalObjptr+0x10BC8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494309:
L_280704:
	movq (globalObjptr+0x10BC0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494310:
L_280703:
	movq (globalObjptr+0x10BB8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494311:
L_280702:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494312:
L_280701:
	movq (globalObjptr+0x10BB0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494313:
L_280700:
	movq (globalObjptr+0x10BA8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494314:
L_280699:
	movq (globalObjptr+0x10BA0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494315:
L_280698:
	movq (globalObjptr+0x10B98)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494316:
L_280697:
	movq (globalObjptr+0x10B90)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494317:
L_280696:
	movq (globalObjptr+0x10B88)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494318:
L_280695:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494319:
L_280694:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494320:
L_280693:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494321:
L_280692:
	movq (globalObjptr+0x10B80)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494322:
L_280691:
	movq (globalObjptr+0x10B78)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494323:
L_280690:
	movq (globalObjptr+0x10B70)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494324:
L_280689:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494325:
L_280688:
	movq (globalObjptr+0x10B68)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494326:
L_280687:
	movq (globalObjptr+0x10B60)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494327:
L_280686:
	movq (globalObjptr+0x10B58)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494328:
L_280685:
	movq (globalObjptr+0x10B50)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494329:
L_280684:
	movq (globalObjptr+0x10B48)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494330:
L_280683:
	movq (globalObjptr+0x10B40)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494331:
L_280682:
	movq (globalObjptr+0x10B38)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494332:
L_280681:
	movq (globalObjptr+0x10B30)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494333:
L_280680:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494334:
L_280679:
	movq (globalObjptr+0x10B28)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494335:
L_280678:
	movq (globalObjptr+0x10B20)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494336:
L_280677:
	movq (globalObjptr+0x10B18)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494337:
L_280676:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494338:
L_280675:
	movq (globalObjptr+0x10B10)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494339:
L_280674:
	movq (globalObjptr+0x10B08)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494340:
L_280673:
	movq (globalObjptr+0x10B00)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494341:
L_280672:
	movq (globalObjptr+0x10AF8)(%rip),%r15
	jmp L_280655
.p2align 0x4
L_494342:
L_280748:
	movq $0x1,%r15
L_280664:
	movq %r15,0x20(%rbp)
	leaq L_280666(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x20,%rbp
	leaq (L_280665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x51A
L_280656:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280657
L_280669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_280670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280670
.p2align 0x4
.long 0x51D
L_280670:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_280657:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_494344
L_280658:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_280653
.p2align 0x4
L_494344:
L_280659:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_280660:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494346
.p2align 0x4,,0x7
L_280661:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_280664
L_280662:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_280660
.p2align 0x4
L_494346:
L_280667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_280668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280668
.p2align 0x4
.long 0x51D
L_280668:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_280661
.p2align 0x4
.long 0x72F
L_280671:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48B
L_280665:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_280666:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl openBasis_0
.hidden openBasis_0
openBasis_0:
L_280751:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_280826
L_280752:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494369
L_280753:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0xC8(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_280755
L_280756:
	cmpl $0x0,%r14d
	jl L_280789
L_280757:
	movl $0x0,0x10(%rbp)
loop_3349:
	movl 0xC8(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_494366
L_280758:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_280755
L_280760:
	cmpl $0x0,%r13d
	jl L_280789
L_280761:
	movl $0x0,0x14(%rbp)
loop_3350:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494363
L_280762:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_280755
L_280764:
	cmpl $0x0,%r13d
	jl L_280789
L_280765:
	movl $0x0,0x14(%rbp)
loop_3351:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494360
L_280766:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_280755
L_280768:
	cmpl $0x0,%r13d
	jl L_280789
L_280769:
	movl $0x0,0x14(%rbp)
loop_3352:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494357
L_280770:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_280755
L_280772:
	cmpl $0x0,%r13d
	jl L_280789
L_280773:
	movl $0x0,0x14(%rbp)
loop_3353:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494354
L_280774:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_280755
L_280776:
	cmpl $0x0,%r13d
	jl L_280789
L_280777:
	movl $0x0,0x14(%rbp)
loop_3354:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494351
L_280778:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_494350
L_280780:
	cmpl $0x0,%r13d
	jl L_494349
L_280781:
	movl $0x0,0x14(%rbp)
loop_3355:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494348
L_280782:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494348:
L_280783:
	movslq 0x14(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_494349:
L_280789:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494350:
L_280755:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494351:
L_280790:
	movslq 0x14(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_494354:
L_280796:
	movslq 0x14(%rbp),%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_494357:
L_280802:
	movslq 0x14(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1994
.p2align 0x4
L_494360:
L_280808:
	movslq 0x14(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1993
.p2align 0x4
L_494363:
L_280814:
	movslq 0x14(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_280815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1992
.p2align 0x4
L_494366:
L_280820:
	movslq 0x10(%rbp),%r15
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_280821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1991
.p2align 0x4
L_494369:
L_280826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_280827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280827
.p2align 0x4
.long 0x45C
L_280827:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_280753
.p2align 0x4
.long 0x45D0
L_280784:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280785
L_280786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280787
.p2align 0x4
.long 0x45D1
L_280787:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280785:
	incl 0x14(%rbp)
	jmp loop_3355
.p2align 0x4
.long 0x45D2
L_280791:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280792
L_280793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280794
.p2align 0x4
.long 0x45D3
L_280794:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280792:
	incl 0x14(%rbp)
	jmp loop_3354
.p2align 0x4
.long 0x45D4
L_280797:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280798
L_280799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280800
.p2align 0x4
.long 0x45D5
L_280800:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280798:
	incl 0x14(%rbp)
	jmp loop_3353
.p2align 0x4
.long 0x45D6
L_280803:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280804
L_280805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280806
.p2align 0x4
.long 0x45D7
L_280806:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280804:
	incl 0x14(%rbp)
	jmp loop_3352
.p2align 0x4
.long 0x45D8
L_280809:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280810
L_280811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280812
.p2align 0x4
.long 0x45D9
L_280812:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280810:
	incl 0x14(%rbp)
	jmp loop_3351
.p2align 0x4
.long 0x45DA
L_280815:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280816
L_280817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_280818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280818
.p2align 0x4
.long 0x45DB
L_280818:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_280816:
	incl 0x14(%rbp)
	jmp loop_3350
.p2align 0x4
.long 0x45DC
L_280821:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280822
L_280823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_280824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280824
.p2align 0x4
.long 0x45DD
L_280824:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_280822:
	incl 0x10(%rbp)
	jmp loop_3349
.text
.p2align 0x4
.globl x_1991
.hidden x_1991
x_1991:
L_280828:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_280829
L_280894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_280895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280895
.p2align 0x4
.long 0x4AF
L_280895:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280829:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_280830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x72A
L_280830:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280831
L_280892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280893
.p2align 0x4
.long 0x72D
L_280893:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_280831:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_280838
L_280832:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_280833:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1071,%r13
	je L_494389
L_280834:
	cmpq $0x1,%r15
	je L_494379
L_280835:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_280833
.p2align 0x4
L_494379:
L_280836:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280838
L_280885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280886
.p2align 0x4
.long 0x72D
L_280886:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_280838:
	movq $0x1E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_280839:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_494385
L_280840:
	movq 0x8(%r15),%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r15),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r11)
	je L_494382
L_280841:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x2689,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_494380
L_280842:
L_280843:
	movq $0x11C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494380:
L_280844:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_280846:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_280848:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_494381
L_280849:
	movl $0x1,0x0(%r11)
	xchgq %r10,%r14
	jmp L_280843
.p2align 0x4
L_494381:
	xchgq %r10,%r14
	jmp L_280843
.p2align 0x4
L_494382:
L_280853:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_494383
L_280854:
	movq %r14,%r15
	movq %r11,%r14
L_280855:
	movq $0x11C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494383:
L_280856:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_280858:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
L_280860:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq 0x20(%rbp),%r8
	movq 0x10(%r8),%rsp
	movl 0x0(%rsp),%esi
	testl %esi,%esi
	jnz L_494384
L_280861:
	movl $0x1,0x0(%r10)
	movq %r14,%r15
	movq %r9,%r14
	jmp L_280855
.p2align 0x4
L_494384:
	movq %r14,%r15
	movq %r9,%r14
	jmp L_280855
.p2align 0x4
L_494385:
L_280865:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_55
L_280878:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_280879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_55:
new_18:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x2689,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_494386
L_280867:
L_280868:
	movq $0x11C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494386:
L_280869:
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x0(%r14)
L_280871:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
L_280873:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_494387
L_280874:
	movl $0x1,0x0(%r13)
	xchgq %r11,%r15
	jmp L_280868
.p2align 0x4
L_494387:
	xchgq %r11,%r15
	jmp L_280868
.p2align 0x4
L_494389:
L_280887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280888
L_280889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280890
.p2align 0x4
.long 0x72E
L_280890:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_280888:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_280839
.p2align 0x4
.long 0x72B
L_280879:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280880
L_280883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_280884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280884
.p2align 0x4
.long 0x72C
L_280884:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_280880:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_18
L_280882:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_18
.text
.p2align 0x4
.globl force_1
.hidden force_1
force_1:
L_280896:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_281156
L_280897:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494397
L_280898:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_494396
L_280899:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14A6,%r13
	je L_494395
L_280901:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x205B,%r15
	je L_494394
L_281154:
	movq 0x28(%r13),%r15
	movq 0x20(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x40(%rbp)
	movq $0x409,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x38(%rbp)
	addq $0x20,%r12
	leaq L_280922(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_280986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp wrapLexAndParse_0
.p2align 0x4
L_494394:
L_280902:
	movq 0x78(%r13),%r15
	movq %r15,0xA8(%rbp)
	movq 0x70(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x60(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x90(%rbp)
	leaq L_280922(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_280903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1208
.p2align 0x4
L_494395:
L_280900:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494396:
L_281155:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494397:
L_281156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_281157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281157
.p2align 0x4
.long 0x453
L_281157:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_280898
.p2align 0x4
.long 0xB29
L_280986:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280987
L_280988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_280989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280989
.p2align 0x4
.long 0xB2A
L_280989:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_280987:
	movq 0x20(%rbp),%r15
L_280917:
	movq $0x294D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_280922:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280923
L_280924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_280925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280925
.p2align 0x4
.long 0xB2B
L_280925:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_280923:
	movq 0x20(%rbp),%r15
L_280909:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x294F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45DE
L_280903:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280904
L_281152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_281153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281153
.p2align 0x4
.long 0x45F8
L_281153:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_280904:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_494401
L_280905:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xAC8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10510)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (x_926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494401:
L_280926:
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_280927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1208
.p2align 0x4
.long 0x45DF
x_926:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_280906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45E1
L_280927:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280928
L_281150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_281151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281151
.p2align 0x4
.long 0x45F7
L_281151:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_280928:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_494403
L_280929:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xAD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10510)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (x_926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494403:
L_280930:
	movq $0x11AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x10(%r13)
	movq $0x254F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r11)
	cmpq $0x1,%r13
	je L_280938
L_280931:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_280932:
	movq 0x10(%r15),%r10
	movq 0x30(%rbp),%r9
	cmpq %r9,%r10
	je L_281072
L_280933:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_494426
L_281062:
	xorq %r11,%r11
	movq %r10,%r15
.p2align 0x4,,0x7
vectorEqualLoop_221:
	cmpq %r11,%r13
	je L_494425
L_281063:
	movq 0x30(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_494404
L_281070:
	incq %r11
	jmp vectorEqualLoop_221
.p2align 0x4
L_494404:
L_281064:
	cmpq $0x1,%r14
	je L_494405
L_281065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_280932
.p2align 0x4
L_494405:
L_281066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280938
L_281068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_281069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281069
.p2align 0x4
.long 0x45E9
L_281069:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_280938:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_494423
L_280941:
	movl $0x0,0x38(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3356:
	cmpl %ecx,%ebx
	jnl L_494408
L_281054:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_494406
L_281059:
	movq 0x30(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x38(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x38(%rbp)
	movl %r15d,%ebx
	jmp loop_3356
.p2align 0x4
L_494406:
L_281055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280948
L_281057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_281058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281058
.p2align 0x4
.long 0x1D6E
L_281058:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280948:
	movq $0x6,%r15
	jmp L_280909
.p2align 0x4
L_494408:
L_280942:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280943
L_281052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_281053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281053
.p2align 0x4
.long 0x45E9
L_281053:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_280943:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_494421
L_280945:
	movq %r14,0x0(%r13)
	movq 0x60(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x38(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_494419
L_280946:
	movslq %r11d,%r13
	movq %r13,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_280948
L_280949:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r11
	je L_280961
L_280950:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_280951:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_494415
L_280956:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq 0x30(%rbp),%r13
	je L_281048
L_280957:
	movq 0x28(%rbp),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_494412
L_281041:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_220:
	cmpq 0x28(%rbp),%r11
	je L_494411
L_281042:
	movq 0x30(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r13,%r11,1)
	jne L_494409
L_281046:
	incq %r11
	jmp vectorEqualLoop_220
.p2align 0x4
L_494409:
L_281043:
	cmpq $0x1,%r14
	je L_494410
L_281044:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_280951
.p2align 0x4
L_494410:
L_280961:
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_280962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_494411:
L_281048:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_280985:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_280986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp force_1
.p2align 0x4
L_494412:
L_280958:
	cmpq $0x1,%r14
	je L_280961
L_280959:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_280951
.p2align 0x4
L_494415:
L_280952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280953
L_280954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_280955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	movq %r10,%rbx
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280955
.p2align 0x4
.long 0x1D6E
L_280955:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280953:
	movq (globalObjptr+0xAF0)(%rip),%r15
	jmp L_280909
.p2align 0x4
L_494419:
L_280907:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280908
L_280910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_280911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280911
.p2align 0x4
.long 0x1D6E
L_280911:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280908:
	movq $0x3,%r15
	jmp L_280909
.p2align 0x4
L_494421:
L_280944:
	movq (globalObjptr+0xAF8)(%rip),%r15
	jmp L_280909
.p2align 0x4
L_494423:
L_280940:
	movq (globalObjptr+0x518)(%rip),%r15
	jmp L_280909
.p2align 0x4
L_494425:
L_281072:
	movq (globalObjptr+0x10CE0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_281073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494426:
L_280934:
	cmpq $0x1,%r14
	je L_494427
L_280935:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_280932
.p2align 0x4
L_494427:
L_280936:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280938
L_281060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_281061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281061
.p2align 0x4
.long 0x45E9
L_281061:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_280938
.p2align 0x4
.long 0x45E0
L_280906:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_280907
L_280912:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_280913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x45E2
L_280962:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280963
L_281039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_281040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281040
.p2align 0x4
.long 0x45E8
L_281040:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_280963:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_494438
L_280964:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_280965:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494437
.p2align 0x4,,0x7
L_280966:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_494433
L_280967:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_280965
.p2align 0x4
L_494433:
L_280968:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_494436
L_280969:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_280970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494435
.p2align 0x4,,0x7
L_280971:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_494434
L_280972:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_280970
.p2align 0x4
L_494434:
L_280974:
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_280975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_494435:
L_281033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_281034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281034
.p2align 0x4
.long 0x45E7
L_281034:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_280971
.p2align 0x4
L_494436:
L_281035:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_280974
.p2align 0x4
L_494437:
L_281036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_281037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281037
.p2align 0x4
.long 0x45E7
L_281037:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_280966
.p2align 0x4
L_494438:
L_281038:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_280977:
	movq $0x40B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x28(%r14)
	addq $0x38,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x294F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0xFB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%rdx
	movq %rdx,0x8(%r15)
	movq 0x80(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_280907
L_280978:
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28EF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x38(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_280948
L_280980:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_280940
L_280982:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_280907
L_280983:
	cmpl %r15d,%r10d
	jnl L_494456
L_280990:
	addl %r10d,%r10d
	jo L_280907
L_280991:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_494454
L_280992:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x411,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_280993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280993
.p2align 0x4
.long 0x45E3
L_280993:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3357:
	cmpq 0x30(%rbp),%r15
	jnl L_494439
L_281029:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3357
.p2align 0x4
L_494439:
L_280994:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280995
L_281027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_281028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281028
.p2align 0x4
.long 0x45E5
L_281028:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_280995:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_280940
L_280997:
	cmpl $0x0,%r13d
	jl L_494451
L_280998:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_3358:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_494450
L_281000:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_281013
L_281001:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
L_281002:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494448
.p2align 0x4,,0x7
L_281003:
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_280940
L_281005:
	movl $0x0,0x4C(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3359:
	cmpl %ecx,%ebx
	jnl L_494442
L_281017:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_494440
L_281022:
	movzbl 0x0(%r14,%r11,1),%r10d
	movl 0x4C(%rbp),%r11d
	imull $0x1F,%r11d
	addl %r10d,%r11d
	movl %r11d,0x4C(%rbp)
	movl %r13d,%ebx
	jmp loop_3359
.p2align 0x4
L_494440:
L_281018:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280948
L_281020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_281021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281021
.p2align 0x4
.long 0x1D6E
L_281021:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_280948
.p2align 0x4
L_494442:
L_281006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494446
.p2align 0x4,,0x7
L_281007:
	movl 0x4C(%rbp),%r15d
	andl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_280907
L_281008:
	movslq %r15d,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_280948
L_281010:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq $0x28EF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_494443
L_281011:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_281002
.p2align 0x4
L_494443:
L_281013:
	incl 0x48(%rbp)
	jmp loop_3358
.p2align 0x4
L_494446:
L_281015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_281016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281016
.p2align 0x4
.long 0x45E4
L_281016:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_281007
.p2align 0x4
L_494448:
L_281023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_281024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281024
.p2align 0x4
.long 0x45E4
L_281024:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_281003
.p2align 0x4
L_494450:
L_280999:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,%r15
	jmp L_280985
.p2align 0x4
L_494451:
L_281026:
	movq (globalObjptr+0x520)(%rip),%r15
	jmp L_280909
.p2align 0x4
L_494454:
L_281030:
	movq $0x5,%r15
	jmp L_280909
.p2align 0x4
L_494456:
L_280984:
	movq 0x28(%rbp),%r15
	jmp L_280985
.p2align 0x4
.long 0x2556
L_281073:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_281074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB29
L_280913:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280914
L_280920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_280921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280921
.p2align 0x4
.long 0x1D6E
L_280921:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_280914:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_494462
L_280916:
	movq (globalObjptr+0xAB8)(%rip),%r15
	jmp L_280917
.p2align 0x4
L_494462:
L_280919:
	movq (globalObjptr+0x1618)(%rip),%r15
	jmp L_280909
.p2align 0x4
.long 0x45E2
L_280975:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_280976
L_281031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_281032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281032
.p2align 0x4
.long 0x45E6
L_281032:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_280976:
	movq 0x28(%rbp),%r15
	jmp L_280977
.p2align 0x4
.long 0x3D49
L_281074:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281075
L_281146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_281147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281147
.p2align 0x4
.long 0x71A
L_281147:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_281075:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_281076:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_280907
L_281077:
	cmpq $0x1,%r14
	je L_494465
L_281078:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_281076
.p2align 0x4
L_494465:
L_281079:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281080
L_281144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_281145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281145
.p2align 0x4
.long 0x45F6
L_281145:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_281080:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494467
L_281081:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_281082:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq $0x1,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%rbp)
L_281083:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_494466
L_281084:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_281085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_494466:
L_281142:
	movq (globalObjptr+0x10CE8)(%rip),%r15
L_281096:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_281097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494467:
L_281143:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_281082
.p2align 0x4
.long 0x7CF
L_281085:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_281086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x2535
L_281097:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_281098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45EA
L_281086:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_281087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x45EE
L_281098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_281099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7D0
L_281087:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281088
L_281140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_281141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281141
.p2align 0x4
.long 0x7D7
L_281141:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_281088:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_281089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x45EF
L_281099:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281100
L_281134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_281135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281135
.p2align 0x4
.long 0x45F4
L_281135:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_281100:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_281101:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_280907
L_281102:
	cmpq $0x1,%r14
	je L_494472
L_281103:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_281101
.p2align 0x4
L_494472:
L_281104:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281105
L_281132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_281133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281133
.p2align 0x4
.long 0x45F3
L_281133:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_281105:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494476
L_281106:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_281107:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_494473
L_281108:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	jmp L_281083
.p2align 0x4
L_494473:
L_281109:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_281110:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494475
.p2align 0x4,,0x7
L_281111:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_494474
L_281112:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_281110
.p2align 0x4
L_494474:
L_281113:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_281114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_494475:
L_281129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_281130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281130
.p2align 0x4
.long 0x45F2
L_281130:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_281111
.p2align 0x4
L_494476:
L_281131:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_281107
.p2align 0x4
.long 0x45EB
L_281089:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_281090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x45F0
L_281114:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281115
L_281127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_281128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281128
.p2align 0x4
.long 0x45F1
L_281128:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_281115:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494482
L_281116:
	decl %ecx
	jo L_280907
L_281117:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_281118:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_280907
L_281119:
	movl %r13d,0x0(%r15)
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x28,%rbp
	leaq (L_281120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_494482:
L_281126:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_281118
.p2align 0x4
.long 0x45EC
L_281090:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_281091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xB29
L_281120:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281121
L_281124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_281125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281125
.p2align 0x4
.long 0x1D6E
L_281125:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_281121:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_280919
	jmp L_280916
.p2align 0x4
.long 0x253A
L_281091:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281092
L_281138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_281139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281139
.p2align 0x4
.long 0x7D4
L_281139:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_281092:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_281093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x45ED
L_281093:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_281094
L_281136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_281137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_281137
.p2align 0x4
.long 0x45F5
L_281137:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_281094:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_281095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2535
L_281095:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_281096
