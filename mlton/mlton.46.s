/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:19:55 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1620
.hidden x_1620
x_1620:
L_143665:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_143696
L_143666:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433542
L_143667:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_433541
L_143669:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433540
L_143670:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_143672:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433539
L_143687:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD7,%r11
	jne L_433538
L_143688:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_433535
L_143673:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_433534
L_143675:
	cmpq $0x1,%r15
	je L_433530
L_143676:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_143672
.p2align 0x4
L_433530:
L_143677:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143678
L_143685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_143686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143686
.p2align 0x4
.long 0xB2B
L_143686:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_143678:
	movl 0x8(%rbp),%ecx
L_143679:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433532
L_143681:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143683
L_143684:
	movl %ecx,0x0(%r15)
L_143683:
	movq $0x19AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433532:
L_143680:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433534:
L_143674:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433535:
L_143690:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143680
L_143691:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433536
L_143694:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_143693:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433536:
L_143692:
	movq %r13,%r15
	jmp L_143693
.p2align 0x4
L_433538:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_143673
.p2align 0x4
L_433539:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_143673
.p2align 0x4
L_433540:
L_143695:
	xorl %ecx,%ecx
	jmp L_143679
.p2align 0x4
L_433541:
L_143668:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433542:
L_143696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_143697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143697
.p2align 0x4
.long 0x45C
L_143697:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143667
.text
.p2align 0x4
.globl checkVarExp_0
.hidden checkVarExp_0
checkVarExp_0:
L_143698:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_143699
L_143828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_143829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143829
.p2align 0x4
.long 0x460
L_143829:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_143699:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_143701
L_143702:
	cmpl $0x0,%r13d
	jl L_433560
L_143703:
	movl $0x0,0x54(%rbp)
loop_1549:
	movl 0x50(%rbp),%r10d
	cmpl %r10d,0x54(%rbp)
	jl L_433559
L_143704:
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r11
	movq 0x40(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_433558
L_143706:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_433557
L_143707:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_143709:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_433556
L_143749:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCD7,%r10
	jne L_433555
L_143750:
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x10)(%rip)
	je L_433547
L_143710:
	incl %ecx
	jo L_433546
L_143712:
	cmpq $0x1,%r15
	je L_433544
L_143713:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_143709
.p2align 0x4
L_433544:
L_143714:
L_143715:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433545
L_143717:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_523
L_143748:
	movl %ecx,0x0(%r15)
x_523:
	movq %r13,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_143719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_433545:
L_143716:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433546:
L_143711:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433547:
L_143752:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_143716
L_143753:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_433553
L_143823:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_143755:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x54(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	movq %r11,0x68(%rbp)
	jne L_433552
L_143757:
	cmpl 0x50(%rbp),%r14d
	je L_433548
L_143758:
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_143759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_433548:
L_143814:
	movq 0x68(%rbp),%rdx
	testq %rdx,%rdx
	jz L_433551
L_143815:
	cmpq $0x7FFFFFFF,%rdx
	ja L_433550
L_143816:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_143817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143817
.p2align 0x4
.long 0x1F08
L_143817:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,%r15
L_143818:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1550:
	cmpq 0x68(%rbp),%r14
	jnl L_433549
L_143820:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x58(%rbp),%r13
	movq 0x0(%r13,%r9,8),%r8
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r9,8),%rsp
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq %r8,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_1550
.p2align 0x4
L_433549:
L_143819:
	movq $0x9A3,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1614
.p2align 0x4
L_433550:
L_143821:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433551:
L_143822:
	movq (globalObjptr+0xFB0)(%rip),%r15
	jmp L_143818
.p2align 0x4
L_433552:
L_143701:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433553:
L_143754:
	movq %r14,%r15
	jmp L_143755
.p2align 0x4
L_433555:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_143710
.p2align 0x4
L_433556:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_143710
.p2align 0x4
L_433557:
L_143824:
	xorl %ecx,%ecx
	jmp L_143715
.p2align 0x4
L_433558:
L_143705:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433559:
L_143825:
	movslq 0x54(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_143826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
L_433560:
L_143827:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_143719:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_143720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1F02
L_143759:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_143760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1F09
L_143826:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x54(%rbp)
	jmp loop_1549
.p2align 0x4
.long 0x1
L_143720:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_143721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1F02
L_143760:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xF4C8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_143761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_143721:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF4C0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_143722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x185B
L_143761:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143762
L_143812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_143813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143813
.p2align 0x4
.long 0x1F06
L_143813:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_143762:
	movq $0x3BA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_143763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5B0
L_143722:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_143723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1F03
L_143763:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_143764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x51F
L_143723:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143724
L_143746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_143747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143747
.p2align 0x4
.long 0x4AF
L_143747:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_143724:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_143725:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_143711
L_143726:
	cmpq $0x1,%r14
	je L_433564
L_143727:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_143725
.p2align 0x4
L_433564:
L_143728:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143729
L_143744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_143745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143745
.p2align 0x4
.long 0x4E7
L_143745:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_143729:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433565
L_143730:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_239:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_433565:
L_143743:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_239
.p2align 0x4
.long 0x1F03
L_143764:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143765
L_143810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_143811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143811
.p2align 0x4
.long 0x1F06
L_143811:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_143765:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_143766:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54(%rbp)
	jo L_143711
L_143767:
	cmpq $0x1,%r14
	je L_433569
L_143768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_143766
.p2align 0x4
L_433569:
L_143769:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143770
L_143808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_143809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143809
.p2align 0x4
.long 0x1F07
L_143809:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_143770:
	movl 0x54(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433570
L_143771:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_143772:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF4D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_143773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_433570:
L_143807:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_143772
.p2align 0x4
.long 0x1
rev_237:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_433576
L_143731:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_143732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433575
.p2align 0x4,,0x7
L_143733:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_433574
L_143734:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_143732
.p2align 0x4
L_433574:
L_143736:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_433575:
L_143740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_143741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143741
.p2align 0x4
.long 0x45C
L_143741:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143733
.p2align 0x4
L_433576:
L_143742:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_143736
.p2align 0x4
.long 0x185B
L_143773:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143774
L_143805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_143806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143806
.p2align 0x4
.long 0x1F06
L_143806:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_143774:
	movq $0x3C2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_143775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1
bug_450:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143737
L_143738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_143739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143739
.p2align 0x4
.long 0x452
L_143739:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_143737:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F04
L_143775:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_143776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1F04
L_143776:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143777
L_143803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_143804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143804
.p2align 0x4
.long 0x1F05
L_143804:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_143777:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_143778:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_143711
L_143779:
	cmpq $0x1,%r14
	je L_433579
L_143780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_143778
.p2align 0x4
L_433579:
L_143781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143782
L_143801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_143802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143802
.p2align 0x4
.long 0xA52
L_143802:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_143782:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433580
L_143783:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_143784:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_143785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_433580:
L_143800:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_143784
.p2align 0x4
.long 0x78C
L_143785:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143786
L_143798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_143799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143799
.p2align 0x4
.long 0x9CA
L_143799:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_143786:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433585
L_143787:
	decl %ecx
	jo L_143711
L_143788:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_143789:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF4D8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_143790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_433585:
L_143797:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_143789
.p2align 0x4
.long 0x770
L_143790:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_143791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x770
L_143791:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143792
L_143795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_143796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143796
.p2align 0x4
.long 0x781
L_143796:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_143792:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_143793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x90E
L_143793:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_143794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_143794:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1198
.hidden x_1198
x_1198:
L_143830:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_143843
L_143831:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433588
L_143832:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x3F43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_143833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_433588:
L_143843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_143844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143844
.p2align 0x4
.long 0x460
L_143844:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_143832
.p2align 0x4
.long 0x491
L_143833:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_433593
L_143835:
	cmpl $0x0,%ecx
	jl L_433592
L_143836:
	movl %ebx,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1551:
	cmpl %ecx,%ebx
	jnl L_433590
L_143841:
	movslq %ebx,%r15
	movl 0x30(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x30(%rbp)
	incl %ebx
	jmp loop_1551
.p2align 0x4
L_433590:
L_143837:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143838
L_143839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_143840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143840
.p2align 0x4
.long 0x78A
L_143840:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_143838:
	movq $0x1D2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp lookup_0
.p2align 0x4
L_433592:
L_143842:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433593:
L_143834:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1621
.hidden x_1621
x_1621:
L_143845:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_143846
L_143859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_143860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143860
.p2align 0x4
.long 0x460
L_143860:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_143846:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_433598
L_143848:
	cmpl $0x2,%r10d
	jne L_143850
L_143851:
	cmpq $0x0,%r11
	jna L_143853
L_143854:
	movq 0x0(%r15),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	jne L_433595
L_143856:
	cmpq $0x1,%r11
	jna L_433594
L_143858:
	movq 0x8(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433594:
L_143853:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433595:
L_143850:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433598:
L_143847:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1622
.hidden x_1622
x_1622:
L_143861:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_143862
L_143879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_143880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143880
.p2align 0x4
.long 0x460
L_143880:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_143862:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_433606
L_143864:
	cmpl $0x3,%r9d
	jne L_143866
L_143867:
	cmpq $0x0,%r10
	jna L_143869
L_143870:
	movq 0x0(%r15),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r11)
	jne L_143866
L_143872:
	cmpq $0x1,%r10
	jna L_143869
L_143874:
	movq 0x8(%r15),%r11
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r11)
	jne L_433601
L_143876:
	cmpq $0x2,%r10
	jna L_433600
L_143878:
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433600:
L_143869:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433601:
L_143866:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433606:
L_143863:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkConExp_0
.hidden checkConExp_0
checkConExp_0:
L_143881:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_143882
L_143959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_143960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143960
.p2align 0x4
.long 0x45C
L_143960:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_143882:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_143884
L_143885:
	cmpl $0x0,%r13d
	jl L_433625
L_143886:
	movl $0x0,0x10(%rbp)
loop_1552:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x10(%rbp)
	jl L_433624
L_143887:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_433623
L_143889:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_433622
L_143890:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_143892:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_143893
L_143935:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCD6,%r13
	jne L_143893
L_143936:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x20(%rbp)
	je L_433612
L_143893:
	incl %ecx
	jo L_433611
L_143895:
	cmpq $0x1,%r14
	je L_433608
L_143896:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_143892
.p2align 0x4
L_433608:
L_143897:
L_143898:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433610
L_143900:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_524
L_143934:
	movl %ecx,0x0(%r15)
x_524:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_433609
L_143932:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_143933+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_433609:
L_143902:
L_143903:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_143904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_433610:
L_143899:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433611:
L_143894:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433612:
L_143938:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143899
L_143939:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433618
L_143954:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_143941:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x18(%rbp)
	cmpq %r15,%r11
	jne L_433617
L_143943:
	cmpl 0x38(%rbp),%r13d
	je L_433613
L_143944:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433613:
L_143945:
	movq 0x18(%rbp),%rdx
	testq %rdx,%rdx
	jz L_433616
L_143946:
	cmpq $0x7FFFFFFF,%rdx
	ja L_433615
L_143947:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_143948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143948
.p2align 0x4
.long 0x1F0A
L_143948:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_143949:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1553:
	cmpq 0x18(%rbp),%r14
	jnl L_433614
L_143951:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r9,8),%r8
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r9,8),%rsp
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq %r8,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_1553
.p2align 0x4
L_433614:
L_143950:
	movq $0x9A3,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1614
.p2align 0x4
L_433615:
L_143952:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433616:
L_143953:
	movq (globalObjptr+0xFB0)(%rip),%r15
	jmp L_143949
.p2align 0x4
L_433617:
L_143884:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433618:
L_143940:
	movq %r13,%r15
	jmp L_143941
.p2align 0x4
L_433622:
L_143955:
	xorl %ecx,%ecx
	jmp L_143898
.p2align 0x4
L_433623:
L_143888:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433624:
L_143956:
	movslq 0x10(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_143957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
L_433625:
L_143958:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_143933:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_143903
.p2align 0x4
.long 0x1
L_143904:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_143905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCF8
L_143957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x10(%rbp)
	jmp loop_1552
.p2align 0x4
.long 0x4B0
L_143905:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF4E0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_143906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_143906:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_143907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_143907:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143908
L_143930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_143931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143931
.p2align 0x4
.long 0x4AF
L_143931:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_143908:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_143909:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_143894
L_143910:
	cmpq $0x1,%r14
	je L_433628
L_143911:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_143909
.p2align 0x4
L_433628:
L_143912:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143913
L_143928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_143929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143929
.p2align 0x4
.long 0x4E7
L_143929:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_143913:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433629
L_143914:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_240:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_433629:
L_143927:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_240
.p2align 0x4
.long 0x1
rev_238:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_433635
L_143915:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_143916:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433634
.p2align 0x4,,0x7
L_143917:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_433633
L_143918:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_143916
.p2align 0x4
L_433633:
L_143920:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_433634:
L_143924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_143925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143925
.p2align 0x4
.long 0x45C
L_143925:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143917
.p2align 0x4
L_433635:
L_143926:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_143920
.p2align 0x4
.long 0x1
bug_451:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143921
L_143922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_143923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143923
.p2align 0x4
.long 0x452
L_143923:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_143921:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreachi_7
.hidden foreachi_7
foreachi_7:
L_143961:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_143962
L_144518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_144519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144519
.p2align 0x4
.long 0x460
L_144519:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_143962:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_143964
L_143965:
	cmpl $0x0,%r13d
	jl L_433789
L_143966:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1554:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433788
.p2align 0x4,,0x7
L_143967:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_433787
L_143969:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_433786
L_143970:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19C0,%rax
	cmpq $0x14,%rax
	ja L_433637
	jmp *jumpTable_305(,%rax,8)
.data
.p2align 0x4
jumpTable_305:
.quad L_433773,L_433772,L_433771,L_433770,L_433769,L_433768,L_433755,L_433742,L_433741,L_433709,L_433708,L_433707,L_433694,L_433682,L_433669,L_433643,L_433642,L_433641,L_433640,L_433639,L_433638
.text
.p2align 0x4
L_433637:
L_143971:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_143972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433638:
L_144476:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_144477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433639:
L_144467:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_144468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_433640:
L_144460:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_144461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_433641:
L_144417:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC2D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	movq %r13,0x78(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0xD2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movq %r11,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq %r15,0x10(%r14)
	addq $0x70,%rbp
	leaq (L_144418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433642:
L_144415:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_144416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_433643:
L_144361:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_143977
L_144362:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433667
L_144363:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x38(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_144365:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433666
L_144376:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE1,%r11
	jne L_433665
L_144377:
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_433648
L_144366:
	movl 0x38(%rbp),%r11d
	incl %r11d
	jo L_433647
L_144367:
	cmpq $0x1,%r15
	je L_433644
L_144368:
	movl %r11d,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_144365
.p2align 0x4
L_433644:
	movl %r11d,%ecx
L_144370:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433646
L_144371:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144373
L_144375:
	movl %ecx,0x0(%r15)
L_144373:
	movq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_144374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_433646:
L_143989:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433647:
L_143983:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433648:
L_144379:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433664
.p2align 0x4,,0x7
L_144380:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_143989
L_144381:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_433662
L_144382:
	movq 0x40(%rbp),%r15
L_144383:
	movl 0x4(%r15),%r11d
	testl %r11d,%r11d
	jz L_144373
L_144385:
	movq $0x2805,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_433660
L_144386:
	movq %r15,0x0(%r11)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433659
L_144387:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_144389:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433658
L_144402:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE2,%r11
	jne L_433657
L_144403:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_433654
L_144390:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_143983
L_144391:
	cmpq $0x1,%r15
	je L_433649
L_144392:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_144389
.p2align 0x4
L_433649:
L_144393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433652
.p2align 0x4,,0x7
L_144394:
	movl 0x18(%rbp),%ecx
L_144395:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144396:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144398
L_144399:
	movl %ecx,0x0(%r15)
L_144398:
	movq $0x19C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_143975:
	incl 0x14(%rbp)
	jmp loop_1554
.p2align 0x4
L_433652:
L_144400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144401
.p2align 0x4
.long 0x576
L_144401:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144394
.p2align 0x4
L_433654:
L_144405:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144406:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433655
L_144409:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_144408:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_143975
.p2align 0x4
L_433655:
L_144407:
	movq %r13,%r15
	jmp L_144408
.p2align 0x4
L_433657:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144390
.p2align 0x4
L_433658:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144390
.p2align 0x4
L_433659:
L_144410:
	xorl %ecx,%ecx
	jmp L_144395
.p2align 0x4
L_433660:
L_143977:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433662:
L_144411:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_144383
.p2align 0x4
L_433664:
L_144412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144413
.p2align 0x4
.long 0x574
L_144413:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_144380
.p2align 0x4
L_433665:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144366
.p2align 0x4
L_433666:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144366
.p2align 0x4
L_433667:
L_144414:
	xorl %ecx,%ecx
	jmp L_144370
.p2align 0x4
L_433669:
L_144336:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_143977
L_144337:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433680
L_144338:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_144340:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433679
L_144353:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA8,%r11
	jne L_433678
L_144354:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_433675
L_144341:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_143983
L_144342:
	cmpq $0x1,%r15
	je L_433670
L_144343:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_144340
.p2align 0x4
L_433670:
L_144344:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433673
.p2align 0x4,,0x7
L_144345:
	movl 0x30(%rbp),%ecx
L_144346:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144347:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144349
L_144350:
	movl %ecx,0x0(%r15)
L_144349:
	movq $0x1951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433673:
L_144351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144352
.p2align 0x4
.long 0xC57
L_144352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144345
.p2align 0x4
L_433675:
L_144356:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144357:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144062
L_144359:
	movl %ecx,0x0(%r15)
L_144062:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433678:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144341
.p2align 0x4
L_433679:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144341
.p2align 0x4
L_433680:
L_144360:
	xorl %ecx,%ecx
	jmp L_144346
.p2align 0x4
L_433682:
L_144314:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_143977
L_144315:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_433692
L_144316:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
	movq %r10,%r13
.p2align 0x4,,0x7
L_144318:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_433691
L_144327:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xCD9,%r11
	jne L_433690
L_144328:
	movq 0x8(%r14),%r11
	cmpq %r13,0x0(%r14)
	movq %r13,(localObjptr+0x8)(%rip)
	je L_433687
L_144319:
	incl %ecx
	jo L_143983
L_144320:
	cmpq $0x1,%r15
	je L_433683
L_144321:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_144318
.p2align 0x4
L_433683:
L_144322:
L_144323:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144324:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144080
L_144326:
	movl %ecx,0x0(%r15)
L_144080:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433687:
L_144330:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144331:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433688
L_144334:
	movl %ecx,0x0(%r14)
	movq 0x8(%r11),%r15
L_144333:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_143975
.p2align 0x4
L_433688:
L_144332:
	movq 0x8(%r11),%r15
	jmp L_144333
.p2align 0x4
L_433690:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_144319
.p2align 0x4
L_433691:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_144319
.p2align 0x4
L_433692:
L_144335:
	xorl %ecx,%ecx
	jmp L_144323
.p2align 0x4
L_433694:
L_144289:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x47,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r9,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	movq %r10,0x0(%r15)
	movq $0x8A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2817,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	movq %r9,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_143977
L_144290:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433705
L_144291:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_144293:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433704
L_144306:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD9,%r11
	jne L_433703
L_144307:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_433700
L_144294:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_143983
L_144295:
	cmpq $0x1,%r15
	je L_433695
L_144296:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_144293
.p2align 0x4
L_433695:
L_144297:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433698
.p2align 0x4,,0x7
L_144298:
	movl 0x30(%rbp),%ecx
L_144299:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144300:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144302
L_144303:
	movl %ecx,0x0(%r15)
L_144302:
	movq $0x19B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433698:
L_144304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144305
.p2align 0x4
.long 0xC57
L_144305:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144298
.p2align 0x4
L_433700:
L_144309:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144310:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144062
L_144312:
	movl %ecx,0x0(%r15)
	jmp L_144062
.p2align 0x4
L_433703:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144294
.p2align 0x4
L_433704:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144294
.p2align 0x4
L_433705:
L_144313:
	xorl %ecx,%ecx
	jmp L_144299
.p2align 0x4
L_433707:
L_144284:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
L_433708:
L_144282:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r11b
	movb %r11b,0x20(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_144283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
L_433709:
L_144179:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x20(%rbp)
	cmpq $0x1,%r11
	je L_143975
L_144180:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x19D6,%r13
	je L_433724
	cmpq $0x19D7,%r13
	je L_433723
	cmpq $0x19D8,%r13
	je L_433710
L_144181:
	movq 0x18(%r11),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_433710:
L_144256:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_143977
L_144257:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433721
L_144258:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_144260:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433720
L_144273:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_433719
L_144274:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_433716
L_144261:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_143983
L_144262:
	cmpq $0x1,%r15
	je L_433711
L_144263:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_144260
.p2align 0x4
L_433711:
L_144264:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433714
.p2align 0x4,,0x7
L_144265:
	movl 0x18(%rbp),%ecx
L_144266:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144267:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144269
L_144270:
	movl %ecx,0x0(%r15)
L_144269:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433714:
L_144271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144272
.p2align 0x4
.long 0x576
L_144272:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144265
.p2align 0x4
L_433716:
L_144276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144277:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144062
L_144279:
	movl %ecx,0x0(%r15)
	jmp L_144062
.p2align 0x4
L_433719:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144261
.p2align 0x4
L_433720:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144261
.p2align 0x4
L_433721:
L_144280:
	xorl %ecx,%ecx
	jmp L_144266
.p2align 0x4
L_433723:
L_144238:
	movq 0x18(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq $0xB75,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r10,0x18(%r11)
	movq %r10,0x58(%rbp)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_433724:
L_144200:
	movq 0x0(%r11),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_433739
L_144202:
	testl %r11d,%r11d
	jz L_433738
L_144203:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_144204:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433737
.p2align 0x4,,0x7
L_144205:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_143977
L_144206:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433735
L_144207:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_144209:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433734
L_144222:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_433733
L_144223:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_433730
L_144210:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_143983
L_144211:
	cmpq $0x1,%r15
	je L_433725
L_144212:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_144209
.p2align 0x4
L_433725:
L_144213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433728
.p2align 0x4,,0x7
L_144214:
	movl 0x18(%rbp),%ecx
L_144215:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144216:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144218
L_144219:
	movl %ecx,0x0(%r15)
L_144218:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433728:
L_144220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144221
.p2align 0x4
.long 0x5AB
L_144221:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_144214
.p2align 0x4
L_433730:
L_144225:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144226:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433731
L_144229:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_144228:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_143975
.p2align 0x4
L_433731:
L_144227:
	movq %r13,%r15
	jmp L_144228
.p2align 0x4
L_433733:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144210
.p2align 0x4
L_433734:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_144210
.p2align 0x4
L_433735:
L_144230:
	xorl %ecx,%ecx
	jmp L_144215
.p2align 0x4
L_433737:
L_144231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_144232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144232
.p2align 0x4
.long 0x45B
L_144232:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_144205
.p2align 0x4
L_433738:
L_144233:
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x12C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_144234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_433739:
L_143964:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433741:
L_144148:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x110(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x68(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_144149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
L_433742:
L_144123:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_143977
L_144124:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_433753
L_144125:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
	movq %r10,%r13
.p2align 0x4,,0x7
L_144127:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_433752
L_144136:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xCD9,%r11
	jne L_433751
L_144137:
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpq %r13,0x0(%r14)
	movq %r13,(localObjptr+0x8)(%rip)
	je L_433747
L_144128:
	movl 0x20(%rbp),%r11d
	incl %r11d
	jo L_143983
L_144129:
	cmpq $0x1,%r15
	je L_433743
L_144130:
	movl %r11d,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_144127
.p2align 0x4
L_433743:
	movl %r11d,%ecx
L_144132:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144133:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144080
L_144135:
	movl %ecx,0x0(%r15)
	jmp L_144080
.p2align 0x4
L_433747:
L_144139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433750
.p2align 0x4,,0x7
L_144140:
	movl 0x20(%rbp),%r13d
	movslq %r13d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_143989
L_144141:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r13d,0x0(%r11)
	jl L_433748
L_144142:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_144143:
	movq $0x4125,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433748:
L_144144:
	movq (globalObjptr+0x1078)(%rip),%r13
	movl 0x20(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	jmp L_144143
.p2align 0x4
L_433750:
L_144145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_144146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144146
.p2align 0x4
.long 0x56E
L_144146:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_144140
.p2align 0x4
L_433751:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_144128
.p2align 0x4
L_433752:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_144128
.p2align 0x4
L_433753:
L_144147:
	xorl %ecx,%ecx
	jmp L_144132
.p2align 0x4
L_433755:
L_144068:
	movq 0x0(%rbp),%r11
	movq 0x20(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_143977
L_144069:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_433766
L_144070:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_144072:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_144073
L_144082:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD9,%r13
	jne L_144073
L_144083:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_433760
L_144073:
	movl 0x58(%rbp),%r13d
	incl %r13d
	jo L_143983
L_144074:
	cmpq $0x1,%r15
	je L_433756
L_144075:
	movl %r13d,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144072
.p2align 0x4
L_433756:
	movl %r13d,%ecx
L_144077:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144078:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144080
L_144081:
	movl %ecx,0x0(%r15)
	jmp L_144080
.p2align 0x4
L_433760:
L_144085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144086
L_144120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_144121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144121
.p2align 0x4
.long 0x554
L_144121:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_144086:
	movl 0x58(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_143989
L_144087:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_433761
L_144088:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_144089:
	movq $0x338F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_144090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_433761:
L_144119:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	jmp L_144089
.p2align 0x4
L_433766:
L_144122:
	xorl %ecx,%ecx
	jmp L_144077
.p2align 0x4
L_433768:
L_144067:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_31
.p2align 0x4
L_433769:
L_144065:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_144066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433770:
L_144057:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_144058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_433771:
L_144048:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_144049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_433772:
L_144005:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC2D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	movq %r13,0x78(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0xD2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movq %r11,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq %r15,0x10(%r14)
	addq $0x70,%rbp
	leaq (L_144006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433773:
L_143976:
	movq 0x0(%rbp),%r11
	movq 0x40(%r11),%r15
	movq 0x38(%r11),%r14
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movl 0x0(%r11),%ecx
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r13),%r11
	movq $0x5329,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x18(%rbp)
	movl %ecx,0x4(%rdx)
	movq %r15,0x8(%rdx)
	movq %r14,0x10(%rdx)
	movq %r10,0x18(%rdx)
	movq %r9,0x20(%rdx)
	movq %r8,0x28(%rdx)
	movq %rsp,0x30(%rdx)
	movq %rsi,0x38(%rdx)
	addq $0x48,%r12
	movl 0x14(%rbp),%r10d
	movl %r10d,0x0(%rdx)
	movq 0x10(%rdi),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%rdi),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_143977
L_143978:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_433784
L_143979:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_143981:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433783
L_143996:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8D,%r11
	jne L_433782
L_143997:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x50)(%rip)
	je L_433779
L_143982:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_143983
L_143984:
	cmpq $0x1,%r15
	je L_433774
L_143985:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x50)(%rip),%r14
	jmp L_143981
.p2align 0x4
L_433774:
L_143986:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433777
.p2align 0x4,,0x7
L_143987:
	movl 0x30(%rbp),%ecx
L_143988:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_143990:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143992
L_143993:
	movl %ecx,0x0(%r15)
L_143992:
	movq $0x1B1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433777:
L_143994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_143995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143995
.p2align 0x4
.long 0xC57
L_143995:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_143987
.p2align 0x4
L_433779:
L_143999:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144000:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_433780
L_144003:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_144002:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_143975
.p2align 0x4
L_433780:
L_144001:
	movq %r13,%r15
	jmp L_144002
.p2align 0x4
L_433782:
	movq %r14,(localObjptr+0x50)(%rip)
	jmp L_143982
.p2align 0x4
L_433783:
	movq %r14,(localObjptr+0x50)(%rip)
	jmp L_143982
.p2align 0x4
L_433784:
L_144004:
	xorl %ecx,%ecx
	jmp L_143988
.p2align 0x4
L_433786:
L_144514:
	movq 0x10(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r10)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r14),%r13
	movq 0x10(%r13),%r10
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r10)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_433787:
L_143968:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433788:
L_144515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_144516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144516
.p2align 0x4
.long 0x45E
L_144516:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143967
.p2align 0x4
L_433789:
L_144517:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x527
L_143972:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_143973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopLambda_0
.p2align 0x4
.long 0x526
L_144477:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144478
L_144512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144513
.p2align 0x4
.long 0x555
L_144513:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144478:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433806
	cmpq $0x298F,%r15
	je L_433805
	cmpq $0x2990,%r15
	je L_433792
L_144479:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_144480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433792:
L_144511:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144482:
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x30(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x20(%rbp),%r9
	movq %r9,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x38(%rbp)
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%rsp)
	movq 0x10(%r9),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_143977
L_144483:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_433803
L_144484:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_144486:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433802
L_144499:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433801
L_144500:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_433798
L_144487:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_143983
L_144488:
	cmpq $0x1,%r15
	je L_433793
L_144489:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_144486
.p2align 0x4
L_433793:
L_144490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144491
L_144497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144498
.p2align 0x4
.long 0x5B5
L_144498:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144491:
	movl 0x18(%rbp),%ecx
L_144492:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144493:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144495
L_144496:
	movl %ecx,0x0(%r15)
L_144495:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
L_433798:
L_144502:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144503:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144062
L_144505:
	movl %ecx,0x0(%r15)
	jmp L_144062
.p2align 0x4
L_433801:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144487
.p2align 0x4
L_433802:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144487
.p2align 0x4
L_433803:
L_144506:
	xorl %ecx,%ecx
	jmp L_144492
.p2align 0x4
L_433805:
L_144510:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144482
.p2align 0x4
L_433806:
L_144509:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_144480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x526
L_144468:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x526
L_144461:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144462
L_144465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144466
.p2align 0x4
.long 0xC57
L_144466:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144462:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_144062
L_144463:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x9FD
L_144418:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144419
L_144458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_144459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144459
.p2align 0x4
.long 0xA02
L_144459:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_144419:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x50(%rbp),%r11
	cmpq %r11,%r14
	je L_144421
L_144420:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_144421:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_144422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0x524
L_144416:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp L_143975
.p2align 0x4
.long 0x524
L_144374:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_143975
.p2align 0x4
.long 0x527
L_144285:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144286
L_144287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144288
.p2align 0x4
.long 0x555
L_144288:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144286:
	movq $0x13F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1620
.p2align 0x4
.long 0x1116
L_144283:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x20(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x527
L_144182:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57F
L_144239:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movb 0x50(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144240
L_144254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144255
.p2align 0x4
.long 0x58D
L_144255:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144240:
	movb 0x48(%rbp),%r15b
	testb %r15b,%r15b
	jz L_143975
L_144242:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_433814
L_144243:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_143964
L_144245:
	movl %r13d,0x58(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_433814:
L_144252:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_143983
L_144253:
	movl %r14d,0x0(%r15)
L_144249:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x527
L_144234:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144235
L_144236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144237
.p2align 0x4
.long 0x564
L_144237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_144235:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_144204
.p2align 0x4
.long 0x588
L_144149:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144150
L_144177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_144178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144178
.p2align 0x4
.long 0x567
L_144178:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_144150:
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x13F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_144151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1620
.p2align 0x4
.long 0x54A
L_144090:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_144091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
.long 0x524
L_143974:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143975
.p2align 0x4
.long 0x524
L_144066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%r15),%r14
	movl $0x1,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x526
L_144058:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144059
L_144063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144064
.p2align 0x4
.long 0xC57
L_144064:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144059:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_144062
L_144060:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x526
L_144049:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x9FD
L_144006:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144007
L_144046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_144047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144047
.p2align 0x4
.long 0xA02
L_144047:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_144007:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x50(%rbp),%r11
	cmpq %r11,%r14
	je L_144009
L_144008:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_144009:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_144010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0xC5D
L_143973:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_8
.p2align 0x4
.long 0x526
L_144480:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144481
L_144507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144508
.p2align 0x4
.long 0x555
L_144508:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144481:
	movq 0x30(%rbp),%r15
	jmp L_144482
.p2align 0x4
.long 0x544
L_144469:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144470
L_144474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144475
.p2align 0x4
.long 0x546
L_144475:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144470:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_144472
L_144471:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_144472:
	movb $0x0,0x0(%r15)
	jmp L_143975
.p2align 0x4
.long 0xE70
L_144422:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144423
L_144455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_144456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144456
.p2align 0x4
.long 0xE6E
L_144456:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_144423:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_144429
L_144424:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_144425:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_433827
L_144426:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144425
.p2align 0x4
L_433827:
L_144427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144429
L_144452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_144453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144453
.p2align 0x4
.long 0x5A1
L_144453:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_144429:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_433831
L_144430:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_144431:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_143983
L_144432:
	cmpq $0x1,%r15
	je L_433828
L_144433:
	movq 0x8(%r15),%r15
	jmp L_144431
.p2align 0x4
L_433828:
L_144434:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144435
L_144449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144450
.p2align 0x4
.long 0x58D
L_144450:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144435:
	movl 0x48(%rbp),%ecx
L_144436:
	movl %ecx,0x58(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_433831:
L_144451:
	xorl %ecx,%ecx
	jmp L_144436
.p2align 0x4
.long 0x527
L_144183:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_144184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1292
L_144246:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144247
L_144250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144251
.p2align 0x4
.long 0x1F0F
L_144251:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144247:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_143983
L_144248:
	movl %r14d,0x0(%r15)
	jmp L_144249
.p2align 0x4
.long 0x593
L_144151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_144152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkExp_0
.p2align 0x4
.long 0x1F0B
L_144091:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144092
L_144117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_144118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144118
.p2align 0x4
.long 0xA02
L_144118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_144092:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x68(%rbp),%r11
	movq %r11,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r11)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x58(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_143977
L_144093:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_433847
L_144094:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_144096:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_144097
L_144109:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCDA,%r13
	jne L_144097
L_144110:
	movq 0x0(%r14),%r13
	cmpq %r13,0x30(%rbp)
	je L_433842
L_144097:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_143983
L_144098:
	cmpq $0x1,%r15
	je L_433837
L_144099:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144096
.p2align 0x4
L_433837:
L_144100:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144101
L_144107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_144108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144108
.p2align 0x4
.long 0x1F0C
L_144108:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_144101:
	movl 0x28(%rbp),%ecx
L_144102:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144103:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144105
L_144106:
	movl %ecx,0x0(%r15)
L_144105:
	movq $0x19B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_433842:
L_144112:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143989
L_144113:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144062
L_144115:
	movl %ecx,0x0(%r15)
	jmp L_144062
.p2align 0x4
L_433847:
L_144116:
	xorl %ecx,%ecx
	jmp L_144102
.p2align 0x4
.long 0x544
L_144050:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144051
L_144055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144056
.p2align 0x4
.long 0x546
L_144056:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144051:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_144053
L_144052:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_144053:
	movb $0x0,0x0(%r15)
	jmp L_143975
.p2align 0x4
.long 0xE70
L_144010:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144011
L_144043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_144044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144044
.p2align 0x4
.long 0xE6E
L_144044:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_144011:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_144017
L_144012:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_144013:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_433852
L_144014:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144013
.p2align 0x4
L_433852:
L_144015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144017
L_144040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_144041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144041
.p2align 0x4
.long 0x5A1
L_144041:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_144017:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_433856
L_144018:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_144019:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_143983
L_144020:
	cmpq $0x1,%r15
	je L_433853
L_144021:
	movq 0x8(%r15),%r15
	jmp L_144019
.p2align 0x4
L_433853:
L_144022:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144023
L_144037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144038
.p2align 0x4
.long 0x58D
L_144038:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144023:
	movl 0x48(%rbp),%ecx
L_144024:
	movl %ecx,0x58(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_433856:
L_144039:
	xorl %ecx,%ecx
	jmp L_144024
.p2align 0x4
.long 0x529
L_144437:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144438
L_144447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144448
.p2align 0x4
.long 0x531
L_144448:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144438:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_143964
L_144440:
	movl %r11d,0x60(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_144441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x541
L_144184:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F0D
L_144152:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_144153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1611
.p2align 0x4
.long 0x529
L_144025:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144026
L_144035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144036
.p2align 0x4
.long 0x531
L_144036:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144026:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_143964
L_144028:
	movl %r11d,0x60(%rbp)
	movq $0x38B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_144029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0xCEC
L_144441:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144442
L_144445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144446
.p2align 0x4
.long 0xCED
L_144446:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144442:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x58(%rbp)
	movq $0x3F8F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_144443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x572
L_144185:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x558
L_144153:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_143975
L_144154:
	movq %r14,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_144155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_11
.p2align 0x4
.long 0xCEC
L_144029:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144030
L_144033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144034
.p2align 0x4
.long 0xCED
L_144034:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144030:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x58(%rbp)
	movq $0x4037,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_144031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x544
L_144443:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_144444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
.long 0x543
L_144186:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144187
L_144198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144199
.p2align 0x4
.long 0x547
L_144199:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144187:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_144188:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_143983
L_144189:
	cmpq $0x1,%r14
	je L_433867
L_144190:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_144188
.p2align 0x4
L_433867:
L_144191:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144192
L_144196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144197
.p2align 0x4
.long 0x592
L_144197:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144192:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433868
L_144193:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_525:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_433868:
L_144195:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_525
.p2align 0x4
.long 0x1F0E
L_144155:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_11
.p2align 0x4
.long 0x544
L_144031:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_144032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
.long 0x556
L_144444:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x569
L_144194:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_143974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x7AA
L_144156:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_2
.p2align 0x4
.long 0x556
L_144032:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_143975
.p2align 0x4
.long 0x700
L_144157:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144158
L_144174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144175
.p2align 0x4
.long 0x701
L_144175:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144158:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_144159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x69C
L_144159:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144160
L_144172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144173
.p2align 0x4
.long 0x19DC
L_144173:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144160:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_433874
L_144161:
	decl %ecx
	jo L_143983
L_144162:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_144163:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF418)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_144164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_433874:
L_144171:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_144163
.p2align 0x4
.long 0x9B4
L_144164:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_144165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x9B4
L_144165:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144166
L_144169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144170
.p2align 0x4
.long 0x78F
L_144170:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144166:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x848
L_144167:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_144168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_144168:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopLambda_0
.hidden loopLambda_0
loopLambda_0:
L_144520:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_144611
L_144521:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433877
L_144522:
	movq 0x10(%rbp),%r15
	movq 0xD8(%r15),%r14
	movq 0xD0(%r15),%r13
	movq 0xC8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xC0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xB8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xB0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xA8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xA0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq $0x2415,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r14)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1093,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_144523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_433877:
L_144611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_144612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144612
.p2align 0x4
.long 0x45C
L_144612:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_144522
.p2align 0x4
.long 0x8C3
L_144523:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144524
L_144609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_144610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144610
.p2align 0x4
.long 0x8E0
L_144610:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_144524:
	movq $0x1061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_144525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1F10
L_144525:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144526
L_144607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_144608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144608
.p2align 0x4
.long 0x1F17
L_144608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_144526:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_144527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1F11
L_144527:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144528
L_144605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144606
.p2align 0x4
.long 0x804
L_144606:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144528:
	movq $0x1061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x130D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x80(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x70(%rbp),%r11
	movq %r11,0x20(%r13)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_433892
L_144530:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_433891
L_144531:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_144533:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_144534
L_144597:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD93,%r13
	jne L_144534
L_144598:
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_433886
L_144534:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_433885
L_144536:
	cmpq $0x1,%r15
	je L_433881
L_144537:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144533
.p2align 0x4
L_433881:
L_144538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144539
L_144595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_144596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144596
.p2align 0x4
.long 0x1F16
L_144596:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_144539:
	movl 0x18(%rbp),%ecx
L_144540:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433883
L_144542:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144544
L_144594:
	movl %ecx,0x0(%r15)
L_144544:
	movq $0x1B27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_144545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433883:
L_144541:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433885:
L_144535:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433886:
L_144600:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144541
L_144601:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144584
L_144603:
	movl %ecx,0x0(%r15)
L_144584:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433891:
L_144604:
	xorl %ecx,%ecx
	jmp L_144540
.p2align 0x4
L_433892:
L_144529:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F12
L_144545:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144546
L_144592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_144593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144593
.p2align 0x4
.long 0x1F15
L_144593:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_144546:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433908
	cmpq $0x298F,%r15
	je L_433907
	cmpq $0x2990,%r15
	je L_433894
L_144547:
	movq 0x8(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_144548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433894:
L_144591:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144550:
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r8
	movq %r8,0x18(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x20(%rbp)
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq $0x1,0x18(%rsp)
	movq 0x10(%r10),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144529
L_144551:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433905
L_144552:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_144554:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433904
L_144578:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433903
L_144579:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_433900
L_144555:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_144535
L_144556:
	cmpq $0x1,%r15
	je L_433895
L_144557:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_144554
.p2align 0x4
L_433895:
L_144558:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144559
L_144576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_144577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144577
.p2align 0x4
.long 0x4D2
L_144577:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_144559:
	movl 0x48(%rbp),%ecx
L_144560:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144541
L_144561:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144563
L_144575:
	movl %ecx,0x0(%r15)
L_144563:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_433900:
L_144581:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144541
L_144582:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144584
L_144585:
	movl %ecx,0x0(%r15)
	jmp L_144584
.p2align 0x4
L_433903:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144555
.p2align 0x4
L_433904:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144555
.p2align 0x4
L_433905:
L_144586:
	xorl %ecx,%ecx
	jmp L_144560
.p2align 0x4
L_433907:
L_144590:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144550
.p2align 0x4
L_433908:
L_144589:
	movq 0x10(%r14),%r15
	movq %r15,0x78(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_144548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F12
L_144548:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144549
L_144587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_144588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144588
.p2align 0x4
.long 0x1F15
L_144588:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_144549:
	movq 0x18(%rbp),%r15
	jmp L_144550
.p2align 0x4
.long 0x1F13
x_526:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_144564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F13
L_144564:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_433911
L_144566:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_144567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1611
.p2align 0x4
L_433911:
L_144565:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F14
L_144567:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xAA9
L_144568:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144569
L_144573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144574
.p2align 0x4
.long 0xAAB
L_144574:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144569:
	movq $0x127D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2105,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (newSet_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_38
.p2align 0x4
.long 0x2B
newSet_0:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144570
L_144571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_144572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144572
.p2align 0x4
.long 0x4B2
L_144572:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_144570:
	movq $0x9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_3
.hidden loopExp_3
loopExp_3:
L_144613:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_145359
L_144614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433971
L_144615:
	movq 0x8(%rbp),%r14
	movq 0x48(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_433970
L_144616:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_144617:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_433915
	cmpq $0xE9A,%r14
	je L_433914
L_144618:
	movq (globalObjptr+0x7090)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433914:
L_145353:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_145354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_433915:
L_144619:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r15
	movq 0x98(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x78(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x70(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x68(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x60(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x58(%r15),%r11
	movq %r11,0x88(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_433916
	jmp *jumpTable_306(,%rax,8)
.data
.p2align 0x4
jumpTable_306:
.quad L_433969,L_433968,new_7,new_7,L_433922,L_433921,L_433920,new_32,L_433919,L_433918,L_433917
.text
.p2align 0x4
L_433916:
L_144620:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433917:
L_145315:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433918:
L_145236:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433919:
L_145227:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
new_32:
new_7:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433920:
L_145173:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433921:
L_145171:
	movq 0x20(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	addq $0x30,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopLambda_0
.p2align 0x4
L_433922:
L_144709:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x50(%rbp)
	jne L_144636
L_144711:
	testq %rdx,%rdx
	jz L_433966
L_144712:
	cmpq $0x7FFFFFFF,%rdx
	ja L_433965
L_144713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144714
.p2align 0x4
.long 0x1F23
L_144714:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x80(%rbp)
L_144715:
	movq $0x0,0x90(%rbp)
loop_1556:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x90(%rbp)
	jl L_433964
L_144716:
	movq 0x80(%rbp),%r15
	movq $0x9B5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_433963
L_144718:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x5,%r14
	je L_433959
	cmpq $0x6,%r14
	je L_433958
	cmpq $0x7,%r14
	je L_433953
	cmpq $0x37,%r14
	je L_433943
	cmpq $0x41,%r14
	je L_433940
	cmpq $0x46,%r14
	je L_433936
	cmpq $0x47,%r14
	je L_433933
	cmpq $0x49,%r14
	je L_433932
	cmpq $0x5B,%r14
	je L_433928
	cmpq $0x5E,%r14
	je L_433925
	cmpq $0x5F,%r14
	je L_433924
L_144719:
	andq $0x3,%r15
	jnz L_144720
L_144731:
L_144720:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433924:
L_145133:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433925:
L_145102:
	cmpl $0x1,0x58(%rbp)
	jne L_433927
L_145104:
	cmpq $0x0,0x50(%rbp)
	jna L_433926
L_145106:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433926:
L_144692:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433927:
L_144774:
	movq (globalObjptr+0x7040)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433928:
L_145069:
	cmpl $0x2,0x58(%rbp)
	jne L_433931
L_145071:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_144692
L_145073:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_144692
L_145075:
	movq %r11,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433931:
L_144734:
	movq (globalObjptr+0x7048)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433932:
L_145035:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433933:
L_145004:
	cmpl $0x1,0x58(%rbp)
	jne L_144774
L_145006:
	cmpq $0x0,0x50(%rbp)
	jna L_144692
L_145008:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433936:
L_144971:
	cmpl $0x2,0x58(%rbp)
	jne L_144734
L_144973:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_144692
L_144975:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_144692
L_144977:
	movq %r11,0xA8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	addq $0xA8,%rbp
	leaq (L_144978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433940:
L_144923:
	cmpl $0x1,0x58(%rbp)
	jne L_144774
L_144925:
	cmpq $0x0,0x50(%rbp)
	jna L_144692
L_144927:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433943:
L_144888:
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_433952
L_144890:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_433951
L_144891:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_144893:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_144894
L_144917:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD68,%r13
	je L_433947
L_144894:
	incl %ecx
	jo L_433946
L_144896:
	cmpq $0x1,%r15
	je L_433944
L_144897:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144893
.p2align 0x4
L_433944:
L_144898:
L_144899:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433945
L_144901:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_527
L_144916:
	movl %ecx,0x0(%r15)
x_527:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433945:
L_144900:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433946:
L_144895:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433947:
L_144918:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_144900
L_144919:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_144725
L_144921:
	movl %ecx,0x0(%r14)
L_144725:
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433951:
L_144922:
	xorl %ecx,%ecx
	jmp L_144899
.p2align 0x4
L_433952:
L_144889:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433953:
L_144853:
	cmpl $0x3,0x58(%rbp)
	je L_433954
L_144854:
	movq (globalObjptr+0x7070)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433954:
L_144855:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_144692
L_144857:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_144692
L_144859:
	cmpq $0x2,%r14
	jna L_144692
L_144861:
	movq %r11,0xA8(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	addq $0xA8,%rbp
	leaq (L_144862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433958:
L_144767:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433959:
L_144732:
	cmpl $0x2,0x58(%rbp)
	jne L_144734
L_144735:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_144692
L_144737:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_144692
L_144739:
	movq %r11,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433963:
L_144636:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433964:
L_145167:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433965:
L_144659:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433966:
L_145170:
	movq (globalObjptr+0x7068)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_144715
.p2align 0x4
L_433968:
L_144680:
	movl 0x0(%r14),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433969:
L_144631:
	movq %r13,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433970:
L_144627:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_144628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433971:
L_145359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145360
.p2align 0x4
.long 0x460
L_145360:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_144615
.p2align 0x4
.long 0x1F58
L_145354:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145355
L_145356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_145357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145357
.p2align 0x4
.long 0x1E52
L_145357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_145355:
	movq $0x337F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x1F18
L_144621:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1F4D
L_145316:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F41
L_145237:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145238
L_145313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145314
.p2align 0x4
.long 0x1F4C
L_145314:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145238:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433976
	cmpq $0x298F,%r15
	je L_433975
	cmpq $0x2990,%r15
	je L_433974
L_145239:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433974:
L_145312:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_145241:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433975:
L_145311:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_145241
.p2align 0x4
L_433976:
L_145310:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F3F
L_145228:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_433979
L_145230:
	andq $0x3,%r15
	jnz L_433978
L_145232:
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_433978:
L_145231:
	movq (globalObjptr+0x7080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433979:
L_145234:
	cmpq $0x1,%r15
	je new_7
	jmp L_145231
.p2align 0x4
.long 0x1F18
L_144662:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144663
L_144676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144677
.p2align 0x4
.long 0x1F20
L_144677:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144663:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433982
	cmpq $0x298F,%r15
	je L_433981
	cmpq $0x2990,%r15
	je L_433980
L_144664:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433980:
L_144675:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144666:
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433981:
L_144674:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144666
.p2align 0x4
L_433982:
L_144673:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F38
L_145174:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145175
L_145224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145225
.p2align 0x4
.long 0x1F3E
L_145225:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145175:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433986
	cmpq $0x298F,%r15
	je L_433985
	cmpq $0x2990,%r15
	je L_433984
L_145176:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433984:
L_145223:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_145178:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433985:
L_145222:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_145178
.p2align 0x4
L_433986:
L_145221:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F18
L_145172:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1F18
L_144721:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144722
L_144729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144730
.p2align 0x4
.long 0x1F20
L_144730:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144722:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433990
	cmpq $0x298F,%r15
	je L_433989
	cmpq $0x2990,%r15
	je L_433988
L_144723:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433988:
L_144728:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_433989:
L_144727:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_433990:
L_144726:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F33
L_145134:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145135
L_145165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145166
.p2align 0x4
.long 0x1F36
L_145166:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145135:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_433994
	cmpq $0x298F,%r15
	je L_433993
	cmpq $0x2990,%r15
	je L_433992
L_145136:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_433992:
L_145164:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_145138:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433993:
L_145163:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_145138
.p2align 0x4
L_433994:
L_145162:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F24
L_145107:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145108
L_145131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145132
.p2align 0x4
.long 0x1F27
L_145132:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145108:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_433998
L_145109:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433997
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_433996
L_145110:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je typeError_0
	cmpb $0x2,%r14b
	je typeError_0
	cmpb $0x3,%r14b
	je typeError_2
	jmp L_144725
.p2align 0x4
typeError_2:
typeError_0:
	movq $0x3101,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movb $0x3,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_144745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_433996:
L_145125:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433997:
L_145115:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_433998:
L_144683:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F24
L_145076:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145077
L_145100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145101
.p2align 0x4
.long 0x1F27
L_145101:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145077:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_144683
L_145078:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434001
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_434000
L_145079:
	movq 0x8(%r13),%r15
	cmpb $0x1,0x0(%r13)
	jne typeError_0
	jmp L_144725
.p2align 0x4
L_434000:
L_145094:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434001:
L_145084:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F33
L_145036:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145037
L_145067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145068
.p2align 0x4
.long 0x1F36
L_145068:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145037:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434006
	cmpq $0x298F,%r15
	je L_434005
	cmpq $0x2990,%r15
	je L_434004
L_145038:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434004:
L_145066:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_145040:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434005:
L_145065:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_145040
.p2align 0x4
L_434006:
L_145064:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F24
L_145009:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145010
L_145033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145034
.p2align 0x4
.long 0x1F27
L_145034:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145010:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_144683
L_145011:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434009
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_434008
L_145012:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_0
	jmp L_144725
.p2align 0x4
L_434008:
L_145027:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434009:
L_145017:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F2D
L_144978:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144979
L_145002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145003
.p2align 0x4
.long 0x1F2F
L_145003:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144979:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_144980:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je result_4
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_434012
L_144981:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_10
L_144984:
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (result_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
typeError_10:
typeError_1:
	movq $0x3131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movb $0x3,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_144745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_434012:
L_144996:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
result_4:
result_3:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F30
L_144928:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r11
	movq 0x0(%r11),%r15
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_144683
L_144929:
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144889
L_144930:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_434022
L_144931:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_144933:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_144934
L_144965:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD68,%r11
	je L_434018
L_144934:
	incl %ecx
	jo L_144895
L_144935:
	cmpq $0x1,%r15
	je L_434015
L_144936:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_144933
.p2align 0x4
L_434015:
L_144937:
L_144938:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_144900
L_144939:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_528
L_144964:
	movl %ecx,0x0(%r15)
x_528:
	movq %r14,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_434018:
L_144966:
	movq 0x0(%r13),%r14
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_144900
L_144967:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144947
L_144969:
	movl %ecx,0x0(%r15)
L_144947:
	movq %r14,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434022:
L_144970:
	xorl %ecx,%ecx
	jmp L_144938
.p2align 0x4
.long 0x1F1C
L_144903:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144904
L_144914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144915
.p2align 0x4
.long 0x1F1D
L_144915:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144904:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434027
	cmpq $0x298F,%r15
	je L_434026
	cmpq $0x2990,%r15
	je L_434025
L_144905:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434025:
L_144913:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144908:
	movq $0x1AD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_144725
.p2align 0x4
L_434026:
L_144912:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144908
.p2align 0x4
L_434027:
L_144911:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x4A6
L_144622:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144624
L_144629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_144630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144630
.p2align 0x4
.long 0x4EA
L_144630:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_144624:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_144627
L_144625:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_144617
.p2align 0x4
.long 0x1F2D
L_144862:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144863
L_144886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144887
.p2align 0x4
.long 0x1F2F
L_144887:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144863:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_144864:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je result_5
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_434031
L_144865:
	movq 0x8(%r13),%r15
	cmpb $0x3,0x0(%r13)
	jne typeError_1
L_144869:
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (result_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434031:
L_144880:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
result_5:
result_1:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F28
L_144768:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144769
L_144851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144852
.p2align 0x4
.long 0x1F2C
L_144852:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144769:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434038
	cmpq $0x298F,%r15
	je L_434037
	cmpq $0x2990,%r15
	je L_434034
L_144770:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434034:
L_144850:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144772:
	cmpl $0x1,0x58(%rbp)
	jne L_144774
L_144775:
	cmpq $0x0,0x50(%rbp)
	jna L_144692
L_144777:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434037:
L_144849:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144772
.p2align 0x4
L_434038:
L_144848:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F24
L_144740:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144741
L_144765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144766
.p2align 0x4
.long 0x1F27
L_144766:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144741:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_144683
L_144742:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434041
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_434040
L_144743:
	movq 0x8(%r13),%r15
	cmpb $0x3,0x0(%r13)
	jne typeError_0
	jmp L_144725
.p2align 0x4
L_434040:
L_144759:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434041:
L_144749:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F37
L_145168:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_1556
.p2align 0x4
.long 0x1F22
L_144681:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F19
L_144632:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144633
L_144678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144679
.p2align 0x4
.long 0x1F21
L_144679:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144633:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz new_7
L_144634:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r14
	jne L_144636
L_144637:
	testq %r11,%r11
	jz L_434048
L_144638:
	cmpq $0x7FFFFFFF,%r11
	ja L_144659
L_144639:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144640
L_144656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144657
.p2align 0x4
.long 0x1F1A
L_144657:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144640:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EB,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144641
.p2align 0x4
.long 0x1F1A
L_144641:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x38(%rbp)
L_144642:
	movq $0x0,0x48(%rbp)
loop_1555:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_434045
L_144643:
	movq 0x38(%rbp),%r15
	movq $0x9B5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x210B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_144636
L_144645:
	movl %r13d,0xB0(%rbp)
	movq $0x3F1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_434045:
L_144651:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434048:
L_144660:
	movq (globalObjptr+0x7060)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_144642
.p2align 0x4
.long 0x1
L_144628:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F4E
L_145317:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145318
L_145351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145352
.p2align 0x4
.long 0x1F57
L_145352:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145318:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434053
	cmpq $0x298F,%r15
	je L_434052
	cmpq $0x2990,%r15
	je L_434051
L_145319:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434051:
L_145350:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_145321:
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_434052:
L_145349:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_145321
.p2align 0x4
L_434053:
L_145348:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F41
L_145240:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_145241
.p2align 0x4
.long 0x1F42
L_145242:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145243
L_145308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145309
.p2align 0x4
.long 0x1F4B
L_145309:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145243:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_434059
L_145261:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_144636
L_145263:
	cmpl $0x0,%r13d
	jl L_434057
L_145264:
	movl $0x0,0x38(%rbp)
loop_1558:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_434055
L_145266:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x8(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_434055:
L_145249:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_144624
L_145250:
	movq %r15,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_145251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_434057:
L_145260:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434059:
L_145244:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_144636
L_145246:
	cmpl $0x0,%r13d
	jl L_145260
L_145247:
	movl $0x0,0x38(%rbp)
loop_1557:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_145249
L_145253:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_145254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
.long 0x1F40
L_145233:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (new_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F18
L_144665:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144666
.p2align 0x4
.long 0x4A6
L_144667:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144668
L_144671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_144672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144672
.p2align 0x4
.long 0x4EA
L_144672:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_144668:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_144627
L_144669:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_144617
.p2align 0x4
.long 0x1F38
L_145177:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_145178
.p2align 0x4
.long 0x1F39
L_145179:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
.long 0x1F18
L_144724:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144725
.p2align 0x4
.long 0x1F33
L_145137:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_145138
.p2align 0x4
.long 0x1F34
L_145139:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145140
L_145160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145161
.p2align 0x4
.long 0x1F35
L_145161:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145140:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_145141:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434069
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_434068
L_145142:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je typeError_1
	cmpb $0x2,%r14b
	je typeError_1
	cmpb $0x3,%r14b
	je typeError_1
L_145143:
	cmpl $0x1,0x58(%rbp)
	jne L_144774
L_145145:
	cmpq $0x0,0x50(%rbp)
	jna L_144692
L_145147:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434068:
L_145154:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434069:
L_145152:
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1
L_144745:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x7078)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F25
L_145126:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145127
L_145129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145130
.p2align 0x4
.long 0x1F26
L_145130:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145127:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_0
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_145116:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145117
L_145122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145123
.p2align 0x4
.long 0x1F20
L_145123:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145117:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434075
	cmpq $0x298F,%r15
	je L_434074
	cmpq $0x2990,%r15
	je L_434073
L_145118:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434073:
L_145121:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434074:
L_145120:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434075:
L_145119:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F25
L_145095:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145096
L_145098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145099
.p2align 0x4
.long 0x1F26
L_145099:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145096:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_0
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_145085:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145086
L_145091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145092
.p2align 0x4
.long 0x1F20
L_145092:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145086:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434080
	cmpq $0x298F,%r15
	je L_434079
	cmpq $0x2990,%r15
	je L_434078
L_145087:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434078:
L_145090:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434079:
L_145089:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434080:
L_145088:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F33
L_145039:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_145040
.p2align 0x4
.long 0x1F34
L_145041:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145042
L_145062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145063
.p2align 0x4
.long 0x1F35
L_145063:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145042:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_145043:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434085
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_434084
L_145044:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_1
L_145047:
	cmpl $0x1,0x58(%rbp)
	jne L_144774
L_145049:
	cmpq $0x0,0x50(%rbp)
	jna L_144692
L_145051:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434084:
L_145056:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434085:
L_145054:
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1F25
L_145028:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145029
L_145031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145032
.p2align 0x4
.long 0x1F26
L_145032:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145029:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_0
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_145018:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145019
L_145024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145025
.p2align 0x4
.long 0x1F20
L_145025:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145019:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434091
	cmpq $0x298F,%r15
	je L_434090
	cmpq $0x2990,%r15
	je L_434089
L_145020:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434089:
L_145023:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434090:
L_145022:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434091:
L_145021:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F2E
result_2:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp result_3
.p2align 0x4
.long 0x1F25
L_144997:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144998
L_145000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145001
.p2align 0x4
.long 0x1F26
L_145001:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144998:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_1
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_144985:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144986
L_144991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144992
.p2align 0x4
.long 0x1F20
L_144992:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144986:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434096
	cmpq $0x298F,%r15
	je L_434095
	cmpq $0x2990,%r15
	je L_434094
L_144987:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434094:
L_144990:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434095:
L_144989:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434096:
L_144988:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F31
L_144941:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144942
L_144962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144963
.p2align 0x4
.long 0x1F32
L_144963:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144942:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434100
	cmpq $0x298F,%r15
	je L_434099
	cmpq $0x2990,%r15
	je L_434098
L_144943:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434098:
L_144961:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144946:
	movq $0x1AD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,%r14
	jmp L_144947
.p2align 0x4
L_434099:
L_144960:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144946
.p2align 0x4
L_434100:
L_144959:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F2E
L_144948:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F1C
L_144906:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144907
L_144909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144910
.p2align 0x4
.long 0x1F1D
L_144910:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144907:
	movq 0x30(%rbp),%r15
	jmp L_144908
.p2align 0x4
.long 0x1F2E
result_0:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp result_1
.p2align 0x4
.long 0x1F25
L_144881:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144882
L_144884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144885
.p2align 0x4
.long 0x1F26
L_144885:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144882:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_1
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_144870:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144871
L_144876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144877
.p2align 0x4
.long 0x1F20
L_144877:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144871:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434106
	cmpq $0x298F,%r15
	je L_434105
	cmpq $0x2990,%r15
	je L_434104
L_144872:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434104:
L_144875:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434105:
L_144874:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434106:
L_144873:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F28
L_144771:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144772
.p2align 0x4
.long 0x1F29
L_144778:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144779
L_144846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144847
.p2align 0x4
.long 0x1F27
L_144847:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144779:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_144780:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434113
	cmpq $0x1085,%r15
	je L_434112
	cmpq $0x1086,%r15
	je L_434111
L_144781:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_434110
	cmpb $0x2,%r14b
	je L_434109
	cmpb $0x3,%r14b
	je L_434108
L_144782:
	movq $0x2,0x48(%rbp)
L_144783:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434108:
L_144837:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144783
.p2align 0x4
L_434109:
L_144836:
	movq $0x2,0x48(%rbp)
	jmp L_144783
.p2align 0x4
L_434110:
L_144835:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144783
.p2align 0x4
L_434111:
L_144840:
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434112:
L_144839:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144783
.p2align 0x4
L_434113:
L_144838:
	movq $0x1,0x48(%rbp)
	jmp L_144783
.p2align 0x4
.long 0x1F25
L_144760:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144761
L_144763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144764
.p2align 0x4
.long 0x1F26
L_144764:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144761:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_0
	jmp L_144683
.p2align 0x4
.long 0x1F18
L_144750:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144751
L_144756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144757
.p2align 0x4
.long 0x1F20
L_144757:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144751:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434119
	cmpq $0x298F,%r15
	je L_434118
	cmpq $0x2990,%r15
	je L_434117
L_144752:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434117:
L_144755:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434118:
L_144754:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434119:
L_144753:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F22
L_144682:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_144684:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434123
	cmpq $0x1085,%r15
	je L_434121
L_144685:
	movq (globalObjptr+0x7058)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434121:
L_144704:
	movq 0x0(%r13),%r15
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_144692
L_144706:
	movq 0x0(%r15,%r14,8),%r15
	movq %r15,%r14
L_144698:
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_434123:
L_144686:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_144687
L_144688:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_434125
L_144690:
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_144692
L_144693:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_434125:
L_144687:
	movq (globalObjptr+0x1C20)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F1B
L_144646:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_10
.p2align 0x4
.long 0x1F1E
L_144652:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144653
L_144654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144655
.p2align 0x4
.long 0x1F1F
L_144655:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144653:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_1555
.p2align 0x4
.long 0x1F4E
L_145320:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_145321
.p2align 0x4
.long 0x1F4F
L_145322:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_145323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F46
L_145267:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145268
L_145305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145306
.p2align 0x4
.long 0x1F4A
L_145306:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145268:
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_434142
L_145269:
	movq 0x8(%r11),%r15
L_145270:
	movq 0x60(%rbp),%r11
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_434141
L_145272:
	movq 0x98(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x10(%r9),%r14
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%rsp
	movq %rsp,0x58(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x113F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x68(%rbp)
	movq %r9,0x8(%rsp)
	movq %r10,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq %r11,0x0(%rsp)
	movq $0x1,0x18(%rsp)
	movq 0x10(%r15),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144889
L_145273:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_434139
L_145274:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r8,%r14
.p2align 0x4,,0x7
L_145276:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434138
L_145295:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_434137
L_145296:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_434134
L_145277:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_144895
L_145278:
	cmpq $0x1,%r15
	je L_434129
L_145279:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_145276
.p2align 0x4
L_434129:
L_145280:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145281
L_145293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145294
.p2align 0x4
.long 0x1F49
L_145294:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145281:
	movl 0x3C(%rbp),%ecx
L_145282:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144900
L_145283:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145285
L_145292:
	movl %ecx,0x0(%r15)
L_145285:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_145286:
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_434134:
L_145298:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144900
L_145299:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145211
L_145301:
	movl %ecx,0x0(%r15)
L_145211:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434137:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_145277
.p2align 0x4
L_434138:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_145277
.p2align 0x4
L_434139:
L_145302:
	xorl %ecx,%ecx
	jmp L_145282
.p2align 0x4
L_434141:
L_145271:
	movq (globalObjptr+0x7050)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434142:
L_145303:
	cmpq $0x1,0x60(%rbp)
	je L_145286
	jmp L_145271
.p2align 0x4
.long 0x1F43
L_145251:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F44
L_145254:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_145255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F2E
new_8:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp new_7
.p2align 0x4
.long 0x1F3A
L_145180:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq %r13,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F1C
L_145148:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1F25
L_145155:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145156
L_145158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145159
.p2align 0x4
.long 0x1F26
L_145159:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145156:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_1
	jmp L_144683
.p2align 0x4
.long 0x1F1C
L_145052:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1F25
L_145057:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145058
L_145060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145061
.p2align 0x4
.long 0x1F26
L_145061:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145058:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je typeError_1
	jmp L_144683
.p2align 0x4
.long 0x1F31
L_144944:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144945
L_144957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144958
.p2align 0x4
.long 0x1F32
L_144958:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144945:
	movq 0x50(%rbp),%r15
	jmp L_144946
.p2align 0x4
.long 0x1F18
L_144949:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144950
L_144955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144956
.p2align 0x4
.long 0x1F20
L_144956:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144950:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434150
	cmpq $0x298F,%r15
	je L_434149
	cmpq $0x2990,%r15
	je L_434148
L_144951:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434148:
L_144954:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434149:
L_144953:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144725
.p2align 0x4
L_434150:
L_144952:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F2A
L_144784:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144785
L_144833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144834
.p2align 0x4
.long 0x1F2B
L_144834:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144785:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_144683
L_144786:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434157
	cmpq $0x1085,%r15
	je L_434156
	cmpq $0x1086,%r15
	je L_434155
L_144787:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_434154
	cmpb $0x2,%r11b
	je L_434153
	cmpb $0x3,%r11b
	je L_434152
L_144788:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je typeError_1
L_144789:
	movq %r11,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144790:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144791:
	movq 0x0(%r11),%r13
	movq $0x2,%r15
	movq %r13,%r14
L_144793:
	movq %r15,%r13
	andq $0x3,%r13
	jnz typeError_1
L_144794:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1231,%r13
	jne typeError_1
L_144795:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_8
.p2align 0x4
L_434152:
L_144808:
	movq $0x2469,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144809:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144810:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144811:
	movq 0x0(%r13),%r14
	jmp L_144793
.p2align 0x4
L_434153:
L_144803:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144804:
	movq %r13,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144805:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144806:
	movq 0x0(%r13),%r14
	movq $0x2,%r15
	jmp L_144793
.p2align 0x4
L_434154:
L_144798:
	movq $0x2463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144799:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144800:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144801:
	movq 0x0(%r13),%r14
	jmp L_144793
.p2align 0x4
L_434155:
L_144823:
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434156:
L_144818:
	movq 0x0(%r14),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je typeError_1
L_144819:
	movq %r11,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144820:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144821:
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_144793
.p2align 0x4
L_434157:
L_144813:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_434158
L_144814:
	movq %r13,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144815:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144816:
	movq 0x0(%r13),%r14
	movq $0x1,%r15
	jmp L_144793
.p2align 0x4
L_434158:
L_144817:
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1F29
L_144841:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144842
L_144844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144845
.p2align 0x4
.long 0x1F27
L_144845:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144842:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_144683
L_144843:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144783
.p2align 0x4
.long 0x1F18
L_144694:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144695
L_144702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144703
.p2align 0x4
.long 0x1F20
L_144703:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144695:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434165
	cmpq $0x298F,%r15
	je L_434164
	cmpq $0x2990,%r15
	je L_434163
L_144696:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434163:
L_144701:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	jmp L_144698
.p2align 0x4
L_434164:
L_144700:
	movq 0x0(%r14),%r14
	jmp L_144698
.p2align 0x4
L_434165:
L_144699:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F1C
L_144647:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144648
L_144649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144650
.p2align 0x4
.long 0x1F1D
L_144650:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144648:
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1F50
L_145323:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145324
L_145346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_145347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145347
.p2align 0x4
.long 0x1F55
L_145347:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_145324:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x11E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	addq $0xA0,%rbp
	leaq (L_145325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F47
L_145287:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F44
L_145255:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145256
L_145257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_145258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145258
.p2align 0x4
.long 0x1F45
L_145258:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_145256:
	incl 0x38(%rbp)
	jmp loop_1557
.p2align 0x4
.long 0x1F3B
L_145181:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
.long 0x1F1C
L_144796:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_144725
.p2align 0x4
.long 0x1F2A
L_144824:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144825
L_144831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144832
.p2align 0x4
.long 0x1F2B
L_144832:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144825:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_144683
L_144826:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144827:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144828:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144829:
	movq 0x0(%r13),%r14
	jmp L_144793
.p2align 0x4
.long 0x1F18
L_144697:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_144698
.p2align 0x4
.long 0x1F51
L_145325:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144683
L_145326:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_434172
L_145328:
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434172:
L_145327:
	movq (globalObjptr+0x7088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F47
L_145288:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145289
L_145290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145291
.p2align 0x4
.long 0x1F48
L_145291:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145289:
	incl 0x38(%rbp)
	jmp loop_1558
.p2align 0x4
.long 0x1F3C
L_145182:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145183
L_145219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145220
.p2align 0x4
.long 0x1F3D
L_145220:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145183:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_434189
	cmpq $0x298F,%r15
	je L_434188
	cmpq $0x2990,%r15
	je L_434175
L_145184:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_145185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_434175:
L_145218:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_145187:
	movq 0x98(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r8
	movq %r8,0x30(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x48(%rbp)
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq $0x1,0x18(%rsp)
	movq 0x10(%r10),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144889
L_145188:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_434186
L_145189:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_145191:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434185
L_145205:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_434184
L_145206:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_434181
L_145192:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_144895
L_145193:
	cmpq $0x1,%r15
	je L_434176
L_145194:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_145191
.p2align 0x4
L_434176:
L_145195:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145196
L_145203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145204
.p2align 0x4
.long 0x1038
L_145204:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_145196:
	movl 0x58(%rbp),%ecx
L_145197:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144900
L_145198:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145200
L_145202:
	movl %ecx,0x0(%r15)
L_145200:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_145201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_434181:
L_145208:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144900
L_145209:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145211
L_145212:
	movl %ecx,0x0(%r15)
	jmp L_145211
.p2align 0x4
L_434184:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_145192
.p2align 0x4
L_434185:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_145192
.p2align 0x4
L_434186:
L_145213:
	xorl %ecx,%ecx
	jmp L_145197
.p2align 0x4
L_434188:
L_145217:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_145187
.p2align 0x4
L_434189:
L_145216:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1F51
L_145329:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145330
L_145344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_145345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145345
.p2align 0x4
.long 0x1F56
L_145345:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_145330:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_144683
L_145331:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	movq $0x2471,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_144624
L_145332:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_145333:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_145334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F3C
L_145185:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145186
L_145214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145215
.p2align 0x4
.long 0x1F3D
L_145215:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145186:
	movq 0x30(%rbp),%r15
	jmp L_145187
.p2align 0x4
.long 0x861
L_145201:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_144622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F52
L_145334:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F53
L_145335:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_145336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F54
L_145336:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F4F
L_145337:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145338
L_145341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_145342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145342
.p2align 0x4
.long 0x1F55
L_145342:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_145338:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_144624
L_145339:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_145333
.text
.p2align 0x4
.globl set_10
.hidden set_10
set_10:
L_145361:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_145391
L_145362:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434209
L_145363:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movb $0x1,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x130F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x20(%rbp)
	movq %r9,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r15,0x20(%r8)
	movq %r13,0x28(%r8)
	addq $0x38,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r8)
	movq $0x1,0x18(%r8)
	movq 0x10(%r10),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_434208
L_145365:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_434207
L_145366:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_145368:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434206
L_145383:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_434205
L_145384:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_434202
L_145369:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_434201
L_145371:
	cmpq $0x1,%r15
	je L_434197
L_145372:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_145368
.p2align 0x4
L_434197:
L_145373:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145374
L_145381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145382
.p2align 0x4
.long 0x78A
L_145382:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145374:
	movl 0x30(%rbp),%ecx
L_145375:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_434199
L_145377:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145379
L_145380:
	movl %ecx,0x0(%r15)
L_145379:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434199:
L_145376:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434201:
L_145370:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434202:
L_145386:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145376
L_145387:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_434203
L_145389:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434203:
L_145388:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434205:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_145369
.p2align 0x4
L_434206:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_145369
.p2align 0x4
L_434207:
L_145390:
	xorl %ecx,%ecx
	jmp L_145375
.p2align 0x4
L_434208:
L_145364:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434209:
L_145391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145392
.p2align 0x4
.long 0x45C
L_145392:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_145363
.text
.p2align 0x4
.globl unify_8
.hidden unify_8
unify_8:
L_145393:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145394
L_145582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145583
.p2align 0x4
.long 0x45C
L_145583:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145394:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
loop_1559:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_145395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x8BB
L_145395:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x98E
L_145396:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	cmpq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	je L_434212
L_145397:
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_145398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434212:
L_145581:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BB
L_145398:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_434213
L_145400:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434213:
L_145399:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98E
L_145401:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_145399
L_145402:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_145403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F59
L_145403:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_145404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F5A
L_145404:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145405
L_145579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145580
.p2align 0x4
.long 0x990
L_145580:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145405:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	je L_145412
L_145406:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1456,%r11
	jne L_145407
L_145408:
	movl 0x0(%r15),%r11d
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x1456,%r10
	jne L_145407
L_145409:
	movl 0x0(%r15),%r10d
	cmpl %r10d,%r11d
	jl L_434235
L_145410:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r14)
	cmpl %r10d,%r11d
	jne L_434231
L_145565:
	movq 0x0(%r13),%r14
	movq %r14,%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1456,%r10
	jne L_434230
L_145566:
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_434229
L_145567:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_434228
L_145568:
	movq 0x8(%r14),%r15
	movq $0x28AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434225
	cmpq $0x1085,%r15
	je L_434218
	cmpq $0x1086,%r15
	je L_434216
L_145569:
	movq 0x8(%r14),%r15
L_145414:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1083,%r13
	jne L_434215
L_145416:
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp loop_1559
.p2align 0x4
L_434215:
L_145415:
	movq (globalObjptr+0x5140)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434216:
L_145572:
L_145439:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1086,%r14
	jne L_145415
L_145440:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_145441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434218:
L_145571:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_145423:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1085,%r14
	jne L_145415
L_145424:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_145426
L_145427:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_434222
L_145429:
	cmpl %r11d,%ecx
	jne L_145431
L_145432:
	cmpl $0x0,%r11d
	jl L_434220
L_145433:
	xorl %ecx,%ecx
loop_1560:
	cmpl 0x28(%rbp),%ecx
	jnl L_434219
L_145435:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_145436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_8
.p2align 0x4
L_434219:
L_145434:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434220:
L_145431:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434222:
L_145426:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434225:
L_145570:
	movq 0x0(%r14),%r15
L_145418:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1084,%r13
	jne L_145415
L_145419:
	movq 0x0(%r14),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_434226
L_145420:
	movq (globalObjptr+0x5148)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434226:
L_145421:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434228:
L_145486:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434229:
L_145557:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434230:
L_145407:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434231:
L_145412:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434234
	cmpq $0x1085,%r15
	je L_434233
	cmpq $0x1086,%r15
	je L_145439
L_145413:
	movq 0x8(%r14),%r15
	jmp L_145414
.p2align 0x4
L_434233:
L_145422:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_145423
.p2align 0x4
L_434234:
L_145417:
	movq 0x0(%r14),%r15
	jmp L_145418
.p2align 0x4
L_434235:
L_145573:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_434238
	cmpq $0x1085,%r15
	je L_434237
	cmpq $0x1086,%r15
	je L_145439
L_145574:
	movq 0x8(%r14),%r15
	jmp L_145414
.p2align 0x4
L_434237:
L_145576:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_145423
.p2align 0x4
L_434238:
L_145575:
	movq 0x0(%r14),%r15
	jmp L_145418
.p2align 0x4
.long 0xD17
L_145441:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_145442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x64F
L_145436:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_1560
.p2align 0x4
.long 0x1F5B
L_145442:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	je L_434243
L_145443:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_145444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434243:
L_145564:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD17
L_145444:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_145399
L_145445:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_145446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0xA4C
L_145446:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_145399
L_145447:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_145448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
.long 0x1F5C
L_145448:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_145449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
.long 0x1F5D
L_145449:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_145450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F5E
L_145450:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F5F
L_145451:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145452
L_145562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_145563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145563
.p2align 0x4
.long 0x1F71
L_145563:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_145452:
	movq 0x50(%rbp),%r15
	movq 0x90(%rbp),%r14
	cmpq %r14,%r15
	je L_145458
L_145453:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x145C,%r11
	jne L_145407
L_145454:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x145C,%r10
	jne L_145407
L_145455:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_434258
L_145456:
	movq $0x28BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r10d,%r11d
	jne L_145458
L_145555:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x145C,%r10
	jne L_145407
L_145556:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_145557
L_145558:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	jne L_145486
L_145559:
	movq 0x8(%r15),%r13
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
L_145458:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r13
	cmpq %r14,0x0(%r13)
	je L_434246
L_145459:
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_145460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_434246:
L_145554:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
L_145462:
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_434253
L_145463:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_145464:
	cmpq $0x1,0x58(%rbp)
	jne L_434252
.p2align 0x4,,0x7
L_145473:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434251
.p2align 0x4,,0x7
L_145474:
	movq $0x246F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_434247
L_145475:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_145464
.p2align 0x4
L_434247:
L_145477:
	movq $0xFDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_434250
L_145478:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
.p2align 0x4,,0x7
L_145479:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434249
.p2align 0x4,,0x7
L_145480:
	movq $0x2471,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_434248
L_145481:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_145479
.p2align 0x4
L_434248:
L_145483:
	movq $0xFDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434249:
L_145540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_145541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145541
.p2align 0x4
.long 0x1F6E
L_145541:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_145480
.p2align 0x4
L_434250:
L_145542:
	movq 0x78(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145483
.p2align 0x4
L_434251:
L_145543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_145544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145544
.p2align 0x4
.long 0x1F6F
L_145544:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_145474
.p2align 0x4
L_434252:
L_145465:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r15
L_145466:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_145467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434253:
L_145551:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145477
.p2align 0x4
L_434258:
L_145560:
	movq $0x28BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_145458
.p2align 0x4
.long 0xB86
L_145460:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145461
L_145552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_145553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145553
.p2align 0x4
.long 0xB90
L_145553:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_145461:
	movq 0x80(%rbp),%r15
	jmp L_145462
.p2align 0x4
.long 0x1F62
L_145484:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145485
L_145538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_145539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145539
.p2align 0x4
.long 0x1F6D
L_145539:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145485:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	jne L_145486
L_145487:
	movl 0x0(%r15),%r13d
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x68(%rbp),%r14
	cmpq 0x0(%r14),%r11
	je L_145508
L_145488:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_434264
L_145489:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
L_145490:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_434264:
L_145494:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_145508
L_145495:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_145496:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_434271
.p2align 0x4,,0x7
L_145505:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_434265
L_145506:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_145496
.p2align 0x4
L_434265:
L_145508:
	movq 0x50(%rbp),%r14
	cmpq %r14,0x90(%rbp)
	je L_434270
L_145509:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_434266
L_145510:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r15
L_145511:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_145512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_434266:
L_145515:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_145529
L_145516:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
.p2align 0x4,,0x7
L_145517:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_434268
.p2align 0x4,,0x7
L_145526:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_434267
L_145527:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_145517
.p2align 0x4
L_434267:
L_145529:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434268:
L_145518:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_145519:
	movq 0x98(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_145520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434270:
L_145533:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434271:
L_145497:
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_145498:
	movq 0x60(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_145499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F60
L_145467:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_145468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F63
L_145491:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_145494
L_145492:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_145490
.p2align 0x4
.long 0x1F68
L_145512:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_145515
L_145513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_145511
.p2align 0x4
.long 0x1F69
L_145520:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_145521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F64
L_145499:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_145500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F61
L_145468:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145469
L_145548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_145549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145549
.p2align 0x4
.long 0x1F70
L_145549:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_145469:
	movq 0xB0(%rbp),%r14
	cmpq %r14,0xB8(%rbp)
	je L_434279
L_145470:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_145473
L_145471:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	jmp L_145466
.p2align 0x4
L_434279:
L_145545:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_434280
L_145546:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_145464
.p2align 0x4
L_434280:
L_145547:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145477
.p2align 0x4
.long 0x1F6A
L_145521:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_145522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F65
L_145500:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_145501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F6B
L_145522:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_145523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F66
L_145501:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F6C
L_145523:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_145526
L_145524:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_145519
.p2align 0x4
.long 0x1F67
L_145502:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_145505
L_145503:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	jmp L_145498
.text
.p2align 0x4
.globl x_1627
.hidden x_1627
x_1627:
L_145584:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145585
L_145662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145663
.p2align 0x4
.long 0x45C
L_145663:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145585:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movb 0x0(%r14),%dl
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1561:
	cmpl $0x5,%ecx
	jnl L_434289
L_145651:
	movslq %ecx,%r15
	cmpq $0x5,%r15
	jnb L_434288
L_145653:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_434287
L_145654:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq %r9,0x0(%r11)
	jne L_434286
L_145657:
	movq 0x0(%rbp),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x0(%r13)
	je L_434284
	movb %dl,(localWord8+0x0)(%rip)
L_145656:
	incl %ecx
	movb (localWord8+0x0)(%rip),%dl
	jmp loop_1561
.p2align 0x4
L_434284:
L_145659:
	movq (globalObjptr+0x5108)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_434285
L_145660:
	movl %r13d,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434285:
L_145604:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434286:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_145656
.p2align 0x4
L_434287:
L_145661:
	incl %ecx
	jmp loop_1561
.p2align 0x4
L_434288:
L_145609:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434289:
L_145586:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	testb %dl,%dl
	jnz L_434299
L_145587:
	cmpq $0x1,%r14
	je L_434298
L_145588:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x38(%rbp)
.p2align 0x4,,0x7
L_145589:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434297
.p2align 0x4,,0x7
L_145590:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_145598
L_145591:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_145592:
	movq 0x30(%rbp),%r13
	movl 0x0(%r15),%r11d
	cmpl %r11d,0x0(%r13)
	jne L_145594
L_145617:
	movq 0x8(%r13),%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_434293
L_145594:
	cmpq $0x1,%r14
	je L_434290
L_145595:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_145592
.p2align 0x4
L_434290:
L_145596:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434292
.p2align 0x4,,0x7
L_145598:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_434291
L_145599:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_145589
.p2align 0x4
L_434291:
L_145601:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_145602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_38
.p2align 0x4
L_434292:
L_145615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145616
.p2align 0x4
.long 0x658
L_145616:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145598
.p2align 0x4
L_434293:
L_145619:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_434294
L_145620:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_145589
.p2align 0x4
L_434294:
L_145621:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145601
.p2align 0x4
L_434297:
L_145623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145624
.p2align 0x4
.long 0x658
L_145624:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145590
.p2align 0x4
L_434298:
L_145625:
	movq %r13,%r15
	jmp L_145601
.p2align 0x4
L_434299:
L_145626:
	cmpq $0x1,%r14
	je L_434308
L_145627:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_145628:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434307
.p2align 0x4,,0x7
L_145629:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_145637
L_145630:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_145631:
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r15)
	jne L_145633
L_145642:
	movq 0x8(%r13),%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_434303
L_145633:
	cmpq $0x1,%r14
	je L_434300
L_145634:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_145631
.p2align 0x4
L_434300:
L_145635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434302
.p2align 0x4,,0x7
L_145637:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_145601
L_145638:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_145628
.p2align 0x4
L_434302:
L_145640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145641
.p2align 0x4
.long 0x658
L_145641:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145637
.p2align 0x4
L_434303:
L_145644:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_434304
L_145645:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_145628
.p2align 0x4
L_434304:
L_145646:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145601
.p2align 0x4
L_434307:
L_145648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145649
.p2align 0x4
.long 0x658
L_145649:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145629
.p2align 0x4
L_434308:
L_145650:
	movq $0x1,%r15
	jmp L_145601
.p2align 0x4
.long 0x556
L_145602:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145603
L_145613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_145614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145614
.p2align 0x4
.long 0x63D
L_145614:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_145603:
	movq $0x9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x50F0)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_145604
L_145605:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x50F8)(%rip),%r14
	cmpl $0x4,0x0(%r14)
	jnb x_529
L_145612:
	movq (globalObjptr+0x4E8)(%rip),%r13
	movl 0x0(%r13),%r11d
	imull $0x19660D,%r11d
	addl $0x3C6EF35F,%r11d
	movl %r11d,0x0(%r13)
	movq (globalObjptr+0x5100)(%rip),%r13
	movl %r11d,0x0(%r13)
	movl $0xFFFFFFFF,0x0(%r14)
x_529:
	movq (globalObjptr+0x5100)(%rip),%r14
	movl 0x0(%r14),%eax
	movl %eax,%r13d
	xchgl %r13d,%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r14)
	movq (globalObjptr+0x50F8)(%rip),%r14
	movl 0x0(%r14),%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r14)
	movl %r13d,%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	cmpl $0x0,%edx
	jl L_145604
L_145607:
	movq $0x265B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movslq %edx,%r13
	cmpq $0x5,%r13
	jnb L_145609
L_145610:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r15,%r13,8)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromList_38
.hidden fromList_38
fromList_38:
L_145664:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145665
L_145772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145773
.p2align 0x4
.long 0x460
L_145773:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_145665:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_434352
L_145666:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_145667:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434351
.p2align 0x4,,0x7
L_145668:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_145676
L_145669:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_145670:
	movq 0x28(%rbp),%r13
	movl 0x0(%r15),%r11d
	cmpl %r11d,0x0(%r13)
	jne L_145672
L_145763:
	movq 0x8(%r15),%r11
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_434347
L_145672:
	cmpq $0x1,%r14
	je L_434314
L_145673:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_145670
.p2align 0x4
L_434314:
L_145674:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434346
.p2align 0x4,,0x7
L_145676:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_434315
L_145677:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_145667
.p2align 0x4
L_434315:
L_145678:
	movq %r15,0x20(%rbp)
L_145679:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_434345
L_145680:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_145681:
	xorl 0x0(%r15),%ecx
	cmpq $0x1,%r14
	je L_434316
L_145682:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_145681
.p2align 0x4
L_434316:
L_145683:
L_145684:
	andl 0x10(%rbp),%ecx
	cmpl $0x0,%ecx
	jl L_434344
L_145685:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_434343
L_145687:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
.p2align 0x4,,0x7
loop_1562:
	movq 0x28(%rbp),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x30(%rbp)
	cmpq $0x1,%r8
	je L_434341
L_145688:
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r15
	shrq $0x1,%r15
	cmpq $0x1080,%r15
	je L_434321
L_145743:
	movq 0x10(%r8),%r14
	movq 0x8(%r8),%r15
	movq 0x0(%r8),%r13
	movq 0x20(%rbp),%r9
	cmpq $0x1,%r9
	je L_434320
L_145744:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
.p2align 0x4,,0x7
L_145745:
	movl 0x0(%r11),%r9d
	cmpl %r9d,0x0(%r13)
	jne L_434319
L_145751:
	movq 0x8(%r11),%r9
	movq 0x8(%r13),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_434318
	movq %r15,(localObjptr+0x8)(%rip)
L_145747:
	cmpq $0x1,%r10
	je L_434317
L_145748:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_145745
.p2align 0x4
L_434317:
	movq %r14,%r15
L_145750:
	movq %r15,0x28(%rbp)
	jmp loop_1562
.p2align 0x4
L_434318:
L_145753:
	movq %r15,0x28(%rbp)
	jmp loop_1562
.p2align 0x4
L_434319:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_145747
.p2align 0x4
L_434320:
	movq %r14,%r15
	jmp L_145750
.p2align 0x4
L_434321:
L_145689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145690
L_145741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145742
.p2align 0x4
.long 0x4FD
L_145742:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145690:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_145718
L_145691:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
.p2align 0x4,,0x7
L_145692:
	cmpq $0x1,%r15
	je L_434337
L_145693:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_145694:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434336
.p2align 0x4,,0x7
L_145695:
	movq 0x48(%rbp),%r15
	movq 0x58(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_145697
L_145701:
	movq 0x8(%r14),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne L_434333
L_145703:
	cmpq $0x1,0x50(%rbp)
	je L_434330
L_145704:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_434329
L_145705:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_145706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434328
.p2align 0x4,,0x7
L_145707:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434322
L_145708:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_145706
.p2align 0x4
L_434322:
L_145709:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
L_145710:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434327
.p2align 0x4,,0x7
L_145711:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434323
L_145712:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_145710
.p2align 0x4
L_434323:
L_145713:
	movq %r15,0x48(%rbp)
L_145714:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_434324
L_145715:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r15,0x48(%rbp)
	movq %r14,%r15
	jmp L_145692
.p2align 0x4
L_434324:
L_145716:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145717
L_145721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145722
.p2align 0x4
.long 0x856
L_145722:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145717:
	movq 0x48(%rbp),%r15
L_145718:
	cmpq $0x1,%r15
	je L_434325
L_145719:
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x127F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2101,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x127F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x2103,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434325:
L_145720:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434327:
L_145723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145724
.p2align 0x4
.long 0x4B7
L_145724:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_145711
.p2align 0x4
L_434328:
L_145725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145726
.p2align 0x4
.long 0x803
L_145726:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_145707
.p2align 0x4
L_434329:
L_145727:
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_145714
.p2align 0x4
L_434330:
L_145728:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_434331
L_145729:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	jmp L_145692
.p2align 0x4
L_434331:
L_145730:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145731
L_145732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145733
.p2align 0x4
.long 0x1F72
L_145733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145731:
	movq 0x60(%rbp),%r15
	jmp L_145718
.p2align 0x4
L_434333:
L_145697:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_434334
L_145698:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_145694
.p2align 0x4
L_434334:
L_145700:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x127F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x127F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2103,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434336:
L_145734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145735
.p2align 0x4
.long 0x803
L_145735:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_145695
.p2align 0x4
L_434337:
L_145736:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145700
L_145738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145739
.p2align 0x4
.long 0x856
L_145739:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_145700
.p2align 0x4
L_434341:
L_145755:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145756
L_145757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_145758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145758
.p2align 0x4
.long 0x509
L_145758:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_145756:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434343:
L_145686:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434344:
L_145759:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434345:
L_145760:
	xorl %ecx,%ecx
	jmp L_145684
.p2align 0x4
L_434346:
L_145761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145762
.p2align 0x4
.long 0x720
L_145762:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_145676
.p2align 0x4
L_434347:
L_145765:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_434348
L_145766:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_145667
.p2align 0x4
L_434348:
L_145767:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_145679
.p2align 0x4
L_434351:
L_145769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145770
.p2align 0x4
.long 0x720
L_145770:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_145668
.p2align 0x4
L_434352:
L_145771:
	movq $0x1,0x20(%rbp)
	jmp L_145679
.text
.p2align 0x4
.globl send_0
.hidden send_0
send_0:
L_145774:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145775
L_145806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145807
.p2align 0x4
.long 0x45C
L_145807:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145775:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x655
L_145776:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_434355
L_145778:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_145779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_434355:
L_145777:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB20
L_145779:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq %r13,0x0(%r15)
	je L_434356
L_145780:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_145781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_434356:
L_145805:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB2C
L_145781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_434357
L_145782:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_145783:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_145784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_434357:
L_145787:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_145801
L_145788:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_145789:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_434359
.p2align 0x4,,0x7
L_145798:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_434358
L_145799:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_145789
.p2align 0x4
L_434358:
L_145801:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434359:
L_145790:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_145791:
	movq 0x28(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_145792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x80C
L_145784:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_145787
L_145785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_145783
.p2align 0x4
.long 0x914
L_145792:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_145793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F73
L_145793:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_145794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F74
L_145794:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_145795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x511
L_145795:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_145798
L_145796:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_145791
.text
.p2align 0x4
.globl coerce_5
.hidden coerce_5
coerce_5:
L_145808:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145809
L_145865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145866
.p2align 0x4
.long 0x45C
L_145866:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145809:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_145810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x4DE
L_145810:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x73A
L_145811:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	je L_434364
L_145812:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_145813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434364:
L_145864:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4DE
L_145813:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_434365
L_145815:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434365:
L_145814:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x73A
L_145816:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_145814
L_145817:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1084,%r14
	je L_434376
	cmpq $0x1085,%r14
	je L_434369
	cmpq $0x1086,%r14
	je L_434367
L_145818:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	jne L_434366
L_145820:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp unify_8
.p2align 0x4
L_434366:
L_145819:
	movq (globalObjptr+0x5150)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434367:
L_145840:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_145819
L_145841:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434369:
L_145825:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1085,%r15
	jne L_145819
L_145826:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_145828
L_145829:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_434373
L_145831:
	cmpl %r11d,%ecx
	jne L_145833
L_145834:
	cmpl $0x0,%r11d
	jl L_434371
L_145835:
	xorl %ecx,%ecx
loop_1563:
	cmpl 0x28(%rbp),%ecx
	jnl L_434370
L_145837:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_145838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434370:
L_145836:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434371:
L_145833:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434373:
L_145828:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434376:
L_145821:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	jne L_145819
L_145822:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_434377
L_145823:
	movq (globalObjptr+0x5158)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434377:
L_145824:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x900
L_145842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x64F
L_145838:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_1563
.p2align 0x4
.long 0x511
L_145843:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r15,0x20(%rbp)
	je L_434380
L_145844:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434380:
L_145863:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x114E
L_145845:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145846
L_145861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145862
.p2align 0x4
.long 0x911
L_145862:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145846:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_145814
L_145847:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_434381
L_145848:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_145849:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_145850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434381:
L_145856:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x246F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp send_0
.p2align 0x4
.long 0x5F1
L_145850:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x4AB
L_145851:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145852
L_145858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145859
.p2align 0x4
.long 0x4AE
L_145859:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145852:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x40(%rbp)
	je L_434385
L_145853:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_145856
L_145854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_145849
.p2align 0x4
L_434385:
L_145857:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl exp_0
.hidden exp_0
exp_0:
L_145867:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145868
L_146225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_146226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146226
.p2align 0x4
.long 0x45C
L_146226:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145868:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_145879
L_145869:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_145870:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_434391
	cmpq $0xE9A,%r14
	je L_434389
	cmpq $0xE9B,%r14
	je L_434387
L_145871:
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_145872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434387:
L_146221:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_434388
L_146222:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_145870
.p2align 0x4
L_434388:
L_145879:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434389:
L_146169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146170
L_146219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_146220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146220
.p2align 0x4
.long 0x658
L_146220:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_146170:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x3387,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_146171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_434391:
L_145898:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145899
L_146167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_146168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146168
.p2align 0x4
.long 0x658
L_146168:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_145899:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_434392
	jmp *jumpTable_307(,%rax,8)
.data
.p2align 0x4
jumpTable_307:
.quad L_434411,L_434410,L_434409,L_145904,L_434400,L_434399,L_434398,L_145904,L_434395,L_434394,L_434393
.text
.p2align 0x4
L_434392:
L_145900:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434393:
L_146137:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_146138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434394:
L_146088:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_146089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434395:
L_146071:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_434396
L_146072:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_146073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434396:
L_145904:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434398:
L_146061:
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_146062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434399:
L_146023:
	movq 0x20(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r9,0x70(%rbp)
	addq $0x30,%r12
	movl $0x0,0x4(%r14)
	movq %r11,0x10(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC2D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0xD2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x10(%r11)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_146024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434400:
L_145980:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
L_145981:
	movq %r15,%r14
	andq $0x3,%r14
	jnz length_27
L_146003:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1212,%r14
	je L_146005
	cmpq $0x121C,%r14
	je L_146005
	cmpq $0x121E,%r14
	je L_146005
	cmpq $0x1226,%r14
	je L_434404
length_27:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_434403
L_145983:
	cmpl $0x0,%r13d
	jl L_434402
L_145984:
	movl $0x0,0x4C(%rbp)
loop_1565:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_145904
L_145986:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434402:
L_145948:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434403:
L_145927:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434404:
L_146005:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_146006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434409:
L_145964:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434410:
L_145949:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434411:
L_145925:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_145927
L_145928:
	cmpl $0x0,%r13d
	jl L_145948
L_145929:
	movl $0x0,0x4C(%rbp)
loop_1564:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_145904
L_145931:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F75
L_145872:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x4E4
L_145880:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145881
L_145893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145894
.p2align 0x4
.long 0x4F1
L_145894:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145881:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	cmpq %r11,%r14
	je x_530
L_145882:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_530:
	cmpb $0x1,0x0(%r15)
	je L_434418
L_145883:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434418:
L_145884:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x19CD
L_146171:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146172
L_146217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146218
.p2align 0x4
.long 0x1F7E
L_146218:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_146172:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC2D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x33A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x30,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_146173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x65F
L_145901:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145902
L_145923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145924
.p2align 0x4
.long 0x678
L_145924:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145902:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je x_531
L_145903:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_531:
	cmpb $0x1,0x0(%r15)
	jne L_145904
L_145914:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x8C3
L_146138:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146139
L_146165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146166
.p2align 0x4
.long 0x8E0
L_146166:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146139:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_539
L_146140:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_539:
	cmpb $0x1,0x0(%r15)
	jne L_434423
L_146156:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_146157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434423:
L_146141:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_146142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x8C3
L_146089:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146090
L_146135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146136
.p2align 0x4
.long 0x8E0
L_146136:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146090:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_538
L_146091:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_538:
	cmpb $0x1,0x0(%r15)
	je L_434434
L_146092:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_434425
L_146093:
L_146094:
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_146095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434425:
L_146096:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_434430
L_146105:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145927
L_146107:
	cmpl $0x0,%r13d
	jl L_145948
L_146108:
	movl $0x0,0x48(%rbp)
loop_1567:
	movl 0x48(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_145904
L_146110:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x10(%r15),%r11
	cmpq $0x1,%r11
	je L_434426
L_146111:
	movq 0x8(%r11),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x80,%rbp
	leaq (L_146112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434426:
L_146116:
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_146117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434430:
L_146097:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_145927
L_146099:
	cmpl $0x0,%r13d
	jl L_145948
L_146100:
	movl $0x0,0x48(%rbp)
loop_1566:
	movl 0x48(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_145904
L_146102:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_146103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434434:
L_146124:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_146125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x65F
L_146073:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146074
L_146085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146086
.p2align 0x4
.long 0x678
L_146086:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_146074:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je x_537
L_146075:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_537:
	cmpb $0x1,0x0(%r15)
	jne L_145904
L_146076:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_146077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F76
L_145905:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145906
L_145912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145913
.p2align 0x4
.long 0x80B
L_145913:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145906:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145908
L_145907:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145908:
	movb $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145879
L_145909:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145870
.p2align 0x4
.long 0x7F0
L_146062:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x68,%rbp
	leaq (L_146063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x65F
L_146024:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146025
L_146059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146060
.p2align 0x4
.long 0x678
L_146060:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_146025:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x50(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_146027
L_146026:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146027:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_146028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0x1F78
L_145987:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145988
L_146000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146001
.p2align 0x4
.long 0xD3C
L_146001:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145988:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je x_535
L_145989:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_535:
	cmpb $0x1,0x0(%r15)
	jne L_434443
L_145991:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434443:
L_145990:
	incl 0x4C(%rbp)
	jmp loop_1565
.p2align 0x4
.long 0x660
L_146006:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146007
L_146018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146019
.p2align 0x4
.long 0x679
L_146019:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_146007:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_536
L_146008:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x68(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_536:
	cmpb $0x1,0x0(%r15)
	jne length_27
L_146009:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_146010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x65F
L_145965:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145966
L_145977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145978
.p2align 0x4
.long 0x678
L_145978:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145966:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x58(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_534
L_145967:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_534:
	cmpb $0x1,0x0(%r15)
	jne L_145904
L_145968:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x65F
L_145950:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145951
L_145962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145963
.p2align 0x4
.long 0x678
L_145963:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145951:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je x_533
L_145952:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_533:
	cmpb $0x1,0x0(%r15)
	jne L_145904
L_145953:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F78
L_145932:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145933
L_145945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145946
.p2align 0x4
.long 0xD3C
L_145946:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145933:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je x_532
L_145934:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_532:
	cmpb $0x1,0x0(%r15)
	jne L_434450
L_145936:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_434450:
L_145935:
	incl 0x4C(%rbp)
	jmp loop_1564
.p2align 0x4
.long 0x1F76
L_145873:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145874
L_145896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145897
.p2align 0x4
.long 0x80B
L_145897:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145874:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145876
L_145875:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145876:
	movb $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145879
L_145877:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145870
.p2align 0x4
.long 0x67A
L_145885:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145886
L_145890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_145891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145891
.p2align 0x4
.long 0x638
L_145891:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_145886:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145888
L_145887:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145888:
	movb $0x0,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7F2
L_146173:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146174
L_146215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_146216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146216
.p2align 0x4
.long 0x80A
L_146216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_146174:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_146180
L_146175:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_146176:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_434457
L_146177:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_146176
.p2align 0x4
L_434457:
L_146178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146180
L_146212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146213
.p2align 0x4
.long 0x61E
L_146213:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_146180:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_434461
L_146181:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_146182:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_434460
L_146183:
	cmpq $0x1,%r15
	je L_434458
L_146184:
	movq 0x8(%r15),%r15
	jmp L_146182
.p2align 0x4
L_434458:
L_146185:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146186
L_146209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_146210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146210
.p2align 0x4
.long 0x1F7F
L_146210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_146186:
	movl 0x38(%rbp),%ecx
L_146187:
	movl %ecx,0x68(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_146188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_434460:
L_146038:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434461:
L_146211:
	xorl %ecx,%ecx
	jmp L_146187
.p2align 0x4
.long 0x1F77
L_145915:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145916
L_145920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145921
.p2align 0x4
.long 0x805
L_145921:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145916:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_145918
L_145917:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145918:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145904
.p2align 0x4
.long 0xD2E
L_146157:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146158
L_146162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_146163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146163
.p2align 0x4
.long 0xD38
L_146163:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_146158:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x78(%rbp),%r11
	cmpq %r11,%r14
	je L_146160
L_146159:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146160:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_146141
.p2align 0x4
.long 0x1F86
L_146142:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146143
L_146154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146155
.p2align 0x4
.long 0x1F88
L_146155:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_146143:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_540
L_146144:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_540:
	cmpb $0x1,0x0(%r15)
	jne L_145904
L_146145:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_146146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1F81
L_146095:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_146096
.p2align 0x4
.long 0x1F83
L_146112:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146113
L_146119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146120
.p2align 0x4
.long 0x1F85
L_146120:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146113:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je L_146115
L_146114:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146115:
	movb $0x0,0x0(%r15)
	jmp L_146116
.p2align 0x4
.long 0x1F84
L_146117:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x48(%rbp)
	jmp loop_1567
.p2align 0x4
.long 0x1F82
L_146103:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x48(%rbp)
	jmp loop_1566
.p2align 0x4
.long 0x8C3
L_146125:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146126
L_146132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146133
.p2align 0x4
.long 0x8E0
L_146133:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146126:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_146128
L_146127:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146128:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_146096
L_146129:
	jmp L_146094
.p2align 0x4
.long 0x1F77
L_146077:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146078
L_146082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146083
.p2align 0x4
.long 0x805
L_146083:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146078:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_146080
L_146079:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146080:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145904
.p2align 0x4
.long 0x1F80
L_146063:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146064
L_146068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_146069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146069
.p2align 0x4
.long 0x80A
L_146069:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_146064:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x50(%rbp),%r11
	cmpq %r11,%r14
	je L_146066
L_146065:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146066:
	movb $0x0,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_146047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0x1F7C
L_146028:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146029
L_146056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_146057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146057
.p2align 0x4
.long 0x1F7F
L_146057:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_146029:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_146035
L_146030:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_146031:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_434480
L_146032:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_146031
.p2align 0x4
L_434480:
L_146033:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146035
L_146053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146054
.p2align 0x4
.long 0x1F7E
L_146054:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_146035:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_434484
L_146036:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_146037:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_146038
L_146039:
	cmpq $0x1,%r15
	je L_434481
L_146040:
	movq 0x8(%r15),%r15
	jmp L_146037
.p2align 0x4
L_434481:
L_146041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146042
L_146050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146051
.p2align 0x4
.long 0x633
L_146051:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_146042:
	movl 0x50(%rbp),%ecx
L_146043:
	movl %ecx,0x60(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_146044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_434484:
L_146052:
	xorl %ecx,%ecx
	jmp L_146043
.p2align 0x4
.long 0x1F79
L_145992:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145993
L_145997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145998
.p2align 0x4
.long 0x1F7A
L_145998:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145993:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je L_145995
L_145994:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145995:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145990
.p2align 0x4
.long 0x1F7B
L_146010:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146011
L_146015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146016
.p2align 0x4
.long 0x678
L_146016:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_146011:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_146013
L_146012:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x68(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146013:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp length_27
.p2align 0x4
.long 0x1F77
L_145969:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145970
L_145974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145975
.p2align 0x4
.long 0x805
L_145975:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145970:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x58(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145972
L_145971:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145972:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145904
.p2align 0x4
.long 0x1F77
L_145954:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145955
L_145959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145960
.p2align 0x4
.long 0x805
L_145960:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145955:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_145957
L_145956:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145957:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145904
.p2align 0x4
.long 0x1F79
L_145937:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145938
L_145942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145943
.p2align 0x4
.long 0x1F7A
L_145943:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145938:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145940
L_145939:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145940:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145935
.p2align 0x4
.long 0x19CD
L_146188:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146189
L_146207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146208
.p2align 0x4
.long 0x61E
L_146208:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_146189:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434498
L_146190:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_146191:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x3DAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_146192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434498:
L_146196:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x3385,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_146197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x1F87
L_146146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146147
L_146151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146152
.p2align 0x4
.long 0x805
L_146152:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146147:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je L_146149
L_146148:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_146149:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145904
.p2align 0x4
.long 0x1F75
L_146047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_145904
.p2align 0x4
.long 0x1F7D
L_146044:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_146045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
.long 0x65F
L_146192:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146193
L_146204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146205
.p2align 0x4
.long 0x678
L_146205:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_146193:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_146196
L_146194:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_146191
.p2align 0x4
.long 0x637
L_146197:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146198
L_146202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_146203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146203
.p2align 0x4
.long 0x658
L_146203:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_146198:
	movq $0x3535,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_146199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x1576
L_146045:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146046
L_146048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_146049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146049
.p2align 0x4
.long 0x80B
L_146049:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_146046:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3501,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_146047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x656
L_146199:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145879
L_146200:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145870
