/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:19:47 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl coerce_4
.hidden coerce_4
coerce_4:
L_105335:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_105336
L_105448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_105449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105449
.p2align 0x4
.long 0x4AF
L_105449:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_105336:
	movq 0x18(%rbp),%r15
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_105337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_4
.p2align 0x4
.long 0x1576
L_105337:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_417350
L_105338:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417350:
L_105447:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1576
L_105339:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105340
L_105445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105446
.p2align 0x4
.long 0x80B
L_105446:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105340:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_417357
L_105342:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417356
	cmpq $0x1085,%r15
	je L_417355
	cmpq $0x1086,%r15
	je L_417354
L_105343:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_417353
	cmpb $0x2,%r14b
	je L_417352
	cmpb $0x3,%r14b
	je L_417351
L_105344:
	movq $0x2,0x48(%rbp)
L_105345:
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417351:
L_105436:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_105345
.p2align 0x4
L_417352:
L_105435:
	movq $0x2,0x48(%rbp)
	jmp L_105345
.p2align 0x4
L_417353:
L_105434:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_105345
.p2align 0x4
L_417354:
L_105439:
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417355:
L_105438:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_105345
.p2align 0x4
L_417356:
L_105437:
	movq $0x1,0x48(%rbp)
	jmp L_105345
.p2align 0x4
L_417357:
L_105341:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7F0
L_105346:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105347
L_105432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105433
.p2align 0x4
.long 0x61E
L_105433:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105347:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105341
L_105348:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417384
	cmpq $0x1085,%r15
	je L_417380
	cmpq $0x1086,%r15
	je L_417379
L_105349:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_417375
	cmpb $0x2,%r14b
	je L_417371
	cmpb $0x3,%r14b
	je L_417367
L_105351:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_105352
L_105353:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1232,%r13
	je L_417363
	cmpq $0x1233,%r13
	je L_417359
L_105352:
	movq (globalObjptr+0x70C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417359:
L_105369:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x2,%r15
L_105371:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_105352
L_105372:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1233,%r13
	jne L_105352
L_105373:
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	cmpq %r15,0x0(%r13)
	je L_417360
L_105374:
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_105375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
L_417360:
L_105396:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417363:
L_105354:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x2,%r15
L_105356:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_105352
L_105357:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1232,%r14
	jne L_105352
L_105358:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_105359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417367:
L_105407:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
L_105408:
	movq 0x48(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_105352
L_105409:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1232,%r13
	je L_417369
	cmpq $0x1233,%r13
	je L_417368
	jmp L_105352
.p2align 0x4
L_417368:
L_105411:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_105371
.p2align 0x4
L_417369:
L_105410:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,%r15
	jmp L_105356
.p2align 0x4
L_417371:
L_105403:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_105352
L_105404:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1232,%r14
	je L_417373
	cmpq $0x1233,%r14
	je L_417372
	jmp L_105352
.p2align 0x4
L_417372:
L_105406:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x2,%r15
	jmp L_105371
.p2align 0x4
L_417373:
L_105405:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x2,%r15
	jmp L_105356
.p2align 0x4
L_417375:
L_105397:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
L_105398:
	movq 0x48(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_105352
L_105399:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1232,%r13
	je L_417377
	cmpq $0x1233,%r13
	je L_417376
	jmp L_105352
.p2align 0x4
L_417376:
L_105401:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_105371
.p2align 0x4
L_417377:
L_105400:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,%r15
	jmp L_105356
.p2align 0x4
L_417379:
L_105422:
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417380:
L_105417:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
L_105418:
	movq 0x48(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_105352
L_105419:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1232,%r13
	je L_417382
	cmpq $0x1233,%r13
	je L_417381
	jmp L_105352
.p2align 0x4
L_417381:
L_105421:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_105371
.p2align 0x4
L_417382:
L_105420:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,%r15
	jmp L_105356
.p2align 0x4
L_417384:
L_105413:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_105352
L_105414:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1232,%r14
	je L_417386
	cmpq $0x1233,%r14
	je L_417385
	jmp L_105352
.p2align 0x4
L_417385:
L_105416:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x1,%r15
	jmp L_105371
.p2align 0x4
L_417386:
L_105415:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,%r15
	jmp L_105356
.p2align 0x4
.long 0x1576
L_105440:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105441
L_105443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105444
.p2align 0x4
.long 0x80B
L_105444:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105441:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105341
L_105442:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	jmp L_105345
.p2align 0x4
.long 0x4A9
L_105375:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_105376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0xBE1
L_105359:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_105360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x7F0
L_105423:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105424
L_105430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105431
.p2align 0x4
.long 0x61E
L_105431:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105424:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105341
L_105425:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
L_105426:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_105352
L_105427:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1232,%r13
	je L_417393
	cmpq $0x1233,%r13
	je L_417392
	jmp L_105352
.p2align 0x4
L_417392:
L_105429:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	jmp L_105371
.p2align 0x4
L_417393:
L_105428:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_105356
.p2align 0x4
.long 0xEFA
L_105376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105377
L_105394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105395
.p2align 0x4
.long 0x1577
L_105395:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105377:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_105364
L_105379:
	cmpl $0x0,%r13d
	jl L_417399
L_105380:
	movl $0x0,0x44(%rbp)
loop_1139:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_417398
L_105381:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_417397
L_105383:
	movq $0x3955,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x18(%r14)
	movl %r13d,0x30(%rbp)
	movq %r15,0x20(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_105384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_30
.p2align 0x4
L_417397:
L_105364:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417398:
L_105388:
	movslq 0x44(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417399:
L_105393:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x861
L_105360:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105361
L_105367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_105368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105368
.p2align 0x4
.long 0xAA7
L_105368:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_105361:
	movq 0x30(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_417403
L_105362:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_105364
L_105365:
	movq $0x12B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq %r14,0x0(%r13)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq $0x1D9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417403:
L_105366:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_105384:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105385
L_105386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_105387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105387
.p2align 0x4
.long 0x4B2
L_105387:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_105385:
	movq $0x1DAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1DA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq $0x1,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9E9
L_105389:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105390
L_105391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_105392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105392
.p2align 0x4
.long 0x9EA
L_105392:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_105390:
	movq 0x58(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	incl 0x44(%rbp)
	jmp loop_1139
.text
.p2align 0x4
.globl equals_4
.hidden equals_4
equals_4:
L_105450:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1140
L_105499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_105500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105500
.p2align 0x4
.long 0x460
L_105500:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
loop_1140:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_105452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x5B0
L_105452:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_105453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x51F
L_105453:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r15,0x10(%rbp)
	je L_417407
L_105454:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_105455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417407:
L_105470:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_105455:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_417408
L_105457:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_105458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417408:
L_105456:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_105458:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105456
L_105459:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1084,%r14
	je L_417421
	cmpq $0x1085,%r14
	je L_417413
	cmpq $0x1086,%r14
	je L_417411
L_105460:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r11b
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	jne L_417410
L_105462:
	movq 0x8(%r13),%r15
	cmpb %r11b,0x0(%r13)
	jne L_417409
L_105465:
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp loop_1140
.p2align 0x4
L_417409:
L_105464:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417410:
L_105461:
	movq (globalObjptr+0x5110)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417411:
L_105492:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1086,%r14
	jne L_105461
L_105493:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_105494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417413:
L_105471:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1085,%r15
	jne L_105461
L_105472:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x28(%rbp)
	movl %r13d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_105474
L_105475:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0x38(%rbp)
	movl %r13d,%r15d
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_417418
L_105477:
	cmpl %r14d,%r15d
	je L_417414
L_105478:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417414:
L_105479:
	movl $0x0,0x34(%rbp)
loop_1141:
	movl 0x34(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	je L_105470
L_105480:
	movslq %r15d,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_105482
L_105483:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq 0x38(%rbp),%r14
	jnb L_417415
L_105485:
	movq %r13,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_105486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_4
.p2align 0x4
L_417415:
L_105482:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417418:
L_105474:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417421:
L_105466:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	jne L_105461
L_105467:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_105470
L_105468:
	movq (globalObjptr+0x5118)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_105494:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105456
L_105495:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_105496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1578
L_105486:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jz L_105464
L_105488:
	movl 0x34(%rbp),%r15d
	incl %r15d
	jo L_417426
L_105490:
	movl %r15d,0x34(%rbp)
	jmp loop_1141
.p2align 0x4
L_417426:
L_105489:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_105496:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105456
L_105497:
	movq 0x18(%rbp),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq %r9,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_30
.hidden tabulate_30
tabulate_30:
L_105501:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_105502
L_105644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_105645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105645
.p2align 0x4
.long 0x458
L_105645:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_105502:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_417445
L_105503:
	cmpq $0x7FFFFFFF,%rdx
	ja L_417444
L_105504:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1463,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_105505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105505
.p2align 0x4
.long 0x453
L_105505:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_105506:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1142:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417443
.p2align 0x4,,0x7
L_105507:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_417442
L_105509:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1CAA,%r13
	je L_417441
	cmpq $0x1CAB,%r13
	je L_417436
	cmpq $0x1CAC,%r13
	je L_417433
	cmpq $0x1CAD,%r13
	je L_417432
	cmpq $0x1CAE,%r13
	je L_417430
	cmpq $0x1CAF,%r13
	je L_417429
L_105510:
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	movq 0x28(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x40(%rbp)
	salq $0x4,%r11
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r10,%r11,1),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r9
	movq %r9,0x58(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_105511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_417429:
L_105605:
	movq 0x48(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	salq $0x4,%r13
	movq 0x50(%r15),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11,%r14,1),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x78(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_105606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417430:
L_105585:
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movslq %r14d,%r11
	movq 0x28(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_417431
L_105587:
	movl %r14d,0x58(%rbp)
	movq $0x3F11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_105588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_417431:
L_105562:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417432:
L_105584:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0xBE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
.p2align 0x4,,0x7
L_105530:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%rbp),%r15
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq 0x18(%rbp),%r10
	movq %r10,%r8
	imulq $0x18,%r8
	movq %r14,0x0(%r15,%r8,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,%r14
	imulq $0x18,%r14
	movq %r13,0x8(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,%r14
	imulq $0x18,%r14
	movq %r11,0x10(%r15,%r14,1)
	incq %r10
	movq %r10,0x18(%rbp)
	jmp loop_1142
.p2align 0x4
L_417433:
L_105580:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_417435
	cmpl $0x1,%r14d
	je L_417434
L_105581:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417434:
L_105583:
	movq %r11,%r15
	jmp L_105530
.p2align 0x4
L_417435:
	movq %r13,%r15
	jmp L_105530
.p2align 0x4
L_417436:
L_105571:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
loop_1143:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_417438
L_105578:
	incl %r14d
	jo L_417437
L_105579:
	movl %r14d,0x20(%rbp)
	jmp loop_1143
.p2align 0x4
L_417437:
L_105574:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417438:
L_105572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417440
.p2align 0x4,,0x7
L_105573:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0xBE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl 0x20(%rbp),%r13d
	incl %r13d
	jo L_105574
L_105575:
	movq 0x28(%rbp),%r11
	movl %r13d,0x0(%r11)
	movq %r14,%r15
	jmp L_105530
.p2align 0x4
L_417440:
L_105576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105577
.p2align 0x4
.long 0x579
L_105577:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_105573
.p2align 0x4
L_417441:
L_105546:
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x20(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x48(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_105547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417442:
L_105508:
	movq 0x8(%rbp),%r14
	movq $0x12BD,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417443:
L_105640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_105641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105641
.p2align 0x4
.long 0x45D
L_105641:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_105507
.p2align 0x4
L_417444:
L_105642:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417445:
L_105643:
	movq (globalObjptr+0xBC8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_105506
.p2align 0x4
.long 0x1382
L_105511:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105512
L_105544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_105545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105545
.p2align 0x4
.long 0xD07
L_105545:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_105512:
	cmpq $0x1,0x60(%rbp)
	je L_417450
L_105514:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_417449
L_105516:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_417448
	cmpq $0x205A,%r15
	je L_417447
L_105517:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_105518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417447:
L_105540:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_105541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1348
.p2align 0x4
L_417448:
L_105538:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_105539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_417449:
L_105515:
	movq (globalObjptr+0xBD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417450:
L_105542:
	cmpq $0x1,0x58(%rbp)
	jne L_105515
L_105543:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1360
L_105606:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x529
L_105588:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_105589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x560
L_105547:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x13DE
L_105518:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x58(%rbp)
	jnz L_417453
L_105519:
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_105520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_417453:
L_105537:
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
L_105522:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x157D
L_105541:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
	movl $0x1,0x0(%r14)
	jmp L_105522
.p2align 0x4
.long 0x157D
L_105539:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
	movl $0x1,0x0(%r14)
	jmp L_105522
.p2align 0x4
.long 0x157A
L_105525:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
.long 0x1581
L_105607:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_105608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xCE6
L_105589:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x78(%rbp)
	movq $0x3,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_105590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1052
L_105548:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105549
L_105569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105570
.p2align 0x4
.long 0x583
L_105570:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105549:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x18(%r13),%r10
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	jne L_417455
L_105560:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_105562
L_105563:
	movl %r9d,0x78(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq %r10,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_105564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_417455:
L_105550:
	xchgq %r13,%r15
L_105551:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x3EFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_105552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1579
L_105520:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105521
L_105535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_105536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105536
.p2align 0x4
.long 0x157C
L_105536:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_105521:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq %r13,0x28(%rbp)
	jmp L_105522
.p2align 0x4
.long 0xD06
L_105523:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105524
L_105533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105534
.p2align 0x4
.long 0xFAA
L_105534:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105524:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3EFB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movl $0x1,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1248
L_105526:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1582
L_105608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105609
L_105638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_105639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105639
.p2align 0x4
.long 0x1590
L_105639:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_105609:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF218)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x18(%r13),%r10
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	jne L_417460
L_105630:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_105562
L_105632:
	movl %r9d,0xB0(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq %r10,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_105633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_417460:
L_105610:
	xchgq %r13,%r15
L_105611:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x3EFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movl $0x1,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x537
L_105590:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x157E
L_105564:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0xF3A
L_105552:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105553
L_105558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105559
.p2align 0x4
.long 0xF34
L_105559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105553:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x37CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_105554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0xA63
L_105527:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_105528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x158D
L_105633:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_105634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x1583
L_105612:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105613
L_105628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_105629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105629
.p2align 0x4
.long 0x158C
L_105629:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_105613:
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0xD06
L_105591:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105592
L_105603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105604
.p2align 0x4
.long 0xFAA
L_105604:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105592:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1DA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_105593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp wordBytes_0
.p2align 0x4
.long 0x157F
L_105565:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105566
L_105567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_105568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105568
.p2align 0x4
.long 0x1580
L_105568:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_105566:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_105551
.p2align 0x4
.long 0x572
L_105554:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105555
L_105556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_105557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105557
.p2align 0x4
.long 0xE4E
L_105557:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_105555:
	movq $0x1DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0xBE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_105530
.p2align 0x4
.long 0x157B
L_105528:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105529
L_105531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105532
.p2align 0x4
.long 0xE6B
L_105532:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105529:
	movq $0xBE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	jmp L_105530
.p2align 0x4
.long 0x158E
L_105634:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105635
L_105636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_105637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105637
.p2align 0x4
.long 0x158F
L_105637:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_105635:
	movq 0x98(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_105611
.p2align 0x4
.long 0x1584
L_105614:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_105615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0xCEC
L_105593:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_105562
L_105595:
	cmpl $0x0,%r13d
	jl L_417471
L_105596:
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_1144:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417470
.p2align 0x4,,0x7
L_105597:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_417469
L_105599:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r14
	movq $0x1D89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x4753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r11)
	movq $0x1D97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	incl %r15d
	movl %r15d,0x2C(%rbp)
	jmp loop_1144
.p2align 0x4
L_417469:
L_105598:
	movq $0xBE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_105530
.p2align 0x4
L_417470:
L_105600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105601
.p2align 0x4
.long 0x1244
L_105601:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_105597
.p2align 0x4
L_417471:
L_105602:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1585
L_105615:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105616
L_105626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_105627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105627
.p2align 0x4
.long 0x158B
L_105627:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_105616:
	movq $0x37CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movl $0x2,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x1586
L_105617:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1587
L_105618:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105619
L_105624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_105625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105625
.p2align 0x4
.long 0x158A
L_105625:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_105619:
	movq $0x1DA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_105620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x1588
L_105620:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105621
L_105622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_105623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105623
.p2align 0x4
.long 0x1589
L_105623:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_105621:
	movq $0xBE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_105530
.text
.p2align 0x4
.globl convertExp_0
.hidden convertExp_0
convertExp_0:
L_105646:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_105647
L_106633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_106634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106634
.p2align 0x4
.long 0x45C
L_106634:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_105647:
	movq 0x10(%rbp),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_417485
L_105648:
	movq 0x8(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r13),%r13
	movq 0x0(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_105649:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_417484
	cmpq $0xE9A,%r14
	je L_417476
L_105650:
	movq (globalObjptr+0x70D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417476:
L_106500:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r15
	cmpq %r13,%r15
	jne L_417483
L_106502:
	testl %r14d,%r14d
	jnz L_417481
L_106629:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_417477
L_106630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_105649
.p2align 0x4
L_417477:
L_106631:
	movq 0x80(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%rbp),%r15
L_105669:
	cmpq $0x1,%r15
	je L_417480
L_105670:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_105671:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417479
.p2align 0x4,,0x7
L_105672:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x12BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1DAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_417478
L_105673:
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_105671
.p2align 0x4
L_417478:
L_105674:
	movq %r14,0x80(%rbp)
L_105675:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_105676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417479:
L_105681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_105682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105682
.p2align 0x4
.long 0x159A
L_105682:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_105672
.p2align 0x4
L_417480:
L_105683:
	movq $0x1,0x80(%rbp)
	jmp L_105675
.p2align 0x4
L_417481:
L_106503:
	cmpq $0x0,%r13
	jna L_417482
L_106505:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_106506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417482:
L_105709:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417483:
L_105700:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417484:
L_105651:
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_105652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417485:
L_106632:
	movq 0x0(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,%r15
	jmp L_105669
.p2align 0x4
.long 0x1597
L_105676:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_105677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x161D
L_106506:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_106507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1591
L_105652:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x128(%r15),%r13
	movq %r13,0xB8(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0xC0(%rbp)
	movq 0x120(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x118(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x110(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x108(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x100(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0xF8(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0xE8(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x148(%rbp)
	movq %r14,0x158(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_105653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1598
L_105677:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105678
L_105679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_105680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105680
.p2align 0x4
.long 0x1599
L_105680:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_105678:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x161E
L_106507:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x9C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106508
L_106627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_106628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106628
.p2align 0x4
.long 0x1623
L_106628:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_106508:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x9C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF220)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x40(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_417489
L_106509:
	movq %r15,0xA8(%rbp)
L_106510:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_105700
L_106512:
	movl %r11d,0xE0(%rbp)
	movq $0x37D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	addq $0xD8,%rbp
	leaq (L_106513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417489:
L_106619:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_105700
L_106621:
	movl %r11d,0xE0(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_106622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1592
L_105653:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105654
L_106498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106499
.p2align 0x4
.long 0x161C
L_106499:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105654:
	movq $0xBFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x158(%rbp)
	addq $0x28,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_417492
	jmp *jumpTable_201(,%rax,8)
.data
.p2align 0x4
jumpTable_201:
.quad L_417666,L_417665,L_417664,L_417663,L_417508,L_417507,L_417506,L_417504,L_417503,L_417494,L_417493
.text
.p2align 0x4
L_417492:
L_105655:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_105656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417493:
L_106471:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417494:
L_106425:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC8(%rbp)
	cmpq $0x1,%r14
	je L_417495
L_106426:
	movq 0x80(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq %r14,0x170(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_106427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
L_417495:
L_106468:
	movq 0xC8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	je L_417497
L_106470:
	movq 0x0(%r13),%r11
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
	xchgq %r11,%r14
L_106459:
	movq $0xBF1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_105700
L_106461:
	movl %r11d,0x168(%rbp)
	movq $0x3953,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x28(%r15)
	addq $0x38,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_30
.p2align 0x4
L_417497:
L_106469:
	movq 0x0(%r13),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0xC8(%rbp)
L_106432:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xD0(%rbp)
	cmpq %r14,%r11
	jne L_105700
L_106434:
	testq %r11,%r11
	jz L_417501
L_106435:
	cmpq $0x7FFFFFFF,%r11
	ja L_417500
L_106436:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106437
L_106454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106455
.p2align 0x4
.long 0x15FD
L_106455:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106437:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x166F,%rcx
	movq 0xD0(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106438
.p2align 0x4
.long 0x15FD
L_106438:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0xD8(%rbp)
L_106439:
	movq 0xC0(%rbp),%r15
	movq $0x0,0xC0(%rbp)
loop_1147:
	movq 0xD0(%rbp),%r14
	cmpq %r14,0xC0(%rbp)
	jl L_417498
L_106440:
	movq %r15,0x80(%rbp)
	movq 0xD8(%rbp),%r15
	movq $0xBA3,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1DAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
L_106441:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417498:
L_106447:
	movq %r15,0x160(%rbp)
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0xE0(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xE8(%rbp)
	movq %r11,0x168(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
L_417500:
L_105765:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417501:
L_106457:
	movq (globalObjptr+0x70E0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	jmp L_106439
.p2align 0x4
L_417503:
L_106399:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_417504:
L_106398:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1DA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
L_105659:
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_417505
L_105660:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_105661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_417505:
L_105663:
	movq 0xA8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_105664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417506:
L_106376:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq %r13,0x160(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417507:
L_106322:
	movq 0x98(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xB8(%rbp)
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	movl %r13d,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417508:
L_105726:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r15),%rax
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq %rax,%r15
	andq $0xFF,%r15
	subq $0x1,%r15
	xchgq %r15,%rax
	cmpq $0x89,%rax
	ja L_417509
	jmp *jumpTable_202(,%rax,8)
.data
.p2align 0x4
jumpTable_202:
.quad L_417662,L_417661,L_417660,L_105727,L_417658,L_417657,L_417655,L_105727,L_417654,L_417653,L_417652,L_105727,L_417651,L_417650,L_417649,L_105727,L_417648,L_417647,L_417646,L_105727,L_417645,L_417644,L_417643,L_105727,L_417642,L_417641,L_417640,L_105727,L_417639,L_417638,L_417637,L_105727,L_417636,L_417635,L_417634,L_105727,L_417633,L_417632,L_417631,L_105727,L_417630,L_417629,L_417628,L_105727,L_417627,L_417626,L_417625,L_105727,L_417624,L_417623,L_417622,L_105727,L_417621,L_417620,L_417619,L_105727,L_417617,L_417615,L_417614,L_105727,L_417613,L_417611,L_417610,L_105727,L_417608,L_417607,L_417606,L_105727,L_417605,L_417603,L_417602,L_105727,L_417600,L_417599,L_417598,L_105727,L_417597,L_417596,L_417595,L_105727,L_417594,L_417593,L_417592,L_105727,L_417591,L_417590,L_417589,L_105727,L_417588,L_417587,L_417586,L_105727,L_417585,L_417584,L_417582,L_105727,L_417581,L_417580,L_417579,L_105727,L_417578,L_417577,L_417576,L_105727,L_417575,L_417574,L_417573,L_105727,L_417572,L_417571,L_417570,L_105727,L_417569,L_417568,L_417567,L_105727,L_417566,L_417565,L_417564,L_105727,L_417563,L_417562,L_417561,L_105727,L_417560,L_417559,L_417558,L_105727,L_417557,L_417556,L_417555,L_105727,L_417554,L_417553,L_417552,L_105727,L_417551,L_417550
.text
.p2align 0x4
L_417509:
L_105727:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x120F,%rax
	cmpq $0x1E,%rax
	ja L_417510
	jmp *jumpTable_203(,%rax,8)
.data
.p2align 0x4
jumpTable_203:
.quad L_417549,L_417548,L_417547,L_417546,L_417545,L_417544,L_417543,L_417542,L_417541,L_417540,L_417539,L_417538,L_417537,L_417536,L_417535,L_417534,L_417533,L_417532,L_417531,L_417530,L_417529,L_417528,L_417527,L_417525,L_417524,L_417523,L_417522,L_417521,L_417519,L_417518,L_417517
.text
.p2align 0x4
L_417510:
L_105728:
	movq 0x0(%r15),%r14
	movq $0x1DE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
L_105729:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r14,%r11
	jne L_105700
L_105731:
	testq %r11,%r11
	jz L_417515
L_105732:
	cmpq $0x7FFFFFFF,%r11
	ja L_105765
L_105733:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105734
L_105762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105763
.p2align 0x4
.long 0x15A3
L_105763:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105734:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1671,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105735
.p2align 0x4
.long 0x15A3
L_105735:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0xC0(%rbp)
L_105736:
	movq $0x0,0xC8(%rbp)
loop_1145:
	movq 0xB8(%rbp),%r15
	cmpq %r15,0xC8(%rbp)
	jl L_417512
L_105737:
	movq 0xC0(%rbp),%r15
	movq $0xC73,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xB8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_105700
L_105739:
	movq $0x37C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x140(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x160(%rbp)
	movl %r13d,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_417512:
L_105757:
	movq 0xC8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x118(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417515:
L_105766:
	movq (globalObjptr+0x70F0)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_105736
.p2align 0x4
L_417517:
L_105812:
	movq 0x0(%r15),%r14
	movq $0x1E27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417518:
L_105811:
	movq 0x0(%r15),%r14
	movq $0x1E25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417519:
L_105803:
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0xB9(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_105700
L_105805:
	movl %r13d,0x168(%rbp)
	movq $0x378D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_417521:
L_105802:
	movb 0x2(%r15),%r14b
	movq 0x8(%r15),%r13
	movw 0x0(%r15),%r11w
	movq $0x1E21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r11w,%r13d
	movzbl %r14b,%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417522:
L_105801:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x1E1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417523:
L_105800:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movb 0x4(%r15),%r11b
	movq $0x1E1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417524:
L_105799:
	movq 0x0(%r15),%r14
	movq $0x1E1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417525:
L_105798:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1E19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
length_23:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_105700
L_105772:
	movl %r13d,0x168(%rbp)
	movq $0x37C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417527:
L_105797:
	movq 0x0(%r15),%r14
	movq $0x1E17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417528:
L_105796:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x1E15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417529:
L_105795:
	movq 0x0(%r15),%r14
	movq $0x1E13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417530:
L_105794:
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq $0x11EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq $0x1E11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417531:
L_105793:
	movq 0x0(%r15),%r14
	movq $0x1E0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417532:
L_105792:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1E0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417533:
L_105791:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1E0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417534:
L_105790:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1E09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp length_23
.p2align 0x4
L_417535:
L_105789:
	movq 0x0(%r15),%r14
	movq $0x1E07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417536:
L_105788:
	movq 0x0(%r15),%r14
	movq $0x1E05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp length_23
.p2align 0x4
L_417537:
L_105787:
	movq 0x0(%r15),%r14
	movq $0x1E03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417538:
L_105786:
	movq 0x0(%r15),%r14
	movq $0x1E01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417539:
L_105785:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1DFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417540:
L_105784:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1DFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417541:
L_105783:
	movl 0x0(%r15),%r14d
	movb 0x4(%r15),%r13b
	movq 0x8(%r15),%r11
	movq $0x1DFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417542:
L_105782:
	movq 0x0(%r15),%r14
	movq $0x1DF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417543:
L_105781:
	movq 0x0(%r15),%r14
	movq $0x1DF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417544:
L_105780:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1DF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417545:
L_105779:
	movq 0x0(%r15),%r14
	movq $0x1DF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417546:
L_105770:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1DF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x98(%rbp)
	jmp length_23
.p2align 0x4
L_417547:
L_105769:
	movq 0x0(%r15),%r14
	movq $0x1DEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417548:
L_105768:
	movq 0x0(%r15),%r14
	movq $0x1DED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417549:
L_105767:
	movq 0x0(%r15),%r14
	movq $0x1DEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105729
.p2align 0x4
L_417550:
L_106321:
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x8,%r15
	orq $0x89,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417551:
L_106320:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x87,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417552:
L_106319:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x86,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417553:
L_106318:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417554:
L_106317:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417555:
L_106316:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x82,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417556:
L_106315:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x81,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417557:
L_106314:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7F,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417558:
L_106313:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7E,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417559:
L_106312:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7D,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417560:
L_106311:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7B,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417561:
L_106310:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7A,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417562:
L_106309:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417563:
L_106308:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417564:
L_106307:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x76,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417565:
L_106306:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x75,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417566:
L_106305:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x73,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417567:
L_106304:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x72,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417568:
L_106303:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x71,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417569:
L_106302:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6F,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417570:
L_106301:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6E,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417571:
L_106300:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6D,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417572:
L_106299:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6B,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417573:
L_106298:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6A,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417574:
L_106297:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x69,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417575:
L_106296:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x67,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417576:
L_106295:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x66,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417577:
L_106294:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x65,%r15
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417578:
L_106293:
	movq $0x63,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417579:
L_106292:
	movq $0x62,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417580:
L_106291:
	movq $0x61,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417581:
L_106290:
	movq $0x5F,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417582:
L_106251:
	movq 0x118(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106253:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417584:
L_106250:
	movq $0x5D,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417585:
L_106249:
	movq $0x5B,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417586:
L_106248:
	movq $0x5A,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417587:
L_106247:
	movq $0x59,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417588:
L_106246:
	movq $0x57,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417589:
L_106245:
	movq $0x56,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417590:
L_106244:
	movq $0x55,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417591:
L_106243:
	movq $0x53,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417592:
L_106242:
	movq $0x52,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417593:
L_106241:
	movq $0x51,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417594:
L_106240:
	movq $0x4F,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417595:
L_106239:
	movq $0x4E,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417596:
L_106238:
	movq $0x4D,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417597:
L_106237:
	movq $0x4B,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417598:
L_106236:
	movq $0x4A,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417599:
L_106235:
	movq $0x49,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417600:
L_106197:
	movq 0x118(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106199:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417602:
L_106196:
	movq $0x46,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417603:
L_106149:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x98(%rbp)
	cmpq $0x0,%r14
	jna L_105709
L_106151:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417605:
L_106148:
	movq $0x43,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417606:
L_106147:
	movq $0x42,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417607:
L_106146:
	movq $0x41,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417608:
L_106090:
	movq 0x118(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106092:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417610:
L_106089:
	movq $0x3E,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417611:
L_106086:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_417612
L_106087:
	movq 0xE0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
L_417612:
L_106088:
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
L_417613:
L_106085:
	movq $0x3D,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417614:
L_106084:
	movq $0x3B,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417615:
L_105997:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x98(%rbp)
	cmpq $0x0,%r14
	jna L_105709
L_105999:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417617:
L_105910:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x98(%rbp)
	cmpq $0x0,%r14
	jna L_105709
L_105912:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417619:
L_105909:
	movq $0x37,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417620:
L_105908:
	movq $0x36,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417621:
L_105907:
	movq $0x35,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417622:
L_105906:
	movq $0x33,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417623:
L_105905:
	movq $0x32,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417624:
L_105904:
	movq $0x31,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417625:
L_105903:
	movq $0x2F,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417626:
L_105902:
	movq $0x2E,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417627:
L_105901:
	movq $0x2D,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417628:
L_105900:
	movq $0x2B,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417629:
L_105899:
	movq $0x2A,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417630:
L_105898:
	movq $0x29,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417631:
L_105897:
	movq $0x27,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417632:
L_105896:
	movq $0x26,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417633:
L_105895:
	movq $0x25,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417634:
L_105894:
	movq $0x23,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417635:
L_105893:
	movq $0x22,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417636:
L_105892:
	movq $0x21,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417637:
L_105891:
	movq $0x1F,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417638:
L_105890:
	movq $0x1E,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417639:
L_105889:
	movq $0x1D,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417640:
L_105888:
	movq $0x1B,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417641:
L_105887:
	movq $0x1A,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417642:
L_105886:
	movq $0x19,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417643:
L_105885:
	movq $0x17,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417644:
L_105884:
	movq $0x16,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417645:
L_105883:
	movq $0x15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417646:
L_105882:
	movq $0x13,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417647:
L_105881:
	movq $0x12,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417648:
L_105880:
	movq $0x11,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417649:
L_105879:
	movq $0xF,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417650:
L_105878:
	movq $0xE,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417651:
L_105877:
	movq $0xD,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417652:
L_105876:
	movq $0xB,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417653:
L_105875:
	movq $0xA,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417654:
L_105874:
	movq $0x9,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417655:
L_105818:
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x98(%rbp)
	cmpq $0x0,%r14
	jna L_105709
L_105820:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417657:
L_105817:
	movq $0x6,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417658:
L_105816:
	movq $0x5,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417660:
L_105815:
	movq $0x3,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417661:
L_105814:
	movq $0x2,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417662:
L_105813:
	movq $0x1,0x98(%rbp)
	jmp L_105729
.p2align 0x4
L_417663:
L_105725:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1D93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105659
.p2align 0x4
L_417664:
L_105719:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_105720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417665:
L_105713:
	movq 0x98(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417666:
L_105698:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_105700
L_105701:
	movl %r13d,0x168(%rbp)
	movq $0x37D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x161F
L_106513:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106514
L_106617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_106618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106618
.p2align 0x4
.long 0x162F
L_106618:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_106514:
	movq 0xB8(%rbp),%r14
	movq 0xC0(%r14),%r13
	movq 0x70(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_417672
L_106515:
L_106516:
	movq 0xD0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_105700
L_106518:
	cmpl $0x1,%r11d
	je L_417669
L_106519:
	movq $0x1D8B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r11,%r15
L_106520:
	movq $0x11E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x3F85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movl 0x98(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_106521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_417669:
L_106606:
	cmpq $0x0,%r13
	jna L_105709
L_106608:
	movq 0x0(%r14),%r15
	jmp L_106520
.p2align 0x4
L_417672:
L_106609:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_105700
L_106611:
	movl %r11d,0xF0(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_106612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1630
L_106622:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_106623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x1593
L_105656:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_105657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1611
L_106472:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1605
L_106427:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_106428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x160E
L_106462:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106463
L_106464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106465
.p2align 0x4
.long 0x160F
L_106465:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106463:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1DAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0x80(%rbp)
	jmp L_106441
.p2align 0x4
.long 0x1608
L_106442:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x160A
L_106448:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15FF
L_106400:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_417677
L_106402:
	andq $0x3,%r15
	jnz L_417676
L_106404:
	movq 0x0(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417676:
L_106403:
	movq (globalObjptr+0x7108)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417677:
L_106423:
	cmpq $0x1,%r15
	jne L_106403
L_106424:
	movq $0x1,0x160(%rbp)
	movl $0x0,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x1595
L_105661:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105662
L_105693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_105694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105694
.p2align 0x4
.long 0x159C
L_105694:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_105662:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x90(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xA0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq %r13,0x90(%rbp)
	jmp L_105663
.p2align 0x4
.long 0x1596
L_105664:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105665
L_105691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_105692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105692
.p2align 0x4
.long 0x159B
L_105692:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_105665:
	movq $0x11E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_417681
L_105666:
	movq $0x245D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_417680
L_105667:
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x78(%rbp)
	jmp L_105649
.p2align 0x4
L_417680:
L_105668:
	movq 0x80(%rbp),%r13
	movq %r13,0x78(%rbp)
	movq %r14,%r15
	jmp L_105669
.p2align 0x4
L_417681:
L_105684:
	movq $0x245D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq $0x2111,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_417683
L_105685:
L_105686:
	movq $0x2113,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r10,%r15
	movq %r11,%r14
L_105687:
	movq $0xBEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_417682
L_105688:
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_105649
.p2align 0x4
L_417682:
L_105689:
	movq %r13,0x78(%rbp)
	movq 0x88(%rbp),%r15
	jmp L_105669
.p2align 0x4
L_417683:
L_105690:
	movq %r13,%r15
	movq %r11,%r14
	jmp L_105687
.p2align 0x4
.long 0x15F3
L_106377:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
.long 0x15E9
L_106323:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_106324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertLambda_0
.p2align 0x4
.long 0x15A4
L_105740:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105741
L_105755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105756
.p2align 0x4
.long 0x15A7
L_105756:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105741:
	movq $0x177F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x160(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1520
.p2align 0x4
.long 0x15A8
L_105758:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105759
L_105760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105761
.p2align 0x4
.long 0x15A9
L_105761:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105759:
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x20(%r15),%r9
	movq 0x28(%r15),%r8
	movq 0xC0(%rbp),%r15
	movq %r15,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq 0xC8(%rbp),%rsp
	movq %rsp,%rdi
	imulq $0x30,%rdi
	movq %r14,0x0(%r15,%rdi,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %rsp,%r14
	imulq $0x30,%r14
	movq %r13,0x8(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %rsp,%r14
	imulq $0x30,%r14
	movq %r11,0x10(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %rsp,%r14
	imulq $0x30,%r14
	movq %r10,0x18(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %rsp,%r14
	imulq $0x30,%r14
	movq %r9,0x20(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %rsp,%r14
	imulq $0x30,%r14
	movq %r8,0x28(%r15,%r14,1)
	incq %rsp
	movq %rsp,0xC8(%rbp)
	jmp loop_1145
.p2align 0x4
.long 0x15AE
L_105806:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_66
.p2align 0x4
.long 0x15AA
L_105773:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15E7
L_106254:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15E4
L_106200:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15D5
L_106152:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,0x98(%rbp)
	jna L_105709
L_106154:
	movq 0x118(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15CF
L_106093:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r11
	movq %r11,0x98(%rbp)
	movq 0x110(%rbp),%r11
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r11)
	jna L_105709
L_106095:
	movq 0x0(%r11),%r14
	movq 0x10(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_417696
L_106097:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_417695
L_106098:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_106100:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_106101
L_106140:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD68,%r11
	je L_417691
L_106101:
	incl %ecx
	jo L_417690
L_106103:
	cmpq $0x1,%r15
	je L_417688
L_106104:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_106100
.p2align 0x4
L_417688:
L_106105:
L_106106:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_417689
L_106108:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_355
L_106139:
	movl %ecx,0x0(%r15)
x_355:
	movq %r14,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417689:
L_106107:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417690:
L_106102:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417691:
L_106141:
	movq 0x0(%r13),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_106107
L_106142:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_417692
L_106144:
	movl %ecx,0x0(%r14)
	movq %r15,0xB8(%rbp)
L_106116:
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417692:
L_106143:
	movq %r15,0xB8(%rbp)
	jmp L_106116
.p2align 0x4
L_417695:
L_106145:
	xorl %ecx,%ecx
	jmp L_106106
.p2align 0x4
L_417696:
L_106096:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15C3
L_106000:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,0x98(%rbp)
	jna L_105709
L_106002:
	movq 0x118(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15C3
L_105913:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,0x98(%rbp)
	jna L_105709
L_105915:
	movq 0x118(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15B1
L_105821:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x2,0x98(%rbp)
	jna L_105709
L_105823:
	movq 0x118(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1593
L_105720:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_105721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15A0
L_105714:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x159E
L_105702:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105703
L_105711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105712
.p2align 0x4
.long 0x159F
L_105712:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105703:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_105700
L_105705:
	cmpl $0x1,%r13d
	jne L_417702
L_105707:
	cmpq $0x0,%r14
	jna L_105709
L_105710:
	movq 0x0(%r15),%r15
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
L_417702:
L_105706:
	movq $0x1D8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x150(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x1593
L_106521:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106522
L_106604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_106605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106605
.p2align 0x4
.long 0x162B
L_106605:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_106522:
	movq $0x4041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl 0x98(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_106523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x162C
L_106612:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_106613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x1631
L_106623:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106624
L_106625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_106626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106626
.p2align 0x4
.long 0x1632
L_106626:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_106624:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_106510
.p2align 0x4
.long 0x1594
L_105657:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105658
L_105696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_105697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105697
.p2align 0x4
.long 0x159D
L_105697:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_105658:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105659
.p2align 0x4
.long 0x1612
L_106473:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq %r14,0x158(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1606
L_106428:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x168,%rbp
	leaq (L_106429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x1609
L_106443:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106444
L_106445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106446
.p2align 0x4
.long 0x15AD
L_106446:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106444:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1DA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x160B
L_106449:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_106450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15D0
L_106405:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1602
L_106412:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106413
L_106414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106415
.p2align 0x4
.long 0x1603
L_106415:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106413:
	movq $0x1DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15F4
L_106378:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15EA
L_106324:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106325
L_106374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106375
.p2align 0x4
.long 0x15F2
L_106375:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106325:
	movq $0xBEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15A4
L_105742:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105743
L_105753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105754
.p2align 0x4
.long 0x15A7
L_105754:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105743:
	movq $0x37C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15AF
L_105807:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105808
L_105809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105810
.p2align 0x4
.long 0x15B0
L_105810:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105808:
	movq $0x1E23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0xB9(%rbp),%r14d
	movzbl 0xB8(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105729
.p2align 0x4
.long 0x15AB
L_105774:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15E8
L_106255:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_417718
L_106256:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	je L_417717
	cmpq $0x1084,%r15
	je L_417713
L_106257:
	movq (globalObjptr+0x70F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417713:
L_106275:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_105859
L_106276:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xC8(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_417715
L_106278:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106280:
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417715:
L_105859:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417717:
L_106258:
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
L_106259:
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417718:
L_105826:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15E2
L_106201:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106202:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	je L_417723
	cmpq $0x1084,%r15
	je L_417719
L_106158:
	movq (globalObjptr+0x5138)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417719:
L_106220:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_105859
L_106221:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xB8(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_105859
L_106223:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106225:
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417723:
L_106203:
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
L_106204:
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15D6
L_106155:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15D0
L_106110:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106111
L_106137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106138
.p2align 0x4
.long 0x15D4
L_106138:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106111:
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417727
	cmpq $0x298F,%r15
	je L_417726
	cmpq $0x2990,%r15
	je L_417725
L_106112:
	movq 0x8(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417725:
L_106136:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_106115:
	movq $0x1AD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0xB8(%rbp)
	jmp L_106116
.p2align 0x4
L_417726:
L_106135:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_106115
.p2align 0x4
L_417727:
L_106134:
	movq 0x10(%r14),%r15
	movq %r15,0x160(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x168(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x15D0
new1_6:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106117
L_106130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106131
.p2align 0x4
.long 0x15D4
L_106131:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106117:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15C4
L_106003:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15C4
L_105916:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x15B2
L_105824:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1594
L_105721:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105722
L_105723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_105724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105724
.p2align 0x4
.long 0x159D
L_105724:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_105722:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	jmp L_105659
.p2align 0x4
.long 0x15A1
L_105715:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105716
L_105717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105718
.p2align 0x4
.long 0x15A2
L_105718:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105716:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl 0xB8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x1618
L_106523:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106524
L_106602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_106603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106603
.p2align 0x4
.long 0x162A
L_106603:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_106524:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x9C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_105700
L_106526:
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_105700
L_106528:
	cmpl %ecx,%r13d
	jne L_106530
L_106531:
	cmpl $0x0,%r13d
	jl L_417734
L_106532:
	movq $0x1,0xA8(%rbp)
	xorl %ecx,%ecx
loop_1148:
	cmpl 0x9C(%rbp),%ecx
	jnl L_417732
L_106571:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xB0(%rbp)
	movslq %ecx,%r15
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xF0(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0xF8(%rbp)
	movq %r13,0x108(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_106572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417732:
L_106533:
	movq $0x245D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_417733
L_106564:
	movq 0x58(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x50(%r14),%r11
	movq 0x48(%r14),%r10
	movq 0x40(%r14),%r9
	movq 0x38(%r14),%r8
	movq 0x30(%r14),%rsp
	movq 0x28(%r14),%rsi
	movq 0x20(%r14),%rdi
	movq 0x18(%r14),%rdx
	movq 0x10(%r14),%rcx
	movq 0x8(%r14),%rbx
	movq $0x8C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r8,0x28(%r14)
	movq %rsp,0x30(%r14)
	movq %rsi,0x38(%r14)
	movq %rdi,0x40(%r14)
	movq %rdx,0x48(%r14)
	movq %rcx,0x50(%r14)
	movq %rbx,0x58(%r14)
	addq $0x68,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_106565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417733:
L_106534:
	movq 0x0(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_106535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_417734:
L_106530:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x162D
L_106613:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106614
L_106615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_106616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106616
.p2align 0x4
.long 0x162E
L_106616:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_106614:
	movq 0xC0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_106516
.p2align 0x4
.long 0x1613
L_106474:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106475
L_106496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_106497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106497
.p2align 0x4
.long 0x161B
L_106497:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_106475:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1607
L_106429:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106430
L_106466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_106467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106467
.p2align 0x4
.long 0x1610
L_106467:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_106430:
	movq 0xC8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	je L_417741
L_106458:
	movq 0x0(%r13),%r14
	movq 0x80(%rbp),%r15
	movq 0x98(%rbp),%r13
	movq %r13,0x80(%rbp)
	jmp L_106459
.p2align 0x4
L_417741:
L_106431:
	movq 0x0(%r13),%r15
	movq 0x80(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_106432
.p2align 0x4
.long 0x160C
L_106450:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106451
L_106452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106453
.p2align 0x4
.long 0x160D
L_106453:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106451:
	movq 0xD8(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xC0(%rbp),%r11
	movq %r11,%r15
	salq $0x4,%r15
	movq 0xE0(%rbp),%r10
	movq %r10,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0xC0(%rbp)
	movq 0xF0(%rbp),%r15
	jmp loop_1147
.p2align 0x4
.long 0x1600
L_106406:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106407
L_106421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106422
.p2align 0x4
.long 0x15D3
L_106422:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106407:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_4
.p2align 0x4
.long 0x15F5
L_106379:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_106380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15EB
L_106326:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106327:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_417745
L_106332:
	movq %r13,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417745:
L_106329:
	movq (globalObjptr+0x70B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15A5
L_105744:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105745
L_105751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105752
.p2align 0x4
.long 0x15A6
L_105752:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105745:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x3B,%r14
	je L_417749
	cmpq $0x4F,%r14
	je L_417748
L_105746:
	andq $0x3,%r15
	jnz L_105747
L_105748:
L_105747:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
L_417748:
L_105750:
	movq $0x1D8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x150(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x98(%rbp)
	jmp L_105659
.p2align 0x4
L_417749:
L_105749:
	movq $0x1D8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x150(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15AC
L_105775:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105776
L_105777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105778
.p2align 0x4
.long 0x15AD
L_105778:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105776:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1DA9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x150(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15E5
L_106281:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106282
L_106288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106289
.p2align 0x4
.long 0x15E6
L_106289:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106282:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417754
	cmpq $0x298F,%r15
	je L_417753
	cmpq $0x2990,%r15
	je L_417752
L_106283:
	movq 0x8(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417752:
L_106287:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	jmp L_106259
.p2align 0x4
L_417753:
L_106286:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	jmp L_106259
.p2align 0x4
L_417754:
L_106285:
	movq 0x10(%r14),%r15
	movq %r15,0x160(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x168(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x15D0
new1_11:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106260
L_106273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106274
.p2align 0x4
.long 0x15D4
L_106274:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106260:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15E5
L_106226:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106227
L_106233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106234
.p2align 0x4
.long 0x15E6
L_106234:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106227:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417759
	cmpq $0x298F,%r15
	je L_417758
	cmpq $0x2990,%r15
	je L_417757
L_106228:
	movq 0x8(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417757:
L_106232:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	jmp L_106204
.p2align 0x4
L_417758:
L_106231:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	jmp L_106204
.p2align 0x4
L_417759:
L_106230:
	movq 0x10(%r14),%r15
	movq %r15,0x160(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x168(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x15D0
new1_9:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106205
L_106218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106219
.p2align 0x4
.long 0x15D4
L_106219:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106205:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15D7
L_106156:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106157:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	je L_417766
	cmpq $0x1084,%r15
	je L_417762
	jmp L_106158
.p2align 0x4
L_417762:
L_106181:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_105859
L_106182:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xC8(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_105859
L_106184:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_106186:
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417766:
L_106159:
	movq 0x8(%r13),%r15
	movq %r15,0xC8(%rbp)
L_106160:
	movq 0xC8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15D0
L_106113:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106114
L_106132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106133
.p2align 0x4
.long 0x15D4
L_106133:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106114:
	movq 0xC0(%rbp),%r15
	jmp L_106115
.p2align 0x4
.long 0x15D0
L_106118:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15C5
L_106004:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106005
L_106082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106083
.p2align 0x4
.long 0x15CE
L_106083:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106005:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106006:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417774
	cmpq $0x1085,%r15
	je L_417773
	cmpq $0x1086,%r15
	je L_417772
L_106007:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_417771
	cmpb $0x2,%r14b
	je L_417770
	cmpb $0x3,%r14b
	je L_417769
L_106008:
	movq $0x2,0xC8(%rbp)
L_106009:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417769:
L_106073:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_106009
.p2align 0x4
L_417770:
L_106072:
	movq $0x2,0xC8(%rbp)
	jmp L_106009
.p2align 0x4
L_417771:
L_106071:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_106009
.p2align 0x4
L_417772:
L_106076:
	movq %r13,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417773:
L_106075:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_106009
.p2align 0x4
L_417774:
L_106074:
	movq $0x1,0xC8(%rbp)
	jmp L_106009
.p2align 0x4
.long 0x15C5
L_105917:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105918
L_105995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105996
.p2align 0x4
.long 0x15CE
L_105996:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105918:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_105919:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417782
	cmpq $0x1085,%r15
	je L_417781
	cmpq $0x1086,%r15
	je L_417780
L_105920:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_417779
	cmpb $0x2,%r14b
	je L_417778
	cmpb $0x3,%r14b
	je L_417777
L_105921:
	movq $0x2,0xC8(%rbp)
L_105922:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_417777:
L_105986:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_105922
.p2align 0x4
L_417778:
L_105985:
	movq $0x2,0xC8(%rbp)
	jmp L_105922
.p2align 0x4
L_417779:
L_105984:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_105922
.p2align 0x4
L_417780:
L_105989:
	movq %r13,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417781:
L_105988:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_105922
.p2align 0x4
L_417782:
L_105987:
	movq $0x1,0xC8(%rbp)
	jmp L_105922
.p2align 0x4
.long 0x15B3
L_105825:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_105827:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	je L_417789
	cmpq $0x1084,%r15
	je L_417785
L_105828:
	movq (globalObjptr+0x7100)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417785:
L_105858:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_105859
L_105860:
	movq 0x8(%r14),%r15
	movq 0xF0(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_105859
L_105862:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_105709
L_105864:
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417789:
L_105829:
	movq 0x8(%r13),%r15
	movq %r15,0xD0(%rbp)
L_105830:
	movq 0xD0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1625
L_106572:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_106573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1620
L_106565:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106566
L_106569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_106570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106570
.p2align 0x4
.long 0x1624
L_106570:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_106566:
	movq 0xA0(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_417796
L_106567:
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xA8(%rbp)
.p2align 0x4,,0x7
L_106538:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417795
.p2align 0x4,,0x7
L_106539:
	movq $0x245D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_417791
L_106540:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_106538
.p2align 0x4
L_417791:
L_106541:
	movq 0x80(%rbp),%r13
	movq %r15,0x80(%rbp)
	movq %r13,%r15
L_106542:
	cmpl $0x0,0x98(%rbp)
	jl L_417794
L_106543:
	movq %r15,0x88(%rbp)
	movl $0x0,0x9C(%rbp)
loop_1149:
	movl 0x98(%rbp),%r14d
	cmpl %r14d,0x9C(%rbp)
	jl L_417793
L_106544:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_417792
L_106545:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x88(%rbp),%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_105649
.p2align 0x4
L_417792:
L_106546:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	jmp L_105669
.p2align 0x4
L_417793:
L_106547:
	movslq 0x9C(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq %r11,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_106548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_417794:
L_106553:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417795:
L_106554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_106555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106555
.p2align 0x4
.long 0x1623
L_106555:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_106539
.p2align 0x4
L_417796:
L_106557:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x2111,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_417797
L_106558:
L_106559:
	movq $0x2113,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
L_106560:
	movq $0xBEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r13,%r15
	jmp L_106542
.p2align 0x4
L_417797:
L_106561:
	movq %r13,%r14
	jmp L_106560
.p2align 0x4
.long 0x1620
L_106535:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106536
L_106562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_106563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106563
.p2align 0x4
.long 0x1624
L_106563:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_106536:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10DC,%r13
	je L_106557
L_106537:
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_106538
.p2align 0x4
.long 0x1614
L_106476:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_106477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1601
L_106408:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106409
L_106419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106420
.p2align 0x4
.long 0x1604
L_106420:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106409:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_417801
L_106410:
	movq 0x98(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (new1_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
L_417801:
L_106418:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15F6
L_106380:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_417803
L_106381:
	movq 0xC8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_417803:
L_106384:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15EB
L_106333:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105826
L_106334:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x160(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0x15E5
L_106284:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp L_106259
.p2align 0x4
.long 0x15D0
L_106261:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15E5
L_106229:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp L_106204
.p2align 0x4
.long 0x15D0
L_106206:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15E2
L_106187:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106188
L_106194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106195
.p2align 0x4
.long 0x15E3
L_106195:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106188:
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417807
	cmpq $0x298F,%r15
	je L_417806
	cmpq $0x2990,%r15
	je L_417805
L_106189:
	movq 0x8(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417805:
L_106193:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_106160
.p2align 0x4
L_417806:
L_106192:
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	jmp L_106160
.p2align 0x4
L_417807:
L_106191:
	movq 0x10(%r14),%r15
	movq %r15,0x160(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x168(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x15D8
new1_8:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106161
L_106179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106180
.p2align 0x4
.long 0x15E1
L_106180:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106161:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15D1
L_106119:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106120
L_106128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106129
.p2align 0x4
.long 0x15D3
L_106129:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106120:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (new1_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15C6
L_106010:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106011
L_106069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106070
.p2align 0x4
.long 0x15CD
L_106070:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106011:
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_105826
L_106012:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417816
	cmpq $0x1085,%r15
	je L_417815
	cmpq $0x1086,%r15
	je L_417814
L_106013:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_417813
	cmpb $0x2,%r11b
	je L_417812
	cmpb $0x3,%r11b
	je L_417811
L_106015:
	movq 0xC8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz doit_20
L_106032:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_20
L_106033:
	movq 0x0(%r11),%r13
	movq $0x2,%r15
	movq %r13,%r14
L_106035:
	movq %r15,%r13
	andq $0x3,%r13
	jnz doit_20
L_106036:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1233,%r13
	jne doit_20
L_106037:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x0(%r13)
	je doit_56
L_106038:
	movq 0xE0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
doit_56:
doit_20:
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417811:
L_106048:
	movq $0x2469,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_106049:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_20
L_106050:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_20
L_106051:
	movq 0x0(%r13),%r14
	jmp L_106035
.p2align 0x4
L_417812:
L_106045:
	movq 0xC8(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz doit_20
L_106046:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_20
L_106047:
	movq 0x0(%r13),%r14
	movq $0x2,%r15
	jmp L_106035
.p2align 0x4
L_417813:
L_106040:
	movq $0x2463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_106041:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_20
L_106042:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_20
L_106043:
	movq 0x0(%r13),%r14
	jmp L_106035
.p2align 0x4
L_417814:
L_106060:
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417815:
L_106056:
	movq 0x0(%r14),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
L_106057:
	movq 0xC8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz doit_20
L_106058:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_20
L_106059:
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_106035
.p2align 0x4
L_417816:
L_106053:
	movq 0xC8(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz doit_20
L_106054:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_20
L_106055:
	movq 0x0(%r13),%r14
	movq $0x1,%r15
	jmp L_106035
.p2align 0x4
.long 0x15C5
L_106077:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106078
L_106080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106081
.p2align 0x4
.long 0x15CE
L_106081:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106078:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105826
L_106079:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_106009
.p2align 0x4
.long 0x15C6
L_105923:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105924
L_105982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105983
.p2align 0x4
.long 0x15CD
L_105983:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105924:
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_105826
L_105925:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_417826
	cmpq $0x1085,%r15
	je L_417825
	cmpq $0x1086,%r15
	je L_417824
L_105926:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_417823
	cmpb $0x2,%r11b
	je L_417822
	cmpb $0x3,%r11b
	je L_417821
L_105928:
	movq 0xC8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz doit_19
L_105945:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_19
L_105946:
	movq 0x0(%r11),%r13
	movq $0x2,%r15
	movq %r13,%r14
L_105948:
	movq %r15,%r13
	andq $0x3,%r13
	jnz doit_19
L_105949:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1233,%r13
	jne doit_19
L_105950:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq %r11,0x0(%r14)
	je doit_71
L_105951:
	movq 0xE0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
doit_71:
doit_19:
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (new1_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417821:
L_105961:
	movq $0x2469,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_105962:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_19
L_105963:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_19
L_105964:
	movq 0x0(%r13),%r14
	jmp L_105948
.p2align 0x4
L_417822:
L_105958:
	movq 0xC8(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz doit_19
L_105959:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_19
L_105960:
	movq 0x0(%r13),%r14
	movq $0x2,%r15
	jmp L_105948
.p2align 0x4
L_417823:
L_105953:
	movq $0x2463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_105954:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_19
L_105955:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_19
L_105956:
	movq 0x0(%r13),%r14
	jmp L_105948
.p2align 0x4
L_417824:
L_105973:
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_105974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417825:
L_105969:
	movq 0x0(%r14),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
L_105970:
	movq 0xC8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz doit_19
L_105971:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_19
L_105972:
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_105948
.p2align 0x4
L_417826:
L_105966:
	movq 0xC8(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz doit_19
L_105967:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1233,%r15
	jne doit_19
L_105968:
	movq 0x0(%r13),%r14
	movq $0x1,%r15
	jmp L_105948
.p2align 0x4
.long 0x15C5
L_105990:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105991
L_105993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105994
.p2align 0x4
.long 0x15CE
L_105994:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105991:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105826
L_105992:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	jmp L_105922
.p2align 0x4
.long 0x15C1
L_105865:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105866
L_105872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105873
.p2align 0x4
.long 0x15C2
L_105873:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105866:
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417833
	cmpq $0x298F,%r15
	je L_417832
	cmpq $0x2990,%r15
	je L_417831
L_105867:
	movq 0x8(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417831:
L_105871:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	jmp L_105830
.p2align 0x4
L_417832:
L_105870:
	movq 0x0(%r14),%r15
	movq %r15,0xD0(%rbp)
	jmp L_105830
.p2align 0x4
L_417833:
L_105869:
	movq 0x10(%r14),%r15
	movq %r15,0x160(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x168(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_105868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x15B4
new1_3:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105831
L_105856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105857
.p2align 0x4
.long 0x15C0
L_105857:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105831:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1625
L_106573:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106574:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_106329
L_106578:
	movq %r13,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_106579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x161D
L_106548:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_106549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertLambda_0
.p2align 0x4
.long 0x1615
L_106477:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_105826
L_106478:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_106329
L_106482:
	movq %r13,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_106483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1602
new1_14:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106411
L_106416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106417
.p2align 0x4
.long 0x1603
L_106417:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106411:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15F7
L_106382:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106383
L_106395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106396
.p2align 0x4
.long 0x15FE
L_106396:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106383:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq %r13,0xC8(%rbp)
	jmp L_106384
.p2align 0x4
.long 0x15F8
L_106385:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106386
L_106393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106394
.p2align 0x4
.long 0x15FD
L_106394:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106386:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_106387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
.long 0x15EC
L_106335:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq 0x168(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_105700
L_106337:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1146:
	cmpl %ebx,%ecx
	je L_417848
L_106338:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_105709
L_106340:
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0xC0(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11,%r13,1),%r14
	movq 0xB8(%rbp),%r10
	cmpq %r10,0x8(%r14)
	je L_417844
L_106341:
	incl %ebx
	jo L_106102
L_106342:
	jmp loop_1146
.p2align 0x4
L_417844:
L_106343:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106344
L_106371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106372
.p2align 0x4
.long 0x15A2
L_106372:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106344:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_105700
L_106346:
	movl %r11d,0x168(%rbp)
	movq $0x37D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x160(%rbp)
	addq $0x18,%r12
	addq $0x160,%rbp
	leaq (L_106347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417848:
L_106373:
	movq (globalObjptr+0x70E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15D1
L_106262:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106263
L_106271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106272
.p2align 0x4
.long 0x15D3
L_106272:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106263:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (new1_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15D1
L_106207:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106208
L_106216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106217
.p2align 0x4
.long 0x15D3
L_106217:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106208:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (new1_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15E2
L_106190:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	jmp L_106160
.p2align 0x4
.long 0x15D8
L_106162:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15A0
new1_7:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106121
L_106126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106127
.p2align 0x4
.long 0x15D2
L_106127:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106121:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15C7
new1_5:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106016
L_106030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106031
.p2align 0x4
.long 0x15CC
L_106031:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106016:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15C6
L_106061:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106062
L_106067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106068
.p2align 0x4
.long 0x15CD
L_106068:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106062:
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_105826
L_106063:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_106064:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_20
L_106065:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_20
L_106066:
	movq 0x0(%r13),%r14
	jmp L_106035
.p2align 0x4
.long 0x15C7
new1_4:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105929
L_105943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105944
.p2align 0x4
.long 0x15CC
L_105944:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105929:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15C6
L_105974:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105975
L_105980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105981
.p2align 0x4
.long 0x15CD
L_105981:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105975:
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_105826
L_105976:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_105977:
	movq 0xC8(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz doit_19
L_105978:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1233,%r14
	jne doit_19
L_105979:
	movq 0x0(%r13),%r14
	jmp L_105948
.p2align 0x4
.long 0x15C1
L_105868:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_105830
.p2align 0x4
.long 0x15B4
L_105832:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1625
L_106579:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105826
L_106580:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_106581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0x1621
L_106549:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106550
L_106551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_106552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106552
.p2align 0x4
.long 0x1622
L_106552:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_106550:
	movq $0xBEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	incl 0x9C(%rbp)
	jmp loop_1149
.p2align 0x4
.long 0x1615
L_106483:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_105826
L_106484:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x158(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0x15F9
L_106387:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x15ED
L_106347:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106348
L_106369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106370
.p2align 0x4
.long 0x15F1
L_106370:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106348:
	movq 0xB8(%rbp),%r14
	movq 0xC0(%r14),%r13
	movq 0x70(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_417865
L_106349:
L_106350:
	movq 0xD0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_105700
L_106352:
	cmpl $0x1,%r11d
	je L_417862
L_106353:
	movq $0x1D8B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r11,%r15
new1_13:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417862:
L_106358:
	cmpq $0x0,%r13
	jna L_105709
L_106360:
	movq 0x0(%r14),%r15
	jmp new1_13
.p2align 0x4
L_417865:
L_106361:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_105700
L_106363:
	movl %r11d,0x168(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_106364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x15A0
new1_12:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106264
L_106269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106270
.p2align 0x4
.long 0x15D2
L_106270:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106264:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15A0
new1_10:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106209
L_106214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106215
.p2align 0x4
.long 0x15D2
L_106215:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106209:
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movl $0x1,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15D9
L_106163:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106164
L_106177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106178
.p2align 0x4
.long 0x15E0
L_106178:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106164:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15A0
L_106122:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106123
L_106124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106125
.p2align 0x4
.long 0x15D2
L_106125:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106123:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3F,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15C7
L_106017:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15C7
L_105930:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15B5
L_105833:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105834
L_105854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105855
.p2align 0x4
.long 0x15BF
L_105855:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105834:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x98(%rbp)
	jna L_105709
L_105836:
	movq 0x118(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1625
L_106581:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_106582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1616
L_106485:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_106486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15FA
L_106388:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_106389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15A1
L_106354:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106355
L_106356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106357
.p2align 0x4
.long 0x15A2
L_106357:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106355:
	movq $0x1DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15EE
L_106364:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0x160(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x15A0
L_106265:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106266
L_106267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106268
.p2align 0x4
.long 0x15D2
L_106268:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106266:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5E,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15A0
L_106210:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106211
L_106212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106213
.p2align 0x4
.long 0x15D2
L_106213:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106211:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x47,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15DA
L_106165:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106166
L_106175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106176
.p2align 0x4
.long 0x15DF
L_106176:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106166:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_106167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15C8
L_106018:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106019
L_106028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106029
.p2align 0x4
.long 0x15CB
L_106029:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106019:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15C8
L_105931:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105932
L_105941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105942
.p2align 0x4
.long 0x15CB
L_105942:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105932:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x15B6
L_105837:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1626
L_106582:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r13
	movq %r13,0xF0(%rbp)
	movq 0x18(%r13),%r15
	cmpq $0x1,%r15
	je L_417886
L_106583:
	movq 0x108(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_105700
L_106585:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1150:
	cmpl %ecx,%ebx
	je L_417884
L_106586:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_105709
L_106588:
	movq %r13,%r11
	salq $0x4,%r11
	salq $0x4,%r13
	movq 0x108(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq %r9,0xF0(%rbp)
	movq 0x0(%r10,%r11,1),%r13
	movq 0x8(%r15),%r9
	cmpq %r9,0x8(%r13)
	je L_417881
L_106589:
	incl %ebx
	jo L_106102
L_106590:
	jmp loop_1150
.p2align 0x4
L_417881:
L_106591:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106592
L_106597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_106598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106598
.p2align 0x4
.long 0x1629
L_106598:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_106592:
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x37CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	addq $0x10,%r12
	movl $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_106593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417884:
L_106599:
	movq (globalObjptr+0x70D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417886:
L_106600:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1617
L_106486:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106487
L_106494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_106495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106495
.p2align 0x4
.long 0x161A
L_106495:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_106487:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_105700
L_106489:
	movq $0x395F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x60,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x138(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0xC8(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0xD8(%rbp),%r11
	movq %r11,0x20(%r14)
	movl %r13d,0xD8(%rbp)
	movq 0x118(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x48(%r14)
	movq %r15,0x50(%r14)
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_106490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_30
.p2align 0x4
.long 0x15FB
L_106389:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106390
L_106391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106392
.p2align 0x4
.long 0x15FC
L_106392:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106390:
	movq $0x1D9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15EF
L_106365:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106366
L_106367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106368
.p2align 0x4
.long 0x15F0
L_106368:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106366:
	movq 0xE0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_106350
.p2align 0x4
.long 0x15DB
L_106167:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106168
L_106173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106174
.p2align 0x4
.long 0x15DE
L_106174:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106168:
	movq $0x37CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movl $0x2,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15C9
L_106020:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106021
L_106026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106027
.p2align 0x4
.long 0x15CA
L_106027:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106021:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x37CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movl $0x2,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_106022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15C9
L_105933:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105934
L_105939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105940
.p2align 0x4
.long 0x15CA
L_105940:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105934:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x37CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movl $0x2,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15B7
L_105838:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105839
L_105852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105853
.p2align 0x4
.long 0x15BE
L_105853:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105839:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1627
L_106593:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106594
L_106595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_106596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106596
.p2align 0x4
.long 0x1628
L_106596:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_106594:
	movq $0x1DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x11E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x245D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl 0xB0(%rbp),%ecx
	jmp loop_1148
.p2align 0x4
.long 0x1618
L_106490:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106491
L_106492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_106493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106493
.p2align 0x4
.long 0x1619
L_106493:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_106491:
	movq $0x1DAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1DA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq $0x1,0x8(%r14)
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xB8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15DC
L_106169:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106170
L_106171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106172
.p2align 0x4
.long 0x15DD
L_106172:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106170:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x45,0x8(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15A1
L_106022:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106023
L_106024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_106025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106025
.p2align 0x4
.long 0x15A2
L_106025:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_106023:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3A,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15A1
L_105935:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105936
L_105937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105938
.p2align 0x4
.long 0x15A2
L_105938:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105936:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x39,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.p2align 0x4
.long 0x15B8
L_105840:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105841
L_105850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105851
.p2align 0x4
.long 0x15BD
L_105851:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105841:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_105842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_4
.p2align 0x4
.long 0x15B9
L_105842:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105843
L_105848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105849
.p2align 0x4
.long 0x15BC
L_105849:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105843:
	movq $0x37D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x160(%rbp)
	movl $0x3,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_105844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x15BA
L_105844:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105845
L_105846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_105847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105847
.p2align 0x4
.long 0x15BB
L_105847:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_105845:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x7,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	jmp L_105659
.text
.p2align 0x4
.globl get_96
.hidden get_96
get_96:
L_106635:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_106714
L_106636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417934
L_106637:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_417933
L_106639:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_417932
L_106640:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_106642:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_106643
L_106708:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD67,%r13
	je L_417928
L_106643:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_106644
L_106645:
	cmpq $0x1,%r15
	je L_417903
L_106646:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_106642
.p2align 0x4
L_417903:
L_106647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106648
L_106706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_106707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106707
.p2align 0x4
.long 0x1637
L_106707:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_106648:
	movl 0x58(%rbp),%ecx
L_106649:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_417925
L_106651:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_106653
L_106705:
	movl %ecx,0x0(%r15)
L_106653:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_417923
L_106654:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r11,%r14
	movq %r15,0x10(%rbp)
	jne L_106656
L_106657:
	testq %r11,%r11
	jz L_417921
L_106658:
	cmpq $0x7FFFFFFF,%r11
	ja L_417920
L_106659:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106660
L_106700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_106701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106701
.p2align 0x4
.long 0xF0C
L_106701:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_106660:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15ED,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x58,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_106661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106661
.p2align 0x4
.long 0xF0C
L_106661:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_106662:
	movq $0x0,0x70(%rbp)
loop_1151:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_417918
L_106663:
	movq 0x68(%rbp),%r15
	movq $0xA3,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%rbp),%r14
	cmpq %r13,0x10(%r14)
	je L_417917
L_106664:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_417916
L_106666:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1152:
	cmpl %ebx,%ecx
	je L_417914
L_106667:
	movslq %ebx,%r15
	cmpq 0x10(%rbp),%r15
	jnb L_106669
L_106670:
	salq $0x4,%r15
	movq 0x68(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	testl %r13d,%r13d
	jz L_417905
L_106688:
	incl %ebx
	jo L_417904
L_106689:
	jmp loop_1152
.p2align 0x4
L_417904:
L_106644:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417905:
L_106671:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106672
L_106686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_106687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106687
.p2align 0x4
.long 0x1633
L_106687:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_106672:
	movq 0x28(%rbp),%r15
	movq 0x8(%rbp),%r14
	cmpq %r14,0x10(%r15)
	je L_417911
L_106673:
	movq 0x30(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_417910
L_106674:
	movq 0x38(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_417909
L_106675:
	movq 0x40(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_417907
L_106676:
	movq 0x48(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_417906
L_106677:
	movq (globalObjptr+0x5130)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417906:
L_106678:
	movq $0x531B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	xorl %ecx,%ecx
L_106679:
	movq $0x1353,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1ACF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417907:
L_106680:
	xorb %dl,%dl
mutable_0:
	cmpq $0x0,0x10(%rbp)
	jna L_417908
L_106682:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x531D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	xorl %ecx,%ecx
	jmp L_106679
.p2align 0x4
L_417908:
L_106669:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417909:
L_106683:
	movb $0x1,%dl
	jmp mutable_0
.p2align 0x4
L_417910:
L_106684:
	movb $0x3,%dl
	jmp mutable_0
.p2align 0x4
L_417911:
L_106685:
	movb $0x2,%dl
	jmp mutable_0
.p2align 0x4
L_417914:
L_106690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106691
L_106692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_106693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106693
.p2align 0x4
.long 0x1634
L_106693:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_106691:
	movq $0x2109,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x531F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl $0x1,%ecx
	jmp L_106679
.p2align 0x4
L_417916:
L_106656:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417917:
L_106694:
	movq $0x5321,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_106679
.p2align 0x4
L_417918:
L_106695:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_106696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_417920:
L_106702:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417921:
L_106703:
	movq (globalObjptr+0x5128)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_106662
.p2align 0x4
L_417923:
L_106704:
	movq (globalObjptr+0x1DE0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417925:
L_106650:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417928:
L_106709:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_106650
L_106710:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_417929
L_106712:
	movl %ecx,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417929:
L_106711:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417932:
L_106713:
	xorl %ecx,%ecx
	jmp L_106649
.p2align 0x4
L_417933:
L_106638:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417934:
L_106714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_106715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106715
.p2align 0x4
.long 0x460
L_106715:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_106637
.p2align 0x4
.long 0x1635
L_106696:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106697
L_106698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_106699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106699
.p2align 0x4
.long 0x1636
L_106699:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_106697:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x68(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	salq $0x4,%r10
	movq %r14,0x8(%r15,%r10,1)
	movq %r11,%r14
	salq $0x4,%r14
	movl %r13d,0x0(%r15,%r14,1)
	incq %r11
	movq %r11,0x70(%rbp)
	jmp loop_1151
.text
.p2align 0x4
.globl x_1540
.hidden x_1540
x_1540:
L_106716:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_106717
L_106737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_106738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106738
.p2align 0x4
.long 0x460
L_106738:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_106717:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r11,%r14
	je L_417937
L_106718:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417937:
L_106719:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_417944
L_106720:
	cmpq $0x7FFFFFFF,%rdx
	ja L_417943
L_106721:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_106722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106722
.p2align 0x4
.long 0x45E
L_106722:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
L_106723:
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_1153:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417942
.p2align 0x4,,0x7
L_106724:
	movq 0x20(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_417941
L_106726:
	movl %r15d,%r14d
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_417940
	cmpq $0x298F,%r15
	je L_417939
	cmpq $0x2990,%r15
	je L_417938
L_106727:
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_106728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417938:
L_106732:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xFE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
.p2align 0x4,,0x7
L_106729:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_1153
.p2align 0x4
L_417939:
L_106731:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_106729
.p2align 0x4
L_417940:
L_106730:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_106728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
L_417941:
L_106725:
	movq 0x18(%rbp),%r14
	movq $0x9B5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x210B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r11)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417942:
L_106733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_106734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106734
.p2align 0x4
.long 0x5E2
L_106734:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_106724
.p2align 0x4
L_417943:
L_106735:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417944:
L_106736:
	movq (globalObjptr+0x5120)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_106723
.p2align 0x4
.long 0x5BF
L_106728:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_106729
.text
.p2align 0x4
.globl x_1541
.hidden x_1541
x_1541:
L_106739:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_106751
L_106740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417949
L_106741:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x298E,%r14
	je L_417948
	cmpq $0x298F,%r14
	je L_417947
	cmpq $0x2990,%r14
	je L_417946
L_106742:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_106743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_417946:
L_106750:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_106745:
	movq $0x2107,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417947:
L_106749:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_106745
.p2align 0x4
L_417948:
L_106748:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_106743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
L_417949:
L_106751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_106752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106752
.p2align 0x4
.long 0x65B
L_106752:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_106741
.p2align 0x4
.long 0x2B
L_106743:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106744
L_106746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_106747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106747
.p2align 0x4
.long 0x2C
L_106747:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_106744:
	movq 0x18(%rbp),%r15
	jmp L_106745
.text
.p2align 0x4
.globl convertLambda_0
.hidden convertLambda_0
convertLambda_0:
L_106753:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_106754
L_106903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_106904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106904
.p2align 0x4
.long 0x4AF
L_106904:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_106754:
	movq 0x18(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r13,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_106755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1638
L_106755:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_106756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1639
L_106756:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106757
L_106901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_106902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106902
.p2align 0x4
.long 0x165C
L_106902:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_106757:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF218)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x58(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_417954
L_106758:
	movq %r15,0x8(%rbp)
L_106759:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_417953
L_106760:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_106761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_417953:
L_106892:
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
L_106763:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_417954:
L_106893:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_417955
L_106895:
	movl %r11d,0xC0(%rbp)
	movq $0x37BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_106896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_417955:
L_106772:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x163A
L_106761:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106762
L_106890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_106891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106891
.p2align 0x4
.long 0x1658
L_106891:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_106762:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xA0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq %r13,0x40(%rbp)
	jmp L_106763
.p2align 0x4
.long 0x163B
L_106764:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106765
L_106888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106889
.p2align 0x4
.long 0x1657
L_106889:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106765:
	movq $0x9C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3EF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x1659
L_106896:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_106897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x163C
L_106766:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x165A
L_106897:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106898
L_106899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_106900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106900
.p2align 0x4
.long 0x165B
L_106900:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_106898:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_106759
.p2align 0x4
.long 0x163D
L_106767:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (new1_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x163E
new1_15:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106768
L_106886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106887
.p2align 0x4
.long 0x1656
L_106887:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106768:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movl $0x1,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x163E
L_106769:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106770
L_106884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106885
.p2align 0x4
.long 0x1656
L_106885:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106770:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_106772
L_106773:
	movq $0x3F83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl %r13d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x163F
L_106774:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106775
L_106882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106883
.p2align 0x4
.long 0x1655
L_106883:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106775:
	movq $0x4043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1640
L_106776:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106777
L_106880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106881
.p2align 0x4
.long 0x1654
L_106881:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106777:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_106772
L_106779:
	movq $0x3F81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA8(%rbp)
	movl %r13d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1641
L_106780:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106781
L_106878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106879
.p2align 0x4
.long 0x1653
L_106879:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106781:
	movq $0x4045,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl 0x4C(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_106782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1642
L_106782:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_106772
L_106784:
	movl 0x4C(%rbp),%r15d
	cmpl %ecx,%r15d
	jne L_106786
L_106787:
	cmpl $0x0,%r15d
	jl L_417968
L_106788:
	movq $0x1,0x68(%rbp)
	xorl %ecx,%ecx
loop_1154:
	cmpl 0x4C(%rbp),%ecx
	jnl L_417967
L_106845:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xB0(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0xC0(%rbp)
	movq %r13,0xD0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_106846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417967:
L_106789:
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_106790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertExp_0
.p2align 0x4
L_417968:
L_106786:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x164E
L_106846:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_106847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1643
L_106790:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106791
L_106843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106844
.p2align 0x4
.long 0x164D
L_106844:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_106791:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_417973
L_106792:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_106793:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417972
.p2align 0x4,,0x7
L_106794:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x12BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1DAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_417971
L_106795:
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_106793
.p2align 0x4
L_417971:
L_106796:
	xchgq %r14,%r15
L_106797:
	movq $0x1D9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x1D99,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x2,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_106798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1537
.p2align 0x4
L_417972:
L_106840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_106841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106841
.p2align 0x4
.long 0x164C
L_106841:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_106794
.p2align 0x4
L_417973:
L_106842:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_106797
.p2align 0x4
.long 0x164E
L_106847:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_417976
L_106849:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_417975
L_106854:
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_106855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_417975:
L_106851:
	movq (globalObjptr+0x70B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417976:
L_106848:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1644
L_106798:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106799
L_106838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_106839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106839
.p2align 0x4
.long 0x164A
L_106839:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_106799:
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_417980
L_106800:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_106801:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_417979
L_106803:
	cmpq $0x1,%r15
	je L_417977
L_106804:
	movq 0x8(%r15),%r15
	jmp L_106801
.p2align 0x4
L_417977:
L_106805:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106806
L_106835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_106836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106836
.p2align 0x4
.long 0x164B
L_106836:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_106806:
	movl 0x30(%rbp),%ecx
L_106807:
	movl %ecx,0x98(%rbp)
	movq $0x3E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_106808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_417979:
L_106802:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417980:
L_106837:
	xorl %ecx,%ecx
	jmp L_106807
.p2align 0x4
.long 0x164E
L_106855:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_106848
L_106856:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_106857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0x1645
L_106808:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106809
L_106833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_106834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106834
.p2align 0x4
.long 0x164A
L_106834:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_106809:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2957,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_417983
L_106810:
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_106811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1542
.p2align 0x4
L_417983:
L_106832:
	xchgq %r14,%r15
L_106813:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq $0x210F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_106772
L_106815:
	cmpl %ecx,0x4C(%rbp)
	jne L_106786
L_106817:
	xorl %ecx,%ecx
loop_1155:
	cmpl 0x4C(%rbp),%ecx
	jnl L_417984
L_106828:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x50(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x90(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_106829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417984:
L_106818:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_106772
L_106820:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,%ecx
	jne L_106786
L_106822:
	cmpl $0x0,%r15d
	jl L_106786
L_106823:
	xorl %ecx,%ecx
loop_1156:
	cmpl 0x48(%rbp),%ecx
	jnl L_417985
L_106825:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_106826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_417985:
L_106824:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x164E
L_106857:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_106858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x1646
L_106811:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106812
L_106830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_106831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106831
.p2align 0x4
.long 0x1649
L_106831:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_106812:
	movq 0x20(%rbp),%r15
	jmp L_106813
.p2align 0x4
.long 0x1648
L_106829:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0x50(%rbp),%ecx
	jmp loop_1155
.p2align 0x4
.long 0x1647
L_106826:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0x28(%rbp),%ecx
	jmp loop_1156
.p2align 0x4
.long 0x164F
L_106858:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r13
	movq %r13,0xB8(%rbp)
	movq 0x18(%r13),%r15
	cmpq $0x1,%r15
	je L_417999
L_106859:
	movq 0xD0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_106772
L_106861:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1157:
	cmpl %ecx,%ebx
	je L_417997
L_106862:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_417996
L_106864:
	movq %r13,%r11
	salq $0x4,%r11
	salq $0x4,%r13
	movq 0xD0(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq %r9,0xB8(%rbp)
	movq 0x0(%r10,%r11,1),%r13
	movq 0x8(%r13),%r9
	cmpq %r9,0x8(%r15)
	je L_417994
L_106865:
	incl %ebx
	jo L_106802
L_106866:
	jmp loop_1157
.p2align 0x4
L_417994:
L_106867:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106868
L_106873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_106874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106874
.p2align 0x4
.long 0x1652
L_106874:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_106868:
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x37CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_106869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
L_417996:
L_106863:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417997:
L_106875:
	movq (globalObjptr+0x70D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417999:
L_106876:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1650
L_106869:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106870
L_106871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_106872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106872
.p2align 0x4
.long 0x1651
L_106872:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_106870:
	movq $0x1DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x11E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x245D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movl 0xB0(%rbp),%ecx
	jmp loop_1154
.text
.p2align 0x4
.globl x_1537
.hidden x_1537
x_1537:
L_106905:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_106929
L_106906:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418001
L_106907:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xA8(%r14),%r13
	movq 0xA0(%r14),%r11
	movq 0x98(%r14),%r10
	movq 0x90(%r14),%r9
	movq 0x88(%r14),%r8
	movq 0x70(%r14),%rsp
	movq 0x68(%r14),%rsi
	movq 0x48(%r14),%rdi
	movq 0x40(%r14),%rdx
	movq 0x38(%r14),%rcx
	movq 0x28(%r14),%rbx
	movq 0x20(%r14),%rax
	movq %rdi,(localObjptr+0x48)(%rip)
	movq 0x18(%r14),%rdi
	movq %rdx,(localObjptr+0x50)(%rip)
	movq 0x8(%r14),%rdx
	movq %rdx,0x18(%rbp)
	movq 0xB0(%r14),%rdx
	movq %rcx,(localObjptr+0x58)(%rip)
	movq 0x8(%rdx),%rcx
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x30F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	addq $0x48,%r12
	movq %r15,0x0(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq $0x311,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %rcx,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %rdi,0x20(%r13)
	movq %rax,0x28(%r13)
	movq %rbx,0x30(%r13)
	movq %r10,0x38(%r13)
	movq %r9,0x40(%r13)
	movq %r8,0x48(%r13)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x50(%r13)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x58(%r13)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x60(%r13)
	addq $0x70,%r12
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x1,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_106908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_418001:
L_106929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_106930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106930
.p2align 0x4
.long 0x45C
L_106930:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_106907
.p2align 0x4
.long 0x526
L_106908:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_106909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3827
.p2align 0x4
.long 0x8AA
L_106909:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_106910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xBA1
L_106910:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106911
L_106927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_106928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106928
.p2align 0x4
.long 0x165E
L_106928:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_106911:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_418006
L_106912:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_106913:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_418005
L_106915:
	cmpq $0x1,%r15
	je L_418003
L_106916:
	movq 0x8(%r15),%r15
	jmp L_106913
.p2align 0x4
L_418003:
L_106917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106918
L_106924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_106925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106925
.p2align 0x4
.long 0x165D
L_106925:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_106918:
	movl 0x18(%rbp),%ecx
L_106919:
	movl %ecx,0x50(%rbp)
	movq $0x4067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_106920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_418005:
L_106914:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418006:
L_106926:
	xorl %ecx,%ecx
	jmp L_106919
.p2align 0x4
.long 0x792
L_106920:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106921
L_106922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_106923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106923
.p2align 0x4
.long 0xA48
L_106923:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_106921:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r10,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1542
.hidden x_1542
x_1542:
L_106931:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_107022
L_106932:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418011
L_106933:
	movq 0x8(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_418010
L_106934:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x28(%r14),%r13
	movq 0x30(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_418009
L_106937:
	movl %r14d,0x50(%rbp)
	movq $0x3E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	addq $0x48,%rbp
	leaq (L_106938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_418009:
L_106936:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418010:
L_107021:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x18(%rbp)
x_356:
	movq 0x10(%rbp),%r15
	movq 0x98(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x1,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_106940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_418011:
L_107022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_107023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107023
.p2align 0x4
.long 0x45C
L_107023:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_106933
.p2align 0x4
.long 0x8A5
L_106938:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106939
L_107019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_107020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107020
.p2align 0x4
.long 0x8A6
L_107020:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_106939:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x20(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x28(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0x40(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x8(%rsi)
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%rsi)
	movq $0x2957,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsi,0x0(%r15)
	movq %rsi,0x50(%rbp)
	addq $0x10,%r12
	movq $0x725,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %rsi,0x58(%rbp)
	addq $0x10,%r12
	movq %r13,0x48(%rbp)
	movq %rsp,0x18(%rbp)
	movq %r10,0x38(%rbp)
	movq %r8,0x20(%rbp)
	movq %r11,0x40(%rbp)
	movl %r14d,0x28(%rbp)
	movq %r9,0x30(%rbp)
	jmp x_356
.p2align 0x4
.long 0x165F
L_106940:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq $0x1,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_106941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x165F
L_106941:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106942
L_107017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_107018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107018
.p2align 0x4
.long 0x1673
L_107018:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_106942:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_418014
L_106943:
L_106944:
	movq $0x2957,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq $0x34C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_106945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_418014:
L_106992:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1660
L_106945:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106946
L_107014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_107015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107015
.p2align 0x4
.long 0x1672
L_107015:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_106946:
	movq $0x4373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x35B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_106947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x1661
L_106947:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xE8(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x58(%rbp)
	jne L_106936
L_106949:
	cmpq $0x7FFFFFFF,%rdx
	ja L_418022
L_106950:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_106951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106951
.p2align 0x4
.long 0x1662
L_106951:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xF8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1158:
	cmpq 0xE8(%rbp),%r15
	jnl L_418017
L_107012:
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1158
.p2align 0x4
L_418017:
L_106952:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xE8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_106953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106953
.p2align 0x4
.long 0x1663
L_106953:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,0x100(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1159:
	cmpq 0xE8(%rbp),%r15
	jnl L_418018
L_107011:
	movq 0x100(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1159
.p2align 0x4
L_418018:
L_106954:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xE8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_106955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106955
.p2align 0x4
.long 0x1664
L_106955:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x108(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1160:
	cmpq 0xE8(%rbp),%r15
	jnl L_418019
L_107010:
	movq 0x108(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1160
.p2align 0x4
L_418019:
L_106956:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xE8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_106957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106957
.p2align 0x4
.long 0x1665
L_106957:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x110(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1161:
	cmpq 0xE8(%rbp),%r15
	jnl L_418020
L_107009:
	movq 0x110(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1161
.p2align 0x4
L_418020:
L_106958:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106959
L_107007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_107008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107008
.p2align 0x4
.long 0x1671
L_107008:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_106959:
	movq $0x8D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x128(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0x138(%rbp)
	movq %r15,0x140(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x128,%rbp
	leaq (L_106960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
L_418022:
L_107013:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1666
L_106960:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106961
L_107005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_107006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107006
.p2align 0x4
.long 0x1670
L_107006:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_106961:
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x8D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0xA8(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0xB0(%rbp),%r10
	movq %r10,0x28(%r15)
	movq 0xB8(%rbp),%r9
	movq %r9,0x30(%r15)
	movq 0xC0(%rbp),%r8
	movq %r8,0x38(%r15)
	movq $0x8D3,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %r15,0x8(%rbx)
	addq $0x40,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r14,0x0(%rbx)
	movq %r14,0xD0(%rbp)
	movq %r13,0x10(%rbx)
	movq %r11,0x18(%rbx)
	movq %r10,0x20(%rbx)
	movq %r9,0x28(%rbx)
	movq %r8,0x30(%rbx)
	movq %rbx,0xD8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xE8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_106962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106962
.p2align 0x4
.long 0x1667
L_106962:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xC8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1162:
	cmpq 0xE8(%rbp),%r15
	jnl L_418024
L_107004:
	movq 0xC8(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1162
.p2align 0x4
L_418024:
L_106963:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106964
L_107002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_107003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107003
.p2align 0x4
.long 0x166F
L_107003:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_106964:
	movq $0x8D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xA0(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xD0(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x100(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0x20(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0xD8(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq 0x110(%rbp),%rsi
	movq %rsi,0x38(%r15)
	movq $0x8D7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x40,%r12
	movq 0xC0(%rbp),%rdi
	movq %rdi,0x0(%rsi)
	movq 0xB8(%rbp),%rdx
	movq %rdx,0x8(%rsi)
	movq %r14,0x10(%rsi)
	movq %r13,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq 0x90(%rbp),%rcx
	movq %rcx,0x28(%rsi)
	movq 0x98(%rbp),%rcx
	movq %rcx,0x30(%rsi)
	movq $0x30D,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0xE0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%rcx)
	movq $0x8DD,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x120(%rbp)
	movq %r15,0x48(%rbx)
	movq %rsi,0xA0(%rbx)
	movq %r15,0xD0(%rbx)
	addq $0x100,%r12
	movq %rsp,0x0(%rbx)
	movq %r14,0x8(%rbx)
	movq %r13,0x10(%rbx)
	movq %r11,0x18(%rbx)
	movq %r10,0x20(%rbx)
	movq %r9,0x28(%rbx)
	movq %r8,0x30(%rbx)
	movq 0xF0(%rbp),%r15
	movq %r15,0x38(%rbx)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbx)
	movq 0x108(%rbp),%r15
	movq %r15,0x50(%rbx)
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbx)
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rbx)
	movq %r10,0x68(%rbx)
	movq %r15,0x70(%rbx)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbx)
	movq %r10,0x80(%rbx)
	movq %rcx,0x88(%rbx)
	movq %r10,0x90(%rbx)
	movq 0x68(%rbp),%r14
	movq %r14,0x98(%rbx)
	movq 0x70(%rbp),%r14
	movq %r14,0xA8(%rbx)
	movq %r10,0xB0(%rbx)
	movq %rdx,0xB8(%rbx)
	movq %rdi,0xC0(%rbx)
	movq %r10,0xC8(%rbx)
	movq 0x78(%rbp),%r14
	movq %r14,0xD8(%rbx)
	movq 0x80(%rbp),%r14
	movq %r14,0xE0(%rbx)
	movq %r8,0xE8(%rbx)
	movq 0x88(%rbp),%r14
	movq %r14,0xF0(%rbx)
	movq 0x48(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_106965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x1668
L_106965:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106966
L_107000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_107001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107001
.p2align 0x4
.long 0x166E
L_107001:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_106966:
	movslq 0x2C(%rbp),%r15
	cmpq 0xE8(%rbp),%r15
	jnb L_418028
L_106969:
	movq 0xF8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_106970:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_418027
L_106972:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x2C(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0xF0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_106973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_418027:
L_106971:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418028:
L_106968:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1669
L_106973:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106974
L_106998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_106999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106999
.p2align 0x4
.long 0x166D
L_106999:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_106974:
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_418033
L_106975:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_106976:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_418032
L_106978:
	cmpq $0x1,%r15
	je L_418030
L_106979:
	movq 0x8(%r15),%r15
	jmp L_106976
.p2align 0x4
L_418030:
L_106980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106981
L_106995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_106996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106996
.p2align 0x4
.long 0x166C
L_106996:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_106981:
	movl 0x50(%rbp),%ecx
L_106982:
	movl %ecx,0x70(%rbp)
	movq $0x3E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_106983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_418032:
L_106977:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418033:
L_106997:
	xorl %ecx,%ecx
	jmp L_106982
.p2align 0x4
.long 0x166A
L_106983:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106984
L_106993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_106994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106994
.p2align 0x4
.long 0x166C
L_106994:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_106984:
	movslq 0x2C(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnb L_106968
L_106986:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x40,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x2957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x725,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x10,%r12
	movq %r11,0x0(%r10)
	movq $0x727,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r10,0x0(%r11)
	movq $0x729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_106987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x166B
L_106987:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq $0x1,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_106988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x8F5
L_106988:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_106992
L_106989:
L_106990:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl incLabel_0
.hidden incLabel_0
incLabel_0:
L_107024:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_107025
L_107041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_107042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107042
.p2align 0x4
.long 0x80A
L_107042:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_107025:
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_107026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp labelMeaning_1
.p2align 0x4
.long 0x490
L_107026:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movslq %r15d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_107028
L_107029:
	movl 0x0(%r11,%r13,4),%r15d
	movl %r15d,%r9d
	incl %r9d
	jo L_107030
L_107031:
	movl %r9d,0x0(%r11,%r13,4)
	testl %r15d,%r15d
	jnz L_418043
L_107034:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_107035
L_107036:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE0,%r15
	jne L_418041
L_107037:
	movq 0x10(%r14),%r15
	movslq 0x0(%r15),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jnb L_418040
L_107039:
	movl 0x0(%r10,%r13,4),%r15d
	incl %r15d
	jo L_418039
L_107040:
	movl %r15d,0x0(%r10,%r13,4)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418039:
L_107030:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418040:
L_107028:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418041:
L_107035:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418043:
L_107032:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl labelMeaning_1
.hidden labelMeaning_1
labelMeaning_1:
L_107043:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_107044
L_107500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_107501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107501
.p2align 0x4
.long 0x80A
L_107501:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_107044:
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_107045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x8EF
L_107045:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107046
L_107498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_107499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107499
.p2align 0x4
.long 0xE14
L_107499:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_107046:
	movslq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107049:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_418049
	cmpq $0x2,%r13
	je L_418047
L_107050:
	movq 0x10(%r13),%r15
	movq %r15,0x0(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418047:
L_107056:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq $0x1,0x0(%r15,%r14,8)
	movq 0x50(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_418048
L_107058:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x88(%rbp)
	movq $0x34D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_418048:
L_107048:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418049:
L_107051:
	movq 0x68(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107053:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107055:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq $0x2,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDED
L_107059:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107060
L_107496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107497
.p2align 0x4
.long 0xE13
L_107497:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107060:
	movq $0x3273,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xDED
L_107061:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107062
L_107494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107495
.p2align 0x4
.long 0xE13
L_107495:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107062:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_418061
L_107063:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_418060
	cmpq $0xEBF,%r14
	je L_418059
	cmpq $0xEC0,%r14
	je L_418058
	cmpq $0xEC1,%r14
	je L_418057
	cmpq $0xEC2,%r14
	je L_418056
	cmpq $0xEC3,%r14
	je L_418055
L_107064:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_107065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418055:
L_107454:
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_107455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418056:
L_107427:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_107428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418057:
L_107377:
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq %r14,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_107378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_418058:
L_107141:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_107142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418059:
L_107108:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418060:
L_107073:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x351D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_418061:
L_107457:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r13
	jne L_107076
L_107459:
	xorl %ebx,%ebx
	xchgq %r13,%r15
.p2align 0x4,,0x7
loop_1178:
	cmpl %ebx,%ecx
	je L_418066
L_107460:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107462:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xEB9,%r9
	jne L_418063
L_107467:
	incl %ebx
	jo L_418062
L_107468:
	jmp loop_1178
.p2align 0x4
L_418062:
L_107086:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418063:
L_107463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107464
L_107465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107466
.p2align 0x4
.long 0xDF0
L_107466:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107464:
	movq $0x2,%r15
L_107069:
	movq 0x70(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x60(%rbp),%ecx
	movq %r15,%r14
	movq %r11,%r15
L_107070:
	movq $0x27E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r15,0x0(%rbp)
	movl %ecx,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418066:
L_107469:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107470
L_107492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107493
.p2align 0x4
.long 0x1674
L_107493:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107470:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_107332
L_107471:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_107076
L_107473:
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_418074
L_107475:
	cmpl %ecx,%ebx
	jne L_107068
L_107477:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1179:
	cmpl %ecx,%ebx
	je L_418071
L_107478:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107480:
	movq 0x88(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%rbp),%r9
	movq 0x0(%r9,%r14,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r10)
	jne L_418068
L_107485:
	incl %ebx
	jo L_107086
L_107486:
	jmp loop_1179
.p2align 0x4
L_418068:
L_107481:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107068
L_107483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107484
.p2align 0x4
.long 0xDF0
L_107484:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107068:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418071:
L_107487:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107332
L_107489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107490
.p2align 0x4
.long 0xDF0
L_107490:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107332:
	movq $0x1,%r15
	jmp L_107069
.p2align 0x4
L_418074:
L_107076:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDEE
L_107065:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0x80,%rbp
	leaq (L_107066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
.long 0xE12
L_107455:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0x90,%rbp
	leaq (L_107456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
.long 0xDEE
L_107428:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107429
L_107452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_107453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107453
.p2align 0x4
.long 0xE11
L_107453:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_107429:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_107445
	cmpq $0x2,%r15
	je L_107445
L_107430:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	cmpq $0x1,%r14
	je L_107445
	cmpq $0x2,%r14
	je L_418080
L_107431:
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_418080:
L_107445:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_107068
	cmpq $0x2,%r14
	je L_107068
L_107446:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r15
L_107436:
	movq %r15,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0x88,%rbp
	leaq (L_107437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
.long 0xE07
L_107378:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107379
L_107425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_107426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107426
.p2align 0x4
.long 0xE0D
L_107426:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_107379:
	movq 0x78(%rbp),%r15
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_107086
L_107380:
	movl %r15d,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_418087
L_107424:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq $0x3675,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq %r15,0xB8(%rbp)
	movb $0xF,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_107382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_418087:
L_107381:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq $0x3619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq %r15,0xB8(%rbp)
	movb $0xB,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_107382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0xDF5
L_107142:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xA8,%rbp
	leaq (L_107143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp labelMeaning_1
.p2align 0x4
.long 0xDF1
L_107109:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_107076
L_107111:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1165:
	cmpl %ecx,0x48(%rbp)
	je L_418094
L_107112:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107114:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xEB9,%r9
	jne L_418091
L_107119:
	incl %ecx
	jo L_107086
L_107120:
	jmp loop_1165
.p2align 0x4
L_418091:
L_107115:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107116
L_107117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107118
.p2align 0x4
.long 0xDF0
L_107118:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107116:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418094:
L_107121:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107122
L_107139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107140
.p2align 0x4
.long 0xDF4
L_107140:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107122:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_107076
L_107124:
	testl %r13d,%r13d
	jz L_107130
L_107125:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_107076
L_107127:
	cmpl $0x0,%r13d
	jng L_107068
L_107130:
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_107131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_2
.p2align 0x4
.long 0xDF1
L_107074:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_107076
L_107077:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1163:
	cmpl %ecx,0x48(%rbp)
	je L_418105
L_107078:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107080:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xEB9,%r9
	jne L_418102
L_107085:
	incl %ecx
	jo L_107086
L_107087:
	jmp loop_1163
.p2align 0x4
L_418102:
L_107081:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107082
L_107083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107084
.p2align 0x4
.long 0xDF0
L_107084:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107082:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418105:
L_107088:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107089
L_107106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107107
.p2align 0x4
.long 0xDF4
L_107107:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107089:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_107076
L_107091:
	testl %r13d,%r13d
	jz L_107097
L_107092:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_107076
L_107094:
	cmpl $0x0,%r13d
	jng L_107068
L_107097:
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_107098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_2
.p2align 0x4
.long 0xDEF
L_107066:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107068
L_107071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107072
.p2align 0x4
.long 0xDF0
L_107072:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107068
.p2align 0x4
.long 0xDEE
L_107456:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0x80,%rbp
	leaq (L_107066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
.long 0xE0E
L_107432:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r14d
	movl %r14d,0x64(%rbp)
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107434:
	movl 0x0(%r14,%r15,4),%r13d
	incl %r13d
	jo L_107086
L_107435:
	movl %r13d,0x0(%r14,%r15,4)
	movq 0x88(%rbp),%r15
	jmp L_107436
.p2align 0x4
.long 0xE0F
L_107437:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107438
L_107442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_107443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107443
.p2align 0x4
.long 0xE10
L_107443:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_107438:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_107068
	cmpq $0x2,%r15
	je L_107068
L_107439:
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0x80,%rbp
	leaq (L_107066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
.long 0xE07
L_107382:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je length_61
L_107383:
	movq %r15,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xB0,%rbp
	leaq (length_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
length_61:
length_25:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_107076
L_107385:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1176:
	cmpl 0x18(%rbp),%ecx
	je L_418122
L_107386:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107388:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xEB9,%r9
	jne L_418119
L_107393:
	incl %ecx
	jo L_107086
L_107394:
	jmp loop_1176
.p2align 0x4
L_418119:
L_107389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107390
L_107391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107392
.p2align 0x4
.long 0xDF0
L_107392:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107390:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418122:
L_107395:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107396
L_107421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_107422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107422
.p2align 0x4
.long 0xE0C
L_107422:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_107396:
	movq 0x68(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107398:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_107068
L_107399:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_107076
L_107401:
	cmpl $0x1,%r15d
	jne L_107068
L_107403:
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_107404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
.long 0xDF6
L_107143:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107144
L_107375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_107376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107376
.p2align 0x4
.long 0xE06
L_107376:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_107144:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x34(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_107076
L_107146:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1167:
	cmpl %ecx,0x34(%rbp)
	je L_418140
L_107147:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107149:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xEB9,%r9
	jne L_418130
L_107166:
	incl %ecx
	jo L_107086
L_107167:
	jmp loop_1167
.p2align 0x4
L_418130:
L_107150:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107151
L_107164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107165
.p2align 0x4
.long 0xDF7
L_107165:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107151:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_107048
L_107153:
	movl 0x0(%r15,%r14,4),%r11d
	movl %r11d,%r10d
	incl %r10d
	jo L_107086
L_107154:
	movl %r10d,0x0(%r15,%r14,4)
	testl %r11d,%r11d
	jnz L_107068
L_107157:
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_107158
L_107159:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE0,%r15
	jne L_418133
L_107160:
	movq 0x10(%r14),%r11
	movslq 0x0(%r11),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_107048
L_107162:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_107086
L_107163:
	movl %r14d,0x0(%r13,%r15,4)
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418133:
L_107158:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418140:
L_107168:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107169
L_107373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_107374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107374
.p2align 0x4
.long 0xE05
L_107374:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_107169:
	movq 0x68(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_107048
L_107171:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_107150
L_107172:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_107174
L_107352:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_107076
L_107354:
	movq 0x98(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_107076
L_107356:
	cmpl %r11d,%r15d
	jne L_107174
L_107358:
	movl $0x0,0x4C(%rbp)
loop_1175:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	je L_418143
L_107359:
	movslq %r15d,%r14
	cmpq 0x20(%rbp),%r14
	jnb L_107048
L_107361:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x98(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r11)
	jne L_418141
L_107363:
	movq %r11,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_107364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
L_418141:
L_107174:
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_2
.p2align 0x4
L_418143:
L_107371:
	movq 0x28(%rbp),%r13
	movl 0x30(%rbp),%ecx
	movq 0x38(%rbp),%r14
	movq %r13,%r15
	jmp L_107070
.p2align 0x4
.long 0xDF2
L_107131:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x48(%rbp),%r15d
	decl %r15d
	jo L_107086
L_107132:
	movl %r15d,0x64(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
loop_1166:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418154
.p2align 0x4,,0x7
L_107133:
	movl 0x64(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_418153
L_107134:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x64(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	jmp loop_1166
.p2align 0x4
L_418153:
L_107135:
	movq $0x1DBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_107069
.p2align 0x4
L_418154:
L_107136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_107137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107137
.p2align 0x4
.long 0xDF3
L_107137:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_107133
.p2align 0x4
.long 0xDF2
L_107098:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x48(%rbp),%r15d
	decl %r15d
	jo L_107086
L_107099:
	movl %r15d,0x64(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
loop_1164:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418157
.p2align 0x4,,0x7
L_107100:
	movl 0x64(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_418156
L_107101:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x64(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	jmp loop_1164
.p2align 0x4
L_418156:
L_107102:
	movq $0x1DBD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_107069
.p2align 0x4
L_418157:
L_107103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_107104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107104
.p2align 0x4
.long 0xDF3
L_107104:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_107100
.p2align 0x4
.long 0xE08
length_24:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp length_25
.p2align 0x4
.long 0xE09
L_107404:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107405
L_107418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_107419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107419
.p2align 0x4
.long 0xE0B
L_107419:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_107405:
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpl $0x1,0x0(%r14)
	jne L_107068
L_107407:
	cmpq $0x0,0x20(%rbp)
	jna L_107048
L_107409:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x90(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_107068
L_107411:
	movl 0x18(%rbp),%r15d
	decl %r15d
	jo L_107086
L_107412:
	movl %r15d,0x64(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
loop_1177:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418160
.p2align 0x4,,0x7
L_107413:
	movl 0x64(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_418159
L_107414:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x64(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	jmp loop_1177
.p2align 0x4
L_418159:
L_107415:
	movq $0x1DC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_107069
.p2align 0x4
L_418160:
L_107416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_107417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107417
.p2align 0x4
.long 0xE0A
L_107417:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_107413
.p2align 0x4
.long 0xE03
L_107364:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107365
L_107369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_107370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107370
.p2align 0x4
.long 0xE04
L_107370:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_107365:
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpl $0x1,0x0(%r14)
	jne L_107174
L_107367:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	jo L_107086
L_107368:
	movl %r15d,0x4C(%rbp)
	jmp loop_1175
.p2align 0x4
.long 0xDF8
L_107175:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_107076
L_107177:
	cmpl $0x0,%r13d
	jl L_107347
L_107178:
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x48(%rbp)
loop_1168:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x48(%rbp)
	jl L_418239
L_107179:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_107076
L_107181:
	cmpl $0x0,%ecx
	jl L_418237
L_107182:
	movl $0x0,0x48(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1169:
	cmpl %ecx,%ebx
	jnl L_418171
L_107341:
	movslq %ebx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_418169
L_107342:
	movl 0x48(%rbp),%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x0)(%rip)
L_107343:
	movl %ecx,0x48(%rbp)
	incl %ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1169
.p2align 0x4
L_418169:
L_107344:
	movl 0x48(%rbp),%r15d
	incl %r15d
	jo L_107086
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_107343
.p2align 0x4
L_418171:
L_107183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107184
L_107339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107340
.p2align 0x4
.long 0xE01
L_107340:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_107184:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x2C(%rbp)
	je L_418179
L_107185:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_107048
L_107187:
	movl 0x0(%r15,%r14,4),%r11d
	movl %r11d,%r10d
	incl %r10d
	jo L_107086
L_107188:
	movl %r10d,0x0(%r15,%r14,4)
	testl %r11d,%r11d
	jnz L_107068
L_107191:
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_107192
L_107193:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE0,%r15
	jne L_418174
L_107194:
	movq 0x10(%r14),%r11
	movslq 0x0(%r11),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_107048
L_107196:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_107086
L_107197:
	movl %r14d,0x0(%r13,%r15,4)
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418174:
L_107192:
	movq $0x2,%r15
	jmp L_107069
.p2align 0x4
L_418179:
L_107198:
	movl 0x34(%rbp),%r15d
	decl %r15d
	jo L_107086
L_107199:
	movl %r15d,0x2C(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_1170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418234
.p2align 0x4,,0x7
L_107200:
	movl 0x2C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_418180
L_107201:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x2C(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq $0x937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x18(%rbp)
	jmp loop_1170
.p2align 0x4
L_418180:
L_107202:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_418224
	cmpq $0x2,%r14
	je L_418223
L_107203:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEDF,%r13
	je L_418209
	cmpq $0xEE0,%r13
	je L_418195
	cmpq $0xEE1,%r13
	je L_418194
L_107204:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r14
	movq %r13,0x30(%rbp)
	jne L_107076
L_107206:
	testq %rdx,%rdx
	jz L_418192
L_107207:
	cmpq $0x7FFFFFFF,%rdx
	ja L_418191
L_107208:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1539,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107209
.p2align 0x4
.long 0xDF9
L_107209:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_107210:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1171:
	cmpq 0x40(%rbp),%r15
	jnl L_418183
L_107232:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_418182
L_107235:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movslq %r13d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_107048
L_107237:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
L_107234:
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1171
.p2align 0x4
L_418182:
	movq %r11,%r14
	jmp L_107234
.p2align 0x4
L_418183:
L_107211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107212
L_107230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107231
.p2align 0x4
.long 0xDFC
L_107231:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107212:
	movq 0x38(%rbp),%r15
	movq $0x971,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x28(%rbp)
	je L_418189
L_107213:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_418188
L_107214:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_107215:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418187
.p2align 0x4,,0x7
L_107216:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_418184
L_107217:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_107215
.p2align 0x4
L_418184:
L_107218:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_107219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418186
.p2align 0x4,,0x7
L_107220:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_418185
L_107221:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_107219
.p2align 0x4
L_418185:
L_107223:
	movq $0x1DBD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_107069
.p2align 0x4
L_418186:
L_107224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107225
.p2align 0x4
.long 0xDFA
L_107225:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107220
.p2align 0x4
L_418187:
L_107226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107227
.p2align 0x4
.long 0xDFB
L_107227:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107216
.p2align 0x4
L_418188:
L_107228:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_107223
.p2align 0x4
L_418189:
L_107229:
	movq 0x18(%rbp),%r15
	jmp L_107223
.p2align 0x4
L_418191:
L_107239:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418192:
L_107240:
	movq (globalObjptr+0x1EF8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_107210
.p2align 0x4
L_418194:
L_107313:
	movq $0x1DC1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r13,%r15
	jmp L_107069
.p2align 0x4
L_418195:
L_107277:
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r13
	je L_107288
L_107278:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_418207
L_107279:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_107280:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418206
.p2align 0x4,,0x7
L_107281:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_418196
L_107282:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_107280
.p2align 0x4
L_418196:
L_107283:
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_107284:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418205
.p2align 0x4,,0x7
L_107285:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_418197
L_107286:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_107284
.p2align 0x4
L_418197:
L_107287:
	movq %r15,0x18(%rbp)
L_107288:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	jne L_107076
L_107290:
	testq %rdx,%rdx
	jz L_418203
L_107291:
	cmpq $0x7FFFFFFF,%rdx
	ja L_107239
L_107292:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1539,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107293
.p2align 0x4
.long 0xDFD
L_107293:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_107294:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1173:
	cmpq 0x30(%rbp),%r15
	jnl L_418200
L_107299:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_418199
L_107302:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movslq %r13d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_107048
L_107304:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
L_107301:
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1173
.p2align 0x4
L_418199:
	movq %r11,%r14
	jmp L_107301
.p2align 0x4
L_418200:
L_107295:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107296
L_107297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107298
.p2align 0x4
.long 0xDFC
L_107298:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107296:
	movq 0x38(%rbp),%r14
	movq $0x971,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1DC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_107069
.p2align 0x4
L_418203:
L_107306:
	movq (globalObjptr+0x1EF8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_107294
.p2align 0x4
L_418205:
L_107307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107308
.p2align 0x4
.long 0xDFE
L_107308:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107285
.p2align 0x4
L_418206:
L_107309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107310
.p2align 0x4
.long 0xDFF
L_107310:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107281
.p2align 0x4
L_418207:
L_107311:
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_107288
.p2align 0x4
L_418209:
L_107241:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r14
	movq %r13,0x30(%rbp)
	jne L_107076
L_107243:
	testq %rdx,%rdx
	jz L_418221
L_107244:
	cmpq $0x7FFFFFFF,%rdx
	ja L_107239
L_107245:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1539,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107246
.p2align 0x4
.long 0xDF9
L_107246:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_107247:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1172:
	cmpq 0x40(%rbp),%r15
	jnl L_418212
L_107269:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_418211
L_107272:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movslq %r13d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_107048
L_107274:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
L_107271:
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1172
.p2align 0x4
L_418211:
	movq %r11,%r14
	jmp L_107271
.p2align 0x4
L_418212:
L_107248:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107249
L_107267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107268
.p2align 0x4
.long 0xDFC
L_107268:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107249:
	movq 0x38(%rbp),%r15
	movq $0x971,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x28(%rbp)
	je L_418218
L_107250:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_418217
L_107251:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_107252:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418216
.p2align 0x4,,0x7
L_107253:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_418213
L_107254:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_107252
.p2align 0x4
L_418213:
L_107255:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_107256:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418215
.p2align 0x4,,0x7
L_107257:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_418214
L_107258:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_107256
.p2align 0x4
L_418214:
L_107260:
	movq $0x1DBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_107069
.p2align 0x4
L_418215:
L_107261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107262
.p2align 0x4
.long 0xDFA
L_107262:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107257
.p2align 0x4
L_418216:
L_107263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107264
.p2align 0x4
.long 0xDFB
L_107264:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107253
.p2align 0x4
L_418217:
L_107265:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_107260
.p2align 0x4
L_418218:
L_107266:
	movq 0x18(%rbp),%r15
	jmp L_107260
.p2align 0x4
L_418221:
L_107276:
	movq (globalObjptr+0x1EF8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_107247
.p2align 0x4
L_418223:
L_107336:
	movq $0x1DC1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r13,%r15
	jmp L_107069
.p2align 0x4
L_418224:
L_107314:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_107332
L_107315:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r13
	cmpq %r11,%r13
	jne L_107076
L_107317:
	cmpl 0x28(%rbp),%ecx
	jne L_107319
L_107320:
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_1174:
	cmpl %ebx,%ecx
	je L_418229
L_107321:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_107048
L_107323:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x88(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x0(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	jne L_418226
L_107328:
	incl %ebx
	jo L_107086
L_107329:
	jmp loop_1174
.p2align 0x4
L_418226:
L_107324:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107319
L_107326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107327
.p2align 0x4
.long 0xE00
L_107327:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_107319:
	movq $0x1DC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_107069
.p2align 0x4
L_418229:
L_107330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107332
L_107333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_107334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107334
.p2align 0x4
.long 0xDF0
L_107334:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_107332
.p2align 0x4
L_418234:
L_107337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_107338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107338
.p2align 0x4
.long 0xE01
L_107338:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_107200
.p2align 0x4
L_418237:
L_107347:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418239:
L_107348:
	movslq 0x48(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_107349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1363
.p2align 0x4
.long 0xE02
L_107349:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	addl 0x2C(%rbp),%r13d
	jo L_107086
L_107350:
	movl %r13d,0x2C(%rbp)
	incl 0x48(%rbp)
	jmp loop_1168
.text
.p2align 0x4
.globl extract_2
.hidden extract_2
extract_2:
L_107502:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_107557
L_107503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418243
L_107504:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x34C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_107505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_418243:
L_107557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_107558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107558
.p2align 0x4
.long 0x460
L_107558:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_107504
.p2align 0x4
.long 0x4DD
L_107505:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x8(%rbp)
	cmpq %r11,%r14
	je L_418245
L_107506:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418245:
L_107507:
	movq 0x8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_418262
L_107508:
	cmpq $0x7FFFFFFF,%rdx
	ja L_418261
L_107509:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1539,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_107510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107510
.p2align 0x4
.long 0x799
L_107510:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
L_107511:
	movq $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_1180:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418260
.p2align 0x4,,0x7
L_107512:
	movq 0x28(%rbp),%r13
	cmpq 0x8(%rbp),%r13
	jnl L_418258
L_107524:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_418257
L_107526:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_418256
L_107527:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_107529:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_107530
L_107545:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCF0,%r13
	jne L_107530
L_107546:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_418251
L_107530:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_418250
L_107532:
	cmpq $0x1,%r15
	je L_418246
L_107533:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_107529
.p2align 0x4
L_418246:
L_107534:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_418249
.p2align 0x4,,0x7
L_107535:
	movl 0x40(%rbp),%ecx
L_107536:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_418248
L_107538:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_107540
L_107542:
	movl %ecx,0x0(%r15)
L_107540:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x19E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r14,%r15
L_107541:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x28(%rbp)
	jmp loop_1180
.p2align 0x4
L_418248:
L_107537:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418249:
L_107543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_107544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107544
.p2align 0x4
.long 0xE49
L_107544:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_107535
.p2align 0x4
L_418250:
L_107531:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418251:
L_107548:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_107537
L_107549:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_418252
L_107551:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_107541
.p2align 0x4
L_418252:
L_107550:
	movq %r13,%r15
	jmp L_107541
.p2align 0x4
L_418256:
L_107552:
	xorl %ecx,%ecx
	jmp L_107536
.p2align 0x4
L_418257:
L_107525:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418258:
L_107513:
	movq 0x20(%rbp),%r15
	movq $0x971,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_418259
L_107514:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_107515:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_107516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_418259:
L_107520:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418260:
L_107553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_107554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107554
.p2align 0x4
.long 0x5DF
L_107554:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_107512
.p2align 0x4
L_418261:
L_107555:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418262:
L_107556:
	movq (globalObjptr+0x1EF0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_107511
.p2align 0x4
.long 0x4A8
L_107516:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_107517
L_107521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_107522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_107522
.p2align 0x4
.long 0x4B1
L_107522:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_107517:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_107520
L_107518:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_107515
