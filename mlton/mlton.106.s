/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:19:23 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl chooseRegister_0
.hidden chooseRegister_0
chooseRegister_0:
L_319076:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_319077
L_319776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_319777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319777
.p2align 0x4
.long 0x4E6A
L_319777:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_319077:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,0x30(%rbp)
	je L_509589
L_319078:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movb 0x8(%rbp),%r14b
	cmpb $0x2,%r14b
	je L_509587
	cmpb $0x3,%r14b
	je L_509585
	cmpb $0x4,%r14b
	je L_509583
	cmpb $0x5,%r14b
	je L_509434
L_319079:
	movq (globalObjptr+0x6A48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509434:
L_319760:
	cmpq $0x1,%r10
	je L_509582
L_319761:
	movq 0x8(%r10),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r10),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319083:
	movq 0x30(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_509581
L_319085:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319086:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_509579
L_319743:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509576
L_319744:
	cmpq $0x1,%r14
	je L_509435
L_319745:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319086
.p2align 0x4
L_509435:
L_319090:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509436
L_319091:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319083
.p2align 0x4
L_509436:
L_319092:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_319093:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509575
L_319094:
	movq %r15,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509574
.p2align 0x4,,0x7
L_319096:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x2,%r14
	je L_509573
L_319097:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_319098
L_319713:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509564
	cmpq $0x115F,%r14
	je L_509560
L_319098:
	movq $0x1,%r15
L_319099:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509437
L_319100:
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_319095
.p2align 0x4
L_509437:
L_319101:
	movq 0x88(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
L_319102:
	cmpq $0x1,%r15
	je L_509559
L_319103:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319104:
	cmpq $0x1,%r15
	je L_509558
L_319105:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
L_319106:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509557
.p2align 0x4,,0x7
L_319107:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509438
L_319108:
	movq %r15,0x98(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319106
.p2align 0x4
L_509438:
L_319109:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
L_319110:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509556
.p2align 0x4,,0x7
L_319111:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509439
L_319112:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319110
.p2align 0x4
L_509439:
L_319114:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509440
L_319115:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319104
.p2align 0x4
L_509440:
L_319116:
	movq %r15,0x38(%rbp)
L_319117:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509555
L_319118:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319119:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509554
.p2align 0x4,,0x7
L_319120:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_319127
L_319121:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319122:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_509550
L_319693:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509548
L_319694:
	cmpq $0x1,%r14
	je L_509441
L_319695:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319122
.p2align 0x4
L_509441:
L_319696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509547
.p2align 0x4,,0x7
L_319127:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509442
L_319128:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319119
.p2align 0x4
L_509442:
L_319130:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509546
L_319131:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movw %r15w,0xA(%rbp)
.p2align 0x4,,0x7
L_319132:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509545
.p2align 0x4,,0x7
L_319133:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_319140
L_319134:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319135:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_509541
L_319677:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509539
L_319678:
	cmpq $0x1,%r14
	je L_509443
L_319679:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319135
.p2align 0x4
L_509443:
L_319680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509538
.p2align 0x4,,0x7
L_319140:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509444
L_319141:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319132
.p2align 0x4
L_509444:
L_319142:
	movq %r15,0x38(%rbp)
L_319143:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509537
L_319144:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319145:
	cmpq $0x1,0x38(%rbp)
	jne L_509536
.p2align 0x4,,0x7
L_319152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509535
.p2align 0x4,,0x7
L_319153:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509445
L_319154:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319145
.p2align 0x4
L_509445:
L_319155:
	movq %r15,0x28(%rbp)
L_319156:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509534
L_319157:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319158:
L_319159:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_319160
L_319664:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509532
L_319160:
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319161:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509531
.p2align 0x4,,0x7
L_319162:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509446
L_319163:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319158
.p2align 0x4
L_509446:
L_319164:
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319165:
	cmpq $0x1,%r15
	je L_509530
L_319166:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
L_319167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509529
.p2align 0x4,,0x7
L_319168:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509447
L_319169:
	movq %r15,0x98(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319167
.p2align 0x4
L_509447:
L_319170:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
L_319171:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509528
.p2align 0x4,,0x7
L_319172:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509448
L_319173:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319171
.p2align 0x4
L_509448:
L_319175:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509449
L_319176:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319165
.p2align 0x4
L_509449:
L_319177:
	movq %r15,0x38(%rbp)
L_319178:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	cmpq $0x1,%r14
	je L_509527
L_319179:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_319180:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509526
.p2align 0x4,,0x7
L_319181:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509450
L_319182:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_319180
.p2align 0x4
L_509450:
L_319183:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_319184:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509525
.p2align 0x4,,0x7
L_319185:
	movq 0x98(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509451
L_319186:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_319184
.p2align 0x4
L_509451:
L_319187:
	movq %r15,0x90(%rbp)
L_319188:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_319272
L_319189:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_319190:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509523
L_319191:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0xC(%rbp)
.p2align 0x4,,0x7
L_319192:
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movw 0x0(%r15),%r10w
	movw 0xA(%rbp),%r9w
	movw %r9w,%r8w
	shrw $0x8,%r8w
	movb %r8b,%spl
	movw %r10w,%r8w
	shrw $0x8,%r8w
	movb %r8b,%sil
	cmpb %sil,%spl
	jne L_509522
L_319617:
	movb %r9b,%r8b
	movb %r10b,%r9b
	cmpb %r9b,%r8b
	jne L_509521
L_319619:
	cmpq $0x1,0x20(%rbp)
	je L_509519
L_319620:
	cmpq $0x1,%r11
	je L_319626
L_319621:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r11
	movq %r11,%r14
.p2align 0x4,,0x7
L_319622:
	movq 0x20(%rbp),%r11
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r11)
	je L_509516
L_319623:
	cmpq $0x1,%r15
	je L_509452
L_319624:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_319622
.p2align 0x4
L_509452:
L_319626:
	cmpq $0x1,%r13
	je L_319633
L_319627:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_319628:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_509512
L_319629:
	cmpq $0x1,%r15
	je L_509453
L_319630:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_319628
.p2align 0x4
L_509453:
L_319631:
	testl %ecx,%ecx
	jnz L_509510
L_319633:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_509509
.p2align 0x4,,0x7
L_319614:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509454
L_319615:
	movl %ecx,0xC(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319192
.p2align 0x4
L_509454:
L_319616:
	movl %ecx,0xC(%rbp)
.p2align 0x4,,0x7
L_319199:
	movw 0xA(%rbp),%r15w
	movb %r15b,0x9(%rbp)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509508
L_319200:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
L_319201:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509507
.p2align 0x4,,0x7
L_319202:
	movq 0xA8(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x9(%rbp)
	je L_509505
L_319203:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509455
L_319204:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	jmp L_319201
.p2align 0x4
L_509455:
L_319205:
	cmpq $0x1,0xB0(%rbp)
	jne L_509504
L_319605:
	movl $0x0,0xA0(%rbp)
	movl $0x1,0xA4(%rbp)
	movl $0x0,0xA8(%rbp)
	movq $0x0,0xB0(%rbp)
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xB8(%rbp)
.p2align 0x4,,0x7
L_319212:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509503
.p2align 0x4,,0x7
L_319213:
	movq $0x1177,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0xA4(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0xA8(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0xAC(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0xB8(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movq $0x11A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_509456
L_319214:
	movq %r15,0x98(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319190
.p2align 0x4
L_509456:
L_319215:
	movq %r14,0x28(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319216:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509502
.p2align 0x4,,0x7
L_319217:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509501
L_319218:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
L_319219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509500
.p2align 0x4,,0x7
L_319220:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%r10d
	movl 0xC(%r11),%r9d
	movl 0x10(%r11),%r8d
	movl 0x14(%r11),%esp
	movq 0x0(%r11),%r14
	movl 0x18(%r11),%esi
	movl 0x1C(%r11),%ebx
	movq 0x70(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%edi
	movl 0xC(%r11),%edx
	movl 0x10(%r11),%eax
	movl 0x14(%r11),%r15d
	movq 0x0(%r11),%rcx
	movq %r12,(gcState+0x0)(%rip)
	movl 0x18(%r11),%r12d
	movl %r10d,(localWord32+0x0)(%rip)
	movl 0x1C(%r11),%r10d
	testl %ebx,%ebx
	jnz L_509499
L_319505:
	cmpl $0x1,%r10d
	je L_509498
	movq (gcState+0x0)(%rip),%r13
	movl %r12d,(localWord32+0x28)(%rip)
	movq %r13,%r12
	movl %r15d,(localWord32+0x24)(%rip)
	movq %rcx,%r15
	movl %r10d,%ecx
	movl %eax,(localWord32+0x20)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
	movl %esi,(localWord32+0x10)(%rip)
L_319221:
	cmpl %ecx,%ebx
	jne L_319223
L_319467:
	movl (localWord32+0x10)(%rip),%ebx
	testl %ebx,%ebx
	jnz L_509496
L_319503:
	movl (localWord32+0x28)(%rip),%ecx
	cmpl $0x1,%ecx
	je L_319490
L_319468:
	cmpl %ecx,%ebx
	jne L_319223
L_319470:
	movq %r14,%r13
	andq $0x1,%r13
	jnz L_509491
L_319471:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_319490
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
L_319472:
	cmpq %r14,%r15
	je L_319478
L_319473:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_319223
L_319474:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_319223
L_319475:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r14d,%r13d
	jne L_319223
L_319478:
	movl (localWord32+0xC)(%rip),%r15d
	cmpl %r15d,%ecx
	jl L_319490
L_319479:
	cmpl %ecx,%r15d
	jne L_319223
L_319481:
	movl (localWord32+0x8)(%rip),%r15d
	cmpl %ebx,%r15d
	jl L_319490
L_319482:
	cmpl %ebx,%r15d
	jne L_319223
L_319484:
	movl (localWord32+0x4)(%rip),%ebx
	cmpl $0x1,%ebx
	jne L_509481
L_319493:
	movl (localWord32+0x1C)(%rip),%ecx
	testl %ecx,%ecx
	jz L_319490
L_319485:
	cmpl %ecx,%ebx
	jne L_319223
L_319487:
	movl (localWord32+0x18)(%rip),%r15d
	cmpl %r15d,(localWord32+0x0)(%rip)
	jl L_509477
L_319223:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509457
L_319224:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319219
.p2align 0x4
L_509457:
L_319226:
	movq $0x2563,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_509476
L_319227:
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
L_319228:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509475
.p2align 0x4,,0x7
L_319229:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509458
L_319230:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_319228
.p2align 0x4
L_509458:
L_319232:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509459
L_319233:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319216
.p2align 0x4
L_509459:
L_319234:
	cmpq $0x1,%r15
	je L_509469
L_319235:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319236:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509468
.p2align 0x4,,0x7
L_319237:
	movq 0x58(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_509460
L_319238:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319236
.p2align 0x4
L_509460:
L_319239:
	movw %r14w,0x50(%rbp)
	movq 0x60(%rbp),%r15
.p2align 0x4,,0x7
L_319240:
	cmpq $0x1,%r15
	je L_509461
L_319241:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movw %r14w,0x50(%rbp)
	jmp L_319240
.p2align 0x4
L_509461:
L_319242:
	movw 0x50(%rbp),%r15w
	movb %r15b,0x52(%rbp)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_319262
L_319243:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_319244:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509466
.p2align 0x4,,0x7
L_319245:
	movq 0x60(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb 0x52(%rbp),%r13b
	je L_509464
L_319246:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_509462
L_319247:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_319244
.p2align 0x4
L_509462:
L_319248:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509463
L_319249:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_319250:
	movq 0x60(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw %r14w,0x7A(%rbp)
	movw 0x50(%rbp),%r15w
	movw %r15w,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509463:
L_319262:
	movw 0x50(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509464:
L_319263:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509465
L_319264:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_319244
.p2align 0x4
L_509465:
L_319265:
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_319250
.p2align 0x4
L_509466:
L_319266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319267
.p2align 0x4
.long 0x4DB
L_319267:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319245
.p2align 0x4
L_509468:
L_319269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319270
.p2align 0x4
.long 0x4E45
L_319270:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319237
.p2align 0x4
L_509469:
L_319272:
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_509474
	cmpb $0x2,%r15b
	je L_509473
	cmpb $0x3,%r15b
	je L_509472
	cmpb $0x4,%r15b
	je L_509471
	cmpb $0x5,%r15b
	je L_509470
L_319273:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509470:
L_319463:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509471:
L_319462:
	movq (globalObjptr+0xE800)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509472:
L_319461:
	movq (globalObjptr+0xE7F8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509473:
L_319460:
	movq (globalObjptr+0xE7F0)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509474:
L_319459:
	movq (globalObjptr+0xE7E8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509475:
L_319464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319465
.p2align 0x4
.long 0x4E5F
L_319465:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319229
.p2align 0x4
L_509476:
L_319466:
	movq %r14,%r15
	jmp L_319232
.p2align 0x4
L_509477:
L_319490:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_319232
L_319491:
	movq %r15,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	jmp L_319228
.p2align 0x4
L_509481:
	movl (localWord32+0x1C)(%rip),%ecx
	jmp L_319485
.p2align 0x4
L_509491:
L_319499:
	movq %r14,%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_509493
L_319500:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r10d
	cmpl %r11d,%r10d
	jl L_319490
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
	jmp L_319472
.p2align 0x4
L_509493:
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
	jmp L_319472
.p2align 0x4
L_509496:
	movl (localWord32+0x28)(%rip),%ecx
	jmp L_319468
.p2align 0x4
L_509498:
	movq (gcState+0x0)(%rip),%r12
	jmp L_319490
.p2align 0x4
L_509499:
	movq (gcState+0x0)(%rip),%r13
	movl %r12d,(localWord32+0x28)(%rip)
	movq %r13,%r12
	movl %r15d,(localWord32+0x24)(%rip)
	movq %rcx,%r15
	movl %r10d,%ecx
	movl %esi,(localWord32+0x10)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %eax,(localWord32+0x20)(%rip)
	jmp L_319221
.p2align 0x4
L_509500:
L_319507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319508
.p2align 0x4
.long 0x4E60
L_319508:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319220
.p2align 0x4
L_509501:
L_319509:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319226
.p2align 0x4
L_509502:
L_319510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319511
.p2align 0x4
.long 0x4E61
L_319511:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319217
.p2align 0x4
L_509503:
L_319512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_319513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319513
.p2align 0x4
.long 0x4E62
L_319513:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_319213
.p2align 0x4
L_509504:
L_319206:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0xA8(%rbp)
	movl $0x1,0xAC(%rbp)
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xB8(%rbp)
	movl $0x0,0xB4(%rbp)
	movl $0x0,0xC0(%rbp)
L_319207:
	movl 0x8(%r15),%r14d
	movl %r14d,0xC4(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0xCC(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xE8(%rbp)
	movw %r14w,0xEA(%rbp)
	addq $0xE8,%rbp
	leaq (L_319208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509505:
L_319606:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509506
L_319607:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_319201
.p2align 0x4
L_509506:
L_319608:
	movq 0xB0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movl $0x0,0xA8(%rbp)
	movl $0x1,0xAC(%rbp)
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xB8(%rbp)
	movl $0x0,0xB4(%rbp)
	movl $0x0,0xC0(%rbp)
	jmp L_319207
.p2align 0x4
L_509507:
L_319609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_319610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319610
.p2align 0x4
.long 0x4E63
L_319610:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_319202
.p2align 0x4
L_509508:
L_319611:
	movl $0x0,0xA0(%rbp)
	movl $0x1,0xA4(%rbp)
	movl $0x0,0xA8(%rbp)
	movq $0x0,0xB0(%rbp)
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xB8(%rbp)
	jmp L_319212
.p2align 0x4
L_509509:
L_319526:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509510:
L_319636:
	movl 0xC(%rbp),%ecx
	addl $0x5,%ecx
	jo L_319526
	jmp L_319614
.p2align 0x4
L_509512:
L_319638:
	testl %ecx,%ecx
	jnz L_319636
L_319639:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_319199
L_319640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319192
.p2align 0x4
L_509516:
L_319644:
	cmpq $0x1,%r13
	je L_319636
L_319645:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movl $0x1,%ecx
	jmp L_319628
.p2align 0x4
L_509519:
L_319648:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_319526
	jmp L_319614
.p2align 0x4
L_509521:
	movw %r10w,%r15w
L_319194:
	movw %r15w,0xB0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xB2(%rbp)
	addq $0xB0,%rbp
	leaq (L_319195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509522:
	movw %r10w,%r15w
	jmp L_319194
.p2align 0x4
L_509523:
L_319650:
	movl $0x0,0xC(%rbp)
	jmp L_319199
.p2align 0x4
L_509525:
L_319652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_319653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319653
.p2align 0x4
.long 0x4E64
L_319653:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_319185
.p2align 0x4
L_509526:
L_319654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_319655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319655
.p2align 0x4
.long 0x4E64
L_319655:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_319181
.p2align 0x4
L_509527:
L_319656:
	movq $0x1,0x90(%rbp)
	jmp L_319188
.p2align 0x4
L_509528:
L_319657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319658
.p2align 0x4
.long 0x4E60
L_319658:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319172
.p2align 0x4
L_509529:
L_319659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_319660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319660
.p2align 0x4
.long 0x4E65
L_319660:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_319168
.p2align 0x4
L_509530:
L_319661:
	movq 0x88(%rbp),%r15
	jmp L_319175
.p2align 0x4
L_509531:
L_319662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319663
.p2align 0x4
.long 0x4E60
L_319663:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319162
.p2align 0x4
L_509532:
L_319665:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_319666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedRegistersP_0
.p2align 0x4
L_509534:
L_319667:
	movq $0x1,0x38(%rbp)
	jmp L_319178
.p2align 0x4
L_509535:
L_319668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319669
.p2align 0x4
.long 0x4E67
L_319669:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319153
.p2align 0x4
L_509536:
L_319146:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movw 0x0(%r14),%r15w
L_319147:
	movw %r15w,0xA0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_319148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509537:
L_319674:
	movq $0x1,0x28(%rbp)
	jmp L_319156
.p2align 0x4
L_509538:
L_319682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319683
.p2align 0x4
.long 0x4E67
L_319683:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319140
.p2align 0x4
L_509539:
L_319684:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509540
L_319685:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319132
.p2align 0x4
L_509540:
L_319686:
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_319143
.p2align 0x4
L_509541:
L_319136:
	cmpq $0x1,%r14
	je L_509542
L_319137:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319135
.p2align 0x4
L_509542:
L_319138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319140
L_319675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319676
.p2align 0x4
.long 0x4E67
L_319676:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319140
.p2align 0x4
L_509545:
L_319688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319689
.p2align 0x4
.long 0x4E67
L_319689:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319133
.p2align 0x4
L_509546:
L_319690:
	movq %r15,0x38(%rbp)
	jmp L_319143
.p2align 0x4
L_509547:
L_319698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319699
.p2align 0x4
.long 0x4E60
L_319699:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319127
.p2align 0x4
L_509548:
L_319700:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509549
L_319701:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319119
.p2align 0x4
L_509549:
L_319702:
	movq 0x90(%rbp),%r14
	xchgq %r14,%r15
	jmp L_319130
.p2align 0x4
L_509550:
L_319123:
	cmpq $0x1,%r14
	je L_509551
L_319124:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319122
.p2align 0x4
L_509551:
L_319125:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319127
L_319691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319692
.p2align 0x4
.long 0x4E60
L_319692:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319127
.p2align 0x4
L_509554:
L_319704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319705
.p2align 0x4
.long 0x4E60
L_319705:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319120
.p2align 0x4
L_509555:
L_319706:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319130
.p2align 0x4
L_509556:
L_319707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319708
.p2align 0x4
.long 0x4E60
L_319708:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319111
.p2align 0x4
L_509557:
L_319709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_319710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319710
.p2align 0x4
.long 0x4E65
L_319710:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_319107
.p2align 0x4
L_509558:
L_319711:
	movq 0x88(%rbp),%r15
	jmp L_319114
.p2align 0x4
L_509559:
L_319712:
	movq $0x1,0x38(%rbp)
	jmp L_319117
.p2align 0x4
L_509560:
L_319732:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	movl 0x4(%r13),%r10d
	movl %r10d,%r14d
	andl $0x1,%r14d
	jz L_509562
L_319736:
	shrl $0x1,%r10d
	movw %r10w,%r14w
	movl %r11d,%r13d
	andl $0x1,%r13d
	jz L_509561
L_319738:
	shrl $0x1,%r11d
	movw %r11w,%r13w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movzwl %r14w,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_319099
.p2align 0x4
L_509561:
L_319737:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_319099
.p2align 0x4
L_509562:
L_319733:
	movl %r11d,%r15d
	andl $0x1,%r15d
	jz L_319098
L_319735:
	shrl $0x1,%r11d
	movw %r11w,%r15w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_319099
.p2align 0x4
L_509564:
L_319714:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509571
L_319715:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
L_319716:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509570
.p2align 0x4,,0x7
L_319717:
	movq 0x98(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509568
L_319718:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509565
L_319719:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_319716
.p2align 0x4
L_509565:
L_319720:
	movq 0xA8(%rbp),%r13
	cmpq $0x1,%r13
	je L_319098
L_319721:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_319722:
	cmpq $0x1,%r15
	jne L_509566
L_319724:
	movw 0x10(%r14),%r15w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_319099
.p2align 0x4
L_509566:
L_319723:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509568:
L_319726:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509569
L_319727:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_319716
.p2align 0x4
L_509569:
L_319728:
	movq 0xA8(%rbp),%r15
	movq 0xA0(%rbp),%r13
	xchgq %r13,%r14
	jmp L_319722
.p2align 0x4
L_509570:
L_319729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_319730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319730
.p2align 0x4
.long 0x4E68
L_319730:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_319717
.p2align 0x4
L_509571:
L_319731:
	movq $0x1,%r15
	jmp L_319099
.p2align 0x4
L_509573:
L_319739:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_319099
.p2align 0x4
L_509574:
L_319740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319741
.p2align 0x4
.long 0x4E60
L_319741:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319096
.p2align 0x4
L_509575:
L_319742:
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_319102
.p2align 0x4
L_509576:
L_319747:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509578
.p2align 0x4,,0x7
L_319748:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_319093
L_319749:
	movq %r15,0x38(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319083
.p2align 0x4
L_509578:
L_319751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319752
.p2align 0x4
.long 0x4E69
L_319752:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319748
.p2align 0x4
L_509579:
L_319087:
	cmpq $0x1,%r14
	je L_319090
L_319088:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319086
.p2align 0x4
L_509581:
L_319084:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_509582:
L_319762:
	movq $0x1,%r15
	jmp L_319093
.p2align 0x4
L_509583:
L_319757:
	cmpq $0x1,%r15
	je L_509584
L_319758:
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319083
.p2align 0x4
L_509584:
L_319759:
	movq $0x1,%r15
	jmp L_319093
.p2align 0x4
L_509585:
L_319754:
	cmpq $0x1,%r11
	je L_509586
L_319755:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r11),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319083
.p2align 0x4
L_509586:
L_319756:
	movq $0x1,%r15
	jmp L_319093
.p2align 0x4
L_509587:
L_319080:
	cmpq $0x1,%r13
	je L_509588
L_319081:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319083
.p2align 0x4
L_509588:
L_319753:
	movq $0x1,%r15
	jmp L_319093
.p2align 0x4
L_509589:
L_319763:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movb 0x8(%rbp),%r14b
	cmpb $0x2,%r14b
	je L_509596
	cmpb $0x3,%r14b
	je L_509594
	cmpb $0x4,%r14b
	je L_509592
	cmpb $0x5,%r14b
	je L_509590
	jmp L_319079
.p2align 0x4
L_509590:
L_319773:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509591
L_319774:
	movq %r10,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319095
.p2align 0x4
L_509591:
L_319775:
	movq %r10,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319102
.p2align 0x4
L_509592:
L_319770:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_509593
L_319771:
	movq %r15,0x88(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319095
.p2align 0x4
L_509593:
L_319772:
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_319102
.p2align 0x4
L_509594:
L_319767:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509595
L_319768:
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319095
.p2align 0x4
L_509595:
L_319769:
	movq %r11,0x28(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_319102
.p2align 0x4
L_509596:
L_319764:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509597
L_319765:
	movq %r13,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319095
.p2align 0x4
L_509597:
L_319766:
	movq %r13,0x28(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_319102
.p2align 0x4
.long 0xDDF
L_319251:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319252
L_319259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319260
.p2align 0x4
.long 0x4DB
L_319260:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319252:
	movl 0x54(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_509600
L_319253:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_509599
L_319254:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_319250
.p2align 0x4
L_509599:
L_319255:
	movw 0x50(%rbp),%r14w
	movw %r14w,0x0(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509600:
L_319256:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509601
L_319257:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_319250
.p2align 0x4
L_509601:
L_319258:
	movq %r15,0x8(%rbp)
	movw 0x50(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E46
toString_409:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E44
L_319208:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
	testl %r14d,%r14d
	jnz L_509604
L_319209:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509603
L_319210:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319207
.p2align 0x4
L_509603:
L_319211:
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl 0xAC(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movl 0xB4(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	jmp L_319212
.p2align 0x4
L_509604:
L_319514:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_319520
L_319515:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319516:
	movw 0xCC(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_509642
L_319596:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509639
L_319597:
	cmpq $0x1,%r14
	je L_509605
L_319598:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319516
.p2align 0x4
L_509605:
L_319520:
	movq 0xD8(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509637
	cmpq $0x3,%r15
	je L_509635
L_319521:
	xorl %ecx,%ecx
L_319522:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509634
L_319523:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_319524:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x11AE,%r13
	jne L_319525
L_319578:
	movq 0xD0(%rbp),%r13
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movb 0x0(%r15),%r13b
	cmpb $0x1,%r13b
	je L_509632
	cmpb $0x2,%r13b
	je L_509631
	cmpb $0x6,%r13b
	je L_509628
L_319525:
	incl %ebx
	jo L_319526
L_319527:
	cmpq $0x1,%r14
	je L_509606
L_319528:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_319524
.p2align 0x4
L_509606:
	movl %ecx,%ebx
	movl (localWord32+0x0)(%rip),%ecx
L_319530:
	movq 0x90(%rbp),%r11
	cmpq $0x1,%r11
	je L_509626
L_319531:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	xorq %r13,%r13
	xorl %r11d,%r11d
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_319532:
	movq 0x8(%r15),%r10
	cmpq $0x1,%r10
	je L_509625
L_319533:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	xorl %r9d,%r9d
	movq %r10,%r15
	xchgl %r9d,%ebx
	movl %r9d,(localWord32+0x4)(%rip)
.p2align 0x4,,0x7
L_319534:
	movq 0xD0(%rbp),%r10
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r10)
	je L_509622
L_319535:
	cmpq $0x1,%r11
	je L_509607
L_319536:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_319534
.p2align 0x4
L_509607:
L_319538:
	addl %ebx,%ecx
	jo L_319526
L_319539:
	cmpq $0x1,%r14
	je L_509608
L_319540:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319532
.p2align 0x4
L_509608:
L_319541:
	movq %r13,%r15
	movl (localWord32+0x4)(%rip),%ebx
L_319542:
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509619
L_319543:
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509617
	movl (localWord32+0x0)(%rip),%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319545:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_509615
L_319558:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movl (localWord32+0x4)(%rip),%r14d
	movl %r13d,(localWord32+0x0)(%rip)
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x8)(%rip)
L_319559:
	movq %r15,%r14
	andq $0x1,%r14
	jz L_509614
L_319561:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl (localWord32+0x0)(%rip),%r15d
	cmpl %r14d,%r15d
	jl L_509613
L_319562:
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319563:
	movl %ebx,%r15d
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,(localWord32+0x0)(%rip)
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
L_319549:
	addl 0xB0(%rbp),%ecx
	jo L_319526
L_319550:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509611
L_319551:
	xorl %r14d,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319552:
	movl 0xA8(%rbp),%r14d
	addl 0xC4(%rbp),%r14d
	jo L_319526
L_319553:
	movq 0xA0(%rbp),%r13
	cmpq $0x1,%r13
	je L_509609
L_319554:
	movl %r14d,0xA8(%rbp)
	movl %ebx,0xAC(%rbp)
	movl %ecx,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,0xB4(%rbp)
	movl (localWord32+0x0)(%rip),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xA0(%rbp)
	jmp L_319207
.p2align 0x4
L_509609:
L_319555:
	movl %r14d,0xA0(%rbp)
	movl %ebx,0xA4(%rbp)
	movl %ecx,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movl (localWord32+0x4)(%rip),%r15d
	movl %r15d,0xAC(%rbp)
	movl (localWord32+0x0)(%rip),%r15d
	movl %r15d,0xB8(%rbp)
	jmp L_319212
.p2align 0x4
L_509611:
L_319556:
	movl 0xC8(%rbp),%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
	jmp L_319552
.p2align 0x4
L_509613:
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x4)(%rip)
	jmp L_319563
.p2align 0x4
L_509614:
L_319560:
	movl %ebx,(localWord32+0x0)(%rip)
	movq 0xB8(%rbp),%r15
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
	jmp L_319549
.p2align 0x4
L_509615:
	movl (localWord32+0x4)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x0)(%rip)
L_319547:
	movq %r15,%r14
	andq $0x1,%r14
	jnz L_319549
L_319557:
	movq 0xB8(%rbp),%r15
	jmp L_319549
.p2align 0x4
L_509617:
	movl (localWord32+0x0)(%rip),%ebx
L_319566:
	movq 0xB8(%rbp),%r14
	andq $0x1,%r14
	jnz L_509618
L_319567:
	movl $0x1,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_319547
.p2align 0x4
L_509618:
L_319568:
	movq 0xB8(%rbp),%r14
	shrq $0x1,%r14
	movl %r14d,%r13d
	movl %r13d,(localWord32+0x0)(%rip)
	movl $0x1,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x8)(%rip)
	jmp L_319559
.p2align 0x4
L_509619:
L_319569:
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509620
L_319570:
	movl $0x1,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
	jmp L_319545
.p2align 0x4
L_509620:
L_319571:
	movl $0x1,%ebx
	jmp L_319566
.p2align 0x4
L_509622:
L_319572:
	incl %ebx
	jo L_319526
L_319573:
	cmpq $0x1,%r11
	je L_319538
L_319574:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_319534
.p2align 0x4
L_509625:
L_319576:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x4)(%rip)
	jmp L_319538
.p2align 0x4
L_509626:
L_319577:
	xorq %r15,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_319542
.p2align 0x4
L_509628:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
L_319580:
	testl %ecx,%ecx
	jz L_509630
L_319582:
	movl %ebx,%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq 0x90(%rbp),%r11
	cmpq $0x1,%r11
	je L_509629
L_319583:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	xorl %ecx,%ecx
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319532
.p2align 0x4
L_509629:
L_319584:
	xorl %ecx,%ecx
	movq %r13,%r15
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319542
.p2align 0x4
L_509630:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_319525
.p2align 0x4
L_509631:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_319580
.p2align 0x4
L_509632:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_319580
.p2align 0x4
L_509634:
L_319587:
	movl $0x1,%ebx
	jmp L_319530
.p2align 0x4
L_509635:
L_319592:
	xorl %ecx,%ecx
L_319593:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509636
L_319594:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %r13d,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_319524
.p2align 0x4
L_509636:
L_319595:
	xorl %ebx,%ebx
	jmp L_319530
.p2align 0x4
L_509637:
L_319588:
	xorl %ecx,%ecx
L_319589:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509638
L_319590:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %r13d,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_319524
.p2align 0x4
L_509638:
L_319591:
	xorl %ebx,%ebx
	jmp L_319530
.p2align 0x4
L_509639:
L_319600:
	movq 0xD8(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509641
	cmpq $0x3,%r15
	je L_509640
L_319601:
	movl $0x1,%ecx
	jmp L_319522
.p2align 0x4
L_509640:
L_319603:
	movl $0x1,%ecx
	jmp L_319593
.p2align 0x4
L_509641:
L_319602:
	movl $0x1,%ecx
	jmp L_319589
.p2align 0x4
L_509642:
L_319517:
	cmpq $0x1,%r14
	je L_319520
L_319518:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319516
.p2align 0x4
.long 0x4E43
L_319195:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r14d
	movl %r14d,0xA8(%rbp)
	testl %r14d,%r14d
	jnz L_509646
L_319196:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_319199
L_319197:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319192
.p2align 0x4
L_509646:
L_319612:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_319526
	jmp L_319614
.p2align 0x4
.long 0x4E66
L_319666:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	jmp L_319161
.p2align 0x4
.long 0x4E42
L_319148:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r14d
	movl %r14d,0xC(%rbp)
	testl %r14d,%r14d
	jnz L_509649
L_319149:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_319152
L_319150:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_319147
.p2align 0x4
L_509649:
L_319670:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509650
L_319671:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319145
.p2align 0x4
L_509650:
L_319672:
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_319156
.p2align 0x4
.long 0x4E46
rev_411:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_509653
L_319274:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_319275:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509652
.p2align 0x4,,0x7
L_319276:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509651
L_319277:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_319275
.p2align 0x4
L_509651:
L_319279:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509652:
L_319456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319457
.p2align 0x4
.long 0x4E5E
L_319457:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319276
.p2align 0x4
L_509653:
L_319458:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319279
.p2align 0x4
.long 0x4E46
L_319280:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509654
L_319281:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_319282:
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (toString_410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_509654:
L_319455:
	movq $0x1,%r15
L_319299:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E47
toString_410:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E49
L_319300:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E47
rev_412:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509657
L_319283:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319284:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509656
.p2align 0x4,,0x7
L_319285:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509655
L_319286:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319284
.p2align 0x4
L_509655:
L_319288:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509656:
L_319452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319453
.p2align 0x4
.long 0x4E5C
L_319453:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319285
.p2align 0x4
L_509657:
L_319454:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319288
.p2align 0x4
.long 0x4E49
L_319301:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E47
L_319289:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319290
L_319450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319451
.p2align 0x4
.long 0x4E5B
L_319451:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319290:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509658
L_319291:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319282
.p2align 0x4
L_509658:
L_319292:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319293:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509660
.p2align 0x4,,0x7
L_319294:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509659
L_319295:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319293
.p2align 0x4
L_509659:
L_319296:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509660:
L_319448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319449
.p2align 0x4
.long 0x4E5B
L_319449:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319294
.p2align 0x4
.long 0x4E49
L_319302:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509662
L_319303:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
L_319304:
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (toString_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_509662:
L_319445:
	movq $0x1,%r15
L_319321:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E48
L_319297:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319298
L_319446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319447
.p2align 0x4
.long 0x4E5D
L_319447:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319298:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319299
.p2align 0x4
.long 0x4E47
toString_411:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E4B
L_319322:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E47
rev_413:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509666
L_319305:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319306:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509665
.p2align 0x4,,0x7
L_319307:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509664
L_319308:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319306
.p2align 0x4
L_509664:
L_319310:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509665:
L_319442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319443
.p2align 0x4
.long 0x4E5C
L_319443:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319307
.p2align 0x4
L_509666:
L_319444:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319310
.p2align 0x4
.long 0x4E4B
L_319323:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E47
L_319311:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319312
L_319440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319441
.p2align 0x4
.long 0x4E5B
L_319441:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319312:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509667
L_319313:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_319304
.p2align 0x4
L_509667:
L_319314:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319315:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509669
.p2align 0x4,,0x7
L_319316:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509668
L_319317:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319315
.p2align 0x4
L_509668:
L_319318:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509669:
L_319438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319439
.p2align 0x4
.long 0x4E59
L_319439:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319316
.p2align 0x4
.long 0x4E4B
L_319324:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509671
L_319325:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x30(%rbp)
L_319326:
	movw %r15w,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509671:
L_319435:
	movq $0x1,%r15
L_319343:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E4A
L_319319:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319320
L_319436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319437
.p2align 0x4
.long 0x4E58
L_319437:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319320:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319321
.p2align 0x4
.long 0x4E4C
toString_412:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E4E
L_319344:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4C
rev_414:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509675
L_319327:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_319328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509674
.p2align 0x4,,0x7
L_319329:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509673
L_319330:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_319328
.p2align 0x4
L_509673:
L_319332:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509674:
L_319432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319433
.p2align 0x4
.long 0x4E5A
L_319433:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319329
.p2align 0x4
L_509675:
L_319434:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319332
.p2align 0x4
.long 0x4E4E
L_319345:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4C
L_319333:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319334
L_319430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319431
.p2align 0x4
.long 0x4E59
L_319431:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319334:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_509676
L_319335:
	movq %r14,0x30(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_319326
.p2align 0x4
L_509676:
L_319336:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319337:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509678
.p2align 0x4,,0x7
L_319338:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509677
L_319339:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_319337
.p2align 0x4
L_509677:
L_319340:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509678:
L_319428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319429
.p2align 0x4
.long 0x4E59
L_319429:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319338
.p2align 0x4
.long 0x4E4E
L_319346:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_509680
L_319347:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x38(%rbp)
L_319348:
	movw %r15w,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509680:
L_319425:
	movq $0x1,%r15
L_319365:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E4D
L_319341:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319342
L_319426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319427
.p2align 0x4
.long 0x4E58
L_319427:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319342:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319343
.p2align 0x4
.long 0x4E4F
toString_413:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E51
L_319366:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4F
rev_415:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_509684
L_319349:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509683
.p2align 0x4,,0x7
L_319351:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509682
L_319352:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319350
.p2align 0x4
L_509682:
L_319354:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509683:
L_319422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319423
.p2align 0x4
.long 0xC16
L_319423:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_319351
.p2align 0x4
L_509684:
L_319424:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319354
.p2align 0x4
.long 0x4E51
L_319367:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4F
L_319355:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319356
L_319420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319421
.p2align 0x4
.long 0x4E57
L_319421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319356:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_509685
L_319357:
	movq %r14,0x38(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_319348
.p2align 0x4
L_509685:
L_319358:
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_319359:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509687
.p2align 0x4,,0x7
L_319360:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509686
L_319361:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_319359
.p2align 0x4
L_509686:
L_319362:
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509687:
L_319418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319419
.p2align 0x4
.long 0x4E57
L_319419:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319360
.p2align 0x4
.long 0x4E51
L_319368:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_548
.p2align 0x4
.long 0x4E50
L_319363:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319364
L_319416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319417
.p2align 0x4
.long 0x4E56
L_319417:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319364:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319365
.p2align 0x4
.long 0x4E52
L_319369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319370
L_319414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319415
.p2align 0x4
.long 0x4E55
L_319415:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319370:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5D18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112E8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x112F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112F8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11300)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E53
L_319371:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319372
L_319412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319413
.p2align 0x4
.long 0x4E54
L_319413:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319372:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319373:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509692
.p2align 0x4,,0x7
L_319374:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509691
L_319375:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319373
.p2align 0x4
L_509691:
L_319376:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509692:
L_319410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319411
.p2align 0x4
.long 0xCBF
L_319411:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319374
.p2align 0x4
.long 0xCAA
L_319377:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCAA
L_319378:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319379
L_319408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319409
.p2align 0x4
.long 0x28DD
L_319409:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319379:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_319380
L_319397:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_509695
L_319398:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_509694
L_319405:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_319406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509694:
L_319399:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	leaq L_319401(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (L_319400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509695:
L_319380:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11310)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCAA
L_319406:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319380
.p2align 0x4
.long 0x16CA
L_319400:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319380
.p2align 0x4
.long 0x905
L_319401:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319402
L_319403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_319404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319404
.p2align 0x4
.long 0x61D
L_319404:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_319402:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCAA
L_319381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319382
L_319395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319396
.p2align 0x4
.long 0x28DD
L_319396:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319382:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_319383
L_319384:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_509700
L_319385:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_509699
L_319392:
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_319393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509699:
L_319386:
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	leaq L_319388(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_319387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509700:
L_319383:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x27A2
L_319393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_319383
.p2align 0x4
.long 0x61C
L_319387:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_319383
.p2align 0x4
.long 0x905
L_319388:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319389
L_319390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_319391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319391
.p2align 0x4
.long 0x61D
L_319391:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_319389:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toString_548
.hidden toString_548
toString_548:
L_319778:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_319779
L_319995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_319996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319996
.p2align 0x4
.long 0x460
L_319996:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_319779:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB6D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4A9
L_319780:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509721
L_319781:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x48(%rbp)
L_319782:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_509705
	jmp *jumpTable_822(,%rax,8)
.data
.p2align 0x4
jumpTable_822:
.quad L_509720,L_509719,L_509718,L_509717,L_509716,L_509715,L_509714,L_509713,L_509712,L_509711,L_509710,L_509709,L_509708,L_509707,L_509706
.text
.p2align 0x4
L_509705:
L_319783:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509706:
L_319993:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509707:
L_319992:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509708:
L_319991:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509709:
L_319990:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509710:
L_319989:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509711:
L_319988:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509712:
L_319987:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509713:
L_319986:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509714:
L_319985:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509715:
L_319984:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509716:
L_319983:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509717:
L_319982:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509718:
L_319981:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509719:
L_319980:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509720:
L_319979:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509721:
L_319994:
	movq (globalObjptr+0xA058)(%rip),%r15
L_319795:
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98E
toString_414:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (rev_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xAA4
L_319796:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB6E0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98E
rev_416:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_509724
L_319784:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509723
.p2align 0x4,,0x7
L_319786:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509722
L_319787:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319785
.p2align 0x4
L_509722:
L_319789:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_319790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509723:
L_319976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_319977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319977
.p2align 0x4
.long 0xBAE
L_319977:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_319786
.p2align 0x4
L_509724:
L_319978:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319789
.p2align 0x4
.long 0x4A9
L_319797:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509741
L_319798:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	movq %r13,%r15
L_319799:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x64(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_509725
	jmp *jumpTable_823(,%rax,8)
.data
.p2align 0x4
jumpTable_823:
.quad L_509740,L_509739,L_509738,L_509737,L_509736,L_509735,L_509734,L_509733,L_509732,L_509731,L_509730,L_509729,L_509728,L_509727,L_509726
.text
.p2align 0x4
L_509725:
L_319800:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509726:
L_319974:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509727:
L_319973:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509728:
L_319972:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509729:
L_319971:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509730:
L_319970:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509731:
L_319969:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509732:
L_319968:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509733:
L_319967:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509734:
L_319966:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509735:
L_319965:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509736:
L_319964:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509737:
L_319963:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509738:
L_319962:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509739:
L_319961:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509740:
L_319960:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509741:
L_319975:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
L_319825:
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98E
L_319790:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_319791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6B
toString_415:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x605
L_319826:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB260)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98E
L_319791:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_319792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6B
rev_417:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq $0x1,%r15
	je L_509744
L_319801:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509743
.p2align 0x4,,0x7
L_319803:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_509742
L_319804:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_319802
.p2align 0x4
L_509742:
L_319806:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_319807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509743:
L_319957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319958
.p2align 0x4
.long 0x4E79
L_319958:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319803
.p2align 0x4
L_509744:
L_319959:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319806
.p2align 0x4
.long 0xB24
L_319827:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509745
L_319828:
	movq 0x8(%r14),%r13
	movw 0x0(%r14),%r15w
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x20(%rbp)
L_319829:
	movw %r15w,0x48(%rbp)
	addq $0x48,%rbp
	leaq (toString_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509745:
L_319917:
	movq 0x20(%rbp),%r15
L_319841:
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x8BB
L_319792:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509746
L_319793:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319782
.p2align 0x4
L_509746:
L_319794:
	movq 0x48(%rbp),%r15
	jmp L_319795
.p2align 0x4
.long 0x4E6B
L_319807:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (toString_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x5F1
toString_417:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (rev_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x604
L_319842:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB268)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6C
toString_416:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (rev_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5F1
rev_419:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_509749
L_319830:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_319831:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509748
.p2align 0x4,,0x7
L_319832:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_509747
L_319833:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_319831
.p2align 0x4
L_509747:
L_319835:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_319836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509748:
L_319914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_319915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319915
.p2align 0x4
.long 0x9AA
L_319915:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_319832
.p2align 0x4
L_509749:
L_319916:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319835
.p2align 0x4
.long 0x5E4
L_319843:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509750
L_319844:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_319845:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x54(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x70,%rbp
	leaq (toString_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509750:
L_319913:
	movq 0x20(%rbp),%r15
L_319870:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6C
rev_418:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_509753
L_319808:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_319809:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509752
.p2align 0x4,,0x7
L_319810:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_509751
L_319811:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_319809
.p2align 0x4
L_509751:
L_319813:
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_319814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509752:
L_319954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319955
.p2align 0x4
.long 0x4E78
L_319955:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319810
.p2align 0x4
L_509753:
L_319956:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319813
.p2align 0x4
.long 0x5F1
L_319836:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
toString_418:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E6C
L_319814:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5F1
L_319837:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
rev_420:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_509756
L_319846:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319847:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509755
.p2align 0x4,,0x7
L_319848:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509754
L_319849:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319847
.p2align 0x4
L_509754:
L_319851:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_319852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509755:
L_319910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319911
.p2align 0x4
.long 0x4E74
L_319911:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_319848
.p2align 0x4
L_509756:
L_319912:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319851
.p2align 0x4
.long 0x4E6D
L_319815:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319816
L_319952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319953
.p2align 0x4
.long 0x4E77
L_319953:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319816:
	movl 0x64(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_509761
L_319817:
	movq 0x70(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509760
	cmpq $0x2,%r15
	je L_509759
	cmpq $0x3,%r15
	je L_509758
	cmpq $0x4,%r15
	je L_509757
L_319818:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_319819:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_319820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509757:
L_319939:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319940:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509758:
L_319932:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319933:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509759:
L_319925:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319926:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509760:
L_319918:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319919:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509761:
L_319946:
	movq 0x70(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509765
	cmpq $0x2,%r15
	je L_509764
	cmpq $0x3,%r15
	je L_509763
	cmpq $0x4,%r15
	je L_509762
L_319947:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_319819
.p2align 0x4
L_509762:
L_319951:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319940
.p2align 0x4
L_509763:
L_319950:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319933
.p2align 0x4
L_509764:
L_319949:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319926
.p2align 0x4
L_509765:
L_319948:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319919
.p2align 0x4
.long 0x8E9
L_319838:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509767
L_319839:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319829
.p2align 0x4
L_509767:
L_319840:
	movq 0x30(%rbp),%r15
	jmp L_319841
.p2align 0x4
.long 0x4E6E
L_319852:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (toString_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x8BB
L_319820:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_319821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E75
L_319941:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E75
L_319934:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E75
L_319927:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E75
L_319920:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6F
toString_419:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x8BB
L_319821:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_319822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E75
L_319942:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319943
L_319944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319945
.p2align 0x4
.long 0x4E76
L_319945:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319943:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319819
.p2align 0x4
.long 0x4E75
L_319935:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319936
L_319937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319938
.p2align 0x4
.long 0x4E76
L_319938:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319936:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319819
.p2align 0x4
.long 0x4E75
L_319928:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319929
L_319930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319931
.p2align 0x4
.long 0x4E76
L_319931:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319929:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319819
.p2align 0x4
.long 0x4E75
L_319921:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319922
L_319923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319924
.p2align 0x4
.long 0x4E76
L_319924:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319922:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319819
.p2align 0x4
.long 0x4E6F
rev_421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509774
L_319853:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_319854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509773
.p2align 0x4,,0x7
L_319855:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509772
L_319856:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319854
.p2align 0x4
L_509772:
L_319858:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509773:
L_319907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_319908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319908
.p2align 0x4
.long 0x4E73
L_319908:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_319855
.p2align 0x4
L_509774:
L_319909:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319858
.p2align 0x4
.long 0x70C
L_319822:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509775
L_319823:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319799
.p2align 0x4
L_509775:
L_319824:
	movq 0x28(%rbp),%r15
	jmp L_319825
.p2align 0x4
.long 0x4E6F
L_319859:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E70
L_319860:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319861
L_319905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319906
.p2align 0x4
.long 0x4E72
L_319906:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319861:
	movl 0x54(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_509780
L_319862:
	movq 0x60(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509779
	cmpq $0x2,%r15
	je L_509778
	cmpq $0x3,%r15
	je L_509777
	cmpq $0x4,%r15
	je L_509776
L_319863:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_319864:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_319865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509776:
L_319892:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319893:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509777:
L_319885:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319886:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509778:
L_319878:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319879:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509779:
L_319871:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319872:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509780:
L_319899:
	movq 0x60(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509784
	cmpq $0x2,%r15
	je L_509783
	cmpq $0x3,%r15
	je L_509782
	cmpq $0x4,%r15
	je L_509781
L_319900:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_319864
.p2align 0x4
L_509781:
L_319904:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319893
.p2align 0x4
L_509782:
L_319903:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319886
.p2align 0x4
L_509783:
L_319902:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319879
.p2align 0x4
L_509784:
L_319901:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319872
.p2align 0x4
.long 0x511
L_319865:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_319866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E71
L_319894:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E71
L_319887:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E71
L_319880:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E71
L_319873:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x511
L_319866:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_319867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E71
L_319895:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319896
L_319897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319898
.p2align 0x4
.long 0x293F
L_319898:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319896:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319864
.p2align 0x4
.long 0x4E71
L_319888:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319889
L_319890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319891
.p2align 0x4
.long 0x293F
L_319891:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319889:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319864
.p2align 0x4
.long 0x4E71
L_319881:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319882
L_319883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319884
.p2align 0x4
.long 0x293F
L_319884:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319882:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319864
.p2align 0x4
.long 0x4E71
L_319874:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319875
L_319876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319877
.p2align 0x4
.long 0x293F
L_319877:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319875:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319864
.p2align 0x4
.long 0x71E
L_319867:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509790
L_319868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319845
.p2align 0x4
L_509790:
L_319869:
	movq 0x30(%rbp),%r15
	jmp L_319870
.text
.p2align 0x4
.globl supportedRegistersP_0
.hidden supportedRegistersP_0
supportedRegistersP_0:
L_319997:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320068
L_319998:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509808
L_319999:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509807
L_320000:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320001:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509806
.p2align 0x4,,0x7
L_320002:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_509804
L_320003:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509791
L_320004:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_320001
.p2align 0x4
L_509791:
L_320005:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_509803
L_320006:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320007:
	cmpq $0x1,%r15
	jne L_509802
L_320009:
	movq %r14,0x10(%rbp)
L_320010:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320025
L_320011:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509800
.p2align 0x4,,0x7
L_320013:
	movq 0x0(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509798
L_320014:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509792
L_320015:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320012
.p2align 0x4
L_509792:
L_320016:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509795
L_320017:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320018:
	cmpq $0x1,%r15
	je L_509793
L_320019:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509793:
L_320020:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509794
L_320021:
L_320022:
	movw 0x10(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509794:
L_320023:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509795:
L_320025:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509796
L_320026:
	jmp L_320022
.p2align 0x4
L_509796:
L_320027:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_509797
L_320028:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_320029:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedRegistersP_0
.p2align 0x4
L_509797:
L_320054:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509798:
L_320055:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_509799
L_320056:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320012
.p2align 0x4
L_509799:
L_320057:
	movq 0x28(%rbp),%r15
	jmp L_320018
.p2align 0x4
L_509800:
L_320058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320059
.p2align 0x4
.long 0x4DF
L_320059:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320013
.p2align 0x4
L_509802:
L_320008:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509803:
L_320061:
	movq $0x1,0x10(%rbp)
	jmp L_320010
.p2align 0x4
L_509804:
L_320062:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509805
L_320063:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320001
.p2align 0x4
L_509805:
L_320064:
	movq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320007
.p2align 0x4
L_509806:
L_320065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320066
.p2align 0x4
.long 0x63D
L_320066:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320002
.p2align 0x4
L_509807:
L_320067:
	movq $0x1,0x10(%rbp)
	jmp L_320010
.p2align 0x4
L_509808:
L_320068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320069
.p2align 0x4
.long 0x460
L_320069:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_319999
.p2align 0x4
.long 0x5F0
L_320030:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320031
L_320052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320053
.p2align 0x4
.long 0x4EA
L_320053:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_320031:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509810
L_320032:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320029
.p2align 0x4
L_509810:
L_320033:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320034:
	cmpq $0x1,%r15
	je L_509816
L_320035:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320036:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509815
.p2align 0x4,,0x7
L_320037:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509811
L_320038:
	movq %r15,0x20(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movw %r15w,0x18(%rbp)
	jmp L_320036
.p2align 0x4
L_509811:
L_320039:
	movw 0x18(%rbp),%r15w
	movw %r15w,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320040:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509814
.p2align 0x4,,0x7
L_320041:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509812
L_320042:
	movq %r15,0x18(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movw %r15w,0x10(%rbp)
	jmp L_320040
.p2align 0x4
L_509812:
L_320044:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509813
L_320045:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320034
.p2align 0x4
L_509813:
L_320046:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509814:
L_320047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320048
.p2align 0x4
.long 0x525
L_320048:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320041
.p2align 0x4
L_509815:
L_320049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320050
.p2align 0x4
.long 0xFFC
L_320050:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320037
.p2align 0x4
L_509816:
L_320051:
	movq 0x8(%rbp),%r15
	jmp L_320044
.text
.p2align 0x4
.globl freeRegister_0
.hidden freeRegister_0
freeRegister_0:
L_320070:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320071
L_320301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320302
.p2align 0x4
.long 0x4E6A
L_320302:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320071:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_509818
L_320073:
	movl %r13d,0x0(%r15)
	movq %r14,0x98(%rbp)
	leaq L_320155(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_320074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp chooseRegister_0
.p2align 0x4
L_509818:
L_320072:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4586
L_320074:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movw 0x60(%rbp),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320075
L_320299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320300
.p2align 0x4
.long 0x4E87
L_320300:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_320075:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509853
L_320076:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320077:
L_320078:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320079
L_320295:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509851
L_320079:
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320080:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509850
.p2align 0x4,,0x7
L_320081:
	movq $0x22BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_509820
L_320082:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_320077
.p2align 0x4
L_509820:
L_320083:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320084:
	cmpq $0x1,%r15
	je L_320094
L_320085:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_320086:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509848
.p2align 0x4,,0x7
L_320087:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509821
L_320088:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_320086
.p2align 0x4
L_509821:
L_320089:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
L_320090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509847
.p2align 0x4,,0x7
L_320091:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509822
L_320092:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_320090
.p2align 0x4
L_509822:
L_320093:
	movq %r15,0x68(%rbp)
L_320094:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_509823
L_320095:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_320084
.p2align 0x4
L_509823:
L_320096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320097
L_320286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320287
.p2align 0x4
.long 0x4E84
L_320287:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320097:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
L_320098:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509845
L_320099:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320100:
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_320106
L_320101:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320102:
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509828
L_320103:
	cmpq $0x1,%r14
	je L_509824
L_320104:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320102
.p2align 0x4
L_509824:
L_320106:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509825
L_320107:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_320100
.p2align 0x4
L_509825:
L_320108:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320109
L_320191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320192
.p2align 0x4
.long 0x4E7D
L_320192:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320109:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x50(%rbp)
L_320110:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509826
L_320111:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_320112:
	movq 0x78(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0xC(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x8C(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA0(%rbp)
	movw %r14w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_320113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509826:
L_320190:
	movq $0x1,%r15
L_320119:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_320120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp commitRegisters_0
.p2align 0x4
L_509828:
L_320193:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320194
L_320282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320283
.p2align 0x4
.long 0x4E7F
L_320283:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320194:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509842
L_320195:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_320196:
L_320197:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320198
L_320246:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509839
L_320198:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509829
L_320199:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_320196
.p2align 0x4
L_509829:
L_320200:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320201
L_320244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320245
.p2align 0x4
.long 0x4E81
L_320245:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320201:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
L_320202:
	movq 0x78(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x0(%r14),%r13b
	movb %r13b,0x9(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	cmpb $0x2,%r13b
	je L_509836
	cmpb $0x3,%r13b
	je L_509834
	cmpb $0x4,%r13b
	je L_509832
	cmpb $0x5,%r13b
	je L_509830
L_320203:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6A48)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509830:
L_320241:
	cmpq $0x1,%r9
	je L_509831
L_320242:
	movq 0x8(%r9),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r9),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
L_320206:
	movw 0xC(%rbp),%r15w
	movw %r15w,0xA0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_320207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509831:
L_320243:
	movq $0x1,%r15
L_320212:
	movq %r15,0xB8(%rbp)
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	movb 0x9(%rbp),%r15b
	movb %r15b,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl $0x1,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0x80,%rbp
	leaq (L_320213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toRegisterMemLoc_0
.p2align 0x4
L_509832:
L_320238:
	cmpq $0x1,%r14
	je L_509833
L_320239:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320206
.p2align 0x4
L_509833:
L_320240:
	movq $0x1,%r15
	jmp L_320212
.p2align 0x4
L_509834:
L_320235:
	cmpq $0x1,%r10
	je L_509835
L_320236:
	movq 0x8(%r10),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r10),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320206
.p2align 0x4
L_509835:
L_320237:
	movq $0x1,%r15
	jmp L_320212
.p2align 0x4
L_509836:
L_320204:
	cmpq $0x1,%r11
	je L_509837
L_320205:
	movq 0x8(%r11),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r11),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320206
.p2align 0x4
L_509837:
L_320234:
	movq $0x1,%r15
	jmp L_320212
.p2align 0x4
L_509839:
L_320247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320248
L_320279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320280
.p2align 0x4
.long 0x4E60
L_320280:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320248:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_320249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportRemoveP_0
.p2align 0x4
L_509842:
L_320281:
	movq $0x1,0x80(%rbp)
	jmp L_320202
.p2align 0x4
L_509845:
L_320285:
	movq 0x18(%rbp),%r15
	movq $0x1,0x50(%rbp)
	jmp L_320110
.p2align 0x4
L_509847:
L_320288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320289
.p2align 0x4
.long 0x4E7F
L_320289:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320091
.p2align 0x4
L_509848:
L_320290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_320291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320291
.p2align 0x4
.long 0x4E69
L_320291:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_320087
.p2align 0x4
L_509850:
L_320293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320294
.p2align 0x4
.long 0x4E85
L_320294:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320081
.p2align 0x4
L_509851:
L_320296:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_320297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedMemLocsP_0
.p2align 0x4
L_509853:
L_320298:
	movq $0x1,0x60(%rbp)
	jmp L_320098
.p2align 0x4
.long 0x905
L_320155:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509856
L_320156:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320157
L_320158:
L_320157:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509856:
L_320159:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320160
L_320161:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_509857
L_320162:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509857:
L_320163:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_509858
L_320164:
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_320165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_509858:
L_320160:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E7A
L_320113:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320114
L_320188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320189
.p2align 0x4
.long 0x4E7C
L_320189:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320114:
	movl 0x98(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509861
L_320115:
	movq 0x78(%rbp),%r15
L_320116:
	movq $0x2365,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_509860
L_320117:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_320112
.p2align 0x4
L_509860:
L_320118:
	xchgq %r14,%r15
	jmp L_320119
.p2align 0x4
L_509861:
L_320187:
	movq $0x11A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq (globalWord64+0x1158)(%rip),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x88(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movzwl 0x8C(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_320116
.p2align 0x4
.long 0x4586
L_320120:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320121
L_320153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320154
.p2align 0x4
.long 0xCBE
L_320154:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320121:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320072
L_320122:
	movl %r14d,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509872
L_320123:
	movq %r15,0x10(%rbp)
L_320124:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320125:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509871
.p2align 0x4,,0x7
L_320126:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509870
L_320127:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_320128:
	cmpq $0x1,%r15
	je L_509863
L_320129:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_320130:
	jmp L_320125
.p2align 0x4
L_509863:
L_320131:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_320132:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509869
.p2align 0x4,,0x7
L_320133:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509864
L_320134:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_320128
.p2align 0x4
L_509864:
L_320135:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509868
L_320136:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320137:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509867
.p2align 0x4,,0x7
L_320138:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509865
L_320139:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320137
.p2align 0x4
L_509865:
L_320141:
	cmpq $0x1,%r15
	je L_509866
L_320142:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509866:
L_320143:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509867:
L_320144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320145
.p2align 0x4
.long 0x4E35
L_320145:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320138
.p2align 0x4
L_509868:
L_320146:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320141
.p2align 0x4
L_509869:
L_320147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320148
.p2align 0x4
.long 0x4E36
L_320148:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320133
.p2align 0x4
L_509870:
L_320149:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_320137
.p2align 0x4
L_509871:
L_320150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320151
.p2align 0x4
.long 0x4E35
L_320151:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320126
.p2align 0x4
L_509872:
L_320152:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_320132
.p2align 0x4
.long 0x4E42
L_320207:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320208
L_320232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320233
.p2align 0x4
.long 0x4E80
L_320233:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320208:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_509876
L_320209:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_320212
L_320210:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xC(%rbp)
	jmp L_320206
.p2align 0x4
L_509876:
L_320229:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509877
L_320230:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movw %r14w,0xC(%rbp)
	jmp L_320206
.p2align 0x4
L_509877:
L_320231:
	movq 0x90(%rbp),%r14
	xchgq %r14,%r15
	jmp L_320212
.p2align 0x4
.long 0x4E7E
L_320213:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movw 0x88(%rbp),%r15w
	movw %r15w,0xC(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320214
L_320227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320228
.p2align 0x4
.long 0x4E7F
L_320228:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320214:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509882
L_320215:
L_320216:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509880
L_320217:
L_320218:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509879
L_320219:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_320100
.p2align 0x4
L_509879:
L_320220:
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	jmp L_320110
.p2align 0x4
L_509880:
L_320221:
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_509881
L_320222:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x58(%rbp)
	jmp L_320100
.p2align 0x4
L_509881:
L_320223:
	movq 0x68(%rbp),%r15
	movq %r14,0x50(%rbp)
	jmp L_320110
.p2align 0x4
L_509882:
L_320224:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_509883
L_320225:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp L_320100
.p2align 0x4
L_509883:
L_320226:
	movq 0x68(%rbp),%r15
	movq 0x78(%rbp),%r11
	movq %r11,0x50(%rbp)
	jmp L_320110
.p2align 0x4
.long 0x4E82
L_320249:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_320250:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509894
.p2align 0x4,,0x7
L_320251:
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509885
L_320252:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_320250
.p2align 0x4
L_509885:
L_320253:
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_320254:
	cmpq $0x1,%r15
	je L_320264
L_320255:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
L_320256:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509892
.p2align 0x4,,0x7
L_320257:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_509886
L_320258:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_320256
.p2align 0x4
L_509886:
L_320259:
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
L_320260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509891
.p2align 0x4,,0x7
L_320261:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509887
L_320262:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_320260
.p2align 0x4
L_509887:
L_320263:
	movq %r15,0x90(%rbp)
L_320264:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509888
L_320265:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_320254
.p2align 0x4
L_509888:
L_320266:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320267
L_320270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320271
.p2align 0x4
.long 0x4E83
L_320271:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320267:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509889
L_320268:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_320196
.p2align 0x4
L_509889:
L_320269:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_320202
.p2align 0x4
L_509891:
L_320272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_320273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320273
.p2align 0x4
.long 0x4E64
L_320273:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_320261
.p2align 0x4
L_509892:
L_320274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_320275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320275
.p2align 0x4
.long 0x4E68
L_320275:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_320257
.p2align 0x4
L_509894:
L_320277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320278
.p2align 0x4
.long 0x4E65
L_320278:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_320251
.p2align 0x4
.long 0x4E86
L_320297:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	jmp L_320080
.p2align 0x4
.long 0x4580
L_320165:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x50(%rbp)
	leaq L_320178(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x60,%rbp
	leaq (L_320166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeRegister_0
.p2align 0x4
.long 0x61C
L_320166:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320167
L_320176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320177
.p2align 0x4
.long 0x16CB
L_320177:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320167:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509897
L_320168:
L_320169:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_509896
L_320170:
L_320171:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_320172:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_320160
L_320173:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x60(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509896:
L_320174:
	movq %r14,%r15
	jmp L_320172
.p2align 0x4
L_509897:
L_320175:
	movq 0x68(%rbp),%r15
	jmp L_320172
.p2align 0x4
.long 0x905
L_320178:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509900
L_320179:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320180
L_320181:
L_320180:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509900:
L_320182:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5D30)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_320183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x27A2
L_320183:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320184
L_320185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320186
.p2align 0x4
.long 0x4E7B
L_320186:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320184:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl supportRemoveP_0
.hidden supportRemoveP_0
supportRemoveP_0:
L_320303:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320304
L_320335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320336
.p2align 0x4
.long 0x460
L_320336:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_320304:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509911
L_320305:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_320306:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_509910
L_320333:
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320309:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509909
.p2align 0x4,,0x7
L_320310:
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509902
L_320311:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320306
.p2align 0x4
L_509902:
L_320312:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320313:
	cmpq $0x1,%r15
	je L_509908
L_320314:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320315:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509907
.p2align 0x4,,0x7
L_320316:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509903
L_320317:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320315
.p2align 0x4
L_509903:
L_320318:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320319:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509906
.p2align 0x4,,0x7
L_320320:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509904
L_320321:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_320319
.p2align 0x4
L_509904:
L_320323:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509905
L_320324:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320313
.p2align 0x4
L_509905:
L_320325:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509906:
L_320326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320327
.p2align 0x4
.long 0x4AF
L_320327:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320320
.p2align 0x4
L_509907:
L_320328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320329
.p2align 0x4
.long 0x63D
L_320329:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320316
.p2align 0x4
L_509908:
L_320330:
	movq 0x8(%rbp),%r15
	jmp L_320323
.p2align 0x4
L_509909:
L_320331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320332
.p2align 0x4
.long 0x4EA
L_320332:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320310
.p2align 0x4
L_509910:
L_320307:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportRemoveP_0
.p2align 0x4
L_509911:
L_320334:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_320308:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_320309
.text
.p2align 0x4
.globl supportedMemLocsP_0
.hidden supportedMemLocsP_0
supportedMemLocsP_0:
L_320337:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320408
L_320338:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509930
L_320339:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509929
L_320340:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509928
.p2align 0x4,,0x7
L_320342:
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509926
L_320343:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509913
L_320344:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_320341
.p2align 0x4
L_509913:
L_320345:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_509925
L_320346:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320347:
	cmpq $0x1,%r15
	jne L_509924
L_320349:
	movq %r14,0x10(%rbp)
L_320350:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320365
L_320351:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320352:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509922
.p2align 0x4,,0x7
L_320353:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_509920
L_320354:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509914
L_320355:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320352
.p2align 0x4
L_509914:
L_320356:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509917
L_320357:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320358:
	cmpq $0x1,%r15
	je L_509915
L_320359:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509915:
L_320360:
	cmpq $0x1,0x10(%rbp)
	jne L_509916
L_320363:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509916:
L_320362:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509917:
L_320365:
	cmpq $0x1,0x10(%rbp)
	jne L_320362
L_320367:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_509918
L_320368:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_320369:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedMemLocsP_0
.p2align 0x4
L_509918:
L_320394:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509920:
L_320395:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_509921
L_320396:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320352
.p2align 0x4
L_509921:
L_320397:
	movq 0x28(%rbp),%r15
	jmp L_320358
.p2align 0x4
L_509922:
L_320398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320399
.p2align 0x4
.long 0x4DF
L_320399:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320353
.p2align 0x4
L_509924:
L_320348:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509925:
L_320401:
	movq $0x1,0x10(%rbp)
	jmp L_320350
.p2align 0x4
L_509926:
L_320402:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509927
L_320403:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320341
.p2align 0x4
L_509927:
L_320404:
	movq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320347
.p2align 0x4
L_509928:
L_320405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320406
.p2align 0x4
.long 0x63D
L_320406:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320342
.p2align 0x4
L_509929:
L_320407:
	movq $0x1,0x10(%rbp)
	jmp L_320350
.p2align 0x4
L_509930:
L_320408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320409
.p2align 0x4
.long 0x460
L_320409:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_320339
.p2align 0x4
.long 0x5F0
L_320370:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320371
L_320392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320393
.p2align 0x4
.long 0x4EA
L_320393:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_320371:
	movq $0x22BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509932
L_320372:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320369
.p2align 0x4
L_509932:
L_320373:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320374:
	cmpq $0x1,%r15
	je L_509938
L_320375:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320376:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509937
.p2align 0x4,,0x7
L_320377:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509933
L_320378:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320376
.p2align 0x4
L_509933:
L_320379:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320380:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509936
.p2align 0x4,,0x7
L_320381:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509934
L_320382:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_320380
.p2align 0x4
L_509934:
L_320384:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509935
L_320385:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320374
.p2align 0x4
L_509935:
L_320386:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509936:
L_320387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320388
.p2align 0x4
.long 0x4AF
L_320388:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320381
.p2align 0x4
L_509937:
L_320389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320390
.p2align 0x4
.long 0x63D
L_320390:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320377
.p2align 0x4
L_509938:
L_320391:
	movq 0x8(%rbp),%r15
	jmp L_320384
.text
.p2align 0x4
.globl x_2202
.hidden x_2202
x_2202:
L_320410:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320411
L_320436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320437
.p2align 0x4
.long 0x45C
L_320437:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320411:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r13),%r10
	cmpq %r14,0x10(%r10)
	je L_509941
L_320412:
L_320413:
	cmpq 0x10(%r15),%r14
	je L_509940
L_320414:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509940:
L_320415:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x18(%rbp)
	movb 0x1(%r13),%r15b
	movb %r15b,0x19(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_320416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2205
.p2align 0x4
L_509941:
	xchgq %r11,%r15
	jmp L_320413
.p2align 0x4
.long 0x11C0
L_320416:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_320417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2205
.p2align 0x4
.long 0x49CB
L_320417:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509949
L_320419:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320420
L_320421:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_509943
L_320420:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	movb 0x19(%rbp),%r15b
	movb %r15b,0x1(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp construct_3
.p2align 0x4
L_509943:
L_320424:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_509946
L_320426:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320420
L_320427:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_320420
L_320430:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509946:
L_320431:
	cmpq $0x1,0x8(%rbp)
	je L_320430
	jmp L_320420
.p2align 0x4
L_509949:
L_320433:
	cmpq $0x1,0x48(%rbp)
	je L_320424
	jmp L_320420
.text
.p2align 0x4
.globl x_2205
.hidden x_2205
x_2205:
L_320438:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320439
L_320443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320444
.p2align 0x4
.long 0x45C
L_320444:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320439:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509951
L_320440:
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_320441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2202
.p2align 0x4
L_509951:
L_320442:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_320441:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2200
.hidden x_2200
x_2200:
L_320445:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320446
L_320477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320478
.p2align 0x4
.long 0x45C
L_320478:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320446:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_320452
L_320447:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320448:
	movq 0x8(%r15),%r13
	movq 0x18(%r13),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	je L_509955
L_320449:
	cmpq $0x1,%r14
	je L_509953
L_320450:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_320448
.p2align 0x4
L_509953:
L_320452:
	movq 0x0(%rbp),%r15
L_320453:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_509954
L_320454:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509954:
L_320455:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x18(%rbp)
	movb 0x1(%r13),%r15b
	movb %r15b,0x19(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_320456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2206
.p2align 0x4
L_509955:
L_320475:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_320453
.p2align 0x4
.long 0x11C0
L_320456:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_320457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2206
.p2align 0x4
.long 0x49CB
L_320457:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509964
L_320459:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320460
L_320461:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_509958
L_320460:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	movb 0x19(%rbp),%r15b
	movb %r15b,0x1(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp construct_3
.p2align 0x4
L_509958:
L_320464:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_509961
L_320466:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320460
L_320467:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_320460
L_320470:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509961:
L_320471:
	cmpq $0x1,0x8(%rbp)
	je L_320470
	jmp L_320460
.p2align 0x4
L_509964:
L_320473:
	cmpq $0x1,0x48(%rbp)
	je L_320464
	jmp L_320460
.text
.p2align 0x4
.globl x_2206
.hidden x_2206
x_2206:
L_320479:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320480
L_320484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320485
.p2align 0x4
.long 0x45C
L_320485:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320480:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509966
L_320481:
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_320482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2200
.p2align 0x4
L_509966:
L_320483:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_320482:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toRegisterImmediate_0
.hidden toRegisterImmediate_0
toRegisterImmediate_0:
L_320486:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320487
L_320589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320590
.p2align 0x4
.long 0x4E6A
L_320590:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320487:
	movq 0x38(%rbp),%r15
	movq 0xB0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_509968
L_320489:
	movl %r13d,0x0(%r14)
	leaq L_320549(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x78(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x80(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0x78,%rbp
	leaq (L_320490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeRegister_0
.p2align 0x4
L_509968:
L_320488:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E86
L_320490:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movw 0x80(%rbp),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320491
L_320587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320588
.p2align 0x4
.long 0x4E7F
L_320588:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320491:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320488
L_320492:
	movl %r14d,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x115A,%r15
	jne L_509981
L_320524:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	cmpb $0x2,0x8(%rbp)
	jne L_509970
L_320527:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_509970:
L_320526:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
x_1049:
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_509980
L_320494:
	movq %r15,0x10(%rbp)
L_320495:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320496:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509979
.p2align 0x4,,0x7
L_320497:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509978
L_320498:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_320499:
	cmpq $0x1,%r15
	je L_509971
L_320500:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_320501:
	jmp L_320496
.p2align 0x4
L_509971:
L_320502:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_320503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509977
.p2align 0x4,,0x7
L_320504:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509972
L_320505:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_320499
.p2align 0x4
L_509972:
L_320506:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509976
L_320507:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509975
.p2align 0x4,,0x7
L_320509:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509973
L_320510:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320508
.p2align 0x4
L_509973:
L_320512:
	cmpq $0x1,%r15
	je L_509974
L_320513:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509974:
L_320514:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509975:
L_320515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320516
.p2align 0x4
.long 0x8C8
L_320516:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320509
.p2align 0x4
L_509976:
L_320517:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320512
.p2align 0x4
L_509977:
L_320518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320519
.p2align 0x4
.long 0x8D9
L_320519:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320504
.p2align 0x4
L_509978:
L_320520:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_320508
.p2align 0x4
L_509979:
L_320521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320522
.p2align 0x4
.long 0x8C8
L_320522:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320497
.p2align 0x4
L_509980:
L_320523:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_320503
.p2align 0x4
L_509981:
L_320493:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x124D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl (globalWord32+0x614)(%rip),%r13d
	movl %r13d,0x4(%r14)
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x22BF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp x_1049
.p2align 0x4
.long 0x905
L_320549:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509985
L_320550:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320551
L_320552:
L_320551:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509985:
L_320553:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320554
L_320555:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_509986
L_320556:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509986:
L_320557:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_509987
L_320558:
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_320559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_509987:
L_320554:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E88
L_320528:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4580
L_320559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x50(%rbp)
	leaq L_320572(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x60,%rbp
	leaq (L_320560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toRegisterImmediate_0
.p2align 0x4
.long 0x4E88
L_320529:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x61C
L_320560:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320561
L_320570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320571
.p2align 0x4
.long 0x16CB
L_320571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320561:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509991
L_320562:
L_320563:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_509990
L_320564:
L_320565:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_320566:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_320554
L_320567:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x60(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509990:
L_320568:
	movq %r14,%r15
	jmp L_320566
.p2align 0x4
L_509991:
L_320569:
	movq 0x68(%rbp),%r15
	jmp L_320566
.p2align 0x4
.long 0x905
L_320572:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509994
L_320573:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320574
L_320575:
L_320574:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509994:
L_320576:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5DC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_320577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E88
L_320530:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x27A2
L_320577:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320578
L_320579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320580
.p2align 0x4
.long 0x4E7B
L_320580:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320578:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E89
L_320531:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4E89
L_320532:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4E88
L_320533:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4E8A
L_320534:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320535
L_320585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320586
.p2align 0x4
.long 0x4E91
L_320586:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320535:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jz L_320526
L_320537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320538
L_320583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320584
.p2align 0x4
.long 0x4E91
L_320584:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320538:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%rsi
	movq 0x88(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_320539:
	testl %eax,%eax
	jz L_320526
L_320541:
	movw 0xA(%rbp),%r15w
	movb %r15b,%r14b
	movzbw %r14b,%r15w
	movb $0x2,%r14b
	movzbw %r14b,%r13w
	shlw $0x8,%r13w
	orw %r13w,%r15w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4E8B
L_320542:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4E8C
L_320543:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_320544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4E8D
L_320544:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320545
L_320581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320582
.p2align 0x4
.long 0x4E90
L_320582:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320545:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (immediate_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4E8E
immediate_81:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320546
L_320547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320548
.p2align 0x4
.long 0x4E8F
L_320548:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320546:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp x_1049
.text
.p2align 0x4
.globl xmmremove_0
.hidden xmmremove_0
xmmremove_0:
L_320591:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320592
L_320627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320628
.p2align 0x4
.long 0x460
L_320628:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_320592:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	cmpq $0x1,%r14
	je L_320620
L_320593:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510013
.p2align 0x4,,0x7
L_320595:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510011
L_320596:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510002
L_320597:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320594
.p2align 0x4
L_510002:
L_320598:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510010
L_320599:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320600:
	cmpq $0x1,%r15
	jne L_510009
L_320602:
	movw 0x10(%r14),%r15w
	movw %r15w,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510008
L_320603:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_320604:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510007
.p2align 0x4,,0x7
L_320605:
	movq 0x30(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x8(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_320607
L_320611:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510004
L_320613:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510003
L_320614:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_320604
.p2align 0x4
L_510003:
L_320615:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_320610:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510004:
L_320607:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_320610
L_320608:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_320604
.p2align 0x4
L_510007:
L_320616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_320617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320617
.p2align 0x4
.long 0x4B1
L_320617:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_320605
.p2align 0x4
L_510008:
L_320618:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320610
.p2align 0x4
L_510009:
L_320601:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510010:
L_320620:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510011:
L_320621:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_510012
L_320622:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320594
.p2align 0x4
L_510012:
L_320623:
	movq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320600
.p2align 0x4
L_510013:
L_320624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320625
.p2align 0x4
.long 0x4DF
L_320625:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320595
.text
.p2align 0x4
.globl toComments_1
.hidden toComments_1
toComments_1:
L_320629:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320840
L_320630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510052
L_320631:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r13
	je L_510032
L_320632:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movw 0x0(%r13),%r15w
	movq $0x1,0x40(%rbp)
L_320633:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510016
	jmp *jumpTable_824(,%rax,8)
.data
.p2align 0x4
jumpTable_824:
.quad L_510031,L_510030,L_510029,L_510028,L_510027,L_510026,L_510025,L_510024,L_510023,L_510022,L_510021,L_510020,L_510019,L_510018,L_510017
.text
.p2align 0x4
L_510016:
L_320634:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510017:
L_320838:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510018:
L_320837:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510019:
L_320836:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510020:
L_320835:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510021:
L_320834:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510022:
L_320833:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510023:
L_320832:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510024:
L_320831:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510025:
L_320830:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510026:
L_320829:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510027:
L_320828:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510028:
L_320827:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510029:
L_320826:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510030:
L_320825:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510031:
L_320824:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510032:
L_320839:
	movq $0x1,%r15
L_320644:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A18)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510049
L_320645:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
L_320646:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x5C(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510033
	jmp *jumpTable_825(,%rax,8)
.data
.p2align 0x4
jumpTable_825:
.quad L_510048,L_510047,L_510046,L_510045,L_510044,L_510043,L_510042,L_510041,L_510040,L_510039,L_510038,L_510037,L_510036,L_510035,L_510034
.text
.p2align 0x4
L_510033:
L_320647:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510034:
L_320817:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510035:
L_320816:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510036:
L_320815:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510037:
L_320814:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510038:
L_320813:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510039:
L_320812:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510040:
L_320811:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510041:
L_320810:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510042:
L_320809:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510043:
L_320808:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510044:
L_320807:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510045:
L_320806:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510046:
L_320805:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510047:
L_320804:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510048:
L_320803:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510049:
L_320818:
	movq %r14,%r15
L_320670:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A20)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510050
L_320671:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movw 0x0(%r13),%r15w
	movq %r14,0x28(%rbp)
L_320672:
	movw %r15w,0x40(%rbp)
	addq $0x40,%rbp
	leaq (toString_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_510050:
L_320758:
	movq %r14,%r15
L_320682:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A28)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_510051
L_320683:
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
L_320684:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x4C(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x68,%rbp
	leaq (toString_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_510051:
L_320752:
	movq %r14,%r15
L_320707:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510052:
L_320840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320841
.p2align 0x4
.long 0x460
L_320841:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_320631
.p2align 0x4
.long 0x8BB
toString_420:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (rev_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E92
toString_421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x511
toString_423:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (rev_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E94
toString_424:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (rev_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x8BB
rev_422:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_510056
L_320635:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_320636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510055
.p2align 0x4,,0x7
L_320637:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510054
L_320638:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_320636
.p2align 0x4
L_510054:
L_320640:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (comment_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510055:
L_320821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320822
.p2align 0x4
.long 0x8C2
L_320822:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320637
.p2align 0x4
L_510056:
L_320823:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320640
.p2align 0x4
.long 0x4E92
rev_423:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_510059
L_320648:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_320649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510058
.p2align 0x4,,0x7
L_320650:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510057
L_320651:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_320649
.p2align 0x4
L_510057:
L_320653:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_320654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510058:
L_320800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_320801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320801
.p2align 0x4
.long 0x4E9C
L_320801:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_320650
.p2align 0x4
L_510059:
L_320802:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320653
.p2align 0x4
.long 0x511
rev_425:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_510062
L_320673:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_320674:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510061
.p2align 0x4,,0x7
L_320675:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_510060
L_320676:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_320674
.p2align 0x4
L_510060:
L_320678:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (comment_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510061:
L_320755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320756
.p2align 0x4
.long 0x4AE
L_320756:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_320675
.p2align 0x4
L_510062:
L_320757:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320678
.p2align 0x4
.long 0x4E94
rev_426:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r15
	je L_510065
L_320685:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320686:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510064
.p2align 0x4,,0x7
L_320687:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510063
L_320688:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_320686
.p2align 0x4
L_510063:
L_320690:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_320691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510064:
L_320749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320750
.p2align 0x4
.long 0x4E99
L_320750:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320687
.p2align 0x4
L_510065:
L_320751:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320690
.p2align 0x4
.long 0x8BB
comment_25:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320641
L_320819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320820
.p2align 0x4
.long 0x85A
L_320820:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320641:
	movq $0x232F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_510066
L_320642:
	movq %r13,0x40(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_320633
.p2align 0x4
L_510066:
L_320643:
	movq %r13,%r15
	jmp L_320644
.p2align 0x4
.long 0x4E92
L_320654:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x511
comment_27:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320679
L_320753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_320754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320754
.p2align 0x4
.long 0x5E8
L_320754:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_320679:
	movq $0x232F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510068
L_320680:
	movq %r13,0x28(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_320672
.p2align 0x4
L_510068:
L_320681:
	movq %r13,%r15
	jmp L_320682
.p2align 0x4
.long 0x4E94
L_320691:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (toString_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x4E93
toString_422:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E95
toString_425:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E93
rev_424:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_510072
L_320655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_320656:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510071
.p2align 0x4,,0x7
L_320657:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_510070
L_320658:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_320656
.p2align 0x4
L_510070:
L_320660:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_320661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510071:
L_320797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320798
.p2align 0x4
.long 0x4E9B
L_320798:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320657
.p2align 0x4
L_510072:
L_320799:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320660
.p2align 0x4
.long 0x4E95
rev_427:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_510075
L_320692:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320693:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510074
.p2align 0x4,,0x7
L_320694:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510073
L_320695:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_320693
.p2align 0x4
L_510073:
L_320697:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_320698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510074:
L_320746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320747
.p2align 0x4
.long 0x4E98
L_320747:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_320694
.p2align 0x4
L_510075:
L_320748:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320697
.p2align 0x4
.long 0x4E93
L_320661:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E95
L_320698:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x21CE
L_320662:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320663
L_320795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320796
.p2align 0x4
.long 0xD0A
L_320796:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320663:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510080
L_320664:
	movq 0x68(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510079
	cmpq $0x2,%r15
	je L_510078
	cmpq $0x3,%r15
	je L_510077
	cmpq $0x4,%r15
	je L_510076
L_320665:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_320666:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (comment_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510076:
L_320782:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320783:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510077:
L_320775:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320776:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510078:
L_320768:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320769:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510079:
L_320761:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320762:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510080:
L_320789:
	movq 0x68(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510084
	cmpq $0x2,%r15
	je L_510083
	cmpq $0x3,%r15
	je L_510082
	cmpq $0x4,%r15
	je L_510081
L_320790:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_320666
.p2align 0x4
L_510081:
L_320794:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320783
.p2align 0x4
L_510082:
L_320793:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320776
.p2align 0x4
L_510083:
L_320792:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320769
.p2align 0x4
L_510084:
L_320791:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320762
.p2align 0x4
.long 0x4E96
L_320699:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320700
L_320744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320745
.p2align 0x4
.long 0x4E97
L_320745:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320700:
	movl 0x4C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510090
L_320701:
	movq 0x58(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510089
	cmpq $0x2,%r15
	je L_510088
	cmpq $0x3,%r15
	je L_510087
	cmpq $0x4,%r15
	je L_510086
L_320702:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_320703:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (comment_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510086:
L_320731:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320732:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510087:
L_320724:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320725:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510088:
L_320717:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320718:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510089:
L_320710:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320711:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510090:
L_320738:
	movq 0x58(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510094
	cmpq $0x2,%r15
	je L_510093
	cmpq $0x3,%r15
	je L_510092
	cmpq $0x4,%r15
	je L_510091
L_320739:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_320703
.p2align 0x4
L_510091:
L_320743:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320732
.p2align 0x4
L_510092:
L_320742:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320725
.p2align 0x4
L_510093:
L_320741:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320718
.p2align 0x4
L_510094:
L_320740:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320711
.p2align 0x4
.long 0x4A9
comment_26:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320667
L_320759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_320760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320760
.p2align 0x4
.long 0x86F
L_320760:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_320667:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510096
L_320668:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_320646
.p2align 0x4
L_510096:
L_320669:
	movq %r14,%r15
	jmp L_320670
.p2align 0x4
.long 0x4E9A
L_320784:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E9A
L_320777:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E9A
L_320770:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E9A
L_320763:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x71E
comment_28:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320704
L_320708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_320709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320709
.p2align 0x4
.long 0x720
L_320709:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_320704:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510098
L_320705:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_320684
.p2align 0x4
L_510098:
L_320706:
	movq %r14,%r15
	jmp L_320707
.p2align 0x4
.long 0x44B2
L_320733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x44B2
L_320726:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x44B2
L_320719:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x44B2
L_320712:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E9A
L_320785:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320786
L_320787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320788
.p2align 0x4
.long 0xD0C
L_320788:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320786:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320666
.p2align 0x4
.long 0x4E9A
L_320778:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320779
L_320780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320781
.p2align 0x4
.long 0xD0C
L_320781:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320779:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320666
.p2align 0x4
.long 0x4E9A
L_320771:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320772
L_320773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320774
.p2align 0x4
.long 0xD0C
L_320774:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320772:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320666
.p2align 0x4
.long 0x4E9A
L_320764:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320765
L_320766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320767
.p2align 0x4
.long 0xD0C
L_320767:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320765:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320666
.p2align 0x4
.long 0x44B2
L_320734:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320735
L_320736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320737
.p2align 0x4
.long 0x4512
L_320737:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320735:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320703
.p2align 0x4
.long 0x44B2
L_320727:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320728
L_320729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320730
.p2align 0x4
.long 0x4512
L_320730:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320728:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320703
.p2align 0x4
.long 0x44B2
L_320720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320721
L_320722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320723
.p2align 0x4
.long 0x4512
L_320723:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320721:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320703
.p2align 0x4
.long 0x44B2
L_320713:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320714
L_320715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320716
.p2align 0x4
.long 0x4512
L_320716:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320714:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320703
.text
.p2align 0x4
.globl x_2197
.hidden x_2197
x_2197:
L_320842:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320843
L_320956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320957
.p2align 0x4
.long 0x4EA9
L_320957:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320843:
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_510120
L_320844:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x4(%r15),%r14d
L_320845:
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_320846
L_320847:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_510118
L_320848:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	testl %r14d,%r14d
	jz toXmmRegisterMemLocP_8
L_320851:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320863
L_320852:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_320853:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510116
.p2align 0x4,,0x7
L_320854:
	movq 0x70(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510114
L_320855:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510108
L_320856:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_320853
.p2align 0x4
L_510108:
L_320857:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510109
L_320858:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320859:
	cmpq $0x1,%r15
	je toXmmRegisterMemLocP_0
L_320860:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
toXmmRegisterMemLocP_0:
toXmmRegisterMemLocP_8:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_320850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510109:
L_320863:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_320869
L_320864:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320865:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_320876
L_320866:
	cmpq $0x1,%r14
	je L_510110
L_320867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320865
.p2align 0x4
L_510110:
L_320869:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je toXmmRegisterMemLocP_8
L_320870:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320871:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510111
L_320872:
	cmpq $0x1,%r14
	je toXmmRegisterMemLocP_8
L_320873:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320871
.p2align 0x4
L_510111:
L_320876:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x60,%rbp
	leaq (L_320877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510114:
L_320884:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510115
L_320885:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_320853
.p2align 0x4
L_510115:
L_320886:
	movq 0x78(%rbp),%r15
	jmp L_320859
.p2align 0x4
L_510116:
L_320887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320888
.p2align 0x4
.long 0x4E9D
L_320888:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320854
.p2align 0x4
L_510118:
L_320846:
	movq (globalObjptr+0x6BA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510120:
L_320890:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_320891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4E1E
L_320850:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r14w
	movw %r14w,0x60(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%rbp)
	movzwq %r14w,%r11
	shlq $0x2,%r11
	orq $0x1,%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x0(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E1E
L_320877:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320878
L_320879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320880
.p2align 0x4
.long 0x4DB
L_320880:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320878:
	movq $0x22BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E9E
L_320891:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x4(%r15),%r14d
L_320892:
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_320893
L_320900:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_510133
L_320901:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	testl %r14d,%r14d
	jz toXmmRegisterMemLocP_9
L_320917:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320929
L_320918:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320919:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510131
.p2align 0x4,,0x7
L_320920:
	movq 0x80(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510129
L_320921:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510123
L_320922:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x80(%rbp)
	jmp L_320919
.p2align 0x4
L_510123:
L_320923:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510124
L_320924:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320925:
	cmpq $0x1,%r15
	je toXmmRegisterMemLocP_4
L_320926:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,0x60(%rbp)
L_320894:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6BA8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_320895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
toXmmRegisterMemLocP_4:
toXmmRegisterMemLocP_9:
	leaq L_320912(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xA0,%rbp
	leaq (L_320903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510124:
L_320929:
	movq 0xB0(%rbp),%r13
	cmpq $0x1,%r13
	je L_320935
L_320930:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320931:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_320942
L_320932:
	cmpq $0x1,%r14
	je L_510125
L_320933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320931
.p2align 0x4
L_510125:
L_320935:
	movq 0xA8(%rbp),%r13
	cmpq $0x1,%r13
	je toXmmRegisterMemLocP_9
L_320936:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320937:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_510126
L_320938:
	cmpq $0x1,%r14
	je toXmmRegisterMemLocP_9
L_320939:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320937
.p2align 0x4
L_510126:
L_320942:
	leaq L_320912(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_320943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510129:
L_320950:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510130
L_320951:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_320919
.p2align 0x4
L_510130:
L_320952:
	movq 0xB8(%rbp),%r15
	jmp L_320925
.p2align 0x4
L_510131:
L_320953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_320954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320954
.p2align 0x4
.long 0x4EA8
L_320954:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320920
.p2align 0x4
L_510133:
L_320893:
	movq (globalObjptr+0x6BA0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_320894
.p2align 0x4
.long 0x4DA
L_320895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320896
L_320898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320899
.p2align 0x4
.long 0x4DB
L_320899:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320896:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x0,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_320897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4E9F
L_320903:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movw 0xA8(%rbp),%r15w
	movq 0xB0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movzwq %r15w,%r14
	movw %r15w,0x98(%rbp)
	shlq $0x2,%r14
	orq $0x1,%r14
	movq %r14,0x98(%rbp)
L_320904:
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_320905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x298D
L_320912:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_320894
.p2align 0x4
.long 0x4E9F
L_320943:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320944
L_320945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_320946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320946
.p2align 0x4
.long 0x4EA7
L_320946:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_320944:
	movq $0x22BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_320904
.p2align 0x4
.long 0x79B
L_320897:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EA0
L_320905:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_320906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4EA1
L_320906:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320907
L_320915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_320916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320916
.p2align 0x4
.long 0x4EA6
L_320916:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_320907:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_320908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4EA2
L_320908:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_320909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4EA3
L_320909:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320910
L_320913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_320914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320914
.p2align 0x4
.long 0x4EA5
L_320914:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_320910:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_320911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4EA4
L_320911:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toXmmRegisterMemLoc_0
.hidden toXmmRegisterMemLoc_0
toXmmRegisterMemLoc_0:
L_320958:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320959
L_321328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321329
.p2align 0x4
.long 0x4E41
L_321329:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320959:
	movq 0x40(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_320960
L_320961:
	movl %r14d,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	cmpq $0x1,%r14
	je L_321232
L_320962:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320963:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510172
.p2align 0x4,,0x7
L_320964:
	movq 0x28(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510170
L_320965:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_510139
L_320966:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_320963
.p2align 0x4
L_510139:
L_320967:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_510168
L_320968:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320969:
	cmpq $0x1,%r15
	jne L_510167
L_320971:
	movl 0x8(%r14),%r15d
	movl %r15d,0xC(%rbp)
	movl 0xC(%r14),%r15d
	movl %r15d,0x24(%rbp)
	movw 0x10(%r14),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,0x38(%rbp)
	je L_510162
L_320972:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_510160
	cmpb $0x1,%r15b
	je L_510140
L_320973:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510140:
L_321220:
	cmpq $0x1,%r13
	je L_320994
L_321221:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320977:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_510158
L_320979:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_320980:
	movw 0xB0(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510155
L_321206:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_510152
L_321207:
	cmpq $0x1,%r14
	je L_510141
L_321208:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320980
.p2align 0x4
L_510141:
L_321209:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510151
.p2align 0x4,,0x7
L_320985:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_510142
L_320986:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movw %r14w,0xB0(%rbp)
	jmp L_320977
.p2align 0x4
L_510142:
L_320987:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_320994
L_320988:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r11w
	movw %r11w,%r15w
.p2align 0x4,,0x7
L_320989:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_510147
L_321195:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_510145
L_321196:
	cmpq $0x1,%r14
	je L_510143
L_321197:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320989
.p2align 0x4
L_510143:
L_321198:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320994
L_321200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321201
.p2align 0x4
.long 0x4EBC
L_321201:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_320994:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x58(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	leaq L_321094(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xC0,%rbp
	leaq (L_320995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp chooseXmmRegister_0
.p2align 0x4
L_510145:
L_321202:
	movq 0x18(%rbp),%r14
	movw 0xA(%rbp),%r15w
	movq $0x1,%r13
L_321035:
	movq (globalObjptr+0x6A58)(%rip),%r11
	movl 0x0(%r11),%r10d
	decl %r10d
	jo L_510146
L_321036:
	movl %r10d,0x0(%r11)
	movq %r14,0x0(%rbp)
	movw %r15w,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510146:
L_320960:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510147:
L_320990:
	cmpq $0x1,%r14
	je L_510148
L_320991:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320989
.p2align 0x4
L_510148:
L_320992:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320994
L_321193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321194
.p2align 0x4
.long 0x4EBC
L_321194:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_320994
.p2align 0x4
L_510151:
L_321211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321212
.p2align 0x4
.long 0x4EBD
L_321212:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320985
.p2align 0x4
L_510152:
L_321213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510154
.p2align 0x4,,0x7
L_321214:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_510153
L_321215:
	movq %r15,0xB8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movw %r15w,0xB0(%rbp)
	jmp L_320977
.p2align 0x4
L_510153:
L_321216:
	movq 0xB8(%rbp),%r13
	movw 0xB0(%rbp),%r15w
	xchgq %r13,%r14
	jmp L_320989
.p2align 0x4
L_510154:
L_321217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321218
.p2align 0x4
.long 0x4EBD
L_321218:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_321214
.p2align 0x4
L_510155:
L_320981:
	cmpq $0x1,%r14
	je L_510156
L_320982:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320980
.p2align 0x4
L_510156:
L_320983:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320985
L_321204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321205
.p2align 0x4
.long 0x4EBD
L_321205:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320985
.p2align 0x4
L_510158:
L_320978:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_510160:
L_320974:
	cmpq $0x1,%r14
	je L_320994
L_320975:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_320977
.p2align 0x4
L_510162:
L_321223:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_510165
	cmpb $0x1,%r15b
	je L_510163
L_321224:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510163:
L_321228:
	cmpq $0x1,%r13
	je L_320994
L_321229:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
	jmp L_320989
.p2align 0x4
L_510165:
L_321225:
	cmpq $0x1,%r14
	je L_320994
L_321226:
	movw 0x0(%r14),%r13w
	movq 0x8(%r14),%r14
	movw %r13w,%r15w
	jmp L_320989
.p2align 0x4
L_510167:
L_320970:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510168:
L_321232:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_510169
L_321233:
	leaq L_321094(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510169:
L_321255:
	leaq L_321094(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510170:
L_321322:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510171
L_321323:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_320963
.p2align 0x4
L_510171:
L_321324:
	movq 0xB8(%rbp),%r15
	movq 0xB0(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320969
.p2align 0x4
L_510172:
L_321325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321326
.p2align 0x4
.long 0x4EC4
L_321326:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320964
.p2align 0x4
.long 0x4EAA
L_320995:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movw 0xC0(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320996
L_321191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321192
.p2align 0x4
.long 0x4EBB
L_321192:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_320996:
	movzwq 0x60(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510176
L_320997:
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r15
L_320998:
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_320999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_11
.p2align 0x4
L_510176:
L_321004:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510177
L_321005:
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
L_321006:
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_321007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_11
.p2align 0x4
L_510177:
L_321012:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_510197
L_321013:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_321014:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510196
.p2align 0x4,,0x7
L_321015:
	movq 0x88(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321017
L_321162:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510193
L_321164:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_510178
L_321165:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_321014
.p2align 0x4
L_510178:
L_321166:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
L_321020:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	cmpq $0x1,0xB8(%rbp)
	je L_510179
L_321021:
	movq 0x90(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,%r15
L_321022:
	movq %r15,0xD0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xB8,%rbp
	leaq (L_321023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510179:
L_321126:
	movl 0x24(%rbp),%ecx
	movq 0x90(%rbp),%r15
L_321127:
	movl 0x20(%rbp),%r13d
	testl %r13d,%r13d
	jz L_510186
L_321145:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movl %ecx,0xC(%r13)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x8(%r13)
	movzwl 0x60(%rbp),%r15d
	movl %r15d,0x10(%r13)
	movl $0x0,0x14(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_510185
L_321146:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321147:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510184
.p2align 0x4,,0x7
L_321148:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x60(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321150
L_321154:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510181
L_321156:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510180
L_321157:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321147
.p2align 0x4
L_510180:
L_321158:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321153:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movw 0x60(%rbp),%r15w
	xchgq %r13,%r14
	jmp L_321035
.p2align 0x4
L_510181:
L_321150:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321153
L_321151:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321147
.p2align 0x4
L_510184:
L_321159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321160
.p2align 0x4
.long 0x4EB1
L_321160:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_321148
.p2align 0x4
L_510185:
L_321161:
	movq $0x1,%r15
	jmp L_321153
.p2align 0x4
L_510186:
L_321128:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x8(%r13)
	movl $0x1,0xC(%r13)
	movzwl 0x60(%rbp),%r15d
	movl %r15d,0x10(%r13)
	movl $0x0,0x14(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_510192
L_321129:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321130:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510191
.p2align 0x4,,0x7
L_321131:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x60(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321133
L_321137:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510188
L_321139:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510187
L_321140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321130
.p2align 0x4
L_510187:
L_321141:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321136:
	movq $0x2367,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r14)
	movw 0x60(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321035
.p2align 0x4
L_510188:
L_321133:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321136
L_321134:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321130
.p2align 0x4
L_510191:
L_321142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321143
.p2align 0x4
.long 0x4EB0
L_321143:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321131
.p2align 0x4
L_510192:
L_321144:
	movq $0x1,%r15
	jmp L_321136
.p2align 0x4
L_510193:
L_321017:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_321020
L_321018:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321014
.p2align 0x4
L_510196:
L_321167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321168
.p2align 0x4
.long 0x4EB2
L_321168:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_321015
.p2align 0x4
L_510197:
L_321169:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321020
.p2align 0x4
.long 0x298D
L_321094:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_510200
L_321095:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321096
L_321097:
L_321096:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510200:
L_321098:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_321099
L_321100:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_510201
L_321101:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510201:
L_321102:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_510202
L_321103:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_321104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_510202:
L_321099:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EBE
L_321234:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4EBE
L_321256:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321257
L_321320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321321
.p2align 0x4
.long 0x4EC3
L_321321:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_321257:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl 0x4(%r15),%r13d
	movl %r13d,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_510205
L_321317:
	shrl $0x1,%r13d
	movw %r13w,%r15w
	movl %r14d,%r13d
	andl $0x1,%r13d
	cmpl $0x1,%r13d
	jne L_510204
L_321319:
	shrl $0x1,%r14d
	movw %r14w,%r13w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movzwq %r13w,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
L_321260:
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510204:
L_321318:
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321260
.p2align 0x4
L_510205:
L_321258:
	movl %r14d,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_510206
L_321316:
	shrl $0x1,%r14d
	movw %r14w,%r15w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321260
.p2align 0x4
L_510206:
L_321259:
	movq 0x10(%rbp),%r15
	jmp L_321260
.p2align 0x4
.long 0x4EAB
L_320999:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321000
L_321188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_321189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321189
.p2align 0x4
.long 0x4EBA
L_321189:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_321000:
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_510209
L_321001:
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_321004
L_321002:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	jmp L_320998
.p2align 0x4
L_510209:
L_321171:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_321172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4EAC
L_321007:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321008
L_321184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_321185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321185
.p2align 0x4
.long 0x4EB9
L_321185:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_321008:
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_321171
L_321009:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_321012
L_321010:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	jmp L_321006
.p2align 0x4
.long 0x4EAD
L_321023:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movw 0xC0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_321024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4E1C
L_321104:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x58(%rbp)
	leaq L_321117(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %rbp,%r14
	addq $0x50,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x68(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x70(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x68,%rbp
	leaq (L_321105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
.long 0x4EBF
L_321235:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321236
L_321253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321254
.p2align 0x4
.long 0x6D9
L_321254:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321236:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movl $0x400,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	je L_510219
L_321237:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321238:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510218
.p2align 0x4,,0x7
L_321239:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321241
L_321245:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510215
L_321247:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510214
L_321248:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321238
.p2align 0x4
L_510214:
L_321249:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321244:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x18(%r13)
	movw 0xA(%rbp),%r15w
	movq 0x60(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_321035
.p2align 0x4
L_510215:
L_321241:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_321244
L_321242:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321238
.p2align 0x4
L_510218:
L_321250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321251
.p2align 0x4
.long 0x4E32
L_321251:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321239
.p2align 0x4
L_510219:
L_321252:
	movq $0x1,%r15
	jmp L_321244
.p2align 0x4
.long 0x4EC0
L_321261:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4EB3
L_321172:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321173
L_321182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321183
.p2align 0x4
.long 0x4EB8
L_321183:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_321173:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x112E0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_321174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4EAE
L_321024:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321025
L_321092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321093
.p2align 0x4
.long 0x4EAF
L_321093:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_321025:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_510228
L_321026:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r14
	je L_510227
L_321027:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321028:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510226
.p2align 0x4,,0x7
L_321029:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321031
L_321037:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510223
L_321039:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510222
L_321040:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321028
.p2align 0x4
L_510222:
L_321041:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321034:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movw 0xA(%rbp),%r15w
	movq 0x70(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_321035
.p2align 0x4
L_510223:
L_321031:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321034
L_321032:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321028
.p2align 0x4
L_510226:
L_321042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321043
.p2align 0x4
.long 0x8D7
L_321043:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321029
.p2align 0x4
L_510227:
L_321044:
	movq $0x1,%r15
	jmp L_321034
.p2align 0x4
L_510228:
L_321045:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x24(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	je L_510244
L_321046:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321047:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510243
.p2align 0x4,,0x7
L_321048:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r10b,%r11b
	jne L_321050
L_321084:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510240
L_321086:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510229
L_321087:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321047
.p2align 0x4
L_510229:
L_321088:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321053:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510239
L_321054:
	movq %r15,0x10(%rbp)
L_321055:
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_321056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510238
.p2align 0x4,,0x7
L_321057:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510237
L_321058:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_321059:
	cmpq $0x1,%r15
	je L_510230
L_321060:
	movq %r13,0x10(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
L_321061:
	jmp L_321056
.p2align 0x4
L_510230:
L_321062:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_321063:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510236
.p2align 0x4,,0x7
L_321064:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510231
L_321065:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_321059
.p2align 0x4
L_510231:
L_321066:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510235
L_321067:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_321068:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510234
.p2align 0x4,,0x7
L_321069:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510232
L_321070:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_321068
.p2align 0x4
L_510232:
L_321072:
	cmpq $0x1,%r15
	je L_510233
L_321073:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movw 0xA(%rbp),%r15w
	jmp L_321035
.p2align 0x4
L_510233:
L_321074:
	movq 0x20(%rbp),%r14
	movw 0xA(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321035
.p2align 0x4
L_510234:
L_321075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321076
.p2align 0x4
.long 0x4E19
L_321076:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321069
.p2align 0x4
L_510235:
L_321077:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321072
.p2align 0x4
L_510236:
L_321078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321079
.p2align 0x4
.long 0x4E1A
L_321079:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321064
.p2align 0x4
L_510237:
L_321080:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_321068
.p2align 0x4
L_510238:
L_321081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321082
.p2align 0x4
.long 0x4E19
L_321082:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321057
.p2align 0x4
L_510239:
L_321083:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_321063
.p2align 0x4
L_510240:
L_321050:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_321053
L_321051:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321047
.p2align 0x4
L_510243:
L_321089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321090
.p2align 0x4
.long 0x8D7
L_321090:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321048
.p2align 0x4
L_510244:
L_321091:
	movq $0x1,%r15
	jmp L_321053
.p2align 0x4
.long 0x907
L_321105:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movw 0x70(%rbp),%r15w
	movw %r15w,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321106
L_321115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321116
.p2align 0x4
.long 0x4E1D
L_321116:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321106:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_510248
L_321107:
L_321108:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_510247
L_321109:
L_321110:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_321111:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_321099
L_321112:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510247:
L_321113:
	movq %r14,%r15
	jmp L_321111
.p2align 0x4
L_510248:
L_321114:
	movq 0x70(%rbp),%r15
	jmp L_321111
.p2align 0x4
.long 0x298D
L_321117:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_510251
L_321118:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321119
L_321120:
L_321119:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510251:
L_321121:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6B30)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_321122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC1
L_321262:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321263
L_321314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321315
.p2align 0x4
.long 0x4EC2
L_321315:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_321263:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movl $0x400,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	cmpq $0x1,%r14
	je L_510257
L_321264:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_321265:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510256
.p2align 0x4,,0x7
L_321266:
	movq 0xA0(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321268
L_321306:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510253
L_321308:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_510252
L_321309:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_321265
.p2align 0x4
L_510252:
L_321310:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
L_321271:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510253:
L_321268:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_321271
L_321269:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_321265
.p2align 0x4
L_510256:
L_321311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321312
.p2align 0x4
.long 0x4E40
L_321312:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_321266
.p2align 0x4
L_510257:
L_321313:
	movq $0x1,%r15
	jmp L_321271
.p2align 0x4
.long 0x4EB4
L_321174:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x9(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movb $0x3,0xD0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_321175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4E1E
L_321122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321123
L_321124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321125
.p2align 0x4
.long 0x4E1F
L_321125:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_321123:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EC1
L_321272:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r15w
	movw %r15w,0xC(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321273
L_321304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321305
.p2align 0x4
.long 0x36AE
L_321305:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_321273:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movzwq 0xA(%rbp),%r14
	shlq $0x2,%r14
	orq $0x1,%r14
	movq $0x22BF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x22CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510269
L_321274:
	movq %r15,0x10(%rbp)
L_321275:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_321276:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510268
.p2align 0x4,,0x7
L_321277:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510267
L_321278:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_321279:
	cmpq $0x1,%r15
	je L_510260
L_321280:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_321281:
	jmp L_321276
.p2align 0x4
L_510260:
L_321282:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_321283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510266
.p2align 0x4,,0x7
L_321284:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510261
L_321285:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_321279
.p2align 0x4
L_510261:
L_321286:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510265
L_321287:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_321288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510264
.p2align 0x4,,0x7
L_321289:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510262
L_321290:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_321288
.p2align 0x4
L_510262:
L_321292:
	cmpq $0x1,%r15
	je L_510263
L_321293:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movw 0xC(%rbp),%r15w
	jmp L_321035
.p2align 0x4
L_510263:
L_321294:
	movq 0x58(%rbp),%r14
	movw 0xC(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321035
.p2align 0x4
L_510264:
L_321295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321296
.p2align 0x4
.long 0x4E35
L_321296:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321289
.p2align 0x4
L_510265:
L_321297:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321292
.p2align 0x4
L_510266:
L_321298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321299
.p2align 0x4
.long 0x4E36
L_321299:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321284
.p2align 0x4
L_510267:
L_321300:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_321288
.p2align 0x4
L_510268:
L_321301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321302
.p2align 0x4
.long 0x4E35
L_321302:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321277
.p2align 0x4
L_510269:
L_321303:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_321283
.p2align 0x4
.long 0x4EB5
L_321175:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb 0x9(%rbp),%r14b
	movb %r14b,0xD0(%rbp)
	movb $0x3,0xD1(%rbp)
	movq $0x1,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xD0,%rbp
	leaq (L_321176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4EB6
L_321176:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321177
L_321180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321181
.p2align 0x4
.long 0x4EB7
L_321181:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_321177:
	cmpq $0x1,0xB8(%rbp)
	je L_510271
L_321178:
	movl $0x1,0x24(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	jmp L_321022
.p2align 0x4
L_510271:
L_321179:
	movl $0x1,%ecx
	movq 0x18(%rbp),%r14
	movq 0x68(%rbp),%r15
	jmp L_321127
.text
.p2align 0x4
.globl chooseXmmRegister_0
.hidden chooseXmmRegister_0
chooseXmmRegister_0:
L_321330:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_321331
L_321999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_322000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_322000
.p2align 0x4
.long 0x3D7C
L_322000:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_321331:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_510454
L_321332:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movb 0x8(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_510452
	cmpb $0x1,%r14b
	je L_510273
L_321333:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510273:
L_321989:
	cmpq $0x1,%r13
	je L_510451
L_321990:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_321337:
	movq 0x28(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_510450
L_321339:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321340:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510448
L_321978:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510445
L_321979:
	cmpq $0x1,%r14
	je L_510274
L_321980:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321340
.p2align 0x4
L_510274:
L_321344:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510275
L_321345:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321337
.p2align 0x4
L_510275:
L_321346:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_321347:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510444
L_321348:
	movq %r15,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321349:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510443
.p2align 0x4,,0x7
L_321350:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_510442
L_321351:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321352
L_321955:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	jne L_321352
L_321956:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_510439
L_321957:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
L_321958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510438
.p2align 0x4,,0x7
L_321959:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510436
L_321960:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510276
L_321961:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_321958
.p2align 0x4
L_510276:
L_321962:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_510435
L_321963:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_321964:
	cmpq $0x1,%r15
	jne L_510434
L_321966:
	movw 0x10(%r14),%r15w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_321353:
	movq $0x22AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510277
L_321354:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_321349
.p2align 0x4
L_510277:
L_321355:
	movq 0x78(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
L_321356:
	cmpq $0x1,%r15
	je L_510433
L_321357:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321358:
	cmpq $0x1,%r15
	je L_510432
L_321359:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
L_321360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510431
.p2align 0x4,,0x7
L_321361:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510278
L_321362:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321360
.p2align 0x4
L_510278:
L_321363:
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
L_321364:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510430
.p2align 0x4,,0x7
L_321365:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510279
L_321366:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321364
.p2align 0x4
L_510279:
L_321368:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510280
L_321369:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321358
.p2align 0x4
L_510280:
L_321370:
	movq %r15,0x30(%rbp)
L_321371:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_510429
L_321372:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321373:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510428
.p2align 0x4,,0x7
L_321374:
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_321381
L_321375:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321376:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510424
L_321935:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510422
L_321936:
	cmpq $0x1,%r14
	je L_510281
L_321937:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321376
.p2align 0x4
L_510281:
L_321938:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510421
.p2align 0x4,,0x7
L_321381:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510282
L_321382:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321373
.p2align 0x4
L_510282:
L_321384:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510420
L_321385:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0xA(%rbp)
.p2align 0x4,,0x7
L_321386:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510419
.p2align 0x4,,0x7
L_321387:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_321394
L_321388:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321389:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510415
L_321919:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510413
L_321920:
	cmpq $0x1,%r14
	je L_510283
L_321921:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321389
.p2align 0x4
L_510283:
L_321922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510412
.p2align 0x4,,0x7
L_321394:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510284
L_321395:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321386
.p2align 0x4
L_510284:
L_321396:
	movq %r15,0x30(%rbp)
L_321397:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510411
L_321398:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321399:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510410
.p2align 0x4,,0x7
L_321400:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_321407
L_321401:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321402:
	movw 0xA(%rbp),%r13w
	movb %r13b,%r11b
	shrw $0x8,%r13w
	movb %r13b,%r10b
	movb %r15b,%r13b
	shrw $0x8,%r15w
	movb %r15b,%r9b
	cmpb %r11b,%r13b
	je L_510404
L_321403:
	cmpq $0x1,%r14
	je L_510285
L_321404:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321402
.p2align 0x4
L_510285:
L_321405:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510403
.p2align 0x4,,0x7
L_321407:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510286
L_321408:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321399
.p2align 0x4
L_510286:
L_321409:
	movq %r15,0x20(%rbp)
L_321410:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_510402
L_321411:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321412:
L_321413:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321414
L_321897:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_510400
L_321414:
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321415:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510399
.p2align 0x4,,0x7
L_321416:
	movq $0x22AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510287
L_321417:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321412
.p2align 0x4
L_510287:
L_321418:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321419:
	cmpq $0x1,%r15
	je L_510398
L_321420:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
L_321421:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510397
.p2align 0x4,,0x7
L_321422:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510288
L_321423:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321421
.p2align 0x4
L_510288:
L_321424:
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
L_321425:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510396
.p2align 0x4,,0x7
L_321426:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510289
L_321427:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321425
.p2align 0x4
L_510289:
L_321429:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510290
L_321430:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321419
.p2align 0x4
L_510290:
L_321431:
	movq %r15,0x30(%rbp)
L_321432:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_510395
L_321433:
	movq 0x8(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_321434:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510394
.p2align 0x4,,0x7
L_321435:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510291
L_321436:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321434
.p2align 0x4
L_510291:
L_321437:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_321438:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510393
.p2align 0x4,,0x7
L_321439:
	movq 0x88(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510292
L_321440:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321438
.p2align 0x4
L_510292:
L_321441:
	movq %r15,0x80(%rbp)
L_321442:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_321608
L_321443:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_321444:
	movw 0xA(%rbp),%r15w
	movb %r15b,0x9(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_510391
L_321445:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
L_321446:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510390
.p2align 0x4,,0x7
L_321447:
	movq 0x98(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x9(%rbp)
	je L_510388
L_321448:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_510293
L_321449:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_321446
.p2align 0x4
L_510293:
L_321450:
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl $0x0,0xA4(%rbp)
	movl $0x0,0xA0(%rbp)
loop_3598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510387
.p2align 0x4,,0x7
L_321451:
	movq $0x11A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x90(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x94(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0xA4(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl $0x0,0x1C(%r15)
	cmpq $0x1,0xA8(%rbp)
	jne L_510343
L_321550:
	movq $0x11A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510294
L_321551:
	movq %r15,0x88(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321444
.p2align 0x4
L_510294:
L_321552:
	movq %r14,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321553:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510342
.p2align 0x4,,0x7
L_321554:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_510341
L_321555:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
L_321556:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510340
.p2align 0x4,,0x7
L_321557:
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%r10d
	movl 0xC(%r11),%r9d
	movl 0x10(%r11),%r8d
	movq 0x0(%r11),%r14
	movl 0x14(%r11),%esp
	movl 0x18(%r11),%ebx
	movq 0x80(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%esi
	movl 0xC(%r11),%edi
	movl 0x10(%r11),%edx
	movq 0x0(%r11),%r15
	movl 0x14(%r11),%eax
	movl 0x18(%r11),%ecx
	testl %ebx,%ebx
	jnz L_510339
L_321869:
	cmpl $0x1,%ecx
	je L_321855
	movl %eax,(localWord32+0x20)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %esi,(localWord32+0x14)(%rip)
	movl %r10d,(localWord32+0x0)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
L_321558:
	cmpl %ecx,%ebx
	jne L_321560
L_321835:
	movl (localWord32+0xC)(%rip),%ebx
	testl %ebx,%ebx
	jnz L_510336
L_321867:
	movl (localWord32+0x20)(%rip),%ecx
	cmpl $0x1,%ecx
	je L_321855
L_321836:
	cmpl %ebx,%ecx
	jne L_321560
L_321838:
	movq %r14,%r13
	andq $0x1,%r13
	jnz L_510331
L_321839:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_321855
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
L_321840:
	cmpq %r15,%r14
	je L_321846
L_321841:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_321560
L_321842:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_321560
L_321843:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jne L_321560
L_321846:
	cmpl %ecx,%ebx
	jl L_321855
L_321847:
	cmpl %ecx,%ebx
	jne L_321560
L_321849:
	movl (localWord32+0x4)(%rip),%ebx
	cmpl $0x1,%ebx
	jne L_510323
L_321858:
	movl (localWord32+0x18)(%rip),%ecx
	testl %ecx,%ecx
	jz L_321855
L_321850:
	cmpl %ecx,%ebx
	jne L_321560
L_321852:
	movl (localWord32+0x14)(%rip),%r15d
	cmpl %r15d,(localWord32+0x0)(%rip)
	jl L_510319
L_321560:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510295
L_321561:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_321556
.p2align 0x4
L_510295:
L_321563:
	movq $0x2561,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_510318
L_321564:
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
L_321565:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510317
.p2align 0x4,,0x7
L_321566:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510296
L_321567:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_321565
.p2align 0x4
L_510296:
L_321569:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510297
L_321570:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321553
.p2align 0x4
L_510297:
L_321571:
	cmpq $0x1,%r15
	je L_510311
L_321572:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_321573:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510310
.p2align 0x4,,0x7
L_321574:
	movq 0x50(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_510298
L_321575:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_321573
.p2align 0x4
L_510298:
L_321576:
	movw %r14w,0x48(%rbp)
	movq 0x58(%rbp),%r15
.p2align 0x4,,0x7
L_321577:
	cmpq $0x1,%r15
	je L_510299
L_321578:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movw %r14w,0x48(%rbp)
	jmp L_321577
.p2align 0x4
L_510299:
L_321579:
	movw 0x48(%rbp),%r15w
	movb %r15b,0x4A(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_321598
L_321580:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_321581:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510308
.p2align 0x4,,0x7
L_321582:
	movq 0x58(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x4A(%rbp)
	je L_510306
L_321583:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_510300
L_321584:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_321581
.p2align 0x4
L_510300:
L_321585:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510305
L_321586:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_321587:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510304
.p2align 0x4,,0x7
L_321588:
	movq 0x58(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x4A(%rbp)
	je L_510302
L_321589:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_510301
L_321590:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_321587
.p2align 0x4
L_510301:
L_321591:
	movw 0x48(%rbp),%r14w
	movw %r14w,0x0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510302:
L_321592:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_510303
L_321593:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_321587
.p2align 0x4
L_510303:
L_321594:
	movq %r15,0x8(%rbp)
	movw 0x48(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510304:
L_321595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321596
.p2align 0x4
.long 0xCBE
L_321596:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321588
.p2align 0x4
L_510305:
L_321598:
	movw 0x48(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510306:
L_321599:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_510307
L_321600:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_321581
.p2align 0x4
L_510307:
L_321601:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_321587
.p2align 0x4
L_510308:
L_321602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321603
.p2align 0x4
.long 0xCBE
L_321603:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321582
.p2align 0x4
L_510310:
L_321605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321606
.p2align 0x4
.long 0x4EC5
L_321606:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321574
.p2align 0x4
L_510311:
L_321608:
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_510316
	cmpb $0x2,%r15b
	je L_510315
	cmpb $0x3,%r15b
	je L_510314
	cmpb $0x4,%r15b
	je L_510313
	cmpb $0x5,%r15b
	je L_510312
L_321609:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510312:
L_321831:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510313:
L_321830:
	movq (globalObjptr+0xE800)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510314:
L_321829:
	movq (globalObjptr+0xE7F8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510315:
L_321828:
	movq (globalObjptr+0xE7F0)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510316:
L_321827:
	movq (globalObjptr+0xE7E8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510317:
L_321832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321833
.p2align 0x4
.long 0x4ED9
L_321833:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321566
.p2align 0x4
L_510318:
L_321834:
	movq %r14,%r15
	jmp L_321569
.p2align 0x4
L_510319:
L_321855:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_321569
L_321856:
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	jmp L_321565
.p2align 0x4
L_510323:
	movl (localWord32+0x18)(%rip),%ecx
	jmp L_321850
.p2align 0x4
L_510331:
L_321863:
	movq %r14,%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_510333
L_321864:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r10d
	cmpl %r11d,%r10d
	jl L_321855
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
	jmp L_321840
.p2align 0x4
L_510333:
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
	jmp L_321840
.p2align 0x4
L_510336:
	movl (localWord32+0x20)(%rip),%ecx
	jmp L_321836
.p2align 0x4
L_510339:
	movl %esp,(localWord32+0xC)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r10d,(localWord32+0x0)(%rip)
	movl %esi,(localWord32+0x14)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %eax,(localWord32+0x20)(%rip)
	jmp L_321558
.p2align 0x4
L_510340:
L_321871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321872
.p2align 0x4
.long 0x4EDA
L_321872:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321557
.p2align 0x4
L_510341:
L_321873:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321563
.p2align 0x4
L_510342:
L_321874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321875
.p2align 0x4
.long 0x4EDB
L_321875:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321554
.p2align 0x4
L_510343:
L_321452:
	movq 0xA8(%rbp),%r9
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r8
	movl 0x8(%r8),%ebx
	movl 0xC(%r8),%esp
	movq 0x18(%r8),%r13
	movq 0x0(%r8),%r10
	movw 0x10(%r8),%si
	movb %sil,%dl
	shrw $0x8,%si
	movb %sil,%cl
	movw 0xA(%rbp),%r15w
	shrw $0x8,%r15w
	movb %r15b,%r9b
	cmpb %dl,0x9(%rbp)
	jne L_510386
L_321454:
	testb %cl,%cl
	jnz L_510385
L_321455:
	testb %r9b,%r9b
	jz L_510383
L_321546:
	movq 0x30(%rbp),%r9
	cmpq $0x1,%r9
	je L_510382
L_321547:
	movq 0x8(%r9),%r11
	movw 0x0(%r9),%r15w
	movl %esp,(localWord32+0x4)(%rip)
.p2align 0x4,,0x7
L_321459:
	movw %r15w,%r9w
	shrw $0x8,%r9w
	movb %r9b,%r8b
	cmpb %r8b,%cl
	jne L_510380
L_321537:
	movb %r15b,%r9b
	cmpb %r9b,%dl
	je L_510377
L_321538:
	cmpq $0x1,%r11
	je L_510344
L_321539:
	movw 0x0(%r11),%r15w
	movq 0x8(%r11),%r11
	jmp L_321459
.p2align 0x4
L_510344:
	movq %r10,%r15
	movl (localWord32+0x4)(%rip),%ecx
L_321463:
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510375
	cmpq $0x3,%r15
	je L_510373
L_321464:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321465:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510372
L_321466:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	movl $0x1,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_321467:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x11AE,%r10
	jne L_321468
L_321519:
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movb 0x0(%r15),%r10b
	cmpb $0x1,%r10b
	je L_510370
	cmpb $0x2,%r10b
	je L_510369
	cmpb $0x6,%r10b
	je L_510366
L_321468:
	incl %ebx
	jo L_321469
L_321470:
	cmpq $0x1,%r11
	je L_510345
L_321471:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_321467
.p2align 0x4
L_510345:
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
L_321473:
	movq 0x80(%rbp),%r10
	cmpq $0x1,%r10
	je L_510364
L_321474:
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r15
	xorq %r11,%r11
	xorl %r10d,%r10d
	xchgq %r9,%r14
	xchgl %r10d,%ecx
	movq %r9,(localObjptr+0x0)(%rip)
	movl %r10d,(localWord32+0x8)(%rip)
.p2align 0x4,,0x7
L_321475:
	movq 0x8(%r15),%r9
	cmpq $0x1,%r9
	je L_510363
L_321476:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r9
	xorl %r8d,%r8d
	movq %r9,%r15
	xchgl %r8d,%ebx
	movl %r8d,(localWord32+0xC)(%rip)
.p2align 0x4,,0x7
L_321477:
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r15)
	je L_510360
L_321478:
	cmpq $0x1,%r10
	je L_510346
L_321479:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	jmp L_321477
.p2align 0x4
L_510346:
	movq %r13,(localObjptr+0x10)(%rip)
L_321481:
	addl %ebx,%ecx
	jo L_321469
L_321482:
	cmpq $0x1,%r14
	je L_510347
L_321483:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x10)(%rip),%r13
	movl (localWord32+0xC)(%rip),%ebx
	jmp L_321475
.p2align 0x4
L_510347:
L_321484:
	movq %r11,%r15
	movq (localObjptr+0x0)(%rip),%r14
	movl (localWord32+0xC)(%rip),%ebx
L_321485:
	movl 0xA4(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510357
L_321486:
	movl 0xA0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510355
	movl (localWord32+0x8)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321488:
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	andq $0x1,%r11
	jz L_510353
L_321499:
	shrq $0x1,%r13
	movl %r13d,%r11d
	movl (localWord32+0xC)(%rip),%r13d
	movl %r11d,(localWord32+0x8)(%rip)
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x10)(%rip)
L_321500:
	movq %r15,%r13
	andq $0x1,%r13
	jz L_510352
L_321502:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movl (localWord32+0x8)(%rip),%r15d
	cmpl %r13d,%r15d
	jl L_510351
L_321503:
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321504:
	movl %ebx,%r15d
	movl (localWord32+0xC)(%rip),%r13d
	movl %r13d,(localWord32+0x8)(%rip)
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ecx,%ebx
	movl (localWord32+0x10)(%rip),%ecx
L_321492:
	addl 0x94(%rbp),%ecx
	jo L_321469
L_321493:
	movl 0x90(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510349
L_321494:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321495:
	movl (localWord32+0x0)(%rip),%r13d
	addl 0xC(%rbp),%r13d
	jo L_510348
L_321496:
	movl %r13d,0xC(%rbp)
	movl %ebx,0x90(%rbp)
	movl %ecx,0x94(%rbp)
	movq %r15,0x98(%rbp)
	movl (localWord32+0xC)(%rip),%r15d
	movl %r15d,0xA0(%rbp)
	movl (localWord32+0x8)(%rip),%r15d
	movl %r15d,0xA4(%rbp)
	movq %r14,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510348:
L_321469:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510349:
	movl (localWord32+0x4)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
	jmp L_321495
.p2align 0x4
L_510351:
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0xC)(%rip)
	jmp L_321504
.p2align 0x4
L_510352:
L_321501:
	movl %ebx,(localWord32+0x8)(%rip)
	movq 0x98(%rbp),%r15
	movl %ecx,%ebx
	movl (localWord32+0x10)(%rip),%ecx
	jmp L_321492
.p2align 0x4
L_510353:
	movl (localWord32+0xC)(%rip),%r11d
	xchgl %r11d,%ebx
	movl %r11d,(localWord32+0x8)(%rip)
L_321490:
	movq %r15,%r13
	andq $0x1,%r13
	jnz L_321492
L_321498:
	movq 0x98(%rbp),%r15
	jmp L_321492
.p2align 0x4
L_510355:
	movl (localWord32+0x8)(%rip),%ebx
L_321507:
	movq 0x98(%rbp),%r13
	andq $0x1,%r13
	jnz L_510356
L_321508:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x8)(%rip)
	jmp L_321490
.p2align 0x4
L_510356:
L_321509:
	movq 0x98(%rbp),%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movl %r11d,(localWord32+0x8)(%rip)
	movl $0x1,%r13d
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x10)(%rip)
	jmp L_321500
.p2align 0x4
L_510357:
L_321510:
	movl 0xA0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510358
L_321511:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
	jmp L_321488
.p2align 0x4
L_510358:
L_321512:
	movl $0x1,%ebx
	jmp L_321507
.p2align 0x4
L_510360:
L_321513:
	incl %ebx
	jo L_321469
L_321514:
	cmpq $0x1,%r10
	je L_510361
L_321515:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	jmp L_321477
.p2align 0x4
L_510361:
L_321516:
	movq %r13,(localObjptr+0x10)(%rip)
	jmp L_321481
.p2align 0x4
L_510363:
L_321517:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movq %r13,(localObjptr+0x10)(%rip)
	movl %r15d,(localWord32+0xC)(%rip)
	jmp L_321481
.p2align 0x4
L_510364:
L_321518:
	xorq %r15,%r15
	xorl %r13d,%r13d
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x8)(%rip)
	jmp L_321485
.p2align 0x4
L_510366:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
L_321521:
	testl %ecx,%ecx
	jz L_510368
L_321523:
	movl %ebx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x80(%rbp),%r10
	cmpq $0x1,%r10
	je L_510367
L_321524:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r9
	xorl %ecx,%ecx
	xchgq %r11,%r14
	xchgq %r15,%r11
	xchgq %r9,%r15
	movl (localWord32+0xC)(%rip),%ebx
	movq %r9,(localObjptr+0x0)(%rip)
	jmp L_321475
.p2align 0x4
L_510367:
L_321525:
	xorl %ecx,%ecx
	movl (localWord32+0xC)(%rip),%ebx
	jmp L_321485
.p2align 0x4
L_510368:
	movl (localWord32+0xC)(%rip),%ecx
	jmp L_321468
.p2align 0x4
L_510369:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
	jmp L_321521
.p2align 0x4
L_510370:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
	jmp L_321521
.p2align 0x4
L_510372:
L_321528:
	movl $0x1,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321473
.p2align 0x4
L_510373:
L_321533:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321534:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510374
L_321535:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	xorl %r10d,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
	jmp L_321467
.p2align 0x4
L_510374:
L_321536:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321473
.p2align 0x4
L_510375:
L_321529:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321530:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510376
L_321531:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	xorl %r10d,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
	jmp L_321467
.p2align 0x4
L_510376:
L_321532:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321473
.p2align 0x4
L_510377:
L_321541:
	andq $0x7,%r10
	cmpq $0x1,%r10
	je L_510379
	cmpq $0x3,%r10
	je L_510378
L_321542:
	movl $0x1,%ecx
	jmp L_321465
.p2align 0x4
L_510378:
L_321544:
	movl $0x1,%ecx
	jmp L_321534
.p2align 0x4
L_510379:
L_321543:
	movl $0x1,%ecx
	jmp L_321530
.p2align 0x4
L_510380:
L_321460:
	cmpq $0x1,%r11
	je L_510381
L_321461:
	movw 0x0(%r11),%r15w
	movq 0x8(%r11),%r11
	jmp L_321459
.p2align 0x4
L_510381:
	movq %r10,%r15
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_321463
.p2align 0x4
L_510382:
	movq %r10,%r15
	movl %esp,%ecx
	jmp L_321463
.p2align 0x4
L_510383:
	movq %r10,%r15
	movl %esp,(localWord32+0x4)(%rip)
L_321457:
	movq 0x30(%rbp),%r9
	cmpq $0x1,%r9
	je L_510384
L_321458:
	movq 0x8(%r9),%r11
	movw 0x0(%r9),%r8w
	movq %r15,%r10
	movw %r8w,%r15w
	jmp L_321459
.p2align 0x4
L_510384:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_321463
.p2align 0x4
L_510385:
	movq %r10,%r15
	movl %esp,(localWord32+0x4)(%rip)
	jmp L_321457
.p2align 0x4
L_510386:
L_321453:
	movq %r14,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510387:
L_321876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321877
.p2align 0x4
.long 0x4EDC
L_321877:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_321451
.p2align 0x4
L_510388:
L_321878:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_510389
L_321879:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_321446
.p2align 0x4
L_510389:
L_321880:
	movq %r15,0xA8(%rbp)
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	jmp loop_3598
.p2align 0x4
L_510390:
L_321881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_321882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321882
.p2align 0x4
.long 0x4EDD
L_321882:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_321447
.p2align 0x4
L_510391:
L_321883:
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	movq $0x1,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510393:
L_321885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321886
.p2align 0x4
.long 0x4EDA
L_321886:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321439
.p2align 0x4
L_510394:
L_321887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321888
.p2align 0x4
.long 0x4EDA
L_321888:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321435
.p2align 0x4
L_510395:
L_321889:
	movq $0x1,0x80(%rbp)
	jmp L_321442
.p2align 0x4
L_510396:
L_321890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321891
.p2align 0x4
.long 0x4ED9
L_321891:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321426
.p2align 0x4
L_510397:
L_321892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_321893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321893
.p2align 0x4
.long 0x4EDE
L_321893:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_321422
.p2align 0x4
L_510398:
L_321894:
	movq 0x78(%rbp),%r15
	jmp L_321429
.p2align 0x4
L_510399:
L_321895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321896
.p2align 0x4
.long 0x4ED9
L_321896:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321416
.p2align 0x4
L_510400:
L_321898:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_321899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedXmmRegistersP_0
.p2align 0x4
L_510402:
L_321900:
	movq $0x1,0x30(%rbp)
	jmp L_321432
.p2align 0x4
L_510403:
L_321901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321902
.p2align 0x4
.long 0x4EDB
L_321902:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321407
.p2align 0x4
L_510404:
L_321903:
	testb %r10b,%r10b
	jnz L_321906
L_321904:
	testb %r9b,%r9b
	jz L_510406
L_321909:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510405
L_321910:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321399
.p2align 0x4
L_510405:
L_321911:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_321410
.p2align 0x4
L_510406:
L_321906:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510407
L_321907:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321399
.p2align 0x4
L_510407:
L_321908:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_321410
.p2align 0x4
L_510410:
L_321914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321915
.p2align 0x4
.long 0x4EDB
L_321915:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321400
.p2align 0x4
L_510411:
L_321916:
	movq $0x1,0x20(%rbp)
	jmp L_321410
.p2align 0x4
L_510412:
L_321924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321925
.p2align 0x4
.long 0x4EDB
L_321925:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321394
.p2align 0x4
L_510413:
L_321926:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510414
L_321927:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321386
.p2align 0x4
L_510414:
L_321928:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_321397
.p2align 0x4
L_510415:
L_321390:
	cmpq $0x1,%r14
	je L_510416
L_321391:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321389
.p2align 0x4
L_510416:
L_321392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321394
L_321917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321918
.p2align 0x4
.long 0x4EDB
L_321918:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321394
.p2align 0x4
L_510419:
L_321930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321931
.p2align 0x4
.long 0x4EDB
L_321931:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321387
.p2align 0x4
L_510420:
L_321932:
	movq %r15,0x30(%rbp)
	jmp L_321397
.p2align 0x4
L_510421:
L_321940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321941
.p2align 0x4
.long 0x4ED9
L_321941:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321381
.p2align 0x4
L_510422:
L_321942:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_510423
L_321943:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321373
.p2align 0x4
L_510423:
L_321944:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
	jmp L_321384
.p2align 0x4
L_510424:
L_321377:
	cmpq $0x1,%r14
	je L_510425
L_321378:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321376
.p2align 0x4
L_510425:
L_321379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321381
L_321933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321934
.p2align 0x4
.long 0x4ED9
L_321934:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321381
.p2align 0x4
L_510428:
L_321946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321947
.p2align 0x4
.long 0x4ED9
L_321947:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321374
.p2align 0x4
L_510429:
L_321948:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321384
.p2align 0x4
L_510430:
L_321949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321950
.p2align 0x4
.long 0x4ED9
L_321950:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321365
.p2align 0x4
L_510431:
L_321951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_321952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321952
.p2align 0x4
.long 0x4EDE
L_321952:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_321361
.p2align 0x4
L_510432:
L_321953:
	movq 0x78(%rbp),%r15
	jmp L_321368
.p2align 0x4
L_510433:
L_321954:
	movq $0x1,0x30(%rbp)
	jmp L_321371
.p2align 0x4
L_510434:
L_321965:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510435:
L_321352:
	movq $0x1,%r15
	jmp L_321353
.p2align 0x4
L_510436:
L_321968:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510437
L_321969:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_321958
.p2align 0x4
L_510437:
L_321970:
	movq 0x98(%rbp),%r15
	movq 0x90(%rbp),%r13
	xchgq %r13,%r14
	jmp L_321964
.p2align 0x4
L_510438:
L_321971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321972
.p2align 0x4
.long 0x4EE0
L_321972:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_321959
.p2align 0x4
L_510439:
L_321973:
	movq $0x1,%r15
	jmp L_321353
.p2align 0x4
L_510442:
L_321974:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_321353
.p2align 0x4
L_510443:
L_321975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321976
.p2align 0x4
.long 0x4ED9
L_321976:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321350
.p2align 0x4
L_510444:
L_321977:
	movq %r15,0x20(%rbp)
	movq $0x1,%r15
	jmp L_321356
.p2align 0x4
L_510445:
L_321982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510447
.p2align 0x4,,0x7
L_321983:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_321347
L_321984:
	movq %r15,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321337
.p2align 0x4
L_510447:
L_321986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321987
.p2align 0x4
.long 0x4EE1
L_321987:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321983
.p2align 0x4
L_510448:
L_321341:
	cmpq $0x1,%r14
	je L_321344
L_321342:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321340
.p2align 0x4
L_510450:
L_321338:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_510451:
L_321991:
	movq $0x1,%r15
	jmp L_321347
.p2align 0x4
L_510452:
L_321334:
	cmpq $0x1,%r15
	je L_510453
L_321335:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0xA(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_321337
.p2align 0x4
L_510453:
L_321988:
	movq $0x1,%r15
	jmp L_321347
.p2align 0x4
L_510454:
L_321992:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movb 0x8(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_510457
	cmpb $0x1,%r14b
	je L_510455
	jmp L_321333
.p2align 0x4
L_510455:
L_321996:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510456
L_321997:
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x80(%rbp)
	jmp L_321349
.p2align 0x4
L_510456:
L_321998:
	movq %r13,0x20(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321356
.p2align 0x4
L_510457:
L_321993:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_510458
L_321994:
	movq %r15,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x80(%rbp)
	jmp L_321349
.p2align 0x4
L_510458:
L_321995:
	movq %r15,0x20(%rbp)
	movq $0x1,%r15
	jmp L_321356
.p2align 0x4
.long 0x4EC6
toString_426:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4EDF
L_321899:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_321415
.p2align 0x4
.long 0x4EC6
rev_428:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_510462
L_321610:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_321611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510461
.p2align 0x4,,0x7
L_321612:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510460
L_321613:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_321611
.p2align 0x4
L_510460:
L_321615:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510461:
L_321824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321825
.p2align 0x4
.long 0x252C
L_321825:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321612
.p2align 0x4
L_510462:
L_321826:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321615
.p2align 0x4
.long 0x4EC6
L_321616:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_510463
L_321617:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x30(%rbp)
L_321618:
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_510463:
L_321823:
	movq $0x1,%r15
L_321635:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC7
toString_427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4EC9
L_321636:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC7
rev_429:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510466
L_321619:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321620:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510465
.p2align 0x4,,0x7
L_321621:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510464
L_321622:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_321620
.p2align 0x4
L_510464:
L_321624:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510465:
L_321820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321821
.p2align 0x4
.long 0x4ED8
L_321821:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321621
.p2align 0x4
L_510466:
L_321822:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321624
.p2align 0x4
.long 0x4EC9
L_321637:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC7
L_321625:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321626
L_321818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321819
.p2align 0x4
.long 0x1FF7
L_321819:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321626:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510467
L_321627:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_321618
.p2align 0x4
L_510467:
L_321628:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321629:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510469
.p2align 0x4,,0x7
L_321630:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510468
L_321631:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321629
.p2align 0x4
L_510468:
L_321632:
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510469:
L_321816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321817
.p2align 0x4
.long 0x1FF7
L_321817:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321630
.p2align 0x4
.long 0x4EC9
L_321638:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510471
L_321639:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_321640:
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_510471:
L_321813:
	movq $0x1,%r15
L_321657:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC8
L_321633:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321634
L_321814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321815
.p2align 0x4
.long 0x4ED7
L_321815:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321634:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321635
.p2align 0x4
.long 0x4EC7
toString_428:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4ECB
L_321658:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC7
rev_430:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510475
L_321641:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510474
.p2align 0x4,,0x7
L_321643:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510473
L_321644:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_321642
.p2align 0x4
L_510473:
L_321646:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510474:
L_321810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321811
.p2align 0x4
.long 0x4ED8
L_321811:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321643
.p2align 0x4
L_510475:
L_321812:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321646
.p2align 0x4
.long 0x4ECB
L_321659:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC7
L_321647:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321648
L_321808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321809
.p2align 0x4
.long 0x1FF7
L_321809:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321648:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510476
L_321649:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_321640
.p2align 0x4
L_510476:
L_321650:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_321651:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510478
.p2align 0x4,,0x7
L_321652:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510477
L_321653:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321651
.p2align 0x4
L_510477:
L_321654:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510478:
L_321806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321807
.p2align 0x4
.long 0x4ED7
L_321807:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321652
.p2align 0x4
.long 0x4ECB
L_321660:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510496
L_321661:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_321662:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510480
	jmp *jumpTable_826(,%rax,8)
.data
.p2align 0x4
jumpTable_826:
.quad L_510495,L_510494,L_510493,L_510492,L_510491,L_510490,L_510489,L_510488,L_510487,L_510486,L_510485,L_510484,L_510483,L_510482,L_510481
.text
.p2align 0x4
L_510480:
L_321663:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510481:
L_321802:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510482:
L_321801:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510483:
L_321800:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510484:
L_321799:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510485:
L_321798:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510486:
L_321797:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510487:
L_321796:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510488:
L_321795:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510489:
L_321794:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510490:
L_321793:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510491:
L_321792:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510492:
L_321791:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510493:
L_321790:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510494:
L_321789:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510495:
L_321788:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510496:
L_321803:
	movq $0x1,%r15
L_321680:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4ECA
L_321655:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321656
L_321804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321805
.p2align 0x4
.long 0x4ED6
L_321805:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321656:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321657
.p2align 0x4
.long 0x4ECC
toString_429:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4ECE
L_321681:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4ECC
rev_431:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_510500
L_321664:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321665:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510499
.p2align 0x4,,0x7
L_321666:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510498
L_321667:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_321665
.p2align 0x4
L_510498:
L_321669:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510499:
L_321785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321786
.p2align 0x4
.long 0x4ED5
L_321786:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321666
.p2align 0x4
L_510500:
L_321787:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321669
.p2align 0x4
.long 0x4ECE
L_321682:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4ECC
L_321670:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321671
L_321783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321784
.p2align 0x4
.long 0x4ED7
L_321784:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321671:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510501
L_321672:
	movq %r14,0x30(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_321662
.p2align 0x4
L_510501:
L_321673:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_321674:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510503
.p2align 0x4,,0x7
L_321675:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510502
L_321676:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321674
.p2align 0x4
L_510502:
L_321677:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510503:
L_321781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321782
.p2align 0x4
.long 0x4ED7
L_321782:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321675
.p2align 0x4
.long 0x4ECE
L_321683:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510521
L_321684:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x48(%rbp)
L_321685:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510505
	jmp *jumpTable_827(,%rax,8)
.data
.p2align 0x4
jumpTable_827:
.quad L_510520,L_510519,L_510518,L_510517,L_510516,L_510515,L_510514,L_510513,L_510512,L_510511,L_510510,L_510509,L_510508,L_510507,L_510506
.text
.p2align 0x4
L_510505:
L_321686:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510506:
L_321777:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510507:
L_321776:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510508:
L_321775:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510509:
L_321774:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510510:
L_321773:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510511:
L_321772:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510512:
L_321771:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510513:
L_321770:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510514:
L_321769:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510515:
L_321768:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510516:
L_321767:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510517:
L_321766:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510518:
L_321765:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510519:
L_321764:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510520:
L_321763:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510521:
L_321778:
	movq $0x1,%r15
L_321703:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4ECD
L_321678:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321679
L_321779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321780
.p2align 0x4
.long 0x4ED6
L_321780:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321679:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321680
.p2align 0x4
.long 0x1FF6
toString_430:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4ED0
L_321704:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1FF6
rev_432:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510525
L_321687:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321688:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510524
.p2align 0x4,,0x7
L_321689:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510523
L_321690:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_321688
.p2align 0x4
L_510523:
L_321692:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510524:
L_321760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321761
.p2align 0x4
.long 0x4ED5
L_321761:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321689
.p2align 0x4
L_510525:
L_321762:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321692
.p2align 0x4
.long 0x4ED0
L_321705:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1FF6
L_321693:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321694
L_321758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_321759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321759
.p2align 0x4
.long 0x4ED4
L_321759:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_321694:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_510526
L_321695:
	movq %r14,0x48(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_321685
.p2align 0x4
L_510526:
L_321696:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321697:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510528
.p2align 0x4,,0x7
L_321698:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510527
L_321699:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_321697
.p2align 0x4
L_510527:
L_321700:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510528:
L_321756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_321757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321757
.p2align 0x4
.long 0x4ED4
L_321757:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_321698
.p2align 0x4
.long 0x4ED0
L_321706:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_548
.p2align 0x4
.long 0x4ECF
L_321701:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321702
L_321754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321755
.p2align 0x4
.long 0x4ED3
L_321755:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321702:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321703
.p2align 0x4
.long 0x4ED1
L_321707:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321708
L_321752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321753
.p2align 0x4
.long 0x4D5
L_321753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321708:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112E8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x112F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112F8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11340)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1493
L_321709:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321710
L_321750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321751
.p2align 0x4
.long 0x4ED2
L_321751:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321710:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_321711:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510533
.p2align 0x4,,0x7
L_321712:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510532
L_321713:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_321711
.p2align 0x4
L_510532:
L_321714:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510533:
L_321748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321749
.p2align 0x4
.long 0x780
L_321749:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321712
.p2align 0x4
.long 0x79B
L_321715:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79B
L_321716:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321717
L_321746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321747
.p2align 0x4
.long 0x49FE
L_321747:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321717:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_321718
L_321735:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_510536
L_321736:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_510535
L_321743:
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_321744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510535:
L_321737:
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	leaq L_321739(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_321738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510536:
L_321718:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11348)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79B
L_321744:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321718
.p2align 0x4
.long 0x1493
L_321738:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321718
.p2align 0x4
.long 0xA20
L_321739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321740
L_321741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321742
.p2align 0x4
.long 0x9BF
L_321742:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_321740:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_321719:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321720
L_321733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321734
.p2align 0x4
.long 0x49FE
L_321734:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321720:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_321721
L_321722:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_510541
L_321723:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_510540
L_321730:
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_321731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510540:
L_321724:
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	leaq L_321726(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_321725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510541:
L_321721:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x298D
L_321731:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_321721
.p2align 0x4
.long 0x90E
L_321725:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_321721
.p2align 0x4
.long 0xA20
L_321726:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321727
L_321728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321729
.p2align 0x4
.long 0x9BF
L_321729:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_321727:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
